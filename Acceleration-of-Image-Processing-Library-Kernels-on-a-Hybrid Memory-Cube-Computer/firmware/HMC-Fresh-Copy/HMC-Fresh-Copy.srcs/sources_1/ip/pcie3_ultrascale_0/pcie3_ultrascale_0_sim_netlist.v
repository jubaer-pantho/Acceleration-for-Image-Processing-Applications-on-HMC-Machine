// Copyright 1986-2015 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2015.4 (lin64) Build 1412921 Wed Nov 18 09:44:32 MST 2015
// Date        : Wed Dec 13 15:34:58 2017
// Host        : micron-ubuntu running 64-bit Ubuntu 14.04.2 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/hmc/Desktop/pantho/HMC-Fresh-Copy/HMC-Fresh-Copy.srcs/sources_1/ip/pcie3_ultrascale_0/pcie3_ultrascale_0_sim_netlist.v
// Design      : pcie3_ultrascale_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcku060-ffva1156-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "pcie3_ultrascale_0,pcie3_ultrascale_0_pcie3_uscale_core_top,{}" *) (* CORE_GENERATION_INFO = "pcie3_ultrascale_0,pcie3_ultrascale_0_pcie3_uscale_core_top,{x_ipProduct=Vivado 2015.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=pcie3_ultrascale,x_ipVersion=4.1,x_ipCoreRevision=1,x_ipLanguage=VERILOG,x_ipSimLanguage=VERILOG,PL_LINK_CAP_MAX_LINK_SPEED=2,PL_LINK_CAP_MAX_LINK_WIDTH=8,USER_CLK_FREQ=3,CORE_CLK_FREQ=1,PLL_TYPE=2,PF0_LINK_CAP_ASPM_SUPPORT=0,C_DATA_WIDTH=128,REF_CLK_FREQ=0,PCIE_LINK_SPEED=3,KEEP_WIDTH=4,ARI_CAP_ENABLE=FALSE,PF0_ARI_CAP_NEXT_FUNC=0x00,AXISTEN_IF_CC_ALIGNMENT_MODE=FALSE,AXISTEN_IF_CQ_ALIGNMENT_MODE=FALSE,AXISTEN_IF_RC_ALIGNMENT_MODE=FALSE,AXISTEN_IF_RC_STRADDLE=FALSE,AXISTEN_IF_RQ_ALIGNMENT_MODE=FALSE,AXISTEN_IF_ENABLE_MSG_ROUTE=0x00000,AXISTEN_IF_ENABLE_RX_MSG_INTFC=FALSE,PF0_AER_CAP_ECRC_CHECK_CAPABLE=FALSE,PF0_AER_CAP_ECRC_GEN_CAPABLE=FALSE,PF0_AER_CAP_NEXTPTR=0x150,PF0_ARI_CAP_NEXTPTR=0x000,VF0_ARI_CAP_NEXTPTR=0x000,VF1_ARI_CAP_NEXTPTR=0x000,VF2_ARI_CAP_NEXTPTR=0x000,VF3_ARI_CAP_NEXTPTR=0x000,VF4_ARI_CAP_NEXTPTR=0x000,VF5_ARI_CAP_NEXTPTR=0x000,PF0_BAR0_APERTURE_SIZE=0x0D,PF0_BAR0_CONTROL=0x4,PF0_BAR1_APERTURE_SIZE=0x00,PF0_BAR1_CONTROL=0x0,PF0_BAR2_APERTURE_SIZE=0x0D,PF0_BAR2_CONTROL=0x4,PF0_BAR3_APERTURE_SIZE=0x00,PF0_BAR3_CONTROL=0x0,PF0_BAR4_APERTURE_SIZE=0x0D,PF0_BAR4_CONTROL=0x4,PF0_BAR5_APERTURE_SIZE=0x00,PF0_BAR5_CONTROL=0x0,PF0_CAPABILITY_POINTER=0x80,PF0_CLASS_CODE=0x058000,PF0_VENDOR_ID=0x19DE,PF0_DEVICE_ID=0x0510,PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT=FALSE,PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT=FALSE,PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT=FALSE,PF0_DEV_CAP2_LTR_SUPPORT=FALSE,PF0_DEV_CAP2_OBFF_SUPPORT=0x0,PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT=FALSE,PF0_DEV_CAP_EXT_TAG_SUPPORTED=FALSE,PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE=FALSE,PF0_DEV_CAP_MAX_PAYLOAD_SIZE=0x2,PF0_DPA_CAP_NEXTPTR=0x000,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6=0x00,PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6=0x00,PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7=0x00,PF0_DSN_CAP_NEXTPTR=0x000,PF0_EXPANSION_ROM_APERTURE_SIZE=0x00,PF0_EXPANSION_ROM_ENABLE=FALSE,PF0_INTERRUPT_PIN=0x1,PF0_LINK_STATUS_SLOT_CLOCK_CONFIG=TRUE,PF0_LTR_CAP_NEXTPTR=0x000,PF0_MSIX_CAP_NEXTPTR=0x00,PF0_MSIX_CAP_PBA_BIR=0,PF0_MSIX_CAP_PBA_OFFSET=0x00000000,PF0_MSIX_CAP_TABLE_BIR=0,PF0_MSIX_CAP_TABLE_OFFSET=0x00000000,PF0_MSIX_CAP_TABLE_SIZE=0x000,PF0_MSI_CAP_MULTIMSGCAP=0,PF0_MSI_CAP_NEXTPTR=0xC0,PF0_PB_CAP_NEXTPTR=0x000,PF0_PM_CAP_NEXTPTR=0x90,PF0_PM_CAP_PMESUPPORT_D0=FALSE,PF0_PM_CAP_PMESUPPORT_D1=FALSE,PF0_PM_CAP_PMESUPPORT_D3HOT=FALSE,PF0_PM_CAP_SUPP_D1_STATE=FALSE,PF0_RBAR_CAP_ENABLE=FALSE,PF0_RBAR_CAP_NEXTPTR=0x000,PF0_RBAR_CAP_SIZE0=0x00000,PF0_RBAR_CAP_SIZE1=0x00000,PF0_RBAR_CAP_SIZE2=0x00000,PF1_RBAR_CAP_SIZE0=0x00000,PF1_RBAR_CAP_SIZE1=0x00000,PF1_RBAR_CAP_SIZE2=0x00000,PF0_REVISION_ID=0x05,PF0_SRIOV_BAR0_APERTURE_SIZE=0x00,PF0_SRIOV_BAR0_CONTROL=0x0,PF0_SRIOV_BAR1_APERTURE_SIZE=0x00,PF0_SRIOV_BAR1_CONTROL=0x0,PF0_SRIOV_BAR2_APERTURE_SIZE=0x00,PF0_SRIOV_BAR2_CONTROL=0x0,PF0_SRIOV_BAR3_APERTURE_SIZE=0x00,PF0_SRIOV_BAR3_CONTROL=0x0,PF0_SRIOV_BAR4_APERTURE_SIZE=0x00,PF0_SRIOV_BAR4_CONTROL=0x0,PF0_SRIOV_BAR5_APERTURE_SIZE=0x00,PF0_SRIOV_BAR5_CONTROL=0x0,PF0_SRIOV_CAP_INITIAL_VF=0x0000,PF0_SRIOV_CAP_NEXTPTR=0x000,PF0_SRIOV_CAP_TOTAL_VF=0x0000,PF0_SRIOV_CAP_VER=0x0,PF0_SRIOV_FIRST_VF_OFFSET=0x0000,PF0_SRIOV_FUNC_DEP_LINK=0x0000,PF0_SRIOV_SUPPORTED_PAGE_SIZE=0x00000553,PF0_SRIOV_VF_DEVICE_ID=0x0000,PF0_SUBSYSTEM_VENDOR_ID=0x19DE,PF0_SUBSYSTEM_ID=0x2060,PF0_TPHR_CAP_ENABLE=FALSE,PF0_TPHR_CAP_NEXTPTR=0x000,VF0_TPHR_CAP_NEXTPTR=0x000,VF1_TPHR_CAP_NEXTPTR=0x000,VF2_TPHR_CAP_NEXTPTR=0x000,VF3_TPHR_CAP_NEXTPTR=0x000,VF4_TPHR_CAP_NEXTPTR=0x000,VF5_TPHR_CAP_NEXTPTR=0x000,PF0_TPHR_CAP_ST_MODE_SEL=0x0,PF0_TPHR_CAP_ST_TABLE_LOC=0x0,PF0_TPHR_CAP_ST_TABLE_SIZE=0x000,PF0_TPHR_CAP_VER=0x1,PF1_TPHR_CAP_ST_MODE_SEL=0x0,PF1_TPHR_CAP_ST_TABLE_LOC=0x0,PF1_TPHR_CAP_ST_TABLE_SIZE=0x000,PF1_TPHR_CAP_VER=0x1,VF0_TPHR_CAP_ST_MODE_SEL=0x0,VF0_TPHR_CAP_ST_TABLE_LOC=0x0,VF0_TPHR_CAP_ST_TABLE_SIZE=0x000,VF0_TPHR_CAP_VER=0x1,VF1_TPHR_CAP_ST_MODE_SEL=0x0,VF1_TPHR_CAP_ST_TABLE_LOC=0x0,VF1_TPHR_CAP_ST_TABLE_SIZE=0x000,VF1_TPHR_CAP_VER=0x1,VF2_TPHR_CAP_ST_MODE_SEL=0x0,VF2_TPHR_CAP_ST_TABLE_LOC=0x0,VF2_TPHR_CAP_ST_TABLE_SIZE=0x000,VF2_TPHR_CAP_VER=0x1,VF3_TPHR_CAP_ST_MODE_SEL=0x0,VF3_TPHR_CAP_ST_TABLE_LOC=0x0,VF3_TPHR_CAP_ST_TABLE_SIZE=0x000,VF3_TPHR_CAP_VER=0x1,VF4_TPHR_CAP_ST_MODE_SEL=0x0,VF4_TPHR_CAP_ST_TABLE_LOC=0x0,VF4_TPHR_CAP_ST_TABLE_SIZE=0x000,VF4_TPHR_CAP_VER=0x1,VF5_TPHR_CAP_ST_MODE_SEL=0x0,VF5_TPHR_CAP_ST_TABLE_LOC=0x0,VF5_TPHR_CAP_ST_TABLE_SIZE=0x000,VF5_TPHR_CAP_VER=0x1,PF0_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,PF0_TPHR_CAP_INT_VEC_MODE=FALSE,PF1_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,PF1_TPHR_CAP_INT_VEC_MODE=FALSE,VF0_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF0_TPHR_CAP_INT_VEC_MODE=FALSE,VF1_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF1_TPHR_CAP_INT_VEC_MODE=FALSE,VF2_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF2_TPHR_CAP_INT_VEC_MODE=FALSE,VF3_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF3_TPHR_CAP_INT_VEC_MODE=FALSE,VF4_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF4_TPHR_CAP_INT_VEC_MODE=FALSE,VF5_TPHR_CAP_DEV_SPECIFIC_MODE=TRUE,VF5_TPHR_CAP_INT_VEC_MODE=FALSE,PF0_SECONDARY_PCIE_CAP_NEXTPTR=0x000,MCAP_CAP_NEXTPTR=0x000,PF0_VC_CAP_NEXTPTR=0x000,SPARE_WORD1=0x00000000,PF1_AER_CAP_ECRC_CHECK_CAPABLE=FALSE,PF1_AER_CAP_ECRC_GEN_CAPABLE=FALSE,PF1_AER_CAP_NEXTPTR=0x000,PF1_ARI_CAP_NEXTPTR=0x000,PF1_BAR0_APERTURE_SIZE=0x00,PF1_BAR0_CONTROL=0x0,PF1_BAR1_APERTURE_SIZE=0x00,PF1_BAR1_CONTROL=0x0,PF1_BAR2_APERTURE_SIZE=0x00,PF1_BAR2_CONTROL=0x0,PF1_BAR3_APERTURE_SIZE=0x00,PF1_BAR3_CONTROL=0x0,PF1_BAR4_APERTURE_SIZE=0x00,PF1_BAR4_CONTROL=0x0,PF1_BAR5_APERTURE_SIZE=0x00,PF1_BAR5_CONTROL=0x0,PF1_CAPABILITY_POINTER=0x80,PF1_CLASS_CODE=0x058000,PF1_DEVICE_ID=0x8011,PF1_DEV_CAP_MAX_PAYLOAD_SIZE=0x2,PF1_DPA_CAP_NEXTPTR=0x000,PF1_DSN_CAP_NEXTPTR=0x000,PF1_EXPANSION_ROM_APERTURE_SIZE=0x00,PF1_EXPANSION_ROM_ENABLE=FALSE,PF1_INTERRUPT_PIN=0x0,PF1_MSIX_CAP_NEXTPTR=0x00,PF1_MSIX_CAP_PBA_BIR=0,PF1_MSIX_CAP_PBA_OFFSET=0x00000000,PF1_MSIX_CAP_TABLE_BIR=0,PF1_MSIX_CAP_TABLE_OFFSET=0x00000000,PF1_MSIX_CAP_TABLE_SIZE=0x000,PF1_MSI_CAP_MULTIMSGCAP=0,PF1_MSI_CAP_NEXTPTR=0x00,PF1_PB_CAP_NEXTPTR=0x000,PF1_PM_CAP_NEXTPTR=0x00,PF1_RBAR_CAP_ENABLE=FALSE,PF1_RBAR_CAP_NEXTPTR=0x000,PF1_REVISION_ID=0x00,PF1_SRIOV_BAR0_APERTURE_SIZE=0x00,PF1_SRIOV_BAR0_CONTROL=0x0,PF1_SRIOV_BAR1_APERTURE_SIZE=0x00,PF1_SRIOV_BAR1_CONTROL=0x0,PF1_SRIOV_BAR2_APERTURE_SIZE=0x00,PF1_SRIOV_BAR2_CONTROL=0x0,PF1_SRIOV_BAR3_APERTURE_SIZE=0x00,PF1_SRIOV_BAR3_CONTROL=0x0,PF1_SRIOV_BAR4_APERTURE_SIZE=0x00,PF1_SRIOV_BAR4_CONTROL=0x0,PF1_SRIOV_BAR5_APERTURE_SIZE=0x00,PF1_SRIOV_BAR5_CONTROL=0x0,PF1_SRIOV_CAP_INITIAL_VF=0x0000,PF1_SRIOV_CAP_NEXTPTR=0x000,PF1_SRIOV_CAP_TOTAL_VF=0x0000,PF1_SRIOV_CAP_VER=0x0,PF1_SRIOV_FIRST_VF_OFFSET=0x0000,PF1_SRIOV_FUNC_DEP_LINK=0x0001,PF1_SRIOV_SUPPORTED_PAGE_SIZE=0x00000553,PF1_SRIOV_VF_DEVICE_ID=0x0000,PF1_SUBSYSTEM_ID=0x0007,PF1_TPHR_CAP_ENABLE=FALSE,PF1_TPHR_CAP_NEXTPTR=0x000,PL_UPSTREAM_FACING=TRUE,en_msi_per_vec_masking=FALSE,SRIOV_CAP_ENABLE=FALSE,TL_CREDITS_CD=0x000,TL_CREDITS_CH=0x00,TL_CREDITS_NPD=0x028,TL_CREDITS_NPH=0x20,TL_CREDITS_PD=0x198,TL_CREDITS_PH=0x20,TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE=FALSE,TL_LEGACY_MODE_ENABLE=FALSE,TL_PF_ENABLE_REG=0x0,VF0_CAPABILITY_POINTER=0x80,VF0_MSIX_CAP_PBA_BIR=0,VF0_MSIX_CAP_PBA_OFFSET=0x00000000,VF0_MSIX_CAP_TABLE_BIR=0,VF0_MSIX_CAP_TABLE_OFFSET=0x00000000,VF0_MSIX_CAP_TABLE_SIZE=0x000,VF0_MSI_CAP_MULTIMSGCAP=0,VF0_PM_CAP_NEXTPTR=0x00,VF1_MSIX_CAP_PBA_BIR=0,VF1_MSIX_CAP_PBA_OFFSET=0x00000000,VF1_MSIX_CAP_TABLE_BIR=0,VF1_MSIX_CAP_TABLE_OFFSET=0x00000000,VF1_MSIX_CAP_TABLE_SIZE=0x000,VF1_MSI_CAP_MULTIMSGCAP=0,VF1_PM_CAP_NEXTPTR=0x00,VF2_MSIX_CAP_PBA_BIR=0,VF2_MSIX_CAP_PBA_OFFSET=0x00000000,VF2_MSIX_CAP_TABLE_BIR=0,VF2_MSIX_CAP_TABLE_OFFSET=0x00000000,VF2_MSIX_CAP_TABLE_SIZE=0x000,VF2_MSI_CAP_MULTIMSGCAP=0,VF2_PM_CAP_NEXTPTR=0x00,VF3_MSIX_CAP_PBA_BIR=0,VF3_MSIX_CAP_PBA_OFFSET=0x00000000,VF3_MSIX_CAP_TABLE_BIR=0,VF3_MSIX_CAP_TABLE_OFFSET=0x00000000,VF3_MSIX_CAP_TABLE_SIZE=0x000,VF3_MSI_CAP_MULTIMSGCAP=0,VF3_PM_CAP_NEXTPTR=0x00,VF4_MSIX_CAP_PBA_BIR=0,VF4_MSIX_CAP_PBA_OFFSET=0x00000000,VF4_MSIX_CAP_TABLE_BIR=0,VF4_MSIX_CAP_TABLE_OFFSET=0x00000000,VF4_MSIX_CAP_TABLE_SIZE=0x000,VF4_MSI_CAP_MULTIMSGCAP=0,VF4_PM_CAP_NEXTPTR=0x00,VF5_MSIX_CAP_PBA_BIR=0,VF5_MSIX_CAP_PBA_OFFSET=0x00000000,VF5_MSIX_CAP_TABLE_BIR=0,VF5_MSIX_CAP_TABLE_OFFSET=0x00000000,VF5_MSIX_CAP_TABLE_SIZE=0x000,VF5_MSI_CAP_MULTIMSGCAP=0,VF5_PM_CAP_NEXTPTR=0x00,COMPLETION_SPACE=16KB,gen_x0y0_xdc=1,gen_x0y1_xdc=0,gen_x0y2_xdc=0,gen_x0y3_xdc=0,gen_x0y4_xdc=0,gen_x0y5_xdc=0,xlnx_ref_board=0,pcie_blk_locn=0,PIPE_SIM=FALSE,AXISTEN_IF_ENABLE_CLIENT_TAG=TRUE,PCIE_USE_MODE=2.0,PCIE_FAST_CONFIG=NONE,EXT_STARTUP_PRIMITIVE=FALSE,PL_INTERFACE=FALSE,PCIE_CONFIGURATION=FALSE,CFG_STATUS_IF=TRUE,TX_FC_IF=TRUE,CFG_EXT_IF=TRUE,CFG_FC_IF=TRUE,PER_FUNC_STATUS_IF=TRUE,CFG_MGMT_IF=TRUE,RCV_MSG_IF=TRUE,CFG_TX_MSG_IF=TRUE,CFG_CTL_IF=TRUE,MSI_EN=TRUE,MSIX_EN=FALSE,PCIE3_DRP=FALSE,DIS_GT_WIZARD=FALSE,TRANSCEIVER_CTRL_STATUS_PORTS=FALSE,SHARED_LOGIC=1,DEDICATE_PERST=TRUE,SYS_RESET_POLARITY=0,MCAP_ENABLEMENT=NONE,PHY_LP_TXPRESET=4,EXT_CH_GT_DRP=FALSE,EN_GT_SELECTION=FALSE,SELECT_QUAD=GTH_Quad_224,silicon_revision=Production,DEV_PORT_TYPE=0,RX_DETECT=0}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* X_CORE_INFO = "pcie3_ultrascale_0_pcie3_uscale_core_top,Vivado 2015.4" *) 
(* NotValidForBitStream *)
module pcie3_ultrascale_0
   (pci_exp_txn,
    pci_exp_txp,
    pci_exp_rxn,
    pci_exp_rxp,
    user_clk,
    user_reset,
    user_lnk_up,
    s_axis_rq_tdata,
    s_axis_rq_tkeep,
    s_axis_rq_tlast,
    s_axis_rq_tready,
    s_axis_rq_tuser,
    s_axis_rq_tvalid,
    m_axis_rc_tdata,
    m_axis_rc_tkeep,
    m_axis_rc_tlast,
    m_axis_rc_tready,
    m_axis_rc_tuser,
    m_axis_rc_tvalid,
    m_axis_cq_tdata,
    m_axis_cq_tkeep,
    m_axis_cq_tlast,
    m_axis_cq_tready,
    m_axis_cq_tuser,
    m_axis_cq_tvalid,
    s_axis_cc_tdata,
    s_axis_cc_tkeep,
    s_axis_cc_tlast,
    s_axis_cc_tready,
    s_axis_cc_tuser,
    s_axis_cc_tvalid,
    pcie_rq_seq_num,
    pcie_rq_seq_num_vld,
    pcie_rq_tag,
    pcie_rq_tag_av,
    pcie_rq_tag_vld,
    pcie_tfc_nph_av,
    pcie_tfc_npd_av,
    pcie_cq_np_req,
    pcie_cq_np_req_count,
    cfg_phy_link_down,
    cfg_phy_link_status,
    cfg_negotiated_width,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    cfg_function_status,
    cfg_function_power_state,
    cfg_vf_status,
    cfg_vf_power_state,
    cfg_link_power_state,
    cfg_mgmt_addr,
    cfg_mgmt_write,
    cfg_mgmt_write_data,
    cfg_mgmt_byte_enable,
    cfg_mgmt_read,
    cfg_mgmt_read_data,
    cfg_mgmt_read_write_done,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_err_cor_out,
    cfg_err_nonfatal_out,
    cfg_err_fatal_out,
    cfg_local_error,
    cfg_ltr_enable,
    cfg_ltssm_state,
    cfg_rcb_status,
    cfg_dpa_substate_change,
    cfg_obff_enable,
    cfg_pl_status_change,
    cfg_tph_requester_enable,
    cfg_tph_st_mode,
    cfg_vf_tph_requester_enable,
    cfg_vf_tph_st_mode,
    cfg_msg_received,
    cfg_msg_received_data,
    cfg_msg_received_type,
    cfg_msg_transmit,
    cfg_msg_transmit_type,
    cfg_msg_transmit_data,
    cfg_msg_transmit_done,
    cfg_fc_ph,
    cfg_fc_pd,
    cfg_fc_nph,
    cfg_fc_npd,
    cfg_fc_cplh,
    cfg_fc_cpld,
    cfg_fc_sel,
    cfg_per_func_status_control,
    cfg_per_func_status_data,
    cfg_per_function_number,
    cfg_per_function_output_request,
    cfg_per_function_update_done,
    cfg_dsn,
    cfg_power_state_change_ack,
    cfg_power_state_change_interrupt,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_flr_in_process,
    cfg_flr_done,
    cfg_vf_flr_in_process,
    cfg_vf_flr_done,
    cfg_link_training_enable,
    cfg_ext_read_received,
    cfg_ext_write_received,
    cfg_ext_register_number,
    cfg_ext_function_number,
    cfg_ext_write_data,
    cfg_ext_write_byte_enable,
    cfg_ext_read_data,
    cfg_ext_read_data_valid,
    cfg_interrupt_int,
    cfg_interrupt_pending,
    cfg_interrupt_sent,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_data,
    cfg_interrupt_msi_select,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msi_pending_status_data_enable,
    cfg_interrupt_msi_pending_status_function_num,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_msi_tph_st_tag,
    cfg_interrupt_msi_function_number,
    cfg_hot_reset_out,
    cfg_config_space_enable,
    cfg_req_pm_transition_l23_ready,
    cfg_hot_reset_in,
    cfg_ds_port_number,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    cfg_subsys_vend_id,
    sys_clk,
    sys_clk_gt,
    sys_reset,
    pcie_perstn1_in,
    pcie_perstn0_out,
    pcie_perstn1_out,
    int_qpll1lock_out,
    int_qpll1outrefclk_out,
    int_qpll1outclk_out);
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txn" *) output [7:0]pci_exp_txn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txp" *) output [7:0]pci_exp_txp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxn" *) input [7:0]pci_exp_rxn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxp" *) input [7:0]pci_exp_rxp;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.user_clk CLK" *) output user_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.user_reset RST" *) output user_reset;
  output user_lnk_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TDATA" *) input [127:0]s_axis_rq_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TKEEP" *) input [3:0]s_axis_rq_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TLAST" *) input s_axis_rq_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TREADY" *) output [3:0]s_axis_rq_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TUSER" *) input [59:0]s_axis_rq_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_rq TVALID" *) input s_axis_rq_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TDATA" *) output [127:0]m_axis_rc_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TKEEP" *) output [3:0]m_axis_rc_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TLAST" *) output m_axis_rc_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TREADY" *) input m_axis_rc_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TUSER" *) output [74:0]m_axis_rc_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rc TVALID" *) output m_axis_rc_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TDATA" *) output [127:0]m_axis_cq_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TKEEP" *) output [3:0]m_axis_cq_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TLAST" *) output m_axis_cq_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TREADY" *) input m_axis_cq_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TUSER" *) output [84:0]m_axis_cq_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_cq TVALID" *) output m_axis_cq_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TDATA" *) input [127:0]s_axis_cc_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TKEEP" *) input [3:0]s_axis_cc_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TLAST" *) input s_axis_cc_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TREADY" *) output [3:0]s_axis_cc_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TUSER" *) input [32:0]s_axis_cc_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_cc TVALID" *) input s_axis_cc_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_seq_num" *) output [3:0]pcie_rq_seq_num;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_seq_num_vld" *) output pcie_rq_seq_num_vld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_tag" *) output [5:0]pcie_rq_tag;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_tag_av" *) output [1:0]pcie_rq_tag_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rq_tag_vld" *) output pcie_rq_tag_vld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tfc_nph_av, xilinx.com:interface:pcie3_transmit_fc:1.0 pcie3_transmit_fc nph_av" *) output [1:0]pcie_tfc_nph_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tfc_npd_av, xilinx.com:interface:pcie3_transmit_fc:1.0 pcie3_transmit_fc npd_av" *) output [1:0]pcie_tfc_npd_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status cq_np_req" *) input pcie_cq_np_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status cq_np_req_count" *) output [5:0]pcie_cq_np_req_count;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status phy_link_down" *) output cfg_phy_link_down;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status phy_link_status" *) output [1:0]cfg_phy_link_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status negotiated_width" *) output [3:0]cfg_negotiated_width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status current_speed" *) output [2:0]cfg_current_speed;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status max_payload" *) output [2:0]cfg_max_payload;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status max_read_req" *) output [2:0]cfg_max_read_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status function_status" *) output [15:0]cfg_function_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status function_power_state" *) output [11:0]cfg_function_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_status" *) output [15:0]cfg_vf_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_power_state" *) output [23:0]cfg_vf_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status link_power_state" *) output [1:0]cfg_link_power_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt ADDR" *) input [18:0]cfg_mgmt_addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_EN" *) input cfg_mgmt_write;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_DATA" *) input [31:0]cfg_mgmt_write_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt BYTE_EN" *) input [3:0]cfg_mgmt_byte_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_EN" *) input cfg_mgmt_read;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_DATA" *) output [31:0]cfg_mgmt_read_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_WRITE_DONE" *) output cfg_mgmt_read_write_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt TYPE1_CFG_REG_ACCESS" *) input cfg_mgmt_type1_cfg_reg_access;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_cor_out" *) output cfg_err_cor_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_nonfatal_out" *) output cfg_err_nonfatal_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status err_fatal_out" *) output cfg_err_fatal_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control local_error" *) output cfg_local_error;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status ltr_enable" *) output cfg_ltr_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status ltssm_state" *) output [5:0]cfg_ltssm_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status rcb_status" *) output [3:0]cfg_rcb_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status dpa_substate_change" *) output [3:0]cfg_dpa_substate_change;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status obff_enable" *) output [1:0]cfg_obff_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status pl_status_change" *) output cfg_pl_status_change;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tph_requester_enable" *) output [3:0]cfg_tph_requester_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status tph_st_mode" *) output [11:0]cfg_tph_st_mode;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_tph_requester_enable" *) output [7:0]cfg_vf_tph_requester_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_status:1.0 pcie3_cfg_status vf_tph_st_mode" *) output [23:0]cfg_vf_tph_st_mode;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd" *) output cfg_msg_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd_data" *) output [7:0]cfg_msg_received_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msg_received:1.0 pcie3_cfg_mesg_rcvd recd_type" *) output [4:0]cfg_msg_received_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT" *) input cfg_msg_transmit;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_TYPE" *) input [2:0]cfg_msg_transmit_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_DATA" *) input [31:0]cfg_msg_transmit_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_mesg_tx:1.0 pcie3_cfg_mesg_tx TRANSMIT_DONE" *) output cfg_msg_transmit_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PH" *) output [7:0]cfg_fc_ph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PD" *) output [11:0]cfg_fc_pd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPH" *) output [7:0]cfg_fc_nph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPD" *) output [11:0]cfg_fc_npd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLH" *) output [7:0]cfg_fc_cplh;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLD" *) output [11:0]cfg_fc_cpld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc SEL" *) input [2:0]cfg_fc_sel;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_per_func_status:1.0 pcie3_per_func_status STATUS_CONTROL" *) input [2:0]cfg_per_func_status_control;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_per_func_status:1.0 pcie3_per_func_status STATUS_DATA" *) output [15:0]cfg_per_func_status_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_number" *) input [3:0]cfg_per_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_output_request" *) input cfg_per_function_output_request;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control per_function_update_done" *) output cfg_per_function_update_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control dsn" *) input [63:0]cfg_dsn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control power_state_change_ack" *) input cfg_power_state_change_ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control power_state_change_interrupt" *) output cfg_power_state_change_interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control err_cor_in" *) input cfg_err_cor_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control err_uncor_in" *) input cfg_err_uncor_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control flr_in_process" *) output [3:0]cfg_flr_in_process;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control flr_done" *) input [3:0]cfg_flr_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control vf_flr_in_process" *) output [7:0]cfg_vf_flr_in_process;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control vf_flr_done" *) input [7:0]cfg_vf_flr_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control link_training_enable" *) input cfg_link_training_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext read_received" *) output cfg_ext_read_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext write_received" *) output cfg_ext_write_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext register_number" *) output [9:0]cfg_ext_register_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext function_number" *) output [7:0]cfg_ext_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext write_data" *) output [31:0]cfg_ext_write_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext write_byte_enable" *) output [3:0]cfg_ext_write_byte_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext read_data" *) input [31:0]cfg_ext_read_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_ext:1.0 pcie3_cfg_ext read_data_valid" *) input cfg_ext_read_data_valid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt INTx_VECTOR" *) input [3:0]cfg_interrupt_int;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt PENDING" *) input [3:0]cfg_interrupt_pending;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_interrupt:1.0 pcie3_cfg_interrupt SENT" *) output cfg_interrupt_sent;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi enable" *) output [3:0]cfg_interrupt_msi_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi vf_enable" *) output [7:0]cfg_interrupt_msi_vf_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi mmenable" *) output [11:0]cfg_interrupt_msi_mmenable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi mask_update" *) output cfg_interrupt_msi_mask_update;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi data" *) output [31:0]cfg_interrupt_msi_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi select" *) input [3:0]cfg_interrupt_msi_select;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi int_vector" *) input [31:0]cfg_interrupt_msi_int;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi pending_status" *) input [31:0]cfg_interrupt_msi_pending_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi pending_status_data_enable" *) input cfg_interrupt_msi_pending_status_data_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi pending_status_function_num" *) input [3:0]cfg_interrupt_msi_pending_status_function_num;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi sent" *) output cfg_interrupt_msi_sent;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi fail" *) output cfg_interrupt_msi_fail;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi attr" *) input [2:0]cfg_interrupt_msi_attr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_present" *) input cfg_interrupt_msi_tph_present;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_type" *) input [1:0]cfg_interrupt_msi_tph_type;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi tph_st_tag" *) input [8:0]cfg_interrupt_msi_tph_st_tag;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_msi:1.0 pcie3_cfg_msi function_number" *) input [3:0]cfg_interrupt_msi_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control hot_reset_out" *) output cfg_hot_reset_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control config_space_enable" *) input cfg_config_space_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control req_pm_transition_l23_ready" *) input cfg_req_pm_transition_l23_ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control hot_reset_in" *) input cfg_hot_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_port_number" *) input [7:0]cfg_ds_port_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_bus_number" *) input [7:0]cfg_ds_bus_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_device_number" *) input [4:0]cfg_ds_device_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control ds_function_number" *) input [2:0]cfg_ds_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie3_cfg_control:1.0 pcie3_cfg_control subsys_vend_id" *) input [15:0]cfg_subsys_vend_id;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.sys_clk CLK" *) input sys_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.sys_clk_gt CLK" *) input sys_clk_gt;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.sys_rst RST" *) input sys_reset;
  input pcie_perstn1_in;
  output pcie_perstn0_out;
  output pcie_perstn1_out;
  (* X_INTERFACE_INFO = "xilinx.com:display_pcie3_ultrascale:int_shared_logic:1.0 pcie3_us_int_shared_logic ints_qpll1lock_out" *) output [1:0]int_qpll1lock_out;
  (* X_INTERFACE_INFO = "xilinx.com:display_pcie3_ultrascale:int_shared_logic:1.0 pcie3_us_int_shared_logic ints_qpll1outrefclk_out" *) output [1:0]int_qpll1outrefclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:display_pcie3_ultrascale:int_shared_logic:1.0 pcie3_us_int_shared_logic ints_qpll1outclk_out" *) output [1:0]int_qpll1outclk_out;

  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [3:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [7:0]cfg_ext_function_number;
  wire [31:0]cfg_ext_read_data;
  wire cfg_ext_read_data_valid;
  wire cfg_ext_read_received;
  wire [9:0]cfg_ext_register_number;
  wire [3:0]cfg_ext_write_byte_enable;
  wire [31:0]cfg_ext_write_data;
  wire cfg_ext_write_received;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [3:0]cfg_flr_done;
  wire [3:0]cfg_flr_in_process;
  wire [11:0]cfg_function_power_state;
  wire [15:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [3:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [3:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [11:0]cfg_interrupt_msi_mmenable;
  wire [31:0]cfg_interrupt_msi_pending_status;
  wire cfg_interrupt_msi_pending_status_data_enable;
  wire [3:0]cfg_interrupt_msi_pending_status_function_num;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [7:0]cfg_interrupt_msi_vf_enable;
  wire [3:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_local_error;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [3:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [3:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [3:0]cfg_tph_requester_enable;
  wire [11:0]cfg_tph_st_mode;
  wire [7:0]cfg_vf_flr_done;
  wire [7:0]cfg_vf_flr_in_process;
  wire [23:0]cfg_vf_power_state;
  wire [15:0]cfg_vf_status;
  wire [7:0]cfg_vf_tph_requester_enable;
  wire [23:0]cfg_vf_tph_st_mode;
  wire [1:0]int_qpll1lock_out;
  wire [1:0]int_qpll1outclk_out;
  wire [1:0]int_qpll1outrefclk_out;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire [7:0]pci_exp_rxn;
  wire [7:0]pci_exp_rxp;
  wire [7:0]pci_exp_txn;
  wire [7:0]pci_exp_txp;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire pcie_perstn0_out;
  wire pcie_perstn1_in;
  wire pcie_perstn1_out;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire [1:0]pcie_rq_tag_av;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_clk;
  wire sys_clk_gt;
  wire sys_reset;
  wire user_clk;
  wire user_lnk_up;
  wire user_reset;
  wire NLW_inst_cap_req_UNCONNECTED;
  wire NLW_inst_cfg_interrupt_msix_fail_UNCONNECTED;
  wire NLW_inst_cfg_interrupt_msix_sent_UNCONNECTED;
  wire NLW_inst_conf_req_ready_UNCONNECTED;
  wire NLW_inst_conf_resp_valid_UNCONNECTED;
  wire NLW_inst_drp_rdy_UNCONNECTED;
  wire NLW_inst_ext_ch_gt_drpclk_UNCONNECTED;
  wire NLW_inst_mcap_design_switch_UNCONNECTED;
  wire NLW_inst_phy_prst_n_UNCONNECTED;
  wire NLW_inst_phy_rrst_n_UNCONNECTED;
  wire NLW_inst_phy_rst_idle_UNCONNECTED;
  wire NLW_inst_pl_eq_in_progress_UNCONNECTED;
  wire NLW_inst_startup_cfgclk_UNCONNECTED;
  wire NLW_inst_startup_cfgmclk_UNCONNECTED;
  wire NLW_inst_startup_eos_UNCONNECTED;
  wire NLW_inst_startup_preq_UNCONNECTED;
  wire NLW_inst_user_tph_stt_read_data_valid_UNCONNECTED;
  wire [3:0]NLW_inst_cfg_interrupt_msix_enable_UNCONNECTED;
  wire [3:0]NLW_inst_cfg_interrupt_msix_mask_UNCONNECTED;
  wire [7:0]NLW_inst_cfg_interrupt_msix_vf_enable_UNCONNECTED;
  wire [7:0]NLW_inst_cfg_interrupt_msix_vf_mask_UNCONNECTED;
  wire [16:0]NLW_inst_common_commands_out_UNCONNECTED;
  wire [31:0]NLW_inst_conf_resp_rdata_UNCONNECTED;
  wire [15:0]NLW_inst_drp_do_UNCONNECTED;
  wire [127:0]NLW_inst_ext_ch_gt_drpdo_UNCONNECTED;
  wire [7:0]NLW_inst_ext_ch_gt_drprdy_UNCONNECTED;
  wire [1:0]NLW_inst_ext_qpll1pd_UNCONNECTED;
  wire [5:0]NLW_inst_ext_qpll1rate_UNCONNECTED;
  wire [1:0]NLW_inst_ext_qpll1refclk_UNCONNECTED;
  wire [1:0]NLW_inst_ext_qpll1reset_UNCONNECTED;
  wire [8:0]NLW_inst_gt_bufgtdiv_UNCONNECTED;
  wire [7:0]NLW_inst_gt_cplllock_UNCONNECTED;
  wire [135:0]NLW_inst_gt_dmonitorout_UNCONNECTED;
  wire [7:0]NLW_inst_gt_eyescandataerror_UNCONNECTED;
  wire [7:0]NLW_inst_gt_gtpowergood_UNCONNECTED;
  wire [7:0]NLW_inst_gt_pcierateidle_UNCONNECTED;
  wire [7:0]NLW_inst_gt_pcieuserratestart_UNCONNECTED;
  wire [7:0]NLW_inst_gt_phystatus_UNCONNECTED;
  wire [1:0]NLW_inst_gt_qpll1lock_UNCONNECTED;
  wire [23:0]NLW_inst_gt_rxbufstatus_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxcdrlock_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxcommadet_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxdlysresetdone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxoutclk_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxphaligndone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxpmaresetdone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxprbserr_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxrecclkout_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxresetdone_UNCONNECTED;
  wire [23:0]NLW_inst_gt_rxstatus_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxsyncdone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_rxvalid_UNCONNECTED;
  wire [7:0]NLW_inst_gt_txdlysresetdone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_txelecidle_UNCONNECTED;
  wire [7:0]NLW_inst_gt_txphaligndone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_txphinitdone_UNCONNECTED;
  wire [7:0]NLW_inst_gt_txresetdone_UNCONNECTED;
  wire [3:0]NLW_inst_phy_rst_fsm_UNCONNECTED;
  wire [23:0]NLW_inst_phy_rxeq_fsm_UNCONNECTED;
  wire [15:0]NLW_inst_phy_txeq_ctrl_UNCONNECTED;
  wire [23:0]NLW_inst_phy_txeq_fsm_UNCONNECTED;
  wire [31:0]NLW_inst_phy_txeq_preset_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_0_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_1_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_2_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_3_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_4_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_5_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_6_sigs_UNCONNECTED;
  wire [69:0]NLW_inst_pipe_tx_7_sigs_UNCONNECTED;
  wire [1:0]NLW_inst_pl_eq_phase_UNCONNECTED;
  wire [3:0]NLW_inst_startup_di_UNCONNECTED;
  wire [31:0]NLW_inst_user_tph_stt_read_data_UNCONNECTED;

  (* ARI_CAP_ENABLE = "FALSE" *) 
  (* AXISTEN_IF_CC_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_CC_PARITY_CHK = "FALSE" *) 
  (* AXISTEN_IF_CQ_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_ENABLE_CLIENT_TAG = "TRUE" *) 
  (* AXISTEN_IF_ENABLE_MSG_ROUTE = "18'b000000000000000000" *) 
  (* AXISTEN_IF_ENABLE_RX_MSG_INTFC = "FALSE" *) 
  (* AXISTEN_IF_RC_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_RC_STRADDLE = "FALSE" *) 
  (* AXISTEN_IF_RQ_ALIGNMENT_MODE = "FALSE" *) 
  (* AXISTEN_IF_RQ_PARITY_CHK = "FALSE" *) 
  (* AXISTEN_IF_WIDTH = "2'b01" *) 
  (* CFG_CTL_IF = "TRUE" *) 
  (* CFG_EXT_IF = "TRUE" *) 
  (* CFG_FC_IF = "TRUE" *) 
  (* CFG_MGMT_IF = "TRUE" *) 
  (* CFG_STATUS_IF = "TRUE" *) 
  (* CFG_TX_MSG_IF = "TRUE" *) 
  (* COMPLETION_SPACE = "16KB" *) 
  (* CORE_CLK_FREQ = "1" *) 
  (* CRM_CORE_CLK_FREQ_500 = "FALSE" *) 
  (* CRM_USER_CLK_FREQ = "2'b10" *) 
  (* C_DATA_WIDTH = "128" *) 
  (* DEBUG_CFG_LOCAL_MGMT_REG_ACCESS_OVERRIDE = "FALSE" *) 
  (* DEBUG_PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) 
  (* DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS = "FALSE" *) 
  (* DEDICATE_PERST = "TRUE" *) 
  (* DEV_PORT_TYPE = "0" *) 
  (* DIS_GT_WIZARD = "FALSE" *) 
  (* DNSTREAM_LINK_NUM = "8'b00000000" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_GT_SELECTION = "FALSE" *) 
  (* EXT_CH_GT_DRP = "FALSE" *) 
  (* EXT_PIPE_SIM = "FALSE" *) 
  (* EXT_STARTUP_PRIMITIVE = "FALSE" *) 
  (* INTERFACE_SPEED = "500MHZ" *) 
  (* KEEP_WIDTH = "4" *) 
  (* LL_ACK_TIMEOUT = "9'b000000000" *) 
  (* LL_ACK_TIMEOUT_EN = "FALSE" *) 
  (* LL_ACK_TIMEOUT_FUNC = "0" *) 
  (* LL_CPL_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_CPL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_NP_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_NP_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_P_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
  (* LL_P_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
  (* LL_REPLAY_TIMEOUT = "9'b000000000" *) 
  (* LL_REPLAY_TIMEOUT_EN = "FALSE" *) 
  (* LL_REPLAY_TIMEOUT_FUNC = "0" *) 
  (* LTR_TX_MESSAGE_MINIMUM_INTERVAL = "10'b0011111010" *) 
  (* LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE = "FALSE" *) 
  (* LTR_TX_MESSAGE_ON_LTR_ENABLE = "FALSE" *) 
  (* MCAP_CAP_NEXTPTR = "0" *) 
  (* MCAP_CONFIGURE_OVERRIDE = "FALSE" *) 
  (* MCAP_ENABLE = "FALSE" *) 
  (* MCAP_ENABLEMENT = "NONE" *) 
  (* MCAP_EOS_DESIGN_SWITCH = "FALSE" *) 
  (* MCAP_FPGA_BITSTREAM_VERSION = "0" *) 
  (* MCAP_GATE_IO_ENABLE_DESIGN_SWITCH = "FALSE" *) 
  (* MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH = "FALSE" *) 
  (* MCAP_INPUT_GATE_DESIGN_SWITCH = "FALSE" *) 
  (* MCAP_INTERRUPT_ON_MCAP_EOS = "FALSE" *) 
  (* MCAP_INTERRUPT_ON_MCAP_ERROR = "FALSE" *) 
  (* MCAP_VSEC_ID = "16'b0000000000000001" *) 
  (* MCAP_VSEC_LEN = "12'b000000101100" *) 
  (* MCAP_VSEC_REV = "4'b0000" *) 
  (* MSIX_EN = "FALSE" *) 
  (* MSI_EN = "TRUE" *) 
  (* NO_DECODE_LOGIC = "FALSE" *) 
  (* PCIE3_DRP = "FALSE" *) 
  (* PCIE_CHAN_BOND = "0" *) 
  (* PCIE_CHAN_BOND_EN = "FALSE" *) 
  (* PCIE_CONFIGURATION = "FALSE" *) 
  (* PCIE_EXT_CLK = "FALSE" *) 
  (* PCIE_FAST_CONFIG = "NONE" *) 
  (* PCIE_GT_DEVICE = "GTH" *) 
  (* PCIE_LINK_SPEED = "3" *) 
  (* PCIE_LPM_DFE = "LPM" *) 
  (* PCIE_TXBUF_EN = "FALSE" *) 
  (* PCIE_USE_MODE = "2.0" *) 
  (* PER_FUNC_STATUS_IF = "TRUE" *) 
  (* PF0_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF0_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF0_AER_CAP_NEXTPTR = "336" *) 
  (* PF0_ARI_CAP_NEXTPTR = "0" *) 
  (* PF0_ARI_CAP_NEXT_FUNC = "0" *) 
  (* PF0_ARI_CAP_VER = "4'b0001" *) 
  (* PF0_BAR0_APERTURE_SIZE = "13" *) 
  (* PF0_BAR0_CONTROL = "4" *) 
  (* PF0_BAR1_APERTURE_SIZE = "0" *) 
  (* PF0_BAR1_CONTROL = "0" *) 
  (* PF0_BAR2_APERTURE_SIZE = "13" *) 
  (* PF0_BAR2_CONTROL = "4" *) 
  (* PF0_BAR3_APERTURE_SIZE = "0" *) 
  (* PF0_BAR3_CONTROL = "0" *) 
  (* PF0_BAR4_APERTURE_SIZE = "13" *) 
  (* PF0_BAR4_CONTROL = "4" *) 
  (* PF0_BAR5_APERTURE_SIZE = "0" *) 
  (* PF0_BAR5_CONTROL = "0" *) 
  (* PF0_BIST_REGISTER = "8'b00000000" *) 
  (* PF0_CAPABILITY_POINTER = "128" *) 
  (* PF0_CLASS_CODE = "360448" *) 
  (* PF0_DEVICE_ID = "1296" *) 
  (* PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_ARI_FORWARD_ENABLE = "FALSE" *) 
  (* PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE = "TRUE" *) 
  (* PF0_DEV_CAP2_LTR_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP2_OBFF_SUPPORT = "0" *) 
  (* PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT = "FALSE" *) 
  (* PF0_DEV_CAP_ENDPOINT_L0S_LATENCY = "0" *) 
  (* PF0_DEV_CAP_ENDPOINT_L1_LATENCY = "0" *) 
  (* PF0_DEV_CAP_EXT_TAG_SUPPORTED = "FALSE" *) 
  (* PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE = "FALSE" *) 
  (* PF0_DEV_CAP_MAX_PAYLOAD_SIZE = "2" *) 
  (* PF0_DPA_CAP_NEXTPTR = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF0_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "0" *) 
  (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "0" *) 
  (* PF0_DPA_CAP_VER = "4'b0001" *) 
  (* PF0_DSN_CAP_NEXTPTR = "0" *) 
  (* PF0_EXPANSION_ROM_APERTURE_SIZE = "0" *) 
  (* PF0_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF0_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF0_INTERRUPT_PIN = "1" *) 
  (* PF0_LINK_CAP_ASPM_SUPPORT = "0" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2 = "7" *) 
  (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3 = "7" *) 
  (* PF0_LINK_STATUS_SLOT_CLOCK_CONFIG = "TRUE" *) 
  (* PF0_LTR_CAP_MAX_NOSNOOP_LAT = "10'b0000000000" *) 
  (* PF0_LTR_CAP_MAX_SNOOP_LAT = "10'b0000000000" *) 
  (* PF0_LTR_CAP_NEXTPTR = "0" *) 
  (* PF0_LTR_CAP_VER = "4'b0001" *) 
  (* PF0_MSIX_CAP_NEXTPTR = "0" *) 
  (* PF0_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF0_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* PF0_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF0_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* PF0_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* PF0_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF0_MSI_CAP_NEXTPTR = "192" *) 
  (* PF0_MSI_CAP_PERVECMASKCAP = "FALSE" *) 
  (* PF0_PB_CAP_DATA_REG_D0 = "0" *) 
  (* PF0_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
  (* PF0_PB_CAP_DATA_REG_D1 = "0" *) 
  (* PF0_PB_CAP_DATA_REG_D3HOT = "0" *) 
  (* PF0_PB_CAP_NEXTPTR = "0" *) 
  (* PF0_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF0_PB_CAP_VER = "4'b0001" *) 
  (* PF0_PM_CAP_ID = "8'b00000001" *) 
  (* PF0_PM_CAP_NEXTPTR = "144" *) 
  (* PF0_PM_CAP_PMESUPPORT_D0 = "FALSE" *) 
  (* PF0_PM_CAP_PMESUPPORT_D1 = "FALSE" *) 
  (* PF0_PM_CAP_PMESUPPORT_D3HOT = "FALSE" *) 
  (* PF0_PM_CAP_SUPP_D1_STATE = "FALSE" *) 
  (* PF0_PM_CAP_VER_ID = "3'b011" *) 
  (* PF0_PM_CSR_NOSOFTRESET = "TRUE" *) 
  (* PF0_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF0_RBAR_CAP_NEXTPTR = "0" *) 
  (* PF0_RBAR_CAP_SIZE0 = "0" *) 
  (* PF0_RBAR_CAP_SIZE1 = "0" *) 
  (* PF0_RBAR_CAP_SIZE2 = "0" *) 
  (* PF0_RBAR_CAP_VER = "4'b0001" *) 
  (* PF0_RBAR_CONTROL_INDEX0 = "3'b000" *) 
  (* PF0_RBAR_CONTROL_INDEX1 = "3'b000" *) 
  (* PF0_RBAR_CONTROL_INDEX2 = "3'b000" *) 
  (* PF0_RBAR_CONTROL_SIZE0 = "5'b00000" *) 
  (* PF0_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
  (* PF0_RBAR_CONTROL_SIZE2 = "5'b00000" *) 
  (* PF0_RBAR_NUM = "3'b001" *) 
  (* PF0_REVISION_ID = "5" *) 
  (* PF0_SECONDARY_PCIE_CAP_NEXTPTR = "0" *) 
  (* PF0_SRIOV_BAR0_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR0_CONTROL = "0" *) 
  (* PF0_SRIOV_BAR1_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR1_CONTROL = "0" *) 
  (* PF0_SRIOV_BAR2_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR2_CONTROL = "0" *) 
  (* PF0_SRIOV_BAR3_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR3_CONTROL = "0" *) 
  (* PF0_SRIOV_BAR4_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR4_CONTROL = "0" *) 
  (* PF0_SRIOV_BAR5_APERTURE_SIZE = "0" *) 
  (* PF0_SRIOV_BAR5_CONTROL = "0" *) 
  (* PF0_SRIOV_CAP_INITIAL_VF = "0" *) 
  (* PF0_SRIOV_CAP_NEXTPTR = "0" *) 
  (* PF0_SRIOV_CAP_TOTAL_VF = "0" *) 
  (* PF0_SRIOV_CAP_VER = "0" *) 
  (* PF0_SRIOV_FIRST_VF_OFFSET = "0" *) 
  (* PF0_SRIOV_FUNC_DEP_LINK = "0" *) 
  (* PF0_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
  (* PF0_SRIOV_VF_DEVICE_ID = "0" *) 
  (* PF0_SUBSYSTEM_ID = "8288" *) 
  (* PF0_SUBSYSTEM_VENDOR_ID = "6622" *) 
  (* PF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF0_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* PF0_TPHR_CAP_NEXTPTR = "0" *) 
  (* PF0_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* PF0_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* PF0_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* PF0_TPHR_CAP_VER = "1" *) 
  (* PF0_VC_CAP_ENABLE = "FALSE" *) 
  (* PF0_VC_CAP_NEXTPTR = "0" *) 
  (* PF0_VC_CAP_VER = "4'b0001" *) 
  (* PF0_VENDOR_ID = "6622" *) 
  (* PF1_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF1_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF1_AER_CAP_NEXTPTR = "0" *) 
  (* PF1_ARI_CAP_NEXTPTR = "0" *) 
  (* PF1_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
  (* PF1_BAR0_APERTURE_SIZE = "0" *) 
  (* PF1_BAR0_CONTROL = "0" *) 
  (* PF1_BAR1_APERTURE_SIZE = "0" *) 
  (* PF1_BAR1_CONTROL = "0" *) 
  (* PF1_BAR2_APERTURE_SIZE = "0" *) 
  (* PF1_BAR2_CONTROL = "0" *) 
  (* PF1_BAR3_APERTURE_SIZE = "0" *) 
  (* PF1_BAR3_CONTROL = "0" *) 
  (* PF1_BAR4_APERTURE_SIZE = "0" *) 
  (* PF1_BAR4_CONTROL = "0" *) 
  (* PF1_BAR5_APERTURE_SIZE = "0" *) 
  (* PF1_BAR5_CONTROL = "0" *) 
  (* PF1_BIST_REGISTER = "8'b00000000" *) 
  (* PF1_CAPABILITY_POINTER = "128" *) 
  (* PF1_CLASS_CODE = "360448" *) 
  (* PF1_DEVICE_ID = "32785" *) 
  (* PF1_DEV_CAP_MAX_PAYLOAD_SIZE = "2" *) 
  (* PF1_DPA_CAP_NEXTPTR = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF1_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "0" *) 
  (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "0" *) 
  (* PF1_DPA_CAP_VER = "4'b0001" *) 
  (* PF1_DSN_CAP_NEXTPTR = "0" *) 
  (* PF1_EXPANSION_ROM_APERTURE_SIZE = "0" *) 
  (* PF1_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF1_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF1_INTERRUPT_PIN = "0" *) 
  (* PF1_MSIX_CAP_NEXTPTR = "0" *) 
  (* PF1_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF1_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* PF1_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF1_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* PF1_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* PF1_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF1_MSI_CAP_NEXTPTR = "0" *) 
  (* PF1_MSI_CAP_PERVECMASKCAP = "FALSE" *) 
  (* PF1_PB_CAP_DATA_REG_D0 = "0" *) 
  (* PF1_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
  (* PF1_PB_CAP_DATA_REG_D1 = "0" *) 
  (* PF1_PB_CAP_DATA_REG_D3HOT = "0" *) 
  (* PF1_PB_CAP_NEXTPTR = "0" *) 
  (* PF1_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF1_PB_CAP_VER = "4'b0001" *) 
  (* PF1_PM_CAP_ID = "8'b00000001" *) 
  (* PF1_PM_CAP_NEXTPTR = "0" *) 
  (* PF1_PM_CAP_VER_ID = "3'b011" *) 
  (* PF1_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF1_RBAR_CAP_NEXTPTR = "0" *) 
  (* PF1_RBAR_CAP_SIZE0 = "0" *) 
  (* PF1_RBAR_CAP_SIZE1 = "0" *) 
  (* PF1_RBAR_CAP_SIZE2 = "0" *) 
  (* PF1_RBAR_CAP_VER = "4'b0001" *) 
  (* PF1_RBAR_CONTROL_INDEX0 = "3'b000" *) 
  (* PF1_RBAR_CONTROL_INDEX1 = "3'b000" *) 
  (* PF1_RBAR_CONTROL_INDEX2 = "3'b000" *) 
  (* PF1_RBAR_CONTROL_SIZE0 = "5'b00000" *) 
  (* PF1_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
  (* PF1_RBAR_CONTROL_SIZE2 = "5'b00000" *) 
  (* PF1_RBAR_NUM = "3'b001" *) 
  (* PF1_REVISION_ID = "0" *) 
  (* PF1_SRIOV_BAR0_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR0_CONTROL = "0" *) 
  (* PF1_SRIOV_BAR1_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR1_CONTROL = "0" *) 
  (* PF1_SRIOV_BAR2_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR2_CONTROL = "0" *) 
  (* PF1_SRIOV_BAR3_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR3_CONTROL = "0" *) 
  (* PF1_SRIOV_BAR4_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR4_CONTROL = "0" *) 
  (* PF1_SRIOV_BAR5_APERTURE_SIZE = "0" *) 
  (* PF1_SRIOV_BAR5_CONTROL = "0" *) 
  (* PF1_SRIOV_CAP_INITIAL_VF = "0" *) 
  (* PF1_SRIOV_CAP_NEXTPTR = "0" *) 
  (* PF1_SRIOV_CAP_TOTAL_VF = "0" *) 
  (* PF1_SRIOV_CAP_VER = "0" *) 
  (* PF1_SRIOV_FIRST_VF_OFFSET = "0" *) 
  (* PF1_SRIOV_FUNC_DEP_LINK = "1" *) 
  (* PF1_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
  (* PF1_SRIOV_VF_DEVICE_ID = "0" *) 
  (* PF1_SUBSYSTEM_ID = "7" *) 
  (* PF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF1_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* PF1_TPHR_CAP_NEXTPTR = "0" *) 
  (* PF1_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* PF1_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* PF1_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* PF1_TPHR_CAP_VER = "1" *) 
  (* PF2_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF2_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF2_AER_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
  (* PF2_BAR0_APERTURE_SIZE = "6'b000011" *) 
  (* PF2_BAR0_CONTROL = "3'b100" *) 
  (* PF2_BAR1_APERTURE_SIZE = "6'b000000" *) 
  (* PF2_BAR1_CONTROL = "3'b000" *) 
  (* PF2_BAR2_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_BAR2_CONTROL = "3'b100" *) 
  (* PF2_BAR3_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_BAR3_CONTROL = "3'b000" *) 
  (* PF2_BAR4_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_BAR4_CONTROL = "3'b100" *) 
  (* PF2_BAR5_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_BAR5_CONTROL = "3'b000" *) 
  (* PF2_BIST_REGISTER = "8'b00000000" *) 
  (* PF2_CAPABILITY_POINTER = "8'b01010000" *) 
  (* PF2_CLASS_CODE = "24'b000000000000000000000000" *) 
  (* PF2_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF2_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b011" *) 
  (* PF2_DPA_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF2_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) 
  (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) 
  (* PF2_DPA_CAP_VER = "4'b0001" *) 
  (* PF2_DSN_CAP_NEXTPTR = "12'b000100001100" *) 
  (* PF2_EXPANSION_ROM_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF2_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF2_INTERRUPT_PIN = "3'b001" *) 
  (* PF2_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF2_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF2_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
  (* PF2_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF2_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) 
  (* PF2_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* PF2_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF2_MSI_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF2_MSI_CAP_PERVECMASKCAP = "FALSE" *) 
  (* PF2_PB_CAP_DATA_REG_D0 = "0" *) 
  (* PF2_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
  (* PF2_PB_CAP_DATA_REG_D1 = "0" *) 
  (* PF2_PB_CAP_DATA_REG_D3HOT = "0" *) 
  (* PF2_PB_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF2_PB_CAP_VER = "4'b0001" *) 
  (* PF2_PM_CAP_ID = "8'b00000001" *) 
  (* PF2_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF2_PM_CAP_VER_ID = "3'b011" *) 
  (* PF2_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF2_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) 
  (* PF2_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) 
  (* PF2_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
  (* PF2_RBAR_CAP_VER = "4'b0001" *) 
  (* PF2_RBAR_CONTROL_INDEX0 = "3'b000" *) 
  (* PF2_RBAR_CONTROL_INDEX1 = "3'b000" *) 
  (* PF2_RBAR_CONTROL_INDEX2 = "3'b000" *) 
  (* PF2_RBAR_CONTROL_SIZE0 = "5'b00000" *) 
  (* PF2_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
  (* PF2_RBAR_CONTROL_SIZE2 = "5'b00000" *) 
  (* PF2_RBAR_NUM = "3'b001" *) 
  (* PF2_REVISION_ID = "8'b00000000" *) 
  (* PF2_SRIOV_BAR0_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_SRIOV_BAR0_CONTROL = "3'b100" *) 
  (* PF2_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF2_SRIOV_BAR1_CONTROL = "3'b000" *) 
  (* PF2_SRIOV_BAR2_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_SRIOV_BAR2_CONTROL = "3'b100" *) 
  (* PF2_SRIOV_BAR3_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_SRIOV_BAR3_CONTROL = "3'b000" *) 
  (* PF2_SRIOV_BAR4_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_SRIOV_BAR4_CONTROL = "3'b100" *) 
  (* PF2_SRIOV_BAR5_APERTURE_SIZE = "5'b00011" *) 
  (* PF2_SRIOV_BAR5_CONTROL = "3'b000" *) 
  (* PF2_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) 
  (* PF2_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
  (* PF2_SRIOV_CAP_VER = "4'b0001" *) 
  (* PF2_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) 
  (* PF2_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) 
  (* PF2_SRIOV_SUPPORTED_PAGE_SIZE = "0" *) 
  (* PF2_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF2_SUBSYSTEM_ID = "16'b0000000000000000" *) 
  (* PF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF2_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF2_TPHR_CAP_INT_VEC_MODE = "TRUE" *) 
  (* PF2_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF2_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* PF2_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* PF2_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* PF2_TPHR_CAP_VER = "4'b0001" *) 
  (* PF3_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
  (* PF3_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
  (* PF3_AER_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
  (* PF3_BAR0_APERTURE_SIZE = "6'b000011" *) 
  (* PF3_BAR0_CONTROL = "3'b100" *) 
  (* PF3_BAR1_APERTURE_SIZE = "6'b000000" *) 
  (* PF3_BAR1_CONTROL = "3'b000" *) 
  (* PF3_BAR2_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_BAR2_CONTROL = "3'b100" *) 
  (* PF3_BAR3_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_BAR3_CONTROL = "3'b000" *) 
  (* PF3_BAR4_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_BAR4_CONTROL = "3'b100" *) 
  (* PF3_BAR5_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_BAR5_CONTROL = "3'b000" *) 
  (* PF3_BIST_REGISTER = "8'b00000000" *) 
  (* PF3_CAPABILITY_POINTER = "8'b01010000" *) 
  (* PF3_CLASS_CODE = "24'b000000000000000000000000" *) 
  (* PF3_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF3_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b011" *) 
  (* PF3_DPA_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
  (* PF3_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) 
  (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) 
  (* PF3_DPA_CAP_VER = "4'b0001" *) 
  (* PF3_DSN_CAP_NEXTPTR = "12'b000100001100" *) 
  (* PF3_EXPANSION_ROM_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_EXPANSION_ROM_ENABLE = "FALSE" *) 
  (* PF3_INTERRUPT_LINE = "8'b00000000" *) 
  (* PF3_INTERRUPT_PIN = "3'b001" *) 
  (* PF3_MSIX_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF3_MSIX_CAP_PBA_BIR = "0" *) 
  (* PF3_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
  (* PF3_MSIX_CAP_TABLE_BIR = "0" *) 
  (* PF3_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) 
  (* PF3_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* PF3_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* PF3_MSI_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF3_MSI_CAP_PERVECMASKCAP = "FALSE" *) 
  (* PF3_PB_CAP_DATA_REG_D0 = "0" *) 
  (* PF3_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
  (* PF3_PB_CAP_DATA_REG_D1 = "0" *) 
  (* PF3_PB_CAP_DATA_REG_D3HOT = "0" *) 
  (* PF3_PB_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
  (* PF3_PB_CAP_VER = "4'b0001" *) 
  (* PF3_PM_CAP_ID = "8'b00000001" *) 
  (* PF3_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* PF3_PM_CAP_VER_ID = "3'b011" *) 
  (* PF3_RBAR_CAP_ENABLE = "FALSE" *) 
  (* PF3_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) 
  (* PF3_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) 
  (* PF3_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
  (* PF3_RBAR_CAP_VER = "4'b0001" *) 
  (* PF3_RBAR_CONTROL_INDEX0 = "3'b000" *) 
  (* PF3_RBAR_CONTROL_INDEX1 = "3'b000" *) 
  (* PF3_RBAR_CONTROL_INDEX2 = "3'b000" *) 
  (* PF3_RBAR_CONTROL_SIZE0 = "5'b00000" *) 
  (* PF3_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
  (* PF3_RBAR_CONTROL_SIZE2 = "5'b00000" *) 
  (* PF3_RBAR_NUM = "3'b001" *) 
  (* PF3_REVISION_ID = "8'b00000000" *) 
  (* PF3_SRIOV_BAR0_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_SRIOV_BAR0_CONTROL = "3'b100" *) 
  (* PF3_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
  (* PF3_SRIOV_BAR1_CONTROL = "3'b000" *) 
  (* PF3_SRIOV_BAR2_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_SRIOV_BAR2_CONTROL = "3'b100" *) 
  (* PF3_SRIOV_BAR3_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_SRIOV_BAR3_CONTROL = "3'b000" *) 
  (* PF3_SRIOV_BAR4_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_SRIOV_BAR4_CONTROL = "3'b100" *) 
  (* PF3_SRIOV_BAR5_APERTURE_SIZE = "5'b00011" *) 
  (* PF3_SRIOV_BAR5_CONTROL = "3'b000" *) 
  (* PF3_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) 
  (* PF3_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
  (* PF3_SRIOV_CAP_VER = "4'b0001" *) 
  (* PF3_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) 
  (* PF3_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) 
  (* PF3_SRIOV_SUPPORTED_PAGE_SIZE = "0" *) 
  (* PF3_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) 
  (* PF3_SUBSYSTEM_ID = "16'b0000000000000000" *) 
  (* PF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* PF3_TPHR_CAP_ENABLE = "FALSE" *) 
  (* PF3_TPHR_CAP_INT_VEC_MODE = "TRUE" *) 
  (* PF3_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* PF3_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* PF3_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* PF3_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* PF3_TPHR_CAP_VER = "4'b0001" *) 
  (* PHY_LP_TXPRESET = "4" *) 
  (* PIPE_PIPELINE_STAGES = "1" *) 
  (* PIPE_SIM = "FALSE" *) 
  (* PLL_TYPE = "2" *) 
  (* PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3 = "FALSE" *) 
  (* PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2 = "FALSE" *) 
  (* PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) 
  (* PL_DISABLE_GEN3_DC_BALANCE = "FALSE" *) 
  (* PL_DISABLE_GEN3_LFSR_UPDATE_ON_SKP = "TRUE" *) 
  (* PL_DISABLE_RETRAIN_ON_FRAMING_ERROR = "FALSE" *) 
  (* PL_DISABLE_SCRAMBLING = "FALSE" *) 
  (* PL_DISABLE_SYNC_HEADER_FRAMING_ERROR = "FALSE" *) 
  (* PL_DISABLE_UPCONFIG_CAPABLE = "FALSE" *) 
  (* PL_EQ_ADAPT_DISABLE_COEFF_CHECK = "FALSE" *) 
  (* PL_EQ_ADAPT_DISABLE_PRESET_CHECK = "FALSE" *) 
  (* PL_EQ_ADAPT_ITER_COUNT = "5'b00010" *) 
  (* PL_EQ_ADAPT_REJECT_RETRY_COUNT = "2'b01" *) 
  (* PL_EQ_BYPASS_PHASE23 = "FALSE" *) 
  (* PL_EQ_DEFAULT_GEN3_RX_PRESET_HINT = "3'b011" *) 
  (* PL_EQ_DEFAULT_GEN3_TX_PRESET = "4'b0100" *) 
  (* PL_EQ_PHASE01_RX_ADAPT = "FALSE" *) 
  (* PL_EQ_SHORT_ADAPT_PHASE = "FALSE" *) 
  (* PL_INTERFACE = "FALSE" *) 
  (* PL_LANE0_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE1_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE2_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE3_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE4_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE5_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE6_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LANE7_EQ_CONTROL = "16'b0011010000000000" *) 
  (* PL_LINK_CAP_MAX_LINK_SPEED = "2" *) 
  (* PL_LINK_CAP_MAX_LINK_WIDTH = "8" *) 
  (* PL_N_FTS_COMCLK_GEN1 = "255" *) 
  (* PL_N_FTS_COMCLK_GEN2 = "255" *) 
  (* PL_N_FTS_COMCLK_GEN3 = "255" *) 
  (* PL_N_FTS_GEN1 = "255" *) 
  (* PL_N_FTS_GEN2 = "255" *) 
  (* PL_N_FTS_GEN3 = "255" *) 
  (* PL_REPORT_ALL_PHY_ERRORS = "TRUE" *) 
  (* PL_SIM_FAST_LINK_TRAINING = "TRUE" *) 
  (* PL_UPSTREAM_FACING = "TRUE" *) 
  (* PM_ASPML0S_TIMEOUT = "16'b0000010111011100" *) 
  (* PM_ASPML1_ENTRY_DELAY = "20'b00000000101010111110" *) 
  (* PM_ENABLE_L23_ENTRY = "FALSE" *) 
  (* PM_ENABLE_SLOT_POWER_CAPTURE = "TRUE" *) 
  (* PM_L1_REENTRY_DELAY = "25000" *) 
  (* PM_PME_SERVICE_TIMEOUT_DELAY = "20'b00011000011010100000" *) 
  (* PM_PME_TURNOFF_ACK_DELAY = "16'b0000000001100100" *) 
  (* RCV_MSG_IF = "TRUE" *) 
  (* REF_CLK_FREQ = "0" *) 
  (* RX_DETECT = "0" *) 
  (* SELECT_QUAD = "GTH_Quad_224" *) 
  (* SHARED_LOGIC = "1" *) 
  (* SIM_JTAG_IDCODE = "0" *) 
  (* SIM_VERSION = "1.0" *) 
  (* SPARE_BIT0 = "0" *) 
  (* SPARE_BIT1 = "0" *) 
  (* SPARE_BIT2 = "0" *) 
  (* SPARE_BIT3 = "0" *) 
  (* SPARE_BIT4 = "0" *) 
  (* SPARE_BIT5 = "0" *) 
  (* SPARE_BIT6 = "0" *) 
  (* SPARE_BIT7 = "0" *) 
  (* SPARE_BIT8 = "0" *) 
  (* SPARE_BYTE0 = "8'b00000000" *) 
  (* SPARE_BYTE1 = "8'b00000000" *) 
  (* SPARE_BYTE2 = "8'b00000000" *) 
  (* SPARE_BYTE3 = "8'b00000000" *) 
  (* SPARE_WORD0 = "0" *) 
  (* SPARE_WORD1 = "0" *) 
  (* SPARE_WORD2 = "0" *) 
  (* SPARE_WORD3 = "0" *) 
  (* SRIOV_CAP_ENABLE = "FALSE" *) 
  (* SYS_RESET_POLARITY = "0" *) 
  (* TCQ = "100" *) 
  (* TL_COMPL_TIMEOUT_REG0 = "24'b101111101011110000100000" *) 
  (* TL_COMPL_TIMEOUT_REG1 = "28'b0010111110101111000010000000" *) 
  (* TL_CREDITS_CD = "0" *) 
  (* TL_CREDITS_CH = "0" *) 
  (* TL_CREDITS_NPD = "40" *) 
  (* TL_CREDITS_NPH = "32" *) 
  (* TL_CREDITS_PD = "408" *) 
  (* TL_CREDITS_PH = "32" *) 
  (* TL_ENABLE_MESSAGE_RID_CHECK_ENABLE = "TRUE" *) 
  (* TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) 
  (* TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) 
  (* TL_LEGACY_MODE_ENABLE = "FALSE" *) 
  (* TL_PF_ENABLE_REG = "0" *) 
  (* TL_TX_MUX_STRICT_PRIORITY = "TRUE" *) 
  (* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) 
  (* TWO_LAYER_MODE_DLCMSM_ENABLE = "TRUE" *) 
  (* TWO_LAYER_MODE_ENABLE = "FALSE" *) 
  (* TWO_LAYER_MODE_WIDTH_256 = "TRUE" *) 
  (* TX_FC_IF = "TRUE" *) 
  (* USER_CLK_FREQ = "3" *) 
  (* VF0_ARI_CAP_NEXTPTR = "0" *) 
  (* VF0_CAPABILITY_POINTER = "128" *) 
  (* VF0_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF0_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF0_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF0_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF0_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF0_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF0_PM_CAP_ID = "8'b00000001" *) 
  (* VF0_PM_CAP_NEXTPTR = "0" *) 
  (* VF0_PM_CAP_VER_ID = "3'b011" *) 
  (* VF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF0_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF0_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF0_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF0_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF0_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF0_TPHR_CAP_VER = "1" *) 
  (* VF1_ARI_CAP_NEXTPTR = "0" *) 
  (* VF1_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF1_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF1_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF1_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF1_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF1_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF1_PM_CAP_ID = "8'b00000001" *) 
  (* VF1_PM_CAP_NEXTPTR = "0" *) 
  (* VF1_PM_CAP_VER_ID = "3'b011" *) 
  (* VF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF1_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF1_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF1_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF1_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF1_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF1_TPHR_CAP_VER = "1" *) 
  (* VF2_ARI_CAP_NEXTPTR = "0" *) 
  (* VF2_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF2_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF2_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF2_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF2_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF2_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF2_PM_CAP_ID = "8'b00000001" *) 
  (* VF2_PM_CAP_NEXTPTR = "0" *) 
  (* VF2_PM_CAP_VER_ID = "3'b011" *) 
  (* VF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF2_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF2_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF2_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF2_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF2_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF2_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF2_TPHR_CAP_VER = "1" *) 
  (* VF3_ARI_CAP_NEXTPTR = "0" *) 
  (* VF3_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF3_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF3_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF3_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF3_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF3_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF3_PM_CAP_ID = "8'b00000001" *) 
  (* VF3_PM_CAP_NEXTPTR = "0" *) 
  (* VF3_PM_CAP_VER_ID = "3'b011" *) 
  (* VF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF3_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF3_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF3_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF3_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF3_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF3_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF3_TPHR_CAP_VER = "1" *) 
  (* VF4_ARI_CAP_NEXTPTR = "0" *) 
  (* VF4_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF4_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF4_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF4_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF4_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF4_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF4_PM_CAP_ID = "8'b00000001" *) 
  (* VF4_PM_CAP_NEXTPTR = "0" *) 
  (* VF4_PM_CAP_VER_ID = "3'b011" *) 
  (* VF4_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF4_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF4_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF4_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF4_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF4_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF4_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF4_TPHR_CAP_VER = "1" *) 
  (* VF5_ARI_CAP_NEXTPTR = "0" *) 
  (* VF5_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF5_MSIX_CAP_PBA_OFFSET = "0" *) 
  (* VF5_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF5_MSIX_CAP_TABLE_OFFSET = "0" *) 
  (* VF5_MSIX_CAP_TABLE_SIZE = "0" *) 
  (* VF5_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF5_PM_CAP_ID = "8'b00000001" *) 
  (* VF5_PM_CAP_NEXTPTR = "0" *) 
  (* VF5_PM_CAP_VER_ID = "3'b011" *) 
  (* VF5_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF5_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF5_TPHR_CAP_INT_VEC_MODE = "FALSE" *) 
  (* VF5_TPHR_CAP_NEXTPTR = "0" *) 
  (* VF5_TPHR_CAP_ST_MODE_SEL = "0" *) 
  (* VF5_TPHR_CAP_ST_TABLE_LOC = "0" *) 
  (* VF5_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
  (* VF5_TPHR_CAP_VER = "1" *) 
  (* VF6_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF6_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF6_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
  (* VF6_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF6_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) 
  (* VF6_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF6_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF6_PM_CAP_ID = "8'b00000001" *) 
  (* VF6_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF6_PM_CAP_VER_ID = "3'b011" *) 
  (* VF6_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF6_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF6_TPHR_CAP_INT_VEC_MODE = "TRUE" *) 
  (* VF6_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF6_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF6_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF6_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF6_TPHR_CAP_VER = "4'b0001" *) 
  (* VF7_ARI_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF7_MSIX_CAP_PBA_BIR = "0" *) 
  (* VF7_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
  (* VF7_MSIX_CAP_TABLE_BIR = "0" *) 
  (* VF7_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) 
  (* VF7_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
  (* VF7_MSI_CAP_MULTIMSGCAP = "0" *) 
  (* VF7_PM_CAP_ID = "8'b00000001" *) 
  (* VF7_PM_CAP_NEXTPTR = "8'b00000000" *) 
  (* VF7_PM_CAP_VER_ID = "3'b011" *) 
  (* VF7_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
  (* VF7_TPHR_CAP_ENABLE = "FALSE" *) 
  (* VF7_TPHR_CAP_INT_VEC_MODE = "TRUE" *) 
  (* VF7_TPHR_CAP_NEXTPTR = "12'b000000000000" *) 
  (* VF7_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
  (* VF7_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
  (* VF7_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) 
  (* VF7_TPHR_CAP_VER = "4'b0001" *) 
  (* en_msi_per_vec_masking = "FALSE" *) 
  (* gen_x0y0_xdc = "1" *) 
  (* gen_x0y1_xdc = "0" *) 
  (* gen_x0y2_xdc = "0" *) 
  (* gen_x0y3_xdc = "0" *) 
  (* gen_x0y4_xdc = "0" *) 
  (* gen_x0y5_xdc = "0" *) 
  (* pcie_blk_locn = "0" *) 
  (* silicon_revision = "Production" *) 
  (* xlnx_ref_board = "0" *) 
  pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_core_top inst
       (.cap_gnt(1'b1),
        .cap_rel(1'b0),
        .cap_req(NLW_inst_cap_req_UNCONNECTED),
        .cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_ext_function_number(cfg_ext_function_number),
        .cfg_ext_read_data(cfg_ext_read_data),
        .cfg_ext_read_data_valid(cfg_ext_read_data_valid),
        .cfg_ext_read_received(cfg_ext_read_received),
        .cfg_ext_register_number(cfg_ext_register_number),
        .cfg_ext_write_byte_enable(cfg_ext_write_byte_enable),
        .cfg_ext_write_data(cfg_ext_write_data),
        .cfg_ext_write_received(cfg_ext_write_received),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_pending_status_data_enable(cfg_interrupt_msi_pending_status_data_enable),
        .cfg_interrupt_msi_pending_status_function_num(cfg_interrupt_msi_pending_status_function_num),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_msix_address({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cfg_interrupt_msix_data({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cfg_interrupt_msix_enable(NLW_inst_cfg_interrupt_msix_enable_UNCONNECTED[3:0]),
        .cfg_interrupt_msix_fail(NLW_inst_cfg_interrupt_msix_fail_UNCONNECTED),
        .cfg_interrupt_msix_int(1'b0),
        .cfg_interrupt_msix_mask(NLW_inst_cfg_interrupt_msix_mask_UNCONNECTED[3:0]),
        .cfg_interrupt_msix_sent(NLW_inst_cfg_interrupt_msix_sent_UNCONNECTED),
        .cfg_interrupt_msix_vf_enable(NLW_inst_cfg_interrupt_msix_vf_enable_UNCONNECTED[7:0]),
        .cfg_interrupt_msix_vf_mask(NLW_inst_cfg_interrupt_msix_vf_mask_UNCONNECTED[7:0]),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_local_error(cfg_local_error),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .common_commands_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .common_commands_out(NLW_inst_common_commands_out_UNCONNECTED[16:0]),
        .conf_req_data({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .conf_req_ready(NLW_inst_conf_req_ready_UNCONNECTED),
        .conf_req_reg_num({1'b0,1'b0,1'b0,1'b0}),
        .conf_req_type({1'b0,1'b0}),
        .conf_req_valid(1'b0),
        .conf_resp_rdata(NLW_inst_conf_resp_rdata_UNCONNECTED[31:0]),
        .conf_resp_valid(NLW_inst_conf_resp_valid_UNCONNECTED),
        .drp_addr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drp_clk(1'b1),
        .drp_di({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drp_do(NLW_inst_drp_do_UNCONNECTED[15:0]),
        .drp_en(1'b0),
        .drp_rdy(NLW_inst_drp_rdy_UNCONNECTED),
        .drp_we(1'b0),
        .ext_ch_gt_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpclk(NLW_inst_ext_ch_gt_drpclk_UNCONNECTED),
        .ext_ch_gt_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpdo(NLW_inst_ext_ch_gt_drpdo_UNCONNECTED[127:0]),
        .ext_ch_gt_drpen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drprdy(NLW_inst_ext_ch_gt_drprdy_UNCONNECTED[7:0]),
        .ext_ch_gt_drpwe({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_qpll1lock_out({1'b0,1'b0}),
        .ext_qpll1outclk_out({1'b0,1'b0}),
        .ext_qpll1outrefclk_out({1'b0,1'b0}),
        .ext_qpll1pd(NLW_inst_ext_qpll1pd_UNCONNECTED[1:0]),
        .ext_qpll1rate(NLW_inst_ext_qpll1rate_UNCONNECTED[5:0]),
        .ext_qpll1refclk(NLW_inst_ext_qpll1refclk_UNCONNECTED[1:0]),
        .ext_qpll1reset(NLW_inst_ext_qpll1reset_UNCONNECTED[1:0]),
        .gt_bufgtdiv(NLW_inst_gt_bufgtdiv_UNCONNECTED[8:0]),
        .gt_cplllock(NLW_inst_gt_cplllock_UNCONNECTED[7:0]),
        .gt_dmonitorout(NLW_inst_gt_dmonitorout_UNCONNECTED[135:0]),
        .gt_eyescandataerror(NLW_inst_gt_eyescandataerror_UNCONNECTED[7:0]),
        .gt_gtpowergood(NLW_inst_gt_gtpowergood_UNCONNECTED[7:0]),
        .gt_loopback({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_pcierateidle(NLW_inst_gt_pcierateidle_UNCONNECTED[7:0]),
        .gt_pcieuserratedone({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_pcieuserratestart(NLW_inst_gt_pcieuserratestart_UNCONNECTED[7:0]),
        .gt_phystatus(NLW_inst_gt_phystatus_UNCONNECTED[7:0]),
        .gt_qpll1lock(NLW_inst_gt_qpll1lock_UNCONNECTED[1:0]),
        .gt_rxbufstatus(NLW_inst_gt_rxbufstatus_UNCONNECTED[23:0]),
        .gt_rxcdrlock(NLW_inst_gt_rxcdrlock_UNCONNECTED[7:0]),
        .gt_rxcommadet(NLW_inst_gt_rxcommadet_UNCONNECTED[7:0]),
        .gt_rxdlysresetdone(NLW_inst_gt_rxdlysresetdone_UNCONNECTED[7:0]),
        .gt_rxoutclk(NLW_inst_gt_rxoutclk_UNCONNECTED[7:0]),
        .gt_rxphaligndone(NLW_inst_gt_rxphaligndone_UNCONNECTED[7:0]),
        .gt_rxpmaresetdone(NLW_inst_gt_rxpmaresetdone_UNCONNECTED[7:0]),
        .gt_rxprbscntreset({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_rxprbserr(NLW_inst_gt_rxprbserr_UNCONNECTED[7:0]),
        .gt_rxprbssel({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_rxrecclkout(NLW_inst_gt_rxrecclkout_UNCONNECTED[7:0]),
        .gt_rxresetdone(NLW_inst_gt_rxresetdone_UNCONNECTED[7:0]),
        .gt_rxstatus(NLW_inst_gt_rxstatus_UNCONNECTED[23:0]),
        .gt_rxsyncdone(NLW_inst_gt_rxsyncdone_UNCONNECTED[7:0]),
        .gt_rxvalid(NLW_inst_gt_rxvalid_UNCONNECTED[7:0]),
        .gt_txdlysresetdone(NLW_inst_gt_txdlysresetdone_UNCONNECTED[7:0]),
        .gt_txelecidle(NLW_inst_gt_txelecidle_UNCONNECTED[7:0]),
        .gt_txinhibit({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_txphaligndone(NLW_inst_gt_txphaligndone_UNCONNECTED[7:0]),
        .gt_txphinitdone(NLW_inst_gt_txphinitdone_UNCONNECTED[7:0]),
        .gt_txprbsforceerr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_txprbssel({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt_txresetdone(NLW_inst_gt_txresetdone_UNCONNECTED[7:0]),
        .int_qpll1lock_out(int_qpll1lock_out),
        .int_qpll1outclk_out(int_qpll1outclk_out),
        .int_qpll1outrefclk_out(int_qpll1outrefclk_out),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .mcap_design_switch(NLW_inst_mcap_design_switch_UNCONNECTED),
        .mcap_eos_in(1'b0),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_perstn0_out(pcie_perstn0_out),
        .pcie_perstn1_in(pcie_perstn1_in),
        .pcie_perstn1_out(pcie_perstn1_out),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_av(pcie_rq_tag_av),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .phy_prst_n(NLW_inst_phy_prst_n_UNCONNECTED),
        .phy_rrst_n(NLW_inst_phy_rrst_n_UNCONNECTED),
        .phy_rst_fsm(NLW_inst_phy_rst_fsm_UNCONNECTED[3:0]),
        .phy_rst_idle(NLW_inst_phy_rst_idle_UNCONNECTED),
        .phy_rxeq_fsm(NLW_inst_phy_rxeq_fsm_UNCONNECTED[23:0]),
        .phy_txeq_ctrl(NLW_inst_phy_txeq_ctrl_UNCONNECTED[15:0]),
        .phy_txeq_fsm(NLW_inst_phy_txeq_fsm_UNCONNECTED[23:0]),
        .phy_txeq_preset(NLW_inst_phy_txeq_preset_UNCONNECTED[31:0]),
        .pipe_rx_0_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_1_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_2_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_3_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_4_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_5_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_6_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_7_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_tx_0_sigs(NLW_inst_pipe_tx_0_sigs_UNCONNECTED[69:0]),
        .pipe_tx_1_sigs(NLW_inst_pipe_tx_1_sigs_UNCONNECTED[69:0]),
        .pipe_tx_2_sigs(NLW_inst_pipe_tx_2_sigs_UNCONNECTED[69:0]),
        .pipe_tx_3_sigs(NLW_inst_pipe_tx_3_sigs_UNCONNECTED[69:0]),
        .pipe_tx_4_sigs(NLW_inst_pipe_tx_4_sigs_UNCONNECTED[69:0]),
        .pipe_tx_5_sigs(NLW_inst_pipe_tx_5_sigs_UNCONNECTED[69:0]),
        .pipe_tx_6_sigs(NLW_inst_pipe_tx_6_sigs_UNCONNECTED[69:0]),
        .pipe_tx_7_sigs(NLW_inst_pipe_tx_7_sigs_UNCONNECTED[69:0]),
        .pl_eq_in_progress(NLW_inst_pl_eq_in_progress_UNCONNECTED),
        .pl_eq_phase(NLW_inst_pl_eq_phase_UNCONNECTED[1:0]),
        .pl_eq_reset_eieos_count(1'b0),
        .pl_gen2_upstream_prefer_deemph(1'b0),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .startup_cfgclk(NLW_inst_startup_cfgclk_UNCONNECTED),
        .startup_cfgmclk(NLW_inst_startup_cfgmclk_UNCONNECTED),
        .startup_di(NLW_inst_startup_di_UNCONNECTED[3:0]),
        .startup_do({1'b0,1'b0,1'b0,1'b0}),
        .startup_dts({1'b0,1'b0,1'b0,1'b0}),
        .startup_eos(NLW_inst_startup_eos_UNCONNECTED),
        .startup_fcsbo(1'b0),
        .startup_fcsbts(1'b0),
        .startup_gsr(1'b0),
        .startup_gts(1'b0),
        .startup_keyclearb(1'b1),
        .startup_pack(1'b0),
        .startup_preq(NLW_inst_startup_preq_UNCONNECTED),
        .startup_usrcclko(1'b0),
        .startup_usrcclkts(1'b1),
        .startup_usrdoneo(1'b0),
        .startup_usrdonets(1'b1),
        .sys_clk(sys_clk),
        .sys_clk_gt(sys_clk_gt),
        .sys_reset(sys_reset),
        .user_clk(user_clk),
        .user_lnk_up(user_lnk_up),
        .user_reset(user_reset),
        .user_tph_function_num({1'b0,1'b0,1'b0,1'b0}),
        .user_tph_stt_address({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .user_tph_stt_read_data(NLW_inst_user_tph_stt_read_data_UNCONNECTED[31:0]),
        .user_tph_stt_read_data_valid(NLW_inst_user_tph_stt_read_data_valid_UNCONNECTED),
        .user_tph_stt_read_enable(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_5_3_gthe3_channel" *) 
module pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_channel
   (cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    pcsrsvdout_out,
    rxdata_out,
    drpdo_out,
    rxctrl0_out,
    rxctrl1_out,
    dmonitorout_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtce_out,
    bufgtcemask_out,
    bufgtreset_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxmonitorout_out,
    pinrsrvdas_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    bufgtdiv_out,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrxreset_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpisopd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txratemode_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    rxdfeagcctrl_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txbufdiffctrl_in,
    txmargin_in,
    txoutclksel_in,
    txrate_in,
    rxosintcfg_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    rxchbondi_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gthtxn_out;
  output [3:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [3:0]phystatus_out;
  output [3:0]resetexception_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [3:0]rxqpisenn_out;
  output [3:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [3:0]txqpisenn_out;
  output [3:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  output [47:0]pcsrsvdout_out;
  output [511:0]rxdata_out;
  output [63:0]drpdo_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [67:0]dmonitorout_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [7:0]rxclkcorcnt_out;
  output [7:0]rxdatavalid_out;
  output [7:0]rxheadervalid_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [11:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [11:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [11:0]rxbufstatus_out;
  output [11:0]rxstatus_out;
  output [19:0]rxchbondo_out;
  output [23:0]rxheader_out;
  output [27:0]rxmonitorout_out;
  output [31:0]pinrsrvdas_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [31:0]rxdataextendrsvd_out;
  output [35:0]bufgtdiv_out;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [3:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]evoddphicaldone_in;
  input [3:0]evoddphicalstart_in;
  input [3:0]evoddphidrden_in;
  input [3:0]evoddphidwren_in;
  input [3:0]evoddphixrden_in;
  input [3:0]evoddphixwren_in;
  input [3:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtgrefclk_in;
  input [3:0]gthrxn_in;
  input [3:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [3:0]gtresetsel_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]lpbkrxtxseren_in;
  input [3:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [0:0]qpll0outclk_out;
  input [0:0]qpll0outrefclk_out;
  input [0:0]qpll1outclk_out;
  input [0:0]qpll1outrefclk_out;
  input [3:0]resetovrd_in;
  input [3:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [3:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxcommadeten_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [3:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [3:0]rxosinten_in;
  input [3:0]rxosinthold_in;
  input [3:0]rxosintovrden_in;
  input [3:0]rxosintstrobe_in;
  input [3:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [3:0]rxphovrden_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [3:0]rxprogdivreset_in;
  input [3:0]rxqpien_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [3:0]tx8b10ben_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [3:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [3:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [3:0]txpisopd_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [3:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [3:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [3:0]txqpibiasen_in;
  input [3:0]txqpistrongpdown_in;
  input [3:0]txqpiweakpup_in;
  input [3:0]txratemode_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  input [511:0]txdata_in;
  input [63:0]drpdi_in;
  input [63:0]gtrsvd_in;
  input [63:0]pcsrsvdin_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [7:0]rxdfeagcctrl_in;
  input [7:0]rxelecidlemode_in;
  input [7:0]rxmonitorsel_in;
  input [7:0]rxpd_in;
  input [7:0]rxpllclksel_in;
  input [7:0]rxsysclksel_in;
  input [7:0]txpd_in;
  input [7:0]txpllclksel_in;
  input [7:0]txsysclksel_in;
  input [11:0]cpllrefclksel_in;
  input [11:0]loopback_in;
  input [11:0]rxchbondlevel_in;
  input [11:0]rxoutclksel_in;
  input [11:0]rxrate_in;
  input [11:0]txbufdiffctrl_in;
  input [11:0]txmargin_in;
  input [11:0]txoutclksel_in;
  input [11:0]txrate_in;
  input [15:0]rxosintcfg_in;
  input [15:0]rxprbssel_in;
  input [15:0]txdiffctrl_in;
  input [15:0]txprbssel_in;
  input [19:0]pcsrsvdin2_in;
  input [19:0]pmarsvdin_in;
  input [19:0]rxchbondi_in;
  input [19:0]txpippmstepsize_in;
  input [19:0]txpostcursor_in;
  input [19:0]txprecursor_in;
  input [23:0]txheader_in;
  input [27:0]txmaincursor_in;
  input [27:0]txsequence_in;
  input [31:0]tx8b10bbypass_in;
  input [31:0]txctrl2_in;
  input [31:0]txdataextendrsvd_in;
  input [35:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [11:0]bufgtce_out;
  wire [11:0]bufgtcemask_out;
  wire [35:0]bufgtdiv_out;
  wire [11:0]bufgtreset_out;
  wire [11:0]bufgtrstmask_out;
  wire [3:0]cfgreset_in;
  wire [3:0]clkrsvd0_in;
  wire [3:0]clkrsvd1_in;
  wire [3:0]cpllfbclklost_out;
  wire [3:0]cplllock_out;
  wire [3:0]cplllockdetclk_in;
  wire [3:0]cplllocken_in;
  wire [3:0]cpllpd_in;
  wire [3:0]cpllrefclklost_out;
  wire [11:0]cpllrefclksel_in;
  wire [3:0]cpllreset_in;
  wire [3:0]dmonfiforeset_in;
  wire [3:0]dmonitorclk_in;
  wire [67:0]dmonitorout_out;
  wire [35:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]evoddphicaldone_in;
  wire [3:0]evoddphicalstart_in;
  wire [3:0]evoddphidrden_in;
  wire [3:0]evoddphidwren_in;
  wire [3:0]evoddphixrden_in;
  wire [3:0]evoddphixwren_in;
  wire [3:0]eyescandataerror_out;
  wire [3:0]eyescanmode_in;
  wire [3:0]eyescanreset_in;
  wire [3:0]eyescantrigger_in;
  wire [3:0]gtgrefclk_in;
  wire [3:0]gthrxn_in;
  wire [3:0]gthrxp_in;
  wire [3:0]gthtxn_out;
  wire [3:0]gthtxp_out;
  wire [3:0]gtnorthrefclk0_in;
  wire [3:0]gtnorthrefclk1_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [3:0]gtrefclk1_in;
  wire [3:0]gtrefclkmonitor_out;
  wire [3:0]gtresetsel_in;
  wire [63:0]gtrsvd_in;
  wire [3:0]gtrxreset_in;
  wire [3:0]gtsouthrefclk0_in;
  wire [3:0]gtsouthrefclk1_in;
  wire [3:0]gttxreset_in;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire [3:0]lpbkrxtxseren_in;
  wire [3:0]lpbktxrxseren_in;
  wire [3:0]pcieeqrxeqadaptdone_in;
  wire [3:0]pcierategen3_out;
  wire [3:0]pcierateidle_out;
  wire [7:0]pcierateqpllpd_out;
  wire [7:0]pcierateqpllreset_out;
  wire [3:0]pcierstidle_in;
  wire [3:0]pciersttxsyncstart_in;
  wire [3:0]pciesynctxsyncdone_out;
  wire [3:0]pcieusergen3rdy_out;
  wire [3:0]pcieuserphystatusrst_out;
  wire [3:0]pcieuserratedone_in;
  wire [3:0]pcieuserratestart_out;
  wire [19:0]pcsrsvdin2_in;
  wire [63:0]pcsrsvdin_in;
  wire [47:0]pcsrsvdout_out;
  wire [3:0]phystatus_out;
  wire [31:0]pinrsrvdas_out;
  wire [19:0]pmarsvdin_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [3:0]resetexception_out;
  wire [3:0]resetovrd_in;
  wire [3:0]rstclkentx_in;
  wire [3:0]rx8b10ben_in;
  wire [3:0]rxbufreset_in;
  wire [11:0]rxbufstatus_out;
  wire [3:0]rxbyteisaligned_out;
  wire [3:0]rxbyterealign_out;
  wire [3:0]rxcdrfreqreset_in;
  wire [3:0]rxcdrhold_in;
  wire [3:0]rxcdrlock_out;
  wire [3:0]rxcdrovrden_in;
  wire [3:0]rxcdrphdone_out;
  wire [3:0]rxcdrreset_in;
  wire [3:0]rxcdrresetrsv_in;
  wire [3:0]rxchanbondseq_out;
  wire [3:0]rxchanisaligned_out;
  wire [3:0]rxchanrealign_out;
  wire [3:0]rxchbonden_in;
  wire [19:0]rxchbondi_in;
  wire [11:0]rxchbondlevel_in;
  wire [3:0]rxchbondmaster_in;
  wire [19:0]rxchbondo_out;
  wire [3:0]rxchbondslave_in;
  wire [7:0]rxclkcorcnt_out;
  wire [3:0]rxcominitdet_out;
  wire [3:0]rxcommadet_out;
  wire [3:0]rxcommadeten_in;
  wire [3:0]rxcomsasdet_out;
  wire [3:0]rxcomwakedet_out;
  wire [63:0]rxctrl0_out;
  wire [63:0]rxctrl1_out;
  wire [31:0]rxctrl2_out;
  wire [31:0]rxctrl3_out;
  wire [511:0]rxdata_out;
  wire [31:0]rxdataextendrsvd_out;
  wire [7:0]rxdatavalid_out;
  wire [7:0]rxdfeagcctrl_in;
  wire [3:0]rxdfeagchold_in;
  wire [3:0]rxdfeagcovrden_in;
  wire [3:0]rxdfelfhold_in;
  wire [3:0]rxdfelfovrden_in;
  wire [3:0]rxdfelpmreset_in;
  wire [3:0]rxdfetap10hold_in;
  wire [3:0]rxdfetap10ovrden_in;
  wire [3:0]rxdfetap11hold_in;
  wire [3:0]rxdfetap11ovrden_in;
  wire [3:0]rxdfetap12hold_in;
  wire [3:0]rxdfetap12ovrden_in;
  wire [3:0]rxdfetap13hold_in;
  wire [3:0]rxdfetap13ovrden_in;
  wire [3:0]rxdfetap14hold_in;
  wire [3:0]rxdfetap14ovrden_in;
  wire [3:0]rxdfetap15hold_in;
  wire [3:0]rxdfetap15ovrden_in;
  wire [3:0]rxdfetap2hold_in;
  wire [3:0]rxdfetap2ovrden_in;
  wire [3:0]rxdfetap3hold_in;
  wire [3:0]rxdfetap3ovrden_in;
  wire [3:0]rxdfetap4hold_in;
  wire [3:0]rxdfetap4ovrden_in;
  wire [3:0]rxdfetap5hold_in;
  wire [3:0]rxdfetap5ovrden_in;
  wire [3:0]rxdfetap6hold_in;
  wire [3:0]rxdfetap6ovrden_in;
  wire [3:0]rxdfetap7hold_in;
  wire [3:0]rxdfetap7ovrden_in;
  wire [3:0]rxdfetap8hold_in;
  wire [3:0]rxdfetap8ovrden_in;
  wire [3:0]rxdfetap9hold_in;
  wire [3:0]rxdfetap9ovrden_in;
  wire [3:0]rxdfeuthold_in;
  wire [3:0]rxdfeutovrden_in;
  wire [3:0]rxdfevphold_in;
  wire [3:0]rxdfevpovrden_in;
  wire [3:0]rxdfevsen_in;
  wire [3:0]rxdfexyden_in;
  wire [3:0]rxdlybypass_in;
  wire [3:0]rxdlyen_in;
  wire [3:0]rxdlyovrden_in;
  wire [3:0]rxdlysreset_in;
  wire [3:0]rxdlysresetdone_out;
  wire [3:0]rxelecidle_out;
  wire [7:0]rxelecidlemode_in;
  wire [3:0]rxgearboxslip_in;
  wire [23:0]rxheader_out;
  wire [7:0]rxheadervalid_out;
  wire [3:0]rxlatclk_in;
  wire [3:0]rxlpmen_in;
  wire [3:0]rxlpmgchold_in;
  wire [3:0]rxlpmgcovrden_in;
  wire [3:0]rxlpmhfhold_in;
  wire [3:0]rxlpmhfovrden_in;
  wire [3:0]rxlpmlfhold_in;
  wire [3:0]rxlpmlfklovrden_in;
  wire [3:0]rxlpmoshold_in;
  wire [3:0]rxlpmosovrden_in;
  wire [3:0]rxmcommaalignen_in;
  wire [27:0]rxmonitorout_out;
  wire [7:0]rxmonitorsel_in;
  wire [3:0]rxoobreset_in;
  wire [3:0]rxoscalreset_in;
  wire [3:0]rxoshold_in;
  wire [15:0]rxosintcfg_in;
  wire [3:0]rxosintdone_out;
  wire [3:0]rxosinten_in;
  wire [3:0]rxosinthold_in;
  wire [3:0]rxosintovrden_in;
  wire [3:0]rxosintstarted_out;
  wire [3:0]rxosintstrobe_in;
  wire [3:0]rxosintstrobedone_out;
  wire [3:0]rxosintstrobestarted_out;
  wire [3:0]rxosinttestovrden_in;
  wire [3:0]rxosovrden_in;
  wire [3:0]rxoutclk_out;
  wire [3:0]rxoutclkfabric_out;
  wire [3:0]rxoutclkpcs_out;
  wire [11:0]rxoutclksel_in;
  wire [3:0]rxpcommaalignen_in;
  wire [3:0]rxpcsreset_in;
  wire [7:0]rxpd_in;
  wire [3:0]rxphalign_in;
  wire [3:0]rxphaligndone_out;
  wire [3:0]rxphalignen_in;
  wire [3:0]rxphalignerr_out;
  wire [3:0]rxphdlypd_in;
  wire [3:0]rxphdlyreset_in;
  wire [3:0]rxphovrden_in;
  wire [7:0]rxpllclksel_in;
  wire [3:0]rxpmareset_in;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxprbscntreset_in;
  wire [3:0]rxprbserr_out;
  wire [3:0]rxprbslocked_out;
  wire [15:0]rxprbssel_in;
  wire [3:0]rxprgdivresetdone_out;
  wire [3:0]rxprogdivreset_in;
  wire [3:0]rxqpien_in;
  wire [3:0]rxqpisenn_out;
  wire [3:0]rxqpisenp_out;
  wire [11:0]rxrate_in;
  wire [3:0]rxratedone_out;
  wire [3:0]rxratemode_in;
  wire [3:0]rxrecclkout_out;
  wire [3:0]rxresetdone_out;
  wire [3:0]rxslide_in;
  wire [3:0]rxsliderdy_out;
  wire [3:0]rxslipdone_out;
  wire [3:0]rxslipoutclk_in;
  wire [3:0]rxslipoutclkrdy_out;
  wire [3:0]rxslippma_in;
  wire [3:0]rxslippmardy_out;
  wire [7:0]rxstartofseq_out;
  wire [11:0]rxstatus_out;
  wire [3:0]rxsyncallin_in;
  wire [3:0]rxsyncdone_out;
  wire [3:0]rxsyncin_in;
  wire [3:0]rxsyncmode_in;
  wire [3:0]rxsyncout_out;
  wire [7:0]rxsysclksel_in;
  wire [3:0]rxuserrdy_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [3:0]rxvalid_out;
  wire [3:0]sigvalidclk_in;
  wire [31:0]tx8b10bbypass_in;
  wire [3:0]tx8b10ben_in;
  wire [11:0]txbufdiffctrl_in;
  wire [7:0]txbufstatus_out;
  wire [3:0]txcomfinish_out;
  wire [3:0]txcominit_in;
  wire [3:0]txcomsas_in;
  wire [3:0]txcomwake_in;
  wire [63:0]txctrl0_in;
  wire [63:0]txctrl1_in;
  wire [31:0]txctrl2_in;
  wire [511:0]txdata_in;
  wire [31:0]txdataextendrsvd_in;
  wire [3:0]txdeemph_in;
  wire [3:0]txdetectrx_in;
  wire [15:0]txdiffctrl_in;
  wire [3:0]txdiffpd_in;
  wire [3:0]txdlybypass_in;
  wire [3:0]txdlyen_in;
  wire [3:0]txdlyhold_in;
  wire [3:0]txdlyovrden_in;
  wire [3:0]txdlysreset_in;
  wire [3:0]txdlysresetdone_out;
  wire [3:0]txdlyupdown_in;
  wire [3:0]txelecidle_in;
  wire [23:0]txheader_in;
  wire [3:0]txinhibit_in;
  wire [3:0]txlatclk_in;
  wire [27:0]txmaincursor_in;
  wire [11:0]txmargin_in;
  wire [3:0]txoutclk_out;
  wire [3:0]txoutclkfabric_out;
  wire [3:0]txoutclkpcs_out;
  wire [11:0]txoutclksel_in;
  wire [3:0]txpcsreset_in;
  wire [7:0]txpd_in;
  wire [3:0]txpdelecidlemode_in;
  wire [3:0]txphalign_in;
  wire [3:0]txphaligndone_out;
  wire [3:0]txphalignen_in;
  wire [3:0]txphdlypd_in;
  wire [3:0]txphdlyreset_in;
  wire [3:0]txphdlytstclk_in;
  wire [3:0]txphinit_in;
  wire [3:0]txphinitdone_out;
  wire [3:0]txphovrden_in;
  wire [3:0]txpippmen_in;
  wire [3:0]txpippmovrden_in;
  wire [3:0]txpippmpd_in;
  wire [3:0]txpippmsel_in;
  wire [19:0]txpippmstepsize_in;
  wire [3:0]txpisopd_in;
  wire [7:0]txpllclksel_in;
  wire [3:0]txpmareset_in;
  wire [3:0]txpmaresetdone_out;
  wire [3:0]txpolarity_in;
  wire [19:0]txpostcursor_in;
  wire [3:0]txpostcursorinv_in;
  wire [3:0]txprbsforceerr_in;
  wire [15:0]txprbssel_in;
  wire [19:0]txprecursor_in;
  wire [3:0]txprecursorinv_in;
  wire [3:0]txprgdivresetdone_out;
  wire [3:0]txprogdivreset_in;
  wire [3:0]txqpibiasen_in;
  wire [3:0]txqpisenn_out;
  wire [3:0]txqpisenp_out;
  wire [3:0]txqpistrongpdown_in;
  wire [3:0]txqpiweakpup_in;
  wire [11:0]txrate_in;
  wire [3:0]txratedone_out;
  wire [3:0]txratemode_in;
  wire [3:0]txresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txswing_in;
  wire [3:0]txsyncallin_in;
  wire [3:0]txsyncdone_out;
  wire [3:0]txsyncin_in;
  wire [3:0]txsyncmode_in;
  wire [3:0]txsyncout_out;
  wire [7:0]txsysclksel_in;
  wire [3:0]txuserrdy_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;

  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(txoutclk_out[3]),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[2:0]),
        .BUFGTCEMASK(bufgtcemask_out[2:0]),
        .BUFGTDIV(bufgtdiv_out[8:0]),
        .BUFGTRESET(bufgtreset_out[2:0]),
        .BUFGTRSTMASK(bufgtrstmask_out[2:0]),
        .CFGRESET(cfgreset_in[0]),
        .CLKRSVD0(clkrsvd0_in[0]),
        .CLKRSVD1(clkrsvd1_in[0]),
        .CPLLFBCLKLOST(cpllfbclklost_out[0]),
        .CPLLLOCK(cplllock_out[0]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[0]),
        .CPLLLOCKEN(cplllocken_in[0]),
        .CPLLPD(cpllpd_in[0]),
        .CPLLREFCLKLOST(cpllrefclklost_out[0]),
        .CPLLREFCLKSEL(cpllrefclksel_in[2:0]),
        .CPLLRESET(cpllreset_in[0]),
        .DMONFIFORESET(dmonfiforeset_in[0]),
        .DMONITORCLK(dmonitorclk_in[0]),
        .DMONITOROUT(dmonitorout_out[16:0]),
        .DRPADDR(drpaddr_in[8:0]),
        .DRPCLK(drpclk_in[0]),
        .DRPDI(drpdi_in[15:0]),
        .DRPDO(drpdo_out[15:0]),
        .DRPEN(drpen_in[0]),
        .DRPRDY(drprdy_out[0]),
        .DRPWE(drpwe_in[0]),
        .EVODDPHICALDONE(evoddphicaldone_in[0]),
        .EVODDPHICALSTART(evoddphicalstart_in[0]),
        .EVODDPHIDRDEN(evoddphidrden_in[0]),
        .EVODDPHIDWREN(evoddphidwren_in[0]),
        .EVODDPHIXRDEN(evoddphixrden_in[0]),
        .EVODDPHIXWREN(evoddphixwren_in[0]),
        .EYESCANDATAERROR(eyescandataerror_out[0]),
        .EYESCANMODE(eyescanmode_in[0]),
        .EYESCANRESET(eyescanreset_in[0]),
        .EYESCANTRIGGER(eyescantrigger_in[0]),
        .GTGREFCLK(gtgrefclk_in[0]),
        .GTHRXN(gthrxn_in[0]),
        .GTHRXP(gthrxp_in[0]),
        .GTHTXN(gthtxn_out[0]),
        .GTHTXP(gthtxp_out[0]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[0]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[0]),
        .GTPOWERGOOD(gtpowergood_out[0]),
        .GTREFCLK0(gtrefclk0_in[0]),
        .GTREFCLK1(gtrefclk1_in[0]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[0]),
        .GTRESETSEL(gtresetsel_in[0]),
        .GTRSVD(gtrsvd_in[15:0]),
        .GTRXRESET(gtrxreset_in[0]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[0]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[0]),
        .GTTXRESET(gttxreset_in[0]),
        .LOOPBACK(loopback_in[2:0]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[0]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[0]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[0]),
        .PCIERATEGEN3(pcierategen3_out[0]),
        .PCIERATEIDLE(pcierateidle_out[0]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[1:0]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[1:0]),
        .PCIERSTIDLE(pcierstidle_in[0]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[0]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[0]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[0]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[0]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[0]),
        .PCIEUSERRATESTART(pcieuserratestart_out[0]),
        .PCSRSVDIN(pcsrsvdin_in[15:0]),
        .PCSRSVDIN2(pcsrsvdin2_in[4:0]),
        .PCSRSVDOUT(pcsrsvdout_out[11:0]),
        .PHYSTATUS(phystatus_out[0]),
        .PINRSRVDAS(pinrsrvdas_out[7:0]),
        .PMARSVDIN(pmarsvdin_in[4:0]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[0]),
        .RESETOVRD(resetovrd_in[0]),
        .RSTCLKENTX(rstclkentx_in[0]),
        .RX8B10BEN(rx8b10ben_in[0]),
        .RXBUFRESET(rxbufreset_in[0]),
        .RXBUFSTATUS(rxbufstatus_out[2:0]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[0]),
        .RXBYTEREALIGN(rxbyterealign_out[0]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[0]),
        .RXCDRHOLD(rxcdrhold_in[0]),
        .RXCDRLOCK(rxcdrlock_out[0]),
        .RXCDROVRDEN(rxcdrovrden_in[0]),
        .RXCDRPHDONE(rxcdrphdone_out[0]),
        .RXCDRRESET(rxcdrreset_in[0]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[0]),
        .RXCHANBONDSEQ(rxchanbondseq_out[0]),
        .RXCHANISALIGNED(rxchanisaligned_out[0]),
        .RXCHANREALIGN(rxchanrealign_out[0]),
        .RXCHBONDEN(rxchbonden_in[0]),
        .RXCHBONDI(rxchbondi_in[4:0]),
        .RXCHBONDLEVEL(rxchbondlevel_in[2:0]),
        .RXCHBONDMASTER(rxchbondmaster_in[0]),
        .RXCHBONDO(rxchbondo_out[4:0]),
        .RXCHBONDSLAVE(rxchbondslave_in[0]),
        .RXCLKCORCNT(rxclkcorcnt_out[1:0]),
        .RXCOMINITDET(rxcominitdet_out[0]),
        .RXCOMMADET(rxcommadet_out[0]),
        .RXCOMMADETEN(rxcommadeten_in[0]),
        .RXCOMSASDET(rxcomsasdet_out[0]),
        .RXCOMWAKEDET(rxcomwakedet_out[0]),
        .RXCTRL0(rxctrl0_out[15:0]),
        .RXCTRL1(rxctrl1_out[15:0]),
        .RXCTRL2(rxctrl2_out[7:0]),
        .RXCTRL3(rxctrl3_out[7:0]),
        .RXDATA(rxdata_out[127:0]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[7:0]),
        .RXDATAVALID(rxdatavalid_out[1:0]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[1:0]),
        .RXDFEAGCHOLD(rxdfeagchold_in[0]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[0]),
        .RXDFELFHOLD(rxdfelfhold_in[0]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[0]),
        .RXDFELPMRESET(rxdfelpmreset_in[0]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[0]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[0]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[0]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[0]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[0]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[0]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[0]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[0]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[0]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[0]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[0]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[0]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[0]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[0]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[0]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[0]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[0]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[0]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[0]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[0]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[0]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[0]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[0]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[0]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[0]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[0]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[0]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[0]),
        .RXDFEUTHOLD(rxdfeuthold_in[0]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[0]),
        .RXDFEVPHOLD(rxdfevphold_in[0]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[0]),
        .RXDFEVSEN(rxdfevsen_in[0]),
        .RXDFEXYDEN(rxdfexyden_in[0]),
        .RXDLYBYPASS(rxdlybypass_in[0]),
        .RXDLYEN(rxdlyen_in[0]),
        .RXDLYOVRDEN(rxdlyovrden_in[0]),
        .RXDLYSRESET(rxdlysreset_in[0]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[0]),
        .RXELECIDLE(rxelecidle_out[0]),
        .RXELECIDLEMODE(rxelecidlemode_in[1:0]),
        .RXGEARBOXSLIP(rxgearboxslip_in[0]),
        .RXHEADER(rxheader_out[5:0]),
        .RXHEADERVALID(rxheadervalid_out[1:0]),
        .RXLATCLK(rxlatclk_in[0]),
        .RXLPMEN(rxlpmen_in[0]),
        .RXLPMGCHOLD(rxlpmgchold_in[0]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[0]),
        .RXLPMHFHOLD(rxlpmhfhold_in[0]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[0]),
        .RXLPMLFHOLD(rxlpmlfhold_in[0]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[0]),
        .RXLPMOSHOLD(rxlpmoshold_in[0]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[0]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[0]),
        .RXMONITOROUT(rxmonitorout_out[6:0]),
        .RXMONITORSEL(rxmonitorsel_in[1:0]),
        .RXOOBRESET(rxoobreset_in[0]),
        .RXOSCALRESET(rxoscalreset_in[0]),
        .RXOSHOLD(rxoshold_in[0]),
        .RXOSINTCFG(rxosintcfg_in[3:0]),
        .RXOSINTDONE(rxosintdone_out[0]),
        .RXOSINTEN(rxosinten_in[0]),
        .RXOSINTHOLD(rxosinthold_in[0]),
        .RXOSINTOVRDEN(rxosintovrden_in[0]),
        .RXOSINTSTARTED(rxosintstarted_out[0]),
        .RXOSINTSTROBE(rxosintstrobe_in[0]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[0]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[0]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[0]),
        .RXOSOVRDEN(rxosovrden_in[0]),
        .RXOUTCLK(rxoutclk_out[0]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[0]),
        .RXOUTCLKPCS(rxoutclkpcs_out[0]),
        .RXOUTCLKSEL(rxoutclksel_in[2:0]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[0]),
        .RXPCSRESET(rxpcsreset_in[0]),
        .RXPD(rxpd_in[1:0]),
        .RXPHALIGN(rxphalign_in[0]),
        .RXPHALIGNDONE(rxphaligndone_out[0]),
        .RXPHALIGNEN(rxphalignen_in[0]),
        .RXPHALIGNERR(rxphalignerr_out[0]),
        .RXPHDLYPD(rxphdlypd_in[0]),
        .RXPHDLYRESET(rxphdlyreset_in[0]),
        .RXPHOVRDEN(rxphovrden_in[0]),
        .RXPLLCLKSEL(rxpllclksel_in[1:0]),
        .RXPMARESET(rxpmareset_in[0]),
        .RXPMARESETDONE(rxpmaresetdone_out[0]),
        .RXPOLARITY(rxpolarity_in[0]),
        .RXPRBSCNTRESET(rxprbscntreset_in[0]),
        .RXPRBSERR(rxprbserr_out[0]),
        .RXPRBSLOCKED(rxprbslocked_out[0]),
        .RXPRBSSEL(rxprbssel_in[3:0]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[0]),
        .RXPROGDIVRESET(rxprogdivreset_in[0]),
        .RXQPIEN(rxqpien_in[0]),
        .RXQPISENN(rxqpisenn_out[0]),
        .RXQPISENP(rxqpisenp_out[0]),
        .RXRATE(rxrate_in[2:0]),
        .RXRATEDONE(rxratedone_out[0]),
        .RXRATEMODE(rxratemode_in[0]),
        .RXRECCLKOUT(rxrecclkout_out[0]),
        .RXRESETDONE(rxresetdone_out[0]),
        .RXSLIDE(rxslide_in[0]),
        .RXSLIDERDY(rxsliderdy_out[0]),
        .RXSLIPDONE(rxslipdone_out[0]),
        .RXSLIPOUTCLK(rxslipoutclk_in[0]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[0]),
        .RXSLIPPMA(rxslippma_in[0]),
        .RXSLIPPMARDY(rxslippmardy_out[0]),
        .RXSTARTOFSEQ(rxstartofseq_out[1:0]),
        .RXSTATUS(rxstatus_out[2:0]),
        .RXSYNCALLIN(rxsyncallin_in[0]),
        .RXSYNCDONE(rxsyncdone_out[0]),
        .RXSYNCIN(rxsyncin_in[0]),
        .RXSYNCMODE(rxsyncmode_in[0]),
        .RXSYNCOUT(rxsyncout_out[0]),
        .RXSYSCLKSEL(rxsysclksel_in[1:0]),
        .RXUSERRDY(rxuserrdy_in[0]),
        .RXUSRCLK(rxusrclk_in[0]),
        .RXUSRCLK2(rxusrclk2_in[0]),
        .RXVALID(rxvalid_out[0]),
        .SIGVALIDCLK(sigvalidclk_in[0]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[7:0]),
        .TX8B10BEN(tx8b10ben_in[0]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[2:0]),
        .TXBUFSTATUS(txbufstatus_out[1:0]),
        .TXCOMFINISH(txcomfinish_out[0]),
        .TXCOMINIT(txcominit_in[0]),
        .TXCOMSAS(txcomsas_in[0]),
        .TXCOMWAKE(txcomwake_in[0]),
        .TXCTRL0(txctrl0_in[15:0]),
        .TXCTRL1(txctrl1_in[15:0]),
        .TXCTRL2(txctrl2_in[7:0]),
        .TXDATA(txdata_in[127:0]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[7:0]),
        .TXDEEMPH(txdeemph_in[0]),
        .TXDETECTRX(txdetectrx_in[0]),
        .TXDIFFCTRL(txdiffctrl_in[3:0]),
        .TXDIFFPD(txdiffpd_in[0]),
        .TXDLYBYPASS(txdlybypass_in[0]),
        .TXDLYEN(txdlyen_in[0]),
        .TXDLYHOLD(txdlyhold_in[0]),
        .TXDLYOVRDEN(txdlyovrden_in[0]),
        .TXDLYSRESET(txdlysreset_in[0]),
        .TXDLYSRESETDONE(txdlysresetdone_out[0]),
        .TXDLYUPDOWN(txdlyupdown_in[0]),
        .TXELECIDLE(txelecidle_in[0]),
        .TXHEADER(txheader_in[5:0]),
        .TXINHIBIT(txinhibit_in[0]),
        .TXLATCLK(txlatclk_in[0]),
        .TXMAINCURSOR(txmaincursor_in[6:0]),
        .TXMARGIN(txmargin_in[2:0]),
        .TXOUTCLK(txoutclk_out[0]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[0]),
        .TXOUTCLKPCS(txoutclkpcs_out[0]),
        .TXOUTCLKSEL(txoutclksel_in[2:0]),
        .TXPCSRESET(txpcsreset_in[0]),
        .TXPD(txpd_in[1:0]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[0]),
        .TXPHALIGN(txphalign_in[0]),
        .TXPHALIGNDONE(txphaligndone_out[0]),
        .TXPHALIGNEN(txphalignen_in[0]),
        .TXPHDLYPD(txphdlypd_in[0]),
        .TXPHDLYRESET(txphdlyreset_in[0]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[0]),
        .TXPHINIT(txphinit_in[0]),
        .TXPHINITDONE(txphinitdone_out[0]),
        .TXPHOVRDEN(txphovrden_in[0]),
        .TXPIPPMEN(txpippmen_in[0]),
        .TXPIPPMOVRDEN(txpippmovrden_in[0]),
        .TXPIPPMPD(txpippmpd_in[0]),
        .TXPIPPMSEL(txpippmsel_in[0]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[4:0]),
        .TXPISOPD(txpisopd_in[0]),
        .TXPLLCLKSEL(txpllclksel_in[1:0]),
        .TXPMARESET(txpmareset_in[0]),
        .TXPMARESETDONE(txpmaresetdone_out[0]),
        .TXPOLARITY(txpolarity_in[0]),
        .TXPOSTCURSOR(txpostcursor_in[4:0]),
        .TXPOSTCURSORINV(txpostcursorinv_in[0]),
        .TXPRBSFORCEERR(txprbsforceerr_in[0]),
        .TXPRBSSEL(txprbssel_in[3:0]),
        .TXPRECURSOR(txprecursor_in[4:0]),
        .TXPRECURSORINV(txprecursorinv_in[0]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[0]),
        .TXPROGDIVRESET(txprogdivreset_in[0]),
        .TXQPIBIASEN(txqpibiasen_in[0]),
        .TXQPISENN(txqpisenn_out[0]),
        .TXQPISENP(txqpisenp_out[0]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[0]),
        .TXQPIWEAKPUP(txqpiweakpup_in[0]),
        .TXRATE(txrate_in[2:0]),
        .TXRATEDONE(txratedone_out[0]),
        .TXRATEMODE(txratemode_in[0]),
        .TXRESETDONE(txresetdone_out[0]),
        .TXSEQUENCE(txsequence_in[6:0]),
        .TXSWING(txswing_in[0]),
        .TXSYNCALLIN(txsyncallin_in[0]),
        .TXSYNCDONE(txsyncdone_out[0]),
        .TXSYNCIN(txsyncin_in[0]),
        .TXSYNCMODE(txsyncmode_in[0]),
        .TXSYNCOUT(txsyncout_out[0]),
        .TXSYSCLKSEL(txsysclksel_in[1:0]),
        .TXUSERRDY(txuserrdy_in[0]),
        .TXUSRCLK(txusrclk_in[0]),
        .TXUSRCLK2(txusrclk2_in[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[1].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[5:3]),
        .BUFGTCEMASK(bufgtcemask_out[5:3]),
        .BUFGTDIV(bufgtdiv_out[17:9]),
        .BUFGTRESET(bufgtreset_out[5:3]),
        .BUFGTRSTMASK(bufgtrstmask_out[5:3]),
        .CFGRESET(cfgreset_in[1]),
        .CLKRSVD0(clkrsvd0_in[1]),
        .CLKRSVD1(clkrsvd1_in[1]),
        .CPLLFBCLKLOST(cpllfbclklost_out[1]),
        .CPLLLOCK(cplllock_out[1]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[1]),
        .CPLLLOCKEN(cplllocken_in[1]),
        .CPLLPD(cpllpd_in[1]),
        .CPLLREFCLKLOST(cpllrefclklost_out[1]),
        .CPLLREFCLKSEL(cpllrefclksel_in[5:3]),
        .CPLLRESET(cpllreset_in[1]),
        .DMONFIFORESET(dmonfiforeset_in[1]),
        .DMONITORCLK(dmonitorclk_in[1]),
        .DMONITOROUT(dmonitorout_out[33:17]),
        .DRPADDR(drpaddr_in[17:9]),
        .DRPCLK(drpclk_in[1]),
        .DRPDI(drpdi_in[31:16]),
        .DRPDO(drpdo_out[31:16]),
        .DRPEN(drpen_in[1]),
        .DRPRDY(drprdy_out[1]),
        .DRPWE(drpwe_in[1]),
        .EVODDPHICALDONE(evoddphicaldone_in[1]),
        .EVODDPHICALSTART(evoddphicalstart_in[1]),
        .EVODDPHIDRDEN(evoddphidrden_in[1]),
        .EVODDPHIDWREN(evoddphidwren_in[1]),
        .EVODDPHIXRDEN(evoddphixrden_in[1]),
        .EVODDPHIXWREN(evoddphixwren_in[1]),
        .EYESCANDATAERROR(eyescandataerror_out[1]),
        .EYESCANMODE(eyescanmode_in[1]),
        .EYESCANRESET(eyescanreset_in[1]),
        .EYESCANTRIGGER(eyescantrigger_in[1]),
        .GTGREFCLK(gtgrefclk_in[1]),
        .GTHRXN(gthrxn_in[1]),
        .GTHRXP(gthrxp_in[1]),
        .GTHTXN(gthtxn_out[1]),
        .GTHTXP(gthtxp_out[1]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[1]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[1]),
        .GTPOWERGOOD(gtpowergood_out[1]),
        .GTREFCLK0(gtrefclk0_in[1]),
        .GTREFCLK1(gtrefclk1_in[1]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[1]),
        .GTRESETSEL(gtresetsel_in[1]),
        .GTRSVD(gtrsvd_in[31:16]),
        .GTRXRESET(gtrxreset_in[1]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[1]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[1]),
        .GTTXRESET(gttxreset_in[1]),
        .LOOPBACK(loopback_in[5:3]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[1]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[1]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[1]),
        .PCIERATEGEN3(pcierategen3_out[1]),
        .PCIERATEIDLE(pcierateidle_out[1]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[3:2]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[3:2]),
        .PCIERSTIDLE(pcierstidle_in[1]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[1]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[1]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[1]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[1]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[1]),
        .PCIEUSERRATESTART(pcieuserratestart_out[1]),
        .PCSRSVDIN(pcsrsvdin_in[31:16]),
        .PCSRSVDIN2(pcsrsvdin2_in[9:5]),
        .PCSRSVDOUT(pcsrsvdout_out[23:12]),
        .PHYSTATUS(phystatus_out[1]),
        .PINRSRVDAS(pinrsrvdas_out[15:8]),
        .PMARSVDIN(pmarsvdin_in[9:5]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[1]),
        .RESETOVRD(resetovrd_in[1]),
        .RSTCLKENTX(rstclkentx_in[1]),
        .RX8B10BEN(rx8b10ben_in[1]),
        .RXBUFRESET(rxbufreset_in[1]),
        .RXBUFSTATUS(rxbufstatus_out[5:3]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[1]),
        .RXBYTEREALIGN(rxbyterealign_out[1]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[1]),
        .RXCDRHOLD(rxcdrhold_in[1]),
        .RXCDRLOCK(rxcdrlock_out[1]),
        .RXCDROVRDEN(rxcdrovrden_in[1]),
        .RXCDRPHDONE(rxcdrphdone_out[1]),
        .RXCDRRESET(rxcdrreset_in[1]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[1]),
        .RXCHANBONDSEQ(rxchanbondseq_out[1]),
        .RXCHANISALIGNED(rxchanisaligned_out[1]),
        .RXCHANREALIGN(rxchanrealign_out[1]),
        .RXCHBONDEN(rxchbonden_in[1]),
        .RXCHBONDI(rxchbondi_in[9:5]),
        .RXCHBONDLEVEL(rxchbondlevel_in[5:3]),
        .RXCHBONDMASTER(rxchbondmaster_in[1]),
        .RXCHBONDO(rxchbondo_out[9:5]),
        .RXCHBONDSLAVE(rxchbondslave_in[1]),
        .RXCLKCORCNT(rxclkcorcnt_out[3:2]),
        .RXCOMINITDET(rxcominitdet_out[1]),
        .RXCOMMADET(rxcommadet_out[1]),
        .RXCOMMADETEN(rxcommadeten_in[1]),
        .RXCOMSASDET(rxcomsasdet_out[1]),
        .RXCOMWAKEDET(rxcomwakedet_out[1]),
        .RXCTRL0(rxctrl0_out[31:16]),
        .RXCTRL1(rxctrl1_out[31:16]),
        .RXCTRL2(rxctrl2_out[15:8]),
        .RXCTRL3(rxctrl3_out[15:8]),
        .RXDATA(rxdata_out[255:128]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[15:8]),
        .RXDATAVALID(rxdatavalid_out[3:2]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[3:2]),
        .RXDFEAGCHOLD(rxdfeagchold_in[1]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[1]),
        .RXDFELFHOLD(rxdfelfhold_in[1]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[1]),
        .RXDFELPMRESET(rxdfelpmreset_in[1]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[1]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[1]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[1]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[1]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[1]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[1]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[1]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[1]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[1]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[1]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[1]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[1]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[1]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[1]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[1]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[1]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[1]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[1]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[1]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[1]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[1]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[1]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[1]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[1]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[1]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[1]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[1]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[1]),
        .RXDFEUTHOLD(rxdfeuthold_in[1]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[1]),
        .RXDFEVPHOLD(rxdfevphold_in[1]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[1]),
        .RXDFEVSEN(rxdfevsen_in[1]),
        .RXDFEXYDEN(rxdfexyden_in[1]),
        .RXDLYBYPASS(rxdlybypass_in[1]),
        .RXDLYEN(rxdlyen_in[1]),
        .RXDLYOVRDEN(rxdlyovrden_in[1]),
        .RXDLYSRESET(rxdlysreset_in[1]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[1]),
        .RXELECIDLE(rxelecidle_out[1]),
        .RXELECIDLEMODE(rxelecidlemode_in[3:2]),
        .RXGEARBOXSLIP(rxgearboxslip_in[1]),
        .RXHEADER(rxheader_out[11:6]),
        .RXHEADERVALID(rxheadervalid_out[3:2]),
        .RXLATCLK(rxlatclk_in[1]),
        .RXLPMEN(rxlpmen_in[1]),
        .RXLPMGCHOLD(rxlpmgchold_in[1]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[1]),
        .RXLPMHFHOLD(rxlpmhfhold_in[1]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[1]),
        .RXLPMLFHOLD(rxlpmlfhold_in[1]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[1]),
        .RXLPMOSHOLD(rxlpmoshold_in[1]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[1]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[1]),
        .RXMONITOROUT(rxmonitorout_out[13:7]),
        .RXMONITORSEL(rxmonitorsel_in[3:2]),
        .RXOOBRESET(rxoobreset_in[1]),
        .RXOSCALRESET(rxoscalreset_in[1]),
        .RXOSHOLD(rxoshold_in[1]),
        .RXOSINTCFG(rxosintcfg_in[7:4]),
        .RXOSINTDONE(rxosintdone_out[1]),
        .RXOSINTEN(rxosinten_in[1]),
        .RXOSINTHOLD(rxosinthold_in[1]),
        .RXOSINTOVRDEN(rxosintovrden_in[1]),
        .RXOSINTSTARTED(rxosintstarted_out[1]),
        .RXOSINTSTROBE(rxosintstrobe_in[1]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[1]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[1]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[1]),
        .RXOSOVRDEN(rxosovrden_in[1]),
        .RXOUTCLK(rxoutclk_out[1]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[1]),
        .RXOUTCLKPCS(rxoutclkpcs_out[1]),
        .RXOUTCLKSEL(rxoutclksel_in[5:3]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[1]),
        .RXPCSRESET(rxpcsreset_in[1]),
        .RXPD(rxpd_in[3:2]),
        .RXPHALIGN(rxphalign_in[1]),
        .RXPHALIGNDONE(rxphaligndone_out[1]),
        .RXPHALIGNEN(rxphalignen_in[1]),
        .RXPHALIGNERR(rxphalignerr_out[1]),
        .RXPHDLYPD(rxphdlypd_in[1]),
        .RXPHDLYRESET(rxphdlyreset_in[1]),
        .RXPHOVRDEN(rxphovrden_in[1]),
        .RXPLLCLKSEL(rxpllclksel_in[3:2]),
        .RXPMARESET(rxpmareset_in[1]),
        .RXPMARESETDONE(rxpmaresetdone_out[1]),
        .RXPOLARITY(rxpolarity_in[1]),
        .RXPRBSCNTRESET(rxprbscntreset_in[1]),
        .RXPRBSERR(rxprbserr_out[1]),
        .RXPRBSLOCKED(rxprbslocked_out[1]),
        .RXPRBSSEL(rxprbssel_in[7:4]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[1]),
        .RXPROGDIVRESET(rxprogdivreset_in[1]),
        .RXQPIEN(rxqpien_in[1]),
        .RXQPISENN(rxqpisenn_out[1]),
        .RXQPISENP(rxqpisenp_out[1]),
        .RXRATE(rxrate_in[5:3]),
        .RXRATEDONE(rxratedone_out[1]),
        .RXRATEMODE(rxratemode_in[1]),
        .RXRECCLKOUT(rxrecclkout_out[1]),
        .RXRESETDONE(rxresetdone_out[1]),
        .RXSLIDE(rxslide_in[1]),
        .RXSLIDERDY(rxsliderdy_out[1]),
        .RXSLIPDONE(rxslipdone_out[1]),
        .RXSLIPOUTCLK(rxslipoutclk_in[1]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[1]),
        .RXSLIPPMA(rxslippma_in[1]),
        .RXSLIPPMARDY(rxslippmardy_out[1]),
        .RXSTARTOFSEQ(rxstartofseq_out[3:2]),
        .RXSTATUS(rxstatus_out[5:3]),
        .RXSYNCALLIN(rxsyncallin_in[1]),
        .RXSYNCDONE(rxsyncdone_out[1]),
        .RXSYNCIN(rxsyncin_in[1]),
        .RXSYNCMODE(rxsyncmode_in[1]),
        .RXSYNCOUT(rxsyncout_out[1]),
        .RXSYSCLKSEL(rxsysclksel_in[3:2]),
        .RXUSERRDY(rxuserrdy_in[1]),
        .RXUSRCLK(rxusrclk_in[1]),
        .RXUSRCLK2(rxusrclk2_in[1]),
        .RXVALID(rxvalid_out[1]),
        .SIGVALIDCLK(sigvalidclk_in[1]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[15:8]),
        .TX8B10BEN(tx8b10ben_in[1]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[5:3]),
        .TXBUFSTATUS(txbufstatus_out[3:2]),
        .TXCOMFINISH(txcomfinish_out[1]),
        .TXCOMINIT(txcominit_in[1]),
        .TXCOMSAS(txcomsas_in[1]),
        .TXCOMWAKE(txcomwake_in[1]),
        .TXCTRL0(txctrl0_in[31:16]),
        .TXCTRL1(txctrl1_in[31:16]),
        .TXCTRL2(txctrl2_in[15:8]),
        .TXDATA(txdata_in[255:128]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[15:8]),
        .TXDEEMPH(txdeemph_in[1]),
        .TXDETECTRX(txdetectrx_in[1]),
        .TXDIFFCTRL(txdiffctrl_in[7:4]),
        .TXDIFFPD(txdiffpd_in[1]),
        .TXDLYBYPASS(txdlybypass_in[1]),
        .TXDLYEN(txdlyen_in[1]),
        .TXDLYHOLD(txdlyhold_in[1]),
        .TXDLYOVRDEN(txdlyovrden_in[1]),
        .TXDLYSRESET(txdlysreset_in[1]),
        .TXDLYSRESETDONE(txdlysresetdone_out[1]),
        .TXDLYUPDOWN(txdlyupdown_in[1]),
        .TXELECIDLE(txelecidle_in[1]),
        .TXHEADER(txheader_in[11:6]),
        .TXINHIBIT(txinhibit_in[1]),
        .TXLATCLK(txlatclk_in[1]),
        .TXMAINCURSOR(txmaincursor_in[13:7]),
        .TXMARGIN(txmargin_in[5:3]),
        .TXOUTCLK(txoutclk_out[1]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[1]),
        .TXOUTCLKPCS(txoutclkpcs_out[1]),
        .TXOUTCLKSEL(txoutclksel_in[5:3]),
        .TXPCSRESET(txpcsreset_in[1]),
        .TXPD(txpd_in[3:2]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[1]),
        .TXPHALIGN(txphalign_in[1]),
        .TXPHALIGNDONE(txphaligndone_out[1]),
        .TXPHALIGNEN(txphalignen_in[1]),
        .TXPHDLYPD(txphdlypd_in[1]),
        .TXPHDLYRESET(txphdlyreset_in[1]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[1]),
        .TXPHINIT(txphinit_in[1]),
        .TXPHINITDONE(txphinitdone_out[1]),
        .TXPHOVRDEN(txphovrden_in[1]),
        .TXPIPPMEN(txpippmen_in[1]),
        .TXPIPPMOVRDEN(txpippmovrden_in[1]),
        .TXPIPPMPD(txpippmpd_in[1]),
        .TXPIPPMSEL(txpippmsel_in[1]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[9:5]),
        .TXPISOPD(txpisopd_in[1]),
        .TXPLLCLKSEL(txpllclksel_in[3:2]),
        .TXPMARESET(txpmareset_in[1]),
        .TXPMARESETDONE(txpmaresetdone_out[1]),
        .TXPOLARITY(txpolarity_in[1]),
        .TXPOSTCURSOR(txpostcursor_in[9:5]),
        .TXPOSTCURSORINV(txpostcursorinv_in[1]),
        .TXPRBSFORCEERR(txprbsforceerr_in[1]),
        .TXPRBSSEL(txprbssel_in[7:4]),
        .TXPRECURSOR(txprecursor_in[9:5]),
        .TXPRECURSORINV(txprecursorinv_in[1]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[1]),
        .TXPROGDIVRESET(txprogdivreset_in[1]),
        .TXQPIBIASEN(txqpibiasen_in[1]),
        .TXQPISENN(txqpisenn_out[1]),
        .TXQPISENP(txqpisenp_out[1]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[1]),
        .TXQPIWEAKPUP(txqpiweakpup_in[1]),
        .TXRATE(txrate_in[5:3]),
        .TXRATEDONE(txratedone_out[1]),
        .TXRATEMODE(txratemode_in[1]),
        .TXRESETDONE(txresetdone_out[1]),
        .TXSEQUENCE(txsequence_in[13:7]),
        .TXSWING(txswing_in[1]),
        .TXSYNCALLIN(txsyncallin_in[1]),
        .TXSYNCDONE(txsyncdone_out[1]),
        .TXSYNCIN(txsyncin_in[1]),
        .TXSYNCMODE(txsyncmode_in[1]),
        .TXSYNCOUT(txsyncout_out[1]),
        .TXSYSCLKSEL(txsysclksel_in[3:2]),
        .TXUSERRDY(txuserrdy_in[1]),
        .TXUSRCLK(txusrclk_in[1]),
        .TXUSRCLK2(txusrclk2_in[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[2].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[8:6]),
        .BUFGTCEMASK(bufgtcemask_out[8:6]),
        .BUFGTDIV(bufgtdiv_out[26:18]),
        .BUFGTRESET(bufgtreset_out[8:6]),
        .BUFGTRSTMASK(bufgtrstmask_out[8:6]),
        .CFGRESET(cfgreset_in[2]),
        .CLKRSVD0(clkrsvd0_in[2]),
        .CLKRSVD1(clkrsvd1_in[2]),
        .CPLLFBCLKLOST(cpllfbclklost_out[2]),
        .CPLLLOCK(cplllock_out[2]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[2]),
        .CPLLLOCKEN(cplllocken_in[2]),
        .CPLLPD(cpllpd_in[2]),
        .CPLLREFCLKLOST(cpllrefclklost_out[2]),
        .CPLLREFCLKSEL(cpllrefclksel_in[8:6]),
        .CPLLRESET(cpllreset_in[2]),
        .DMONFIFORESET(dmonfiforeset_in[2]),
        .DMONITORCLK(dmonitorclk_in[2]),
        .DMONITOROUT(dmonitorout_out[50:34]),
        .DRPADDR(drpaddr_in[26:18]),
        .DRPCLK(drpclk_in[2]),
        .DRPDI(drpdi_in[47:32]),
        .DRPDO(drpdo_out[47:32]),
        .DRPEN(drpen_in[2]),
        .DRPRDY(drprdy_out[2]),
        .DRPWE(drpwe_in[2]),
        .EVODDPHICALDONE(evoddphicaldone_in[2]),
        .EVODDPHICALSTART(evoddphicalstart_in[2]),
        .EVODDPHIDRDEN(evoddphidrden_in[2]),
        .EVODDPHIDWREN(evoddphidwren_in[2]),
        .EVODDPHIXRDEN(evoddphixrden_in[2]),
        .EVODDPHIXWREN(evoddphixwren_in[2]),
        .EYESCANDATAERROR(eyescandataerror_out[2]),
        .EYESCANMODE(eyescanmode_in[2]),
        .EYESCANRESET(eyescanreset_in[2]),
        .EYESCANTRIGGER(eyescantrigger_in[2]),
        .GTGREFCLK(gtgrefclk_in[2]),
        .GTHRXN(gthrxn_in[2]),
        .GTHRXP(gthrxp_in[2]),
        .GTHTXN(gthtxn_out[2]),
        .GTHTXP(gthtxp_out[2]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[2]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[2]),
        .GTPOWERGOOD(gtpowergood_out[2]),
        .GTREFCLK0(gtrefclk0_in[2]),
        .GTREFCLK1(gtrefclk1_in[2]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[2]),
        .GTRESETSEL(gtresetsel_in[2]),
        .GTRSVD(gtrsvd_in[47:32]),
        .GTRXRESET(gtrxreset_in[2]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[2]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[2]),
        .GTTXRESET(gttxreset_in[2]),
        .LOOPBACK(loopback_in[8:6]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[2]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[2]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[2]),
        .PCIERATEGEN3(pcierategen3_out[2]),
        .PCIERATEIDLE(pcierateidle_out[2]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[5:4]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[5:4]),
        .PCIERSTIDLE(pcierstidle_in[2]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[2]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[2]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[2]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[2]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[2]),
        .PCIEUSERRATESTART(pcieuserratestart_out[2]),
        .PCSRSVDIN(pcsrsvdin_in[47:32]),
        .PCSRSVDIN2(pcsrsvdin2_in[14:10]),
        .PCSRSVDOUT(pcsrsvdout_out[35:24]),
        .PHYSTATUS(phystatus_out[2]),
        .PINRSRVDAS(pinrsrvdas_out[23:16]),
        .PMARSVDIN(pmarsvdin_in[14:10]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[2]),
        .RESETOVRD(resetovrd_in[2]),
        .RSTCLKENTX(rstclkentx_in[2]),
        .RX8B10BEN(rx8b10ben_in[2]),
        .RXBUFRESET(rxbufreset_in[2]),
        .RXBUFSTATUS(rxbufstatus_out[8:6]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[2]),
        .RXBYTEREALIGN(rxbyterealign_out[2]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[2]),
        .RXCDRHOLD(rxcdrhold_in[2]),
        .RXCDRLOCK(rxcdrlock_out[2]),
        .RXCDROVRDEN(rxcdrovrden_in[2]),
        .RXCDRPHDONE(rxcdrphdone_out[2]),
        .RXCDRRESET(rxcdrreset_in[2]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[2]),
        .RXCHANBONDSEQ(rxchanbondseq_out[2]),
        .RXCHANISALIGNED(rxchanisaligned_out[2]),
        .RXCHANREALIGN(rxchanrealign_out[2]),
        .RXCHBONDEN(rxchbonden_in[2]),
        .RXCHBONDI(rxchbondi_in[14:10]),
        .RXCHBONDLEVEL(rxchbondlevel_in[8:6]),
        .RXCHBONDMASTER(rxchbondmaster_in[2]),
        .RXCHBONDO(rxchbondo_out[14:10]),
        .RXCHBONDSLAVE(rxchbondslave_in[2]),
        .RXCLKCORCNT(rxclkcorcnt_out[5:4]),
        .RXCOMINITDET(rxcominitdet_out[2]),
        .RXCOMMADET(rxcommadet_out[2]),
        .RXCOMMADETEN(rxcommadeten_in[2]),
        .RXCOMSASDET(rxcomsasdet_out[2]),
        .RXCOMWAKEDET(rxcomwakedet_out[2]),
        .RXCTRL0(rxctrl0_out[47:32]),
        .RXCTRL1(rxctrl1_out[47:32]),
        .RXCTRL2(rxctrl2_out[23:16]),
        .RXCTRL3(rxctrl3_out[23:16]),
        .RXDATA(rxdata_out[383:256]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[23:16]),
        .RXDATAVALID(rxdatavalid_out[5:4]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[5:4]),
        .RXDFEAGCHOLD(rxdfeagchold_in[2]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[2]),
        .RXDFELFHOLD(rxdfelfhold_in[2]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[2]),
        .RXDFELPMRESET(rxdfelpmreset_in[2]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[2]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[2]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[2]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[2]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[2]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[2]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[2]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[2]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[2]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[2]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[2]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[2]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[2]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[2]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[2]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[2]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[2]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[2]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[2]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[2]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[2]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[2]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[2]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[2]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[2]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[2]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[2]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[2]),
        .RXDFEUTHOLD(rxdfeuthold_in[2]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[2]),
        .RXDFEVPHOLD(rxdfevphold_in[2]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[2]),
        .RXDFEVSEN(rxdfevsen_in[2]),
        .RXDFEXYDEN(rxdfexyden_in[2]),
        .RXDLYBYPASS(rxdlybypass_in[2]),
        .RXDLYEN(rxdlyen_in[2]),
        .RXDLYOVRDEN(rxdlyovrden_in[2]),
        .RXDLYSRESET(rxdlysreset_in[2]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[2]),
        .RXELECIDLE(rxelecidle_out[2]),
        .RXELECIDLEMODE(rxelecidlemode_in[5:4]),
        .RXGEARBOXSLIP(rxgearboxslip_in[2]),
        .RXHEADER(rxheader_out[17:12]),
        .RXHEADERVALID(rxheadervalid_out[5:4]),
        .RXLATCLK(rxlatclk_in[2]),
        .RXLPMEN(rxlpmen_in[2]),
        .RXLPMGCHOLD(rxlpmgchold_in[2]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[2]),
        .RXLPMHFHOLD(rxlpmhfhold_in[2]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[2]),
        .RXLPMLFHOLD(rxlpmlfhold_in[2]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[2]),
        .RXLPMOSHOLD(rxlpmoshold_in[2]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[2]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[2]),
        .RXMONITOROUT(rxmonitorout_out[20:14]),
        .RXMONITORSEL(rxmonitorsel_in[5:4]),
        .RXOOBRESET(rxoobreset_in[2]),
        .RXOSCALRESET(rxoscalreset_in[2]),
        .RXOSHOLD(rxoshold_in[2]),
        .RXOSINTCFG(rxosintcfg_in[11:8]),
        .RXOSINTDONE(rxosintdone_out[2]),
        .RXOSINTEN(rxosinten_in[2]),
        .RXOSINTHOLD(rxosinthold_in[2]),
        .RXOSINTOVRDEN(rxosintovrden_in[2]),
        .RXOSINTSTARTED(rxosintstarted_out[2]),
        .RXOSINTSTROBE(rxosintstrobe_in[2]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[2]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[2]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[2]),
        .RXOSOVRDEN(rxosovrden_in[2]),
        .RXOUTCLK(rxoutclk_out[2]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[2]),
        .RXOUTCLKPCS(rxoutclkpcs_out[2]),
        .RXOUTCLKSEL(rxoutclksel_in[8:6]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[2]),
        .RXPCSRESET(rxpcsreset_in[2]),
        .RXPD(rxpd_in[5:4]),
        .RXPHALIGN(rxphalign_in[2]),
        .RXPHALIGNDONE(rxphaligndone_out[2]),
        .RXPHALIGNEN(rxphalignen_in[2]),
        .RXPHALIGNERR(rxphalignerr_out[2]),
        .RXPHDLYPD(rxphdlypd_in[2]),
        .RXPHDLYRESET(rxphdlyreset_in[2]),
        .RXPHOVRDEN(rxphovrden_in[2]),
        .RXPLLCLKSEL(rxpllclksel_in[5:4]),
        .RXPMARESET(rxpmareset_in[2]),
        .RXPMARESETDONE(rxpmaresetdone_out[2]),
        .RXPOLARITY(rxpolarity_in[2]),
        .RXPRBSCNTRESET(rxprbscntreset_in[2]),
        .RXPRBSERR(rxprbserr_out[2]),
        .RXPRBSLOCKED(rxprbslocked_out[2]),
        .RXPRBSSEL(rxprbssel_in[11:8]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[2]),
        .RXPROGDIVRESET(rxprogdivreset_in[2]),
        .RXQPIEN(rxqpien_in[2]),
        .RXQPISENN(rxqpisenn_out[2]),
        .RXQPISENP(rxqpisenp_out[2]),
        .RXRATE(rxrate_in[8:6]),
        .RXRATEDONE(rxratedone_out[2]),
        .RXRATEMODE(rxratemode_in[2]),
        .RXRECCLKOUT(rxrecclkout_out[2]),
        .RXRESETDONE(rxresetdone_out[2]),
        .RXSLIDE(rxslide_in[2]),
        .RXSLIDERDY(rxsliderdy_out[2]),
        .RXSLIPDONE(rxslipdone_out[2]),
        .RXSLIPOUTCLK(rxslipoutclk_in[2]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[2]),
        .RXSLIPPMA(rxslippma_in[2]),
        .RXSLIPPMARDY(rxslippmardy_out[2]),
        .RXSTARTOFSEQ(rxstartofseq_out[5:4]),
        .RXSTATUS(rxstatus_out[8:6]),
        .RXSYNCALLIN(rxsyncallin_in[2]),
        .RXSYNCDONE(rxsyncdone_out[2]),
        .RXSYNCIN(rxsyncin_in[2]),
        .RXSYNCMODE(rxsyncmode_in[2]),
        .RXSYNCOUT(rxsyncout_out[2]),
        .RXSYSCLKSEL(rxsysclksel_in[5:4]),
        .RXUSERRDY(rxuserrdy_in[2]),
        .RXUSRCLK(rxusrclk_in[2]),
        .RXUSRCLK2(rxusrclk2_in[2]),
        .RXVALID(rxvalid_out[2]),
        .SIGVALIDCLK(sigvalidclk_in[2]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[23:16]),
        .TX8B10BEN(tx8b10ben_in[2]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[8:6]),
        .TXBUFSTATUS(txbufstatus_out[5:4]),
        .TXCOMFINISH(txcomfinish_out[2]),
        .TXCOMINIT(txcominit_in[2]),
        .TXCOMSAS(txcomsas_in[2]),
        .TXCOMWAKE(txcomwake_in[2]),
        .TXCTRL0(txctrl0_in[47:32]),
        .TXCTRL1(txctrl1_in[47:32]),
        .TXCTRL2(txctrl2_in[23:16]),
        .TXDATA(txdata_in[383:256]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[23:16]),
        .TXDEEMPH(txdeemph_in[2]),
        .TXDETECTRX(txdetectrx_in[2]),
        .TXDIFFCTRL(txdiffctrl_in[11:8]),
        .TXDIFFPD(txdiffpd_in[2]),
        .TXDLYBYPASS(txdlybypass_in[2]),
        .TXDLYEN(txdlyen_in[2]),
        .TXDLYHOLD(txdlyhold_in[2]),
        .TXDLYOVRDEN(txdlyovrden_in[2]),
        .TXDLYSRESET(txdlysreset_in[2]),
        .TXDLYSRESETDONE(txdlysresetdone_out[2]),
        .TXDLYUPDOWN(txdlyupdown_in[2]),
        .TXELECIDLE(txelecidle_in[2]),
        .TXHEADER(txheader_in[17:12]),
        .TXINHIBIT(txinhibit_in[2]),
        .TXLATCLK(txlatclk_in[2]),
        .TXMAINCURSOR(txmaincursor_in[20:14]),
        .TXMARGIN(txmargin_in[8:6]),
        .TXOUTCLK(txoutclk_out[2]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[2]),
        .TXOUTCLKPCS(txoutclkpcs_out[2]),
        .TXOUTCLKSEL(txoutclksel_in[8:6]),
        .TXPCSRESET(txpcsreset_in[2]),
        .TXPD(txpd_in[5:4]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[2]),
        .TXPHALIGN(txphalign_in[2]),
        .TXPHALIGNDONE(txphaligndone_out[2]),
        .TXPHALIGNEN(txphalignen_in[2]),
        .TXPHDLYPD(txphdlypd_in[2]),
        .TXPHDLYRESET(txphdlyreset_in[2]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[2]),
        .TXPHINIT(txphinit_in[2]),
        .TXPHINITDONE(txphinitdone_out[2]),
        .TXPHOVRDEN(txphovrden_in[2]),
        .TXPIPPMEN(txpippmen_in[2]),
        .TXPIPPMOVRDEN(txpippmovrden_in[2]),
        .TXPIPPMPD(txpippmpd_in[2]),
        .TXPIPPMSEL(txpippmsel_in[2]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[14:10]),
        .TXPISOPD(txpisopd_in[2]),
        .TXPLLCLKSEL(txpllclksel_in[5:4]),
        .TXPMARESET(txpmareset_in[2]),
        .TXPMARESETDONE(txpmaresetdone_out[2]),
        .TXPOLARITY(txpolarity_in[2]),
        .TXPOSTCURSOR(txpostcursor_in[14:10]),
        .TXPOSTCURSORINV(txpostcursorinv_in[2]),
        .TXPRBSFORCEERR(txprbsforceerr_in[2]),
        .TXPRBSSEL(txprbssel_in[11:8]),
        .TXPRECURSOR(txprecursor_in[14:10]),
        .TXPRECURSORINV(txprecursorinv_in[2]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[2]),
        .TXPROGDIVRESET(txprogdivreset_in[2]),
        .TXQPIBIASEN(txqpibiasen_in[2]),
        .TXQPISENN(txqpisenn_out[2]),
        .TXQPISENP(txqpisenp_out[2]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[2]),
        .TXQPIWEAKPUP(txqpiweakpup_in[2]),
        .TXRATE(txrate_in[8:6]),
        .TXRATEDONE(txratedone_out[2]),
        .TXRATEMODE(txratemode_in[2]),
        .TXRESETDONE(txresetdone_out[2]),
        .TXSEQUENCE(txsequence_in[20:14]),
        .TXSWING(txswing_in[2]),
        .TXSYNCALLIN(txsyncallin_in[2]),
        .TXSYNCDONE(txsyncdone_out[2]),
        .TXSYNCIN(txsyncin_in[2]),
        .TXSYNCMODE(txsyncmode_in[2]),
        .TXSYNCOUT(txsyncout_out[2]),
        .TXSYSCLKSEL(txsysclksel_in[5:4]),
        .TXUSERRDY(txuserrdy_in[2]),
        .TXUSRCLK(txusrclk_in[2]),
        .TXUSRCLK2(txusrclk2_in[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[3].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[11:9]),
        .BUFGTCEMASK(bufgtcemask_out[11:9]),
        .BUFGTDIV(bufgtdiv_out[35:27]),
        .BUFGTRESET(bufgtreset_out[11:9]),
        .BUFGTRSTMASK(bufgtrstmask_out[11:9]),
        .CFGRESET(cfgreset_in[3]),
        .CLKRSVD0(clkrsvd0_in[3]),
        .CLKRSVD1(clkrsvd1_in[3]),
        .CPLLFBCLKLOST(cpllfbclklost_out[3]),
        .CPLLLOCK(cplllock_out[3]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[3]),
        .CPLLLOCKEN(cplllocken_in[3]),
        .CPLLPD(cpllpd_in[3]),
        .CPLLREFCLKLOST(cpllrefclklost_out[3]),
        .CPLLREFCLKSEL(cpllrefclksel_in[11:9]),
        .CPLLRESET(cpllreset_in[3]),
        .DMONFIFORESET(dmonfiforeset_in[3]),
        .DMONITORCLK(dmonitorclk_in[3]),
        .DMONITOROUT(dmonitorout_out[67:51]),
        .DRPADDR(drpaddr_in[35:27]),
        .DRPCLK(drpclk_in[3]),
        .DRPDI(drpdi_in[63:48]),
        .DRPDO(drpdo_out[63:48]),
        .DRPEN(drpen_in[3]),
        .DRPRDY(drprdy_out[3]),
        .DRPWE(drpwe_in[3]),
        .EVODDPHICALDONE(evoddphicaldone_in[3]),
        .EVODDPHICALSTART(evoddphicalstart_in[3]),
        .EVODDPHIDRDEN(evoddphidrden_in[3]),
        .EVODDPHIDWREN(evoddphidwren_in[3]),
        .EVODDPHIXRDEN(evoddphixrden_in[3]),
        .EVODDPHIXWREN(evoddphixwren_in[3]),
        .EYESCANDATAERROR(eyescandataerror_out[3]),
        .EYESCANMODE(eyescanmode_in[3]),
        .EYESCANRESET(eyescanreset_in[3]),
        .EYESCANTRIGGER(eyescantrigger_in[3]),
        .GTGREFCLK(gtgrefclk_in[3]),
        .GTHRXN(gthrxn_in[3]),
        .GTHRXP(gthrxp_in[3]),
        .GTHTXN(gthtxn_out[3]),
        .GTHTXP(gthtxp_out[3]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[3]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[3]),
        .GTPOWERGOOD(gtpowergood_out[3]),
        .GTREFCLK0(gtrefclk0_in[3]),
        .GTREFCLK1(gtrefclk1_in[3]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[3]),
        .GTRESETSEL(gtresetsel_in[3]),
        .GTRSVD(gtrsvd_in[63:48]),
        .GTRXRESET(gtrxreset_in[3]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[3]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[3]),
        .GTTXRESET(gttxreset_in[3]),
        .LOOPBACK(loopback_in[11:9]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[3]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[3]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[3]),
        .PCIERATEGEN3(pcierategen3_out[3]),
        .PCIERATEIDLE(pcierateidle_out[3]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[7:6]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[7:6]),
        .PCIERSTIDLE(pcierstidle_in[3]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[3]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[3]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[3]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[3]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[3]),
        .PCIEUSERRATESTART(pcieuserratestart_out[3]),
        .PCSRSVDIN(pcsrsvdin_in[63:48]),
        .PCSRSVDIN2(pcsrsvdin2_in[19:15]),
        .PCSRSVDOUT(pcsrsvdout_out[47:36]),
        .PHYSTATUS(phystatus_out[3]),
        .PINRSRVDAS(pinrsrvdas_out[31:24]),
        .PMARSVDIN(pmarsvdin_in[19:15]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[3]),
        .RESETOVRD(resetovrd_in[3]),
        .RSTCLKENTX(rstclkentx_in[3]),
        .RX8B10BEN(rx8b10ben_in[3]),
        .RXBUFRESET(rxbufreset_in[3]),
        .RXBUFSTATUS(rxbufstatus_out[11:9]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[3]),
        .RXBYTEREALIGN(rxbyterealign_out[3]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[3]),
        .RXCDRHOLD(rxcdrhold_in[3]),
        .RXCDRLOCK(rxcdrlock_out[3]),
        .RXCDROVRDEN(rxcdrovrden_in[3]),
        .RXCDRPHDONE(rxcdrphdone_out[3]),
        .RXCDRRESET(rxcdrreset_in[3]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[3]),
        .RXCHANBONDSEQ(rxchanbondseq_out[3]),
        .RXCHANISALIGNED(rxchanisaligned_out[3]),
        .RXCHANREALIGN(rxchanrealign_out[3]),
        .RXCHBONDEN(rxchbonden_in[3]),
        .RXCHBONDI(rxchbondi_in[19:15]),
        .RXCHBONDLEVEL(rxchbondlevel_in[11:9]),
        .RXCHBONDMASTER(rxchbondmaster_in[3]),
        .RXCHBONDO(rxchbondo_out[19:15]),
        .RXCHBONDSLAVE(rxchbondslave_in[3]),
        .RXCLKCORCNT(rxclkcorcnt_out[7:6]),
        .RXCOMINITDET(rxcominitdet_out[3]),
        .RXCOMMADET(rxcommadet_out[3]),
        .RXCOMMADETEN(rxcommadeten_in[3]),
        .RXCOMSASDET(rxcomsasdet_out[3]),
        .RXCOMWAKEDET(rxcomwakedet_out[3]),
        .RXCTRL0(rxctrl0_out[63:48]),
        .RXCTRL1(rxctrl1_out[63:48]),
        .RXCTRL2(rxctrl2_out[31:24]),
        .RXCTRL3(rxctrl3_out[31:24]),
        .RXDATA(rxdata_out[511:384]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[31:24]),
        .RXDATAVALID(rxdatavalid_out[7:6]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[7:6]),
        .RXDFEAGCHOLD(rxdfeagchold_in[3]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[3]),
        .RXDFELFHOLD(rxdfelfhold_in[3]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[3]),
        .RXDFELPMRESET(rxdfelpmreset_in[3]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[3]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[3]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[3]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[3]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[3]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[3]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[3]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[3]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[3]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[3]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[3]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[3]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[3]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[3]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[3]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[3]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[3]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[3]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[3]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[3]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[3]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[3]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[3]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[3]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[3]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[3]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[3]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[3]),
        .RXDFEUTHOLD(rxdfeuthold_in[3]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[3]),
        .RXDFEVPHOLD(rxdfevphold_in[3]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[3]),
        .RXDFEVSEN(rxdfevsen_in[3]),
        .RXDFEXYDEN(rxdfexyden_in[3]),
        .RXDLYBYPASS(rxdlybypass_in[3]),
        .RXDLYEN(rxdlyen_in[3]),
        .RXDLYOVRDEN(rxdlyovrden_in[3]),
        .RXDLYSRESET(rxdlysreset_in[3]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[3]),
        .RXELECIDLE(rxelecidle_out[3]),
        .RXELECIDLEMODE(rxelecidlemode_in[7:6]),
        .RXGEARBOXSLIP(rxgearboxslip_in[3]),
        .RXHEADER(rxheader_out[23:18]),
        .RXHEADERVALID(rxheadervalid_out[7:6]),
        .RXLATCLK(rxlatclk_in[3]),
        .RXLPMEN(rxlpmen_in[3]),
        .RXLPMGCHOLD(rxlpmgchold_in[3]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[3]),
        .RXLPMHFHOLD(rxlpmhfhold_in[3]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[3]),
        .RXLPMLFHOLD(rxlpmlfhold_in[3]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[3]),
        .RXLPMOSHOLD(rxlpmoshold_in[3]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[3]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[3]),
        .RXMONITOROUT(rxmonitorout_out[27:21]),
        .RXMONITORSEL(rxmonitorsel_in[7:6]),
        .RXOOBRESET(rxoobreset_in[3]),
        .RXOSCALRESET(rxoscalreset_in[3]),
        .RXOSHOLD(rxoshold_in[3]),
        .RXOSINTCFG(rxosintcfg_in[15:12]),
        .RXOSINTDONE(rxosintdone_out[3]),
        .RXOSINTEN(rxosinten_in[3]),
        .RXOSINTHOLD(rxosinthold_in[3]),
        .RXOSINTOVRDEN(rxosintovrden_in[3]),
        .RXOSINTSTARTED(rxosintstarted_out[3]),
        .RXOSINTSTROBE(rxosintstrobe_in[3]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[3]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[3]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[3]),
        .RXOSOVRDEN(rxosovrden_in[3]),
        .RXOUTCLK(rxoutclk_out[3]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[3]),
        .RXOUTCLKPCS(rxoutclkpcs_out[3]),
        .RXOUTCLKSEL(rxoutclksel_in[11:9]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[3]),
        .RXPCSRESET(rxpcsreset_in[3]),
        .RXPD(rxpd_in[7:6]),
        .RXPHALIGN(rxphalign_in[3]),
        .RXPHALIGNDONE(rxphaligndone_out[3]),
        .RXPHALIGNEN(rxphalignen_in[3]),
        .RXPHALIGNERR(rxphalignerr_out[3]),
        .RXPHDLYPD(rxphdlypd_in[3]),
        .RXPHDLYRESET(rxphdlyreset_in[3]),
        .RXPHOVRDEN(rxphovrden_in[3]),
        .RXPLLCLKSEL(rxpllclksel_in[7:6]),
        .RXPMARESET(rxpmareset_in[3]),
        .RXPMARESETDONE(rxpmaresetdone_out[3]),
        .RXPOLARITY(rxpolarity_in[3]),
        .RXPRBSCNTRESET(rxprbscntreset_in[3]),
        .RXPRBSERR(rxprbserr_out[3]),
        .RXPRBSLOCKED(rxprbslocked_out[3]),
        .RXPRBSSEL(rxprbssel_in[15:12]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[3]),
        .RXPROGDIVRESET(rxprogdivreset_in[3]),
        .RXQPIEN(rxqpien_in[3]),
        .RXQPISENN(rxqpisenn_out[3]),
        .RXQPISENP(rxqpisenp_out[3]),
        .RXRATE(rxrate_in[11:9]),
        .RXRATEDONE(rxratedone_out[3]),
        .RXRATEMODE(rxratemode_in[3]),
        .RXRECCLKOUT(rxrecclkout_out[3]),
        .RXRESETDONE(rxresetdone_out[3]),
        .RXSLIDE(rxslide_in[3]),
        .RXSLIDERDY(rxsliderdy_out[3]),
        .RXSLIPDONE(rxslipdone_out[3]),
        .RXSLIPOUTCLK(rxslipoutclk_in[3]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[3]),
        .RXSLIPPMA(rxslippma_in[3]),
        .RXSLIPPMARDY(rxslippmardy_out[3]),
        .RXSTARTOFSEQ(rxstartofseq_out[7:6]),
        .RXSTATUS(rxstatus_out[11:9]),
        .RXSYNCALLIN(rxsyncallin_in[3]),
        .RXSYNCDONE(rxsyncdone_out[3]),
        .RXSYNCIN(rxsyncin_in[3]),
        .RXSYNCMODE(rxsyncmode_in[3]),
        .RXSYNCOUT(rxsyncout_out[3]),
        .RXSYSCLKSEL(rxsysclksel_in[7:6]),
        .RXUSERRDY(rxuserrdy_in[3]),
        .RXUSRCLK(rxusrclk_in[3]),
        .RXUSRCLK2(rxusrclk2_in[3]),
        .RXVALID(rxvalid_out[3]),
        .SIGVALIDCLK(sigvalidclk_in[3]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[31:24]),
        .TX8B10BEN(tx8b10ben_in[3]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[11:9]),
        .TXBUFSTATUS(txbufstatus_out[7:6]),
        .TXCOMFINISH(txcomfinish_out[3]),
        .TXCOMINIT(txcominit_in[3]),
        .TXCOMSAS(txcomsas_in[3]),
        .TXCOMWAKE(txcomwake_in[3]),
        .TXCTRL0(txctrl0_in[63:48]),
        .TXCTRL1(txctrl1_in[63:48]),
        .TXCTRL2(txctrl2_in[31:24]),
        .TXDATA(txdata_in[511:384]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[31:24]),
        .TXDEEMPH(txdeemph_in[3]),
        .TXDETECTRX(txdetectrx_in[3]),
        .TXDIFFCTRL(txdiffctrl_in[15:12]),
        .TXDIFFPD(txdiffpd_in[3]),
        .TXDLYBYPASS(txdlybypass_in[3]),
        .TXDLYEN(txdlyen_in[3]),
        .TXDLYHOLD(txdlyhold_in[3]),
        .TXDLYOVRDEN(txdlyovrden_in[3]),
        .TXDLYSRESET(txdlysreset_in[3]),
        .TXDLYSRESETDONE(txdlysresetdone_out[3]),
        .TXDLYUPDOWN(txdlyupdown_in[3]),
        .TXELECIDLE(txelecidle_in[3]),
        .TXHEADER(txheader_in[23:18]),
        .TXINHIBIT(txinhibit_in[3]),
        .TXLATCLK(txlatclk_in[3]),
        .TXMAINCURSOR(txmaincursor_in[27:21]),
        .TXMARGIN(txmargin_in[11:9]),
        .TXOUTCLK(txoutclk_out[3]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[3]),
        .TXOUTCLKPCS(txoutclkpcs_out[3]),
        .TXOUTCLKSEL(txoutclksel_in[11:9]),
        .TXPCSRESET(txpcsreset_in[3]),
        .TXPD(txpd_in[7:6]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[3]),
        .TXPHALIGN(txphalign_in[3]),
        .TXPHALIGNDONE(txphaligndone_out[3]),
        .TXPHALIGNEN(txphalignen_in[3]),
        .TXPHDLYPD(txphdlypd_in[3]),
        .TXPHDLYRESET(txphdlyreset_in[3]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[3]),
        .TXPHINIT(txphinit_in[3]),
        .TXPHINITDONE(txphinitdone_out[3]),
        .TXPHOVRDEN(txphovrden_in[3]),
        .TXPIPPMEN(txpippmen_in[3]),
        .TXPIPPMOVRDEN(txpippmovrden_in[3]),
        .TXPIPPMPD(txpippmpd_in[3]),
        .TXPIPPMSEL(txpippmsel_in[3]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[19:15]),
        .TXPISOPD(txpisopd_in[3]),
        .TXPLLCLKSEL(txpllclksel_in[7:6]),
        .TXPMARESET(txpmareset_in[3]),
        .TXPMARESETDONE(txpmaresetdone_out[3]),
        .TXPOLARITY(txpolarity_in[3]),
        .TXPOSTCURSOR(txpostcursor_in[19:15]),
        .TXPOSTCURSORINV(txpostcursorinv_in[3]),
        .TXPRBSFORCEERR(txprbsforceerr_in[3]),
        .TXPRBSSEL(txprbssel_in[15:12]),
        .TXPRECURSOR(txprecursor_in[19:15]),
        .TXPRECURSORINV(txprecursorinv_in[3]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[3]),
        .TXPROGDIVRESET(txprogdivreset_in[3]),
        .TXQPIBIASEN(txqpibiasen_in[3]),
        .TXQPISENN(txqpisenn_out[3]),
        .TXQPISENP(txqpisenp_out[3]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[3]),
        .TXQPIWEAKPUP(txqpiweakpup_in[3]),
        .TXRATE(txrate_in[11:9]),
        .TXRATEDONE(txratedone_out[3]),
        .TXRATEMODE(txratemode_in[3]),
        .TXRESETDONE(txresetdone_out[3]),
        .TXSEQUENCE(txsequence_in[27:21]),
        .TXSWING(txswing_in[3]),
        .TXSYNCALLIN(txsyncallin_in[3]),
        .TXSYNCDONE(txsyncdone_out[3]),
        .TXSYNCIN(txsyncin_in[3]),
        .TXSYNCMODE(txsyncmode_in[3]),
        .TXSYNCOUT(txsyncout_out[3]),
        .TXSYSCLKSEL(txsysclksel_in[7:6]),
        .TXUSERRDY(txuserrdy_in[3]),
        .TXUSRCLK(txusrclk_in[3]),
        .TXUSRCLK2(txusrclk2_in[3]));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_5_3_gthe3_channel" *) 
module pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_channel_344
   (cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    pcsrsvdout_out,
    rxdata_out,
    drpdo_out,
    rxctrl0_out,
    rxctrl1_out,
    dmonitorout_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtce_out,
    bufgtcemask_out,
    bufgtreset_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxmonitorout_out,
    pinrsrvdas_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    bufgtdiv_out,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrxreset_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpisopd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txratemode_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    rxdfeagcctrl_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txbufdiffctrl_in,
    txmargin_in,
    txoutclksel_in,
    txrate_in,
    rxosintcfg_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    rxchbondi_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in);
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gthtxn_out;
  output [3:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [3:0]phystatus_out;
  output [3:0]resetexception_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [3:0]rxqpisenn_out;
  output [3:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [3:0]txqpisenn_out;
  output [3:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  output [47:0]pcsrsvdout_out;
  output [511:0]rxdata_out;
  output [63:0]drpdo_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [67:0]dmonitorout_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [7:0]rxclkcorcnt_out;
  output [7:0]rxdatavalid_out;
  output [7:0]rxheadervalid_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [11:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [11:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [11:0]rxbufstatus_out;
  output [11:0]rxstatus_out;
  output [19:0]rxchbondo_out;
  output [23:0]rxheader_out;
  output [27:0]rxmonitorout_out;
  output [31:0]pinrsrvdas_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [31:0]rxdataextendrsvd_out;
  output [35:0]bufgtdiv_out;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [3:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]evoddphicaldone_in;
  input [3:0]evoddphicalstart_in;
  input [3:0]evoddphidrden_in;
  input [3:0]evoddphidwren_in;
  input [3:0]evoddphixrden_in;
  input [3:0]evoddphixwren_in;
  input [3:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtgrefclk_in;
  input [3:0]gthrxn_in;
  input [3:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [3:0]gtresetsel_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]lpbkrxtxseren_in;
  input [3:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [0:0]qpll0outclk_out;
  input [0:0]qpll0outrefclk_out;
  input [0:0]qpll1outclk_out;
  input [0:0]qpll1outrefclk_out;
  input [3:0]resetovrd_in;
  input [3:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [3:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxcommadeten_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [3:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [3:0]rxosinten_in;
  input [3:0]rxosinthold_in;
  input [3:0]rxosintovrden_in;
  input [3:0]rxosintstrobe_in;
  input [3:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [3:0]rxphovrden_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [3:0]rxprogdivreset_in;
  input [3:0]rxqpien_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [3:0]tx8b10ben_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [3:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [3:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [3:0]txpisopd_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [3:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [3:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [3:0]txqpibiasen_in;
  input [3:0]txqpistrongpdown_in;
  input [3:0]txqpiweakpup_in;
  input [3:0]txratemode_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  input [511:0]txdata_in;
  input [63:0]drpdi_in;
  input [63:0]gtrsvd_in;
  input [63:0]pcsrsvdin_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [7:0]rxdfeagcctrl_in;
  input [7:0]rxelecidlemode_in;
  input [7:0]rxmonitorsel_in;
  input [7:0]rxpd_in;
  input [7:0]rxpllclksel_in;
  input [7:0]rxsysclksel_in;
  input [7:0]txpd_in;
  input [7:0]txpllclksel_in;
  input [7:0]txsysclksel_in;
  input [11:0]cpllrefclksel_in;
  input [11:0]loopback_in;
  input [11:0]rxchbondlevel_in;
  input [11:0]rxoutclksel_in;
  input [11:0]rxrate_in;
  input [11:0]txbufdiffctrl_in;
  input [11:0]txmargin_in;
  input [11:0]txoutclksel_in;
  input [11:0]txrate_in;
  input [15:0]rxosintcfg_in;
  input [15:0]rxprbssel_in;
  input [15:0]txdiffctrl_in;
  input [15:0]txprbssel_in;
  input [19:0]pcsrsvdin2_in;
  input [19:0]pmarsvdin_in;
  input [19:0]rxchbondi_in;
  input [19:0]txpippmstepsize_in;
  input [19:0]txpostcursor_in;
  input [19:0]txprecursor_in;
  input [23:0]txheader_in;
  input [27:0]txmaincursor_in;
  input [27:0]txsequence_in;
  input [31:0]tx8b10bbypass_in;
  input [31:0]txctrl2_in;
  input [31:0]txdataextendrsvd_in;
  input [35:0]drpaddr_in;

  wire [11:0]bufgtce_out;
  wire [11:0]bufgtcemask_out;
  wire [35:0]bufgtdiv_out;
  wire [11:0]bufgtreset_out;
  wire [11:0]bufgtrstmask_out;
  wire [3:0]cfgreset_in;
  wire [3:0]clkrsvd0_in;
  wire [3:0]clkrsvd1_in;
  wire [3:0]cpllfbclklost_out;
  wire [3:0]cplllock_out;
  wire [3:0]cplllockdetclk_in;
  wire [3:0]cplllocken_in;
  wire [3:0]cpllpd_in;
  wire [3:0]cpllrefclklost_out;
  wire [11:0]cpllrefclksel_in;
  wire [3:0]cpllreset_in;
  wire [3:0]dmonfiforeset_in;
  wire [3:0]dmonitorclk_in;
  wire [67:0]dmonitorout_out;
  wire [35:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]evoddphicaldone_in;
  wire [3:0]evoddphicalstart_in;
  wire [3:0]evoddphidrden_in;
  wire [3:0]evoddphidwren_in;
  wire [3:0]evoddphixrden_in;
  wire [3:0]evoddphixwren_in;
  wire [3:0]eyescandataerror_out;
  wire [3:0]eyescanmode_in;
  wire [3:0]eyescanreset_in;
  wire [3:0]eyescantrigger_in;
  wire [3:0]gtgrefclk_in;
  wire [3:0]gthrxn_in;
  wire [3:0]gthrxp_in;
  wire [3:0]gthtxn_out;
  wire [3:0]gthtxp_out;
  wire [3:0]gtnorthrefclk0_in;
  wire [3:0]gtnorthrefclk1_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [3:0]gtrefclk1_in;
  wire [3:0]gtrefclkmonitor_out;
  wire [3:0]gtresetsel_in;
  wire [63:0]gtrsvd_in;
  wire [3:0]gtrxreset_in;
  wire [3:0]gtsouthrefclk0_in;
  wire [3:0]gtsouthrefclk1_in;
  wire [3:0]gttxreset_in;
  wire [11:0]loopback_in;
  wire [3:0]lpbkrxtxseren_in;
  wire [3:0]lpbktxrxseren_in;
  wire [3:0]pcieeqrxeqadaptdone_in;
  wire [3:0]pcierategen3_out;
  wire [3:0]pcierateidle_out;
  wire [7:0]pcierateqpllpd_out;
  wire [7:0]pcierateqpllreset_out;
  wire [3:0]pcierstidle_in;
  wire [3:0]pciersttxsyncstart_in;
  wire [3:0]pciesynctxsyncdone_out;
  wire [3:0]pcieusergen3rdy_out;
  wire [3:0]pcieuserphystatusrst_out;
  wire [3:0]pcieuserratedone_in;
  wire [3:0]pcieuserratestart_out;
  wire [19:0]pcsrsvdin2_in;
  wire [63:0]pcsrsvdin_in;
  wire [47:0]pcsrsvdout_out;
  wire [3:0]phystatus_out;
  wire [31:0]pinrsrvdas_out;
  wire [19:0]pmarsvdin_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [3:0]resetexception_out;
  wire [3:0]resetovrd_in;
  wire [3:0]rstclkentx_in;
  wire [3:0]rx8b10ben_in;
  wire [3:0]rxbufreset_in;
  wire [11:0]rxbufstatus_out;
  wire [3:0]rxbyteisaligned_out;
  wire [3:0]rxbyterealign_out;
  wire [3:0]rxcdrfreqreset_in;
  wire [3:0]rxcdrhold_in;
  wire [3:0]rxcdrlock_out;
  wire [3:0]rxcdrovrden_in;
  wire [3:0]rxcdrphdone_out;
  wire [3:0]rxcdrreset_in;
  wire [3:0]rxcdrresetrsv_in;
  wire [3:0]rxchanbondseq_out;
  wire [3:0]rxchanisaligned_out;
  wire [3:0]rxchanrealign_out;
  wire [3:0]rxchbonden_in;
  wire [19:0]rxchbondi_in;
  wire [11:0]rxchbondlevel_in;
  wire [3:0]rxchbondmaster_in;
  wire [19:0]rxchbondo_out;
  wire [3:0]rxchbondslave_in;
  wire [7:0]rxclkcorcnt_out;
  wire [3:0]rxcominitdet_out;
  wire [3:0]rxcommadet_out;
  wire [3:0]rxcommadeten_in;
  wire [3:0]rxcomsasdet_out;
  wire [3:0]rxcomwakedet_out;
  wire [63:0]rxctrl0_out;
  wire [63:0]rxctrl1_out;
  wire [31:0]rxctrl2_out;
  wire [31:0]rxctrl3_out;
  wire [511:0]rxdata_out;
  wire [31:0]rxdataextendrsvd_out;
  wire [7:0]rxdatavalid_out;
  wire [7:0]rxdfeagcctrl_in;
  wire [3:0]rxdfeagchold_in;
  wire [3:0]rxdfeagcovrden_in;
  wire [3:0]rxdfelfhold_in;
  wire [3:0]rxdfelfovrden_in;
  wire [3:0]rxdfelpmreset_in;
  wire [3:0]rxdfetap10hold_in;
  wire [3:0]rxdfetap10ovrden_in;
  wire [3:0]rxdfetap11hold_in;
  wire [3:0]rxdfetap11ovrden_in;
  wire [3:0]rxdfetap12hold_in;
  wire [3:0]rxdfetap12ovrden_in;
  wire [3:0]rxdfetap13hold_in;
  wire [3:0]rxdfetap13ovrden_in;
  wire [3:0]rxdfetap14hold_in;
  wire [3:0]rxdfetap14ovrden_in;
  wire [3:0]rxdfetap15hold_in;
  wire [3:0]rxdfetap15ovrden_in;
  wire [3:0]rxdfetap2hold_in;
  wire [3:0]rxdfetap2ovrden_in;
  wire [3:0]rxdfetap3hold_in;
  wire [3:0]rxdfetap3ovrden_in;
  wire [3:0]rxdfetap4hold_in;
  wire [3:0]rxdfetap4ovrden_in;
  wire [3:0]rxdfetap5hold_in;
  wire [3:0]rxdfetap5ovrden_in;
  wire [3:0]rxdfetap6hold_in;
  wire [3:0]rxdfetap6ovrden_in;
  wire [3:0]rxdfetap7hold_in;
  wire [3:0]rxdfetap7ovrden_in;
  wire [3:0]rxdfetap8hold_in;
  wire [3:0]rxdfetap8ovrden_in;
  wire [3:0]rxdfetap9hold_in;
  wire [3:0]rxdfetap9ovrden_in;
  wire [3:0]rxdfeuthold_in;
  wire [3:0]rxdfeutovrden_in;
  wire [3:0]rxdfevphold_in;
  wire [3:0]rxdfevpovrden_in;
  wire [3:0]rxdfevsen_in;
  wire [3:0]rxdfexyden_in;
  wire [3:0]rxdlybypass_in;
  wire [3:0]rxdlyen_in;
  wire [3:0]rxdlyovrden_in;
  wire [3:0]rxdlysreset_in;
  wire [3:0]rxdlysresetdone_out;
  wire [3:0]rxelecidle_out;
  wire [7:0]rxelecidlemode_in;
  wire [3:0]rxgearboxslip_in;
  wire [23:0]rxheader_out;
  wire [7:0]rxheadervalid_out;
  wire [3:0]rxlatclk_in;
  wire [3:0]rxlpmen_in;
  wire [3:0]rxlpmgchold_in;
  wire [3:0]rxlpmgcovrden_in;
  wire [3:0]rxlpmhfhold_in;
  wire [3:0]rxlpmhfovrden_in;
  wire [3:0]rxlpmlfhold_in;
  wire [3:0]rxlpmlfklovrden_in;
  wire [3:0]rxlpmoshold_in;
  wire [3:0]rxlpmosovrden_in;
  wire [3:0]rxmcommaalignen_in;
  wire [27:0]rxmonitorout_out;
  wire [7:0]rxmonitorsel_in;
  wire [3:0]rxoobreset_in;
  wire [3:0]rxoscalreset_in;
  wire [3:0]rxoshold_in;
  wire [15:0]rxosintcfg_in;
  wire [3:0]rxosintdone_out;
  wire [3:0]rxosinten_in;
  wire [3:0]rxosinthold_in;
  wire [3:0]rxosintovrden_in;
  wire [3:0]rxosintstarted_out;
  wire [3:0]rxosintstrobe_in;
  wire [3:0]rxosintstrobedone_out;
  wire [3:0]rxosintstrobestarted_out;
  wire [3:0]rxosinttestovrden_in;
  wire [3:0]rxosovrden_in;
  wire [3:0]rxoutclk_out;
  wire [3:0]rxoutclkfabric_out;
  wire [3:0]rxoutclkpcs_out;
  wire [11:0]rxoutclksel_in;
  wire [3:0]rxpcommaalignen_in;
  wire [3:0]rxpcsreset_in;
  wire [7:0]rxpd_in;
  wire [3:0]rxphalign_in;
  wire [3:0]rxphaligndone_out;
  wire [3:0]rxphalignen_in;
  wire [3:0]rxphalignerr_out;
  wire [3:0]rxphdlypd_in;
  wire [3:0]rxphdlyreset_in;
  wire [3:0]rxphovrden_in;
  wire [7:0]rxpllclksel_in;
  wire [3:0]rxpmareset_in;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxprbscntreset_in;
  wire [3:0]rxprbserr_out;
  wire [3:0]rxprbslocked_out;
  wire [15:0]rxprbssel_in;
  wire [3:0]rxprgdivresetdone_out;
  wire [3:0]rxprogdivreset_in;
  wire [3:0]rxqpien_in;
  wire [3:0]rxqpisenn_out;
  wire [3:0]rxqpisenp_out;
  wire [11:0]rxrate_in;
  wire [3:0]rxratedone_out;
  wire [3:0]rxratemode_in;
  wire [3:0]rxrecclkout_out;
  wire [3:0]rxresetdone_out;
  wire [3:0]rxslide_in;
  wire [3:0]rxsliderdy_out;
  wire [3:0]rxslipdone_out;
  wire [3:0]rxslipoutclk_in;
  wire [3:0]rxslipoutclkrdy_out;
  wire [3:0]rxslippma_in;
  wire [3:0]rxslippmardy_out;
  wire [7:0]rxstartofseq_out;
  wire [11:0]rxstatus_out;
  wire [3:0]rxsyncallin_in;
  wire [3:0]rxsyncdone_out;
  wire [3:0]rxsyncin_in;
  wire [3:0]rxsyncmode_in;
  wire [3:0]rxsyncout_out;
  wire [7:0]rxsysclksel_in;
  wire [3:0]rxuserrdy_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [3:0]rxvalid_out;
  wire [3:0]sigvalidclk_in;
  wire [31:0]tx8b10bbypass_in;
  wire [3:0]tx8b10ben_in;
  wire [11:0]txbufdiffctrl_in;
  wire [7:0]txbufstatus_out;
  wire [3:0]txcomfinish_out;
  wire [3:0]txcominit_in;
  wire [3:0]txcomsas_in;
  wire [3:0]txcomwake_in;
  wire [63:0]txctrl0_in;
  wire [63:0]txctrl1_in;
  wire [31:0]txctrl2_in;
  wire [511:0]txdata_in;
  wire [31:0]txdataextendrsvd_in;
  wire [3:0]txdeemph_in;
  wire [3:0]txdetectrx_in;
  wire [15:0]txdiffctrl_in;
  wire [3:0]txdiffpd_in;
  wire [3:0]txdlybypass_in;
  wire [3:0]txdlyen_in;
  wire [3:0]txdlyhold_in;
  wire [3:0]txdlyovrden_in;
  wire [3:0]txdlysreset_in;
  wire [3:0]txdlysresetdone_out;
  wire [3:0]txdlyupdown_in;
  wire [3:0]txelecidle_in;
  wire [23:0]txheader_in;
  wire [3:0]txinhibit_in;
  wire [3:0]txlatclk_in;
  wire [27:0]txmaincursor_in;
  wire [11:0]txmargin_in;
  wire [3:0]txoutclk_out;
  wire [3:0]txoutclkfabric_out;
  wire [3:0]txoutclkpcs_out;
  wire [11:0]txoutclksel_in;
  wire [3:0]txpcsreset_in;
  wire [7:0]txpd_in;
  wire [3:0]txpdelecidlemode_in;
  wire [3:0]txphalign_in;
  wire [3:0]txphaligndone_out;
  wire [3:0]txphalignen_in;
  wire [3:0]txphdlypd_in;
  wire [3:0]txphdlyreset_in;
  wire [3:0]txphdlytstclk_in;
  wire [3:0]txphinit_in;
  wire [3:0]txphinitdone_out;
  wire [3:0]txphovrden_in;
  wire [3:0]txpippmen_in;
  wire [3:0]txpippmovrden_in;
  wire [3:0]txpippmpd_in;
  wire [3:0]txpippmsel_in;
  wire [19:0]txpippmstepsize_in;
  wire [3:0]txpisopd_in;
  wire [7:0]txpllclksel_in;
  wire [3:0]txpmareset_in;
  wire [3:0]txpmaresetdone_out;
  wire [3:0]txpolarity_in;
  wire [19:0]txpostcursor_in;
  wire [3:0]txpostcursorinv_in;
  wire [3:0]txprbsforceerr_in;
  wire [15:0]txprbssel_in;
  wire [19:0]txprecursor_in;
  wire [3:0]txprecursorinv_in;
  wire [3:0]txprgdivresetdone_out;
  wire [3:0]txprogdivreset_in;
  wire [3:0]txqpibiasen_in;
  wire [3:0]txqpisenn_out;
  wire [3:0]txqpisenp_out;
  wire [3:0]txqpistrongpdown_in;
  wire [3:0]txqpiweakpup_in;
  wire [11:0]txrate_in;
  wire [3:0]txratedone_out;
  wire [3:0]txratemode_in;
  wire [3:0]txresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txswing_in;
  wire [3:0]txsyncallin_in;
  wire [3:0]txsyncdone_out;
  wire [3:0]txsyncin_in;
  wire [3:0]txsyncmode_in;
  wire [3:0]txsyncout_out;
  wire [7:0]txsysclksel_in;
  wire [3:0]txuserrdy_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[2:0]),
        .BUFGTCEMASK(bufgtcemask_out[2:0]),
        .BUFGTDIV(bufgtdiv_out[8:0]),
        .BUFGTRESET(bufgtreset_out[2:0]),
        .BUFGTRSTMASK(bufgtrstmask_out[2:0]),
        .CFGRESET(cfgreset_in[0]),
        .CLKRSVD0(clkrsvd0_in[0]),
        .CLKRSVD1(clkrsvd1_in[0]),
        .CPLLFBCLKLOST(cpllfbclklost_out[0]),
        .CPLLLOCK(cplllock_out[0]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[0]),
        .CPLLLOCKEN(cplllocken_in[0]),
        .CPLLPD(cpllpd_in[0]),
        .CPLLREFCLKLOST(cpllrefclklost_out[0]),
        .CPLLREFCLKSEL(cpllrefclksel_in[2:0]),
        .CPLLRESET(cpllreset_in[0]),
        .DMONFIFORESET(dmonfiforeset_in[0]),
        .DMONITORCLK(dmonitorclk_in[0]),
        .DMONITOROUT(dmonitorout_out[16:0]),
        .DRPADDR(drpaddr_in[8:0]),
        .DRPCLK(drpclk_in[0]),
        .DRPDI(drpdi_in[15:0]),
        .DRPDO(drpdo_out[15:0]),
        .DRPEN(drpen_in[0]),
        .DRPRDY(drprdy_out[0]),
        .DRPWE(drpwe_in[0]),
        .EVODDPHICALDONE(evoddphicaldone_in[0]),
        .EVODDPHICALSTART(evoddphicalstart_in[0]),
        .EVODDPHIDRDEN(evoddphidrden_in[0]),
        .EVODDPHIDWREN(evoddphidwren_in[0]),
        .EVODDPHIXRDEN(evoddphixrden_in[0]),
        .EVODDPHIXWREN(evoddphixwren_in[0]),
        .EYESCANDATAERROR(eyescandataerror_out[0]),
        .EYESCANMODE(eyescanmode_in[0]),
        .EYESCANRESET(eyescanreset_in[0]),
        .EYESCANTRIGGER(eyescantrigger_in[0]),
        .GTGREFCLK(gtgrefclk_in[0]),
        .GTHRXN(gthrxn_in[0]),
        .GTHRXP(gthrxp_in[0]),
        .GTHTXN(gthtxn_out[0]),
        .GTHTXP(gthtxp_out[0]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[0]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[0]),
        .GTPOWERGOOD(gtpowergood_out[0]),
        .GTREFCLK0(gtrefclk0_in[0]),
        .GTREFCLK1(gtrefclk1_in[0]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[0]),
        .GTRESETSEL(gtresetsel_in[0]),
        .GTRSVD(gtrsvd_in[15:0]),
        .GTRXRESET(gtrxreset_in[0]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[0]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[0]),
        .GTTXRESET(gttxreset_in[0]),
        .LOOPBACK(loopback_in[2:0]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[0]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[0]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[0]),
        .PCIERATEGEN3(pcierategen3_out[0]),
        .PCIERATEIDLE(pcierateidle_out[0]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[1:0]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[1:0]),
        .PCIERSTIDLE(pcierstidle_in[0]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[0]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[0]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[0]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[0]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[0]),
        .PCIEUSERRATESTART(pcieuserratestart_out[0]),
        .PCSRSVDIN(pcsrsvdin_in[15:0]),
        .PCSRSVDIN2(pcsrsvdin2_in[4:0]),
        .PCSRSVDOUT(pcsrsvdout_out[11:0]),
        .PHYSTATUS(phystatus_out[0]),
        .PINRSRVDAS(pinrsrvdas_out[7:0]),
        .PMARSVDIN(pmarsvdin_in[4:0]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[0]),
        .RESETOVRD(resetovrd_in[0]),
        .RSTCLKENTX(rstclkentx_in[0]),
        .RX8B10BEN(rx8b10ben_in[0]),
        .RXBUFRESET(rxbufreset_in[0]),
        .RXBUFSTATUS(rxbufstatus_out[2:0]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[0]),
        .RXBYTEREALIGN(rxbyterealign_out[0]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[0]),
        .RXCDRHOLD(rxcdrhold_in[0]),
        .RXCDRLOCK(rxcdrlock_out[0]),
        .RXCDROVRDEN(rxcdrovrden_in[0]),
        .RXCDRPHDONE(rxcdrphdone_out[0]),
        .RXCDRRESET(rxcdrreset_in[0]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[0]),
        .RXCHANBONDSEQ(rxchanbondseq_out[0]),
        .RXCHANISALIGNED(rxchanisaligned_out[0]),
        .RXCHANREALIGN(rxchanrealign_out[0]),
        .RXCHBONDEN(rxchbonden_in[0]),
        .RXCHBONDI(rxchbondi_in[4:0]),
        .RXCHBONDLEVEL(rxchbondlevel_in[2:0]),
        .RXCHBONDMASTER(rxchbondmaster_in[0]),
        .RXCHBONDO(rxchbondo_out[4:0]),
        .RXCHBONDSLAVE(rxchbondslave_in[0]),
        .RXCLKCORCNT(rxclkcorcnt_out[1:0]),
        .RXCOMINITDET(rxcominitdet_out[0]),
        .RXCOMMADET(rxcommadet_out[0]),
        .RXCOMMADETEN(rxcommadeten_in[0]),
        .RXCOMSASDET(rxcomsasdet_out[0]),
        .RXCOMWAKEDET(rxcomwakedet_out[0]),
        .RXCTRL0(rxctrl0_out[15:0]),
        .RXCTRL1(rxctrl1_out[15:0]),
        .RXCTRL2(rxctrl2_out[7:0]),
        .RXCTRL3(rxctrl3_out[7:0]),
        .RXDATA(rxdata_out[127:0]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[7:0]),
        .RXDATAVALID(rxdatavalid_out[1:0]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[1:0]),
        .RXDFEAGCHOLD(rxdfeagchold_in[0]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[0]),
        .RXDFELFHOLD(rxdfelfhold_in[0]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[0]),
        .RXDFELPMRESET(rxdfelpmreset_in[0]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[0]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[0]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[0]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[0]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[0]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[0]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[0]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[0]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[0]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[0]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[0]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[0]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[0]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[0]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[0]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[0]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[0]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[0]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[0]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[0]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[0]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[0]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[0]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[0]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[0]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[0]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[0]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[0]),
        .RXDFEUTHOLD(rxdfeuthold_in[0]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[0]),
        .RXDFEVPHOLD(rxdfevphold_in[0]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[0]),
        .RXDFEVSEN(rxdfevsen_in[0]),
        .RXDFEXYDEN(rxdfexyden_in[0]),
        .RXDLYBYPASS(rxdlybypass_in[0]),
        .RXDLYEN(rxdlyen_in[0]),
        .RXDLYOVRDEN(rxdlyovrden_in[0]),
        .RXDLYSRESET(rxdlysreset_in[0]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[0]),
        .RXELECIDLE(rxelecidle_out[0]),
        .RXELECIDLEMODE(rxelecidlemode_in[1:0]),
        .RXGEARBOXSLIP(rxgearboxslip_in[0]),
        .RXHEADER(rxheader_out[5:0]),
        .RXHEADERVALID(rxheadervalid_out[1:0]),
        .RXLATCLK(rxlatclk_in[0]),
        .RXLPMEN(rxlpmen_in[0]),
        .RXLPMGCHOLD(rxlpmgchold_in[0]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[0]),
        .RXLPMHFHOLD(rxlpmhfhold_in[0]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[0]),
        .RXLPMLFHOLD(rxlpmlfhold_in[0]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[0]),
        .RXLPMOSHOLD(rxlpmoshold_in[0]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[0]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[0]),
        .RXMONITOROUT(rxmonitorout_out[6:0]),
        .RXMONITORSEL(rxmonitorsel_in[1:0]),
        .RXOOBRESET(rxoobreset_in[0]),
        .RXOSCALRESET(rxoscalreset_in[0]),
        .RXOSHOLD(rxoshold_in[0]),
        .RXOSINTCFG(rxosintcfg_in[3:0]),
        .RXOSINTDONE(rxosintdone_out[0]),
        .RXOSINTEN(rxosinten_in[0]),
        .RXOSINTHOLD(rxosinthold_in[0]),
        .RXOSINTOVRDEN(rxosintovrden_in[0]),
        .RXOSINTSTARTED(rxosintstarted_out[0]),
        .RXOSINTSTROBE(rxosintstrobe_in[0]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[0]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[0]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[0]),
        .RXOSOVRDEN(rxosovrden_in[0]),
        .RXOUTCLK(rxoutclk_out[0]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[0]),
        .RXOUTCLKPCS(rxoutclkpcs_out[0]),
        .RXOUTCLKSEL(rxoutclksel_in[2:0]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[0]),
        .RXPCSRESET(rxpcsreset_in[0]),
        .RXPD(rxpd_in[1:0]),
        .RXPHALIGN(rxphalign_in[0]),
        .RXPHALIGNDONE(rxphaligndone_out[0]),
        .RXPHALIGNEN(rxphalignen_in[0]),
        .RXPHALIGNERR(rxphalignerr_out[0]),
        .RXPHDLYPD(rxphdlypd_in[0]),
        .RXPHDLYRESET(rxphdlyreset_in[0]),
        .RXPHOVRDEN(rxphovrden_in[0]),
        .RXPLLCLKSEL(rxpllclksel_in[1:0]),
        .RXPMARESET(rxpmareset_in[0]),
        .RXPMARESETDONE(rxpmaresetdone_out[0]),
        .RXPOLARITY(rxpolarity_in[0]),
        .RXPRBSCNTRESET(rxprbscntreset_in[0]),
        .RXPRBSERR(rxprbserr_out[0]),
        .RXPRBSLOCKED(rxprbslocked_out[0]),
        .RXPRBSSEL(rxprbssel_in[3:0]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[0]),
        .RXPROGDIVRESET(rxprogdivreset_in[0]),
        .RXQPIEN(rxqpien_in[0]),
        .RXQPISENN(rxqpisenn_out[0]),
        .RXQPISENP(rxqpisenp_out[0]),
        .RXRATE(rxrate_in[2:0]),
        .RXRATEDONE(rxratedone_out[0]),
        .RXRATEMODE(rxratemode_in[0]),
        .RXRECCLKOUT(rxrecclkout_out[0]),
        .RXRESETDONE(rxresetdone_out[0]),
        .RXSLIDE(rxslide_in[0]),
        .RXSLIDERDY(rxsliderdy_out[0]),
        .RXSLIPDONE(rxslipdone_out[0]),
        .RXSLIPOUTCLK(rxslipoutclk_in[0]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[0]),
        .RXSLIPPMA(rxslippma_in[0]),
        .RXSLIPPMARDY(rxslippmardy_out[0]),
        .RXSTARTOFSEQ(rxstartofseq_out[1:0]),
        .RXSTATUS(rxstatus_out[2:0]),
        .RXSYNCALLIN(rxsyncallin_in[0]),
        .RXSYNCDONE(rxsyncdone_out[0]),
        .RXSYNCIN(rxsyncin_in[0]),
        .RXSYNCMODE(rxsyncmode_in[0]),
        .RXSYNCOUT(rxsyncout_out[0]),
        .RXSYSCLKSEL(rxsysclksel_in[1:0]),
        .RXUSERRDY(rxuserrdy_in[0]),
        .RXUSRCLK(rxusrclk_in[0]),
        .RXUSRCLK2(rxusrclk2_in[0]),
        .RXVALID(rxvalid_out[0]),
        .SIGVALIDCLK(sigvalidclk_in[0]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[7:0]),
        .TX8B10BEN(tx8b10ben_in[0]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[2:0]),
        .TXBUFSTATUS(txbufstatus_out[1:0]),
        .TXCOMFINISH(txcomfinish_out[0]),
        .TXCOMINIT(txcominit_in[0]),
        .TXCOMSAS(txcomsas_in[0]),
        .TXCOMWAKE(txcomwake_in[0]),
        .TXCTRL0(txctrl0_in[15:0]),
        .TXCTRL1(txctrl1_in[15:0]),
        .TXCTRL2(txctrl2_in[7:0]),
        .TXDATA(txdata_in[127:0]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[7:0]),
        .TXDEEMPH(txdeemph_in[0]),
        .TXDETECTRX(txdetectrx_in[0]),
        .TXDIFFCTRL(txdiffctrl_in[3:0]),
        .TXDIFFPD(txdiffpd_in[0]),
        .TXDLYBYPASS(txdlybypass_in[0]),
        .TXDLYEN(txdlyen_in[0]),
        .TXDLYHOLD(txdlyhold_in[0]),
        .TXDLYOVRDEN(txdlyovrden_in[0]),
        .TXDLYSRESET(txdlysreset_in[0]),
        .TXDLYSRESETDONE(txdlysresetdone_out[0]),
        .TXDLYUPDOWN(txdlyupdown_in[0]),
        .TXELECIDLE(txelecidle_in[0]),
        .TXHEADER(txheader_in[5:0]),
        .TXINHIBIT(txinhibit_in[0]),
        .TXLATCLK(txlatclk_in[0]),
        .TXMAINCURSOR(txmaincursor_in[6:0]),
        .TXMARGIN(txmargin_in[2:0]),
        .TXOUTCLK(txoutclk_out[0]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[0]),
        .TXOUTCLKPCS(txoutclkpcs_out[0]),
        .TXOUTCLKSEL(txoutclksel_in[2:0]),
        .TXPCSRESET(txpcsreset_in[0]),
        .TXPD(txpd_in[1:0]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[0]),
        .TXPHALIGN(txphalign_in[0]),
        .TXPHALIGNDONE(txphaligndone_out[0]),
        .TXPHALIGNEN(txphalignen_in[0]),
        .TXPHDLYPD(txphdlypd_in[0]),
        .TXPHDLYRESET(txphdlyreset_in[0]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[0]),
        .TXPHINIT(txphinit_in[0]),
        .TXPHINITDONE(txphinitdone_out[0]),
        .TXPHOVRDEN(txphovrden_in[0]),
        .TXPIPPMEN(txpippmen_in[0]),
        .TXPIPPMOVRDEN(txpippmovrden_in[0]),
        .TXPIPPMPD(txpippmpd_in[0]),
        .TXPIPPMSEL(txpippmsel_in[0]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[4:0]),
        .TXPISOPD(txpisopd_in[0]),
        .TXPLLCLKSEL(txpllclksel_in[1:0]),
        .TXPMARESET(txpmareset_in[0]),
        .TXPMARESETDONE(txpmaresetdone_out[0]),
        .TXPOLARITY(txpolarity_in[0]),
        .TXPOSTCURSOR(txpostcursor_in[4:0]),
        .TXPOSTCURSORINV(txpostcursorinv_in[0]),
        .TXPRBSFORCEERR(txprbsforceerr_in[0]),
        .TXPRBSSEL(txprbssel_in[3:0]),
        .TXPRECURSOR(txprecursor_in[4:0]),
        .TXPRECURSORINV(txprecursorinv_in[0]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[0]),
        .TXPROGDIVRESET(txprogdivreset_in[0]),
        .TXQPIBIASEN(txqpibiasen_in[0]),
        .TXQPISENN(txqpisenn_out[0]),
        .TXQPISENP(txqpisenp_out[0]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[0]),
        .TXQPIWEAKPUP(txqpiweakpup_in[0]),
        .TXRATE(txrate_in[2:0]),
        .TXRATEDONE(txratedone_out[0]),
        .TXRATEMODE(txratemode_in[0]),
        .TXRESETDONE(txresetdone_out[0]),
        .TXSEQUENCE(txsequence_in[6:0]),
        .TXSWING(txswing_in[0]),
        .TXSYNCALLIN(txsyncallin_in[0]),
        .TXSYNCDONE(txsyncdone_out[0]),
        .TXSYNCIN(txsyncin_in[0]),
        .TXSYNCMODE(txsyncmode_in[0]),
        .TXSYNCOUT(txsyncout_out[0]),
        .TXSYSCLKSEL(txsysclksel_in[1:0]),
        .TXUSERRDY(txuserrdy_in[0]),
        .TXUSRCLK(txusrclk_in[0]),
        .TXUSRCLK2(txusrclk2_in[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[1].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[5:3]),
        .BUFGTCEMASK(bufgtcemask_out[5:3]),
        .BUFGTDIV(bufgtdiv_out[17:9]),
        .BUFGTRESET(bufgtreset_out[5:3]),
        .BUFGTRSTMASK(bufgtrstmask_out[5:3]),
        .CFGRESET(cfgreset_in[1]),
        .CLKRSVD0(clkrsvd0_in[1]),
        .CLKRSVD1(clkrsvd1_in[1]),
        .CPLLFBCLKLOST(cpllfbclklost_out[1]),
        .CPLLLOCK(cplllock_out[1]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[1]),
        .CPLLLOCKEN(cplllocken_in[1]),
        .CPLLPD(cpllpd_in[1]),
        .CPLLREFCLKLOST(cpllrefclklost_out[1]),
        .CPLLREFCLKSEL(cpllrefclksel_in[5:3]),
        .CPLLRESET(cpllreset_in[1]),
        .DMONFIFORESET(dmonfiforeset_in[1]),
        .DMONITORCLK(dmonitorclk_in[1]),
        .DMONITOROUT(dmonitorout_out[33:17]),
        .DRPADDR(drpaddr_in[17:9]),
        .DRPCLK(drpclk_in[1]),
        .DRPDI(drpdi_in[31:16]),
        .DRPDO(drpdo_out[31:16]),
        .DRPEN(drpen_in[1]),
        .DRPRDY(drprdy_out[1]),
        .DRPWE(drpwe_in[1]),
        .EVODDPHICALDONE(evoddphicaldone_in[1]),
        .EVODDPHICALSTART(evoddphicalstart_in[1]),
        .EVODDPHIDRDEN(evoddphidrden_in[1]),
        .EVODDPHIDWREN(evoddphidwren_in[1]),
        .EVODDPHIXRDEN(evoddphixrden_in[1]),
        .EVODDPHIXWREN(evoddphixwren_in[1]),
        .EYESCANDATAERROR(eyescandataerror_out[1]),
        .EYESCANMODE(eyescanmode_in[1]),
        .EYESCANRESET(eyescanreset_in[1]),
        .EYESCANTRIGGER(eyescantrigger_in[1]),
        .GTGREFCLK(gtgrefclk_in[1]),
        .GTHRXN(gthrxn_in[1]),
        .GTHRXP(gthrxp_in[1]),
        .GTHTXN(gthtxn_out[1]),
        .GTHTXP(gthtxp_out[1]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[1]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[1]),
        .GTPOWERGOOD(gtpowergood_out[1]),
        .GTREFCLK0(gtrefclk0_in[1]),
        .GTREFCLK1(gtrefclk1_in[1]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[1]),
        .GTRESETSEL(gtresetsel_in[1]),
        .GTRSVD(gtrsvd_in[31:16]),
        .GTRXRESET(gtrxreset_in[1]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[1]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[1]),
        .GTTXRESET(gttxreset_in[1]),
        .LOOPBACK(loopback_in[5:3]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[1]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[1]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[1]),
        .PCIERATEGEN3(pcierategen3_out[1]),
        .PCIERATEIDLE(pcierateidle_out[1]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[3:2]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[3:2]),
        .PCIERSTIDLE(pcierstidle_in[1]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[1]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[1]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[1]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[1]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[1]),
        .PCIEUSERRATESTART(pcieuserratestart_out[1]),
        .PCSRSVDIN(pcsrsvdin_in[31:16]),
        .PCSRSVDIN2(pcsrsvdin2_in[9:5]),
        .PCSRSVDOUT(pcsrsvdout_out[23:12]),
        .PHYSTATUS(phystatus_out[1]),
        .PINRSRVDAS(pinrsrvdas_out[15:8]),
        .PMARSVDIN(pmarsvdin_in[9:5]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[1]),
        .RESETOVRD(resetovrd_in[1]),
        .RSTCLKENTX(rstclkentx_in[1]),
        .RX8B10BEN(rx8b10ben_in[1]),
        .RXBUFRESET(rxbufreset_in[1]),
        .RXBUFSTATUS(rxbufstatus_out[5:3]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[1]),
        .RXBYTEREALIGN(rxbyterealign_out[1]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[1]),
        .RXCDRHOLD(rxcdrhold_in[1]),
        .RXCDRLOCK(rxcdrlock_out[1]),
        .RXCDROVRDEN(rxcdrovrden_in[1]),
        .RXCDRPHDONE(rxcdrphdone_out[1]),
        .RXCDRRESET(rxcdrreset_in[1]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[1]),
        .RXCHANBONDSEQ(rxchanbondseq_out[1]),
        .RXCHANISALIGNED(rxchanisaligned_out[1]),
        .RXCHANREALIGN(rxchanrealign_out[1]),
        .RXCHBONDEN(rxchbonden_in[1]),
        .RXCHBONDI(rxchbondi_in[9:5]),
        .RXCHBONDLEVEL(rxchbondlevel_in[5:3]),
        .RXCHBONDMASTER(rxchbondmaster_in[1]),
        .RXCHBONDO(rxchbondo_out[9:5]),
        .RXCHBONDSLAVE(rxchbondslave_in[1]),
        .RXCLKCORCNT(rxclkcorcnt_out[3:2]),
        .RXCOMINITDET(rxcominitdet_out[1]),
        .RXCOMMADET(rxcommadet_out[1]),
        .RXCOMMADETEN(rxcommadeten_in[1]),
        .RXCOMSASDET(rxcomsasdet_out[1]),
        .RXCOMWAKEDET(rxcomwakedet_out[1]),
        .RXCTRL0(rxctrl0_out[31:16]),
        .RXCTRL1(rxctrl1_out[31:16]),
        .RXCTRL2(rxctrl2_out[15:8]),
        .RXCTRL3(rxctrl3_out[15:8]),
        .RXDATA(rxdata_out[255:128]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[15:8]),
        .RXDATAVALID(rxdatavalid_out[3:2]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[3:2]),
        .RXDFEAGCHOLD(rxdfeagchold_in[1]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[1]),
        .RXDFELFHOLD(rxdfelfhold_in[1]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[1]),
        .RXDFELPMRESET(rxdfelpmreset_in[1]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[1]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[1]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[1]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[1]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[1]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[1]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[1]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[1]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[1]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[1]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[1]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[1]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[1]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[1]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[1]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[1]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[1]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[1]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[1]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[1]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[1]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[1]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[1]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[1]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[1]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[1]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[1]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[1]),
        .RXDFEUTHOLD(rxdfeuthold_in[1]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[1]),
        .RXDFEVPHOLD(rxdfevphold_in[1]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[1]),
        .RXDFEVSEN(rxdfevsen_in[1]),
        .RXDFEXYDEN(rxdfexyden_in[1]),
        .RXDLYBYPASS(rxdlybypass_in[1]),
        .RXDLYEN(rxdlyen_in[1]),
        .RXDLYOVRDEN(rxdlyovrden_in[1]),
        .RXDLYSRESET(rxdlysreset_in[1]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[1]),
        .RXELECIDLE(rxelecidle_out[1]),
        .RXELECIDLEMODE(rxelecidlemode_in[3:2]),
        .RXGEARBOXSLIP(rxgearboxslip_in[1]),
        .RXHEADER(rxheader_out[11:6]),
        .RXHEADERVALID(rxheadervalid_out[3:2]),
        .RXLATCLK(rxlatclk_in[1]),
        .RXLPMEN(rxlpmen_in[1]),
        .RXLPMGCHOLD(rxlpmgchold_in[1]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[1]),
        .RXLPMHFHOLD(rxlpmhfhold_in[1]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[1]),
        .RXLPMLFHOLD(rxlpmlfhold_in[1]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[1]),
        .RXLPMOSHOLD(rxlpmoshold_in[1]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[1]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[1]),
        .RXMONITOROUT(rxmonitorout_out[13:7]),
        .RXMONITORSEL(rxmonitorsel_in[3:2]),
        .RXOOBRESET(rxoobreset_in[1]),
        .RXOSCALRESET(rxoscalreset_in[1]),
        .RXOSHOLD(rxoshold_in[1]),
        .RXOSINTCFG(rxosintcfg_in[7:4]),
        .RXOSINTDONE(rxosintdone_out[1]),
        .RXOSINTEN(rxosinten_in[1]),
        .RXOSINTHOLD(rxosinthold_in[1]),
        .RXOSINTOVRDEN(rxosintovrden_in[1]),
        .RXOSINTSTARTED(rxosintstarted_out[1]),
        .RXOSINTSTROBE(rxosintstrobe_in[1]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[1]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[1]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[1]),
        .RXOSOVRDEN(rxosovrden_in[1]),
        .RXOUTCLK(rxoutclk_out[1]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[1]),
        .RXOUTCLKPCS(rxoutclkpcs_out[1]),
        .RXOUTCLKSEL(rxoutclksel_in[5:3]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[1]),
        .RXPCSRESET(rxpcsreset_in[1]),
        .RXPD(rxpd_in[3:2]),
        .RXPHALIGN(rxphalign_in[1]),
        .RXPHALIGNDONE(rxphaligndone_out[1]),
        .RXPHALIGNEN(rxphalignen_in[1]),
        .RXPHALIGNERR(rxphalignerr_out[1]),
        .RXPHDLYPD(rxphdlypd_in[1]),
        .RXPHDLYRESET(rxphdlyreset_in[1]),
        .RXPHOVRDEN(rxphovrden_in[1]),
        .RXPLLCLKSEL(rxpllclksel_in[3:2]),
        .RXPMARESET(rxpmareset_in[1]),
        .RXPMARESETDONE(rxpmaresetdone_out[1]),
        .RXPOLARITY(rxpolarity_in[1]),
        .RXPRBSCNTRESET(rxprbscntreset_in[1]),
        .RXPRBSERR(rxprbserr_out[1]),
        .RXPRBSLOCKED(rxprbslocked_out[1]),
        .RXPRBSSEL(rxprbssel_in[7:4]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[1]),
        .RXPROGDIVRESET(rxprogdivreset_in[1]),
        .RXQPIEN(rxqpien_in[1]),
        .RXQPISENN(rxqpisenn_out[1]),
        .RXQPISENP(rxqpisenp_out[1]),
        .RXRATE(rxrate_in[5:3]),
        .RXRATEDONE(rxratedone_out[1]),
        .RXRATEMODE(rxratemode_in[1]),
        .RXRECCLKOUT(rxrecclkout_out[1]),
        .RXRESETDONE(rxresetdone_out[1]),
        .RXSLIDE(rxslide_in[1]),
        .RXSLIDERDY(rxsliderdy_out[1]),
        .RXSLIPDONE(rxslipdone_out[1]),
        .RXSLIPOUTCLK(rxslipoutclk_in[1]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[1]),
        .RXSLIPPMA(rxslippma_in[1]),
        .RXSLIPPMARDY(rxslippmardy_out[1]),
        .RXSTARTOFSEQ(rxstartofseq_out[3:2]),
        .RXSTATUS(rxstatus_out[5:3]),
        .RXSYNCALLIN(rxsyncallin_in[1]),
        .RXSYNCDONE(rxsyncdone_out[1]),
        .RXSYNCIN(rxsyncin_in[1]),
        .RXSYNCMODE(rxsyncmode_in[1]),
        .RXSYNCOUT(rxsyncout_out[1]),
        .RXSYSCLKSEL(rxsysclksel_in[3:2]),
        .RXUSERRDY(rxuserrdy_in[1]),
        .RXUSRCLK(rxusrclk_in[1]),
        .RXUSRCLK2(rxusrclk2_in[1]),
        .RXVALID(rxvalid_out[1]),
        .SIGVALIDCLK(sigvalidclk_in[1]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[15:8]),
        .TX8B10BEN(tx8b10ben_in[1]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[5:3]),
        .TXBUFSTATUS(txbufstatus_out[3:2]),
        .TXCOMFINISH(txcomfinish_out[1]),
        .TXCOMINIT(txcominit_in[1]),
        .TXCOMSAS(txcomsas_in[1]),
        .TXCOMWAKE(txcomwake_in[1]),
        .TXCTRL0(txctrl0_in[31:16]),
        .TXCTRL1(txctrl1_in[31:16]),
        .TXCTRL2(txctrl2_in[15:8]),
        .TXDATA(txdata_in[255:128]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[15:8]),
        .TXDEEMPH(txdeemph_in[1]),
        .TXDETECTRX(txdetectrx_in[1]),
        .TXDIFFCTRL(txdiffctrl_in[7:4]),
        .TXDIFFPD(txdiffpd_in[1]),
        .TXDLYBYPASS(txdlybypass_in[1]),
        .TXDLYEN(txdlyen_in[1]),
        .TXDLYHOLD(txdlyhold_in[1]),
        .TXDLYOVRDEN(txdlyovrden_in[1]),
        .TXDLYSRESET(txdlysreset_in[1]),
        .TXDLYSRESETDONE(txdlysresetdone_out[1]),
        .TXDLYUPDOWN(txdlyupdown_in[1]),
        .TXELECIDLE(txelecidle_in[1]),
        .TXHEADER(txheader_in[11:6]),
        .TXINHIBIT(txinhibit_in[1]),
        .TXLATCLK(txlatclk_in[1]),
        .TXMAINCURSOR(txmaincursor_in[13:7]),
        .TXMARGIN(txmargin_in[5:3]),
        .TXOUTCLK(txoutclk_out[1]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[1]),
        .TXOUTCLKPCS(txoutclkpcs_out[1]),
        .TXOUTCLKSEL(txoutclksel_in[5:3]),
        .TXPCSRESET(txpcsreset_in[1]),
        .TXPD(txpd_in[3:2]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[1]),
        .TXPHALIGN(txphalign_in[1]),
        .TXPHALIGNDONE(txphaligndone_out[1]),
        .TXPHALIGNEN(txphalignen_in[1]),
        .TXPHDLYPD(txphdlypd_in[1]),
        .TXPHDLYRESET(txphdlyreset_in[1]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[1]),
        .TXPHINIT(txphinit_in[1]),
        .TXPHINITDONE(txphinitdone_out[1]),
        .TXPHOVRDEN(txphovrden_in[1]),
        .TXPIPPMEN(txpippmen_in[1]),
        .TXPIPPMOVRDEN(txpippmovrden_in[1]),
        .TXPIPPMPD(txpippmpd_in[1]),
        .TXPIPPMSEL(txpippmsel_in[1]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[9:5]),
        .TXPISOPD(txpisopd_in[1]),
        .TXPLLCLKSEL(txpllclksel_in[3:2]),
        .TXPMARESET(txpmareset_in[1]),
        .TXPMARESETDONE(txpmaresetdone_out[1]),
        .TXPOLARITY(txpolarity_in[1]),
        .TXPOSTCURSOR(txpostcursor_in[9:5]),
        .TXPOSTCURSORINV(txpostcursorinv_in[1]),
        .TXPRBSFORCEERR(txprbsforceerr_in[1]),
        .TXPRBSSEL(txprbssel_in[7:4]),
        .TXPRECURSOR(txprecursor_in[9:5]),
        .TXPRECURSORINV(txprecursorinv_in[1]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[1]),
        .TXPROGDIVRESET(txprogdivreset_in[1]),
        .TXQPIBIASEN(txqpibiasen_in[1]),
        .TXQPISENN(txqpisenn_out[1]),
        .TXQPISENP(txqpisenp_out[1]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[1]),
        .TXQPIWEAKPUP(txqpiweakpup_in[1]),
        .TXRATE(txrate_in[5:3]),
        .TXRATEDONE(txratedone_out[1]),
        .TXRATEMODE(txratemode_in[1]),
        .TXRESETDONE(txresetdone_out[1]),
        .TXSEQUENCE(txsequence_in[13:7]),
        .TXSWING(txswing_in[1]),
        .TXSYNCALLIN(txsyncallin_in[1]),
        .TXSYNCDONE(txsyncdone_out[1]),
        .TXSYNCIN(txsyncin_in[1]),
        .TXSYNCMODE(txsyncmode_in[1]),
        .TXSYNCOUT(txsyncout_out[1]),
        .TXSYSCLKSEL(txsysclksel_in[3:2]),
        .TXUSERRDY(txuserrdy_in[1]),
        .TXUSRCLK(txusrclk_in[1]),
        .TXUSRCLK2(txusrclk2_in[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[2].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[8:6]),
        .BUFGTCEMASK(bufgtcemask_out[8:6]),
        .BUFGTDIV(bufgtdiv_out[26:18]),
        .BUFGTRESET(bufgtreset_out[8:6]),
        .BUFGTRSTMASK(bufgtrstmask_out[8:6]),
        .CFGRESET(cfgreset_in[2]),
        .CLKRSVD0(clkrsvd0_in[2]),
        .CLKRSVD1(clkrsvd1_in[2]),
        .CPLLFBCLKLOST(cpllfbclklost_out[2]),
        .CPLLLOCK(cplllock_out[2]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[2]),
        .CPLLLOCKEN(cplllocken_in[2]),
        .CPLLPD(cpllpd_in[2]),
        .CPLLREFCLKLOST(cpllrefclklost_out[2]),
        .CPLLREFCLKSEL(cpllrefclksel_in[8:6]),
        .CPLLRESET(cpllreset_in[2]),
        .DMONFIFORESET(dmonfiforeset_in[2]),
        .DMONITORCLK(dmonitorclk_in[2]),
        .DMONITOROUT(dmonitorout_out[50:34]),
        .DRPADDR(drpaddr_in[26:18]),
        .DRPCLK(drpclk_in[2]),
        .DRPDI(drpdi_in[47:32]),
        .DRPDO(drpdo_out[47:32]),
        .DRPEN(drpen_in[2]),
        .DRPRDY(drprdy_out[2]),
        .DRPWE(drpwe_in[2]),
        .EVODDPHICALDONE(evoddphicaldone_in[2]),
        .EVODDPHICALSTART(evoddphicalstart_in[2]),
        .EVODDPHIDRDEN(evoddphidrden_in[2]),
        .EVODDPHIDWREN(evoddphidwren_in[2]),
        .EVODDPHIXRDEN(evoddphixrden_in[2]),
        .EVODDPHIXWREN(evoddphixwren_in[2]),
        .EYESCANDATAERROR(eyescandataerror_out[2]),
        .EYESCANMODE(eyescanmode_in[2]),
        .EYESCANRESET(eyescanreset_in[2]),
        .EYESCANTRIGGER(eyescantrigger_in[2]),
        .GTGREFCLK(gtgrefclk_in[2]),
        .GTHRXN(gthrxn_in[2]),
        .GTHRXP(gthrxp_in[2]),
        .GTHTXN(gthtxn_out[2]),
        .GTHTXP(gthtxp_out[2]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[2]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[2]),
        .GTPOWERGOOD(gtpowergood_out[2]),
        .GTREFCLK0(gtrefclk0_in[2]),
        .GTREFCLK1(gtrefclk1_in[2]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[2]),
        .GTRESETSEL(gtresetsel_in[2]),
        .GTRSVD(gtrsvd_in[47:32]),
        .GTRXRESET(gtrxreset_in[2]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[2]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[2]),
        .GTTXRESET(gttxreset_in[2]),
        .LOOPBACK(loopback_in[8:6]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[2]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[2]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[2]),
        .PCIERATEGEN3(pcierategen3_out[2]),
        .PCIERATEIDLE(pcierateidle_out[2]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[5:4]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[5:4]),
        .PCIERSTIDLE(pcierstidle_in[2]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[2]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[2]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[2]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[2]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[2]),
        .PCIEUSERRATESTART(pcieuserratestart_out[2]),
        .PCSRSVDIN(pcsrsvdin_in[47:32]),
        .PCSRSVDIN2(pcsrsvdin2_in[14:10]),
        .PCSRSVDOUT(pcsrsvdout_out[35:24]),
        .PHYSTATUS(phystatus_out[2]),
        .PINRSRVDAS(pinrsrvdas_out[23:16]),
        .PMARSVDIN(pmarsvdin_in[14:10]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[2]),
        .RESETOVRD(resetovrd_in[2]),
        .RSTCLKENTX(rstclkentx_in[2]),
        .RX8B10BEN(rx8b10ben_in[2]),
        .RXBUFRESET(rxbufreset_in[2]),
        .RXBUFSTATUS(rxbufstatus_out[8:6]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[2]),
        .RXBYTEREALIGN(rxbyterealign_out[2]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[2]),
        .RXCDRHOLD(rxcdrhold_in[2]),
        .RXCDRLOCK(rxcdrlock_out[2]),
        .RXCDROVRDEN(rxcdrovrden_in[2]),
        .RXCDRPHDONE(rxcdrphdone_out[2]),
        .RXCDRRESET(rxcdrreset_in[2]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[2]),
        .RXCHANBONDSEQ(rxchanbondseq_out[2]),
        .RXCHANISALIGNED(rxchanisaligned_out[2]),
        .RXCHANREALIGN(rxchanrealign_out[2]),
        .RXCHBONDEN(rxchbonden_in[2]),
        .RXCHBONDI(rxchbondi_in[14:10]),
        .RXCHBONDLEVEL(rxchbondlevel_in[8:6]),
        .RXCHBONDMASTER(rxchbondmaster_in[2]),
        .RXCHBONDO(rxchbondo_out[14:10]),
        .RXCHBONDSLAVE(rxchbondslave_in[2]),
        .RXCLKCORCNT(rxclkcorcnt_out[5:4]),
        .RXCOMINITDET(rxcominitdet_out[2]),
        .RXCOMMADET(rxcommadet_out[2]),
        .RXCOMMADETEN(rxcommadeten_in[2]),
        .RXCOMSASDET(rxcomsasdet_out[2]),
        .RXCOMWAKEDET(rxcomwakedet_out[2]),
        .RXCTRL0(rxctrl0_out[47:32]),
        .RXCTRL1(rxctrl1_out[47:32]),
        .RXCTRL2(rxctrl2_out[23:16]),
        .RXCTRL3(rxctrl3_out[23:16]),
        .RXDATA(rxdata_out[383:256]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[23:16]),
        .RXDATAVALID(rxdatavalid_out[5:4]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[5:4]),
        .RXDFEAGCHOLD(rxdfeagchold_in[2]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[2]),
        .RXDFELFHOLD(rxdfelfhold_in[2]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[2]),
        .RXDFELPMRESET(rxdfelpmreset_in[2]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[2]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[2]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[2]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[2]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[2]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[2]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[2]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[2]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[2]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[2]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[2]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[2]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[2]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[2]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[2]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[2]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[2]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[2]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[2]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[2]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[2]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[2]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[2]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[2]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[2]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[2]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[2]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[2]),
        .RXDFEUTHOLD(rxdfeuthold_in[2]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[2]),
        .RXDFEVPHOLD(rxdfevphold_in[2]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[2]),
        .RXDFEVSEN(rxdfevsen_in[2]),
        .RXDFEXYDEN(rxdfexyden_in[2]),
        .RXDLYBYPASS(rxdlybypass_in[2]),
        .RXDLYEN(rxdlyen_in[2]),
        .RXDLYOVRDEN(rxdlyovrden_in[2]),
        .RXDLYSRESET(rxdlysreset_in[2]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[2]),
        .RXELECIDLE(rxelecidle_out[2]),
        .RXELECIDLEMODE(rxelecidlemode_in[5:4]),
        .RXGEARBOXSLIP(rxgearboxslip_in[2]),
        .RXHEADER(rxheader_out[17:12]),
        .RXHEADERVALID(rxheadervalid_out[5:4]),
        .RXLATCLK(rxlatclk_in[2]),
        .RXLPMEN(rxlpmen_in[2]),
        .RXLPMGCHOLD(rxlpmgchold_in[2]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[2]),
        .RXLPMHFHOLD(rxlpmhfhold_in[2]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[2]),
        .RXLPMLFHOLD(rxlpmlfhold_in[2]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[2]),
        .RXLPMOSHOLD(rxlpmoshold_in[2]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[2]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[2]),
        .RXMONITOROUT(rxmonitorout_out[20:14]),
        .RXMONITORSEL(rxmonitorsel_in[5:4]),
        .RXOOBRESET(rxoobreset_in[2]),
        .RXOSCALRESET(rxoscalreset_in[2]),
        .RXOSHOLD(rxoshold_in[2]),
        .RXOSINTCFG(rxosintcfg_in[11:8]),
        .RXOSINTDONE(rxosintdone_out[2]),
        .RXOSINTEN(rxosinten_in[2]),
        .RXOSINTHOLD(rxosinthold_in[2]),
        .RXOSINTOVRDEN(rxosintovrden_in[2]),
        .RXOSINTSTARTED(rxosintstarted_out[2]),
        .RXOSINTSTROBE(rxosintstrobe_in[2]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[2]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[2]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[2]),
        .RXOSOVRDEN(rxosovrden_in[2]),
        .RXOUTCLK(rxoutclk_out[2]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[2]),
        .RXOUTCLKPCS(rxoutclkpcs_out[2]),
        .RXOUTCLKSEL(rxoutclksel_in[8:6]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[2]),
        .RXPCSRESET(rxpcsreset_in[2]),
        .RXPD(rxpd_in[5:4]),
        .RXPHALIGN(rxphalign_in[2]),
        .RXPHALIGNDONE(rxphaligndone_out[2]),
        .RXPHALIGNEN(rxphalignen_in[2]),
        .RXPHALIGNERR(rxphalignerr_out[2]),
        .RXPHDLYPD(rxphdlypd_in[2]),
        .RXPHDLYRESET(rxphdlyreset_in[2]),
        .RXPHOVRDEN(rxphovrden_in[2]),
        .RXPLLCLKSEL(rxpllclksel_in[5:4]),
        .RXPMARESET(rxpmareset_in[2]),
        .RXPMARESETDONE(rxpmaresetdone_out[2]),
        .RXPOLARITY(rxpolarity_in[2]),
        .RXPRBSCNTRESET(rxprbscntreset_in[2]),
        .RXPRBSERR(rxprbserr_out[2]),
        .RXPRBSLOCKED(rxprbslocked_out[2]),
        .RXPRBSSEL(rxprbssel_in[11:8]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[2]),
        .RXPROGDIVRESET(rxprogdivreset_in[2]),
        .RXQPIEN(rxqpien_in[2]),
        .RXQPISENN(rxqpisenn_out[2]),
        .RXQPISENP(rxqpisenp_out[2]),
        .RXRATE(rxrate_in[8:6]),
        .RXRATEDONE(rxratedone_out[2]),
        .RXRATEMODE(rxratemode_in[2]),
        .RXRECCLKOUT(rxrecclkout_out[2]),
        .RXRESETDONE(rxresetdone_out[2]),
        .RXSLIDE(rxslide_in[2]),
        .RXSLIDERDY(rxsliderdy_out[2]),
        .RXSLIPDONE(rxslipdone_out[2]),
        .RXSLIPOUTCLK(rxslipoutclk_in[2]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[2]),
        .RXSLIPPMA(rxslippma_in[2]),
        .RXSLIPPMARDY(rxslippmardy_out[2]),
        .RXSTARTOFSEQ(rxstartofseq_out[5:4]),
        .RXSTATUS(rxstatus_out[8:6]),
        .RXSYNCALLIN(rxsyncallin_in[2]),
        .RXSYNCDONE(rxsyncdone_out[2]),
        .RXSYNCIN(rxsyncin_in[2]),
        .RXSYNCMODE(rxsyncmode_in[2]),
        .RXSYNCOUT(rxsyncout_out[2]),
        .RXSYSCLKSEL(rxsysclksel_in[5:4]),
        .RXUSERRDY(rxuserrdy_in[2]),
        .RXUSRCLK(rxusrclk_in[2]),
        .RXUSRCLK2(rxusrclk2_in[2]),
        .RXVALID(rxvalid_out[2]),
        .SIGVALIDCLK(sigvalidclk_in[2]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[23:16]),
        .TX8B10BEN(tx8b10ben_in[2]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[8:6]),
        .TXBUFSTATUS(txbufstatus_out[5:4]),
        .TXCOMFINISH(txcomfinish_out[2]),
        .TXCOMINIT(txcominit_in[2]),
        .TXCOMSAS(txcomsas_in[2]),
        .TXCOMWAKE(txcomwake_in[2]),
        .TXCTRL0(txctrl0_in[47:32]),
        .TXCTRL1(txctrl1_in[47:32]),
        .TXCTRL2(txctrl2_in[23:16]),
        .TXDATA(txdata_in[383:256]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[23:16]),
        .TXDEEMPH(txdeemph_in[2]),
        .TXDETECTRX(txdetectrx_in[2]),
        .TXDIFFCTRL(txdiffctrl_in[11:8]),
        .TXDIFFPD(txdiffpd_in[2]),
        .TXDLYBYPASS(txdlybypass_in[2]),
        .TXDLYEN(txdlyen_in[2]),
        .TXDLYHOLD(txdlyhold_in[2]),
        .TXDLYOVRDEN(txdlyovrden_in[2]),
        .TXDLYSRESET(txdlysreset_in[2]),
        .TXDLYSRESETDONE(txdlysresetdone_out[2]),
        .TXDLYUPDOWN(txdlyupdown_in[2]),
        .TXELECIDLE(txelecidle_in[2]),
        .TXHEADER(txheader_in[17:12]),
        .TXINHIBIT(txinhibit_in[2]),
        .TXLATCLK(txlatclk_in[2]),
        .TXMAINCURSOR(txmaincursor_in[20:14]),
        .TXMARGIN(txmargin_in[8:6]),
        .TXOUTCLK(txoutclk_out[2]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[2]),
        .TXOUTCLKPCS(txoutclkpcs_out[2]),
        .TXOUTCLKSEL(txoutclksel_in[8:6]),
        .TXPCSRESET(txpcsreset_in[2]),
        .TXPD(txpd_in[5:4]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[2]),
        .TXPHALIGN(txphalign_in[2]),
        .TXPHALIGNDONE(txphaligndone_out[2]),
        .TXPHALIGNEN(txphalignen_in[2]),
        .TXPHDLYPD(txphdlypd_in[2]),
        .TXPHDLYRESET(txphdlyreset_in[2]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[2]),
        .TXPHINIT(txphinit_in[2]),
        .TXPHINITDONE(txphinitdone_out[2]),
        .TXPHOVRDEN(txphovrden_in[2]),
        .TXPIPPMEN(txpippmen_in[2]),
        .TXPIPPMOVRDEN(txpippmovrden_in[2]),
        .TXPIPPMPD(txpippmpd_in[2]),
        .TXPIPPMSEL(txpippmsel_in[2]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[14:10]),
        .TXPISOPD(txpisopd_in[2]),
        .TXPLLCLKSEL(txpllclksel_in[5:4]),
        .TXPMARESET(txpmareset_in[2]),
        .TXPMARESETDONE(txpmaresetdone_out[2]),
        .TXPOLARITY(txpolarity_in[2]),
        .TXPOSTCURSOR(txpostcursor_in[14:10]),
        .TXPOSTCURSORINV(txpostcursorinv_in[2]),
        .TXPRBSFORCEERR(txprbsforceerr_in[2]),
        .TXPRBSSEL(txprbssel_in[11:8]),
        .TXPRECURSOR(txprecursor_in[14:10]),
        .TXPRECURSORINV(txprecursorinv_in[2]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[2]),
        .TXPROGDIVRESET(txprogdivreset_in[2]),
        .TXQPIBIASEN(txqpibiasen_in[2]),
        .TXQPISENN(txqpisenn_out[2]),
        .TXQPISENP(txqpisenp_out[2]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[2]),
        .TXQPIWEAKPUP(txqpiweakpup_in[2]),
        .TXRATE(txrate_in[8:6]),
        .TXRATEDONE(txratedone_out[2]),
        .TXRATEMODE(txratemode_in[2]),
        .TXRESETDONE(txresetdone_out[2]),
        .TXSEQUENCE(txsequence_in[20:14]),
        .TXSWING(txswing_in[2]),
        .TXSYNCALLIN(txsyncallin_in[2]),
        .TXSYNCDONE(txsyncdone_out[2]),
        .TXSYNCIN(txsyncin_in[2]),
        .TXSYNCMODE(txsyncmode_in[2]),
        .TXSYNCOUT(txsyncout_out[2]),
        .TXSYSCLKSEL(txsysclksel_in[5:4]),
        .TXUSERRDY(txuserrdy_in[2]),
        .TXUSRCLK(txusrclk_in[2]),
        .TXUSRCLK2(txusrclk2_in[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'hF800),
    .ADAPT_CFG1(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(13),
    .CLK_COR_MIN_LAT(11),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h60F8),
    .CPLL_CFG1(16'hA4AC),
    .CPLL_CFG2(16'h5007),
    .CPLL_CFG3(6'h00),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(4),
    .CPLL_INIT_CFG0(16'h001E),
    .CPLL_INIT_CFG1(8'h00),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DFE_D_X_REL_POS(1'b0),
    .DFE_VCM_COMP_EN(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .EVODD_PHI_CFG(11'b00000000000),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(5'b00000),
    .GM_BIAS_SELECT(1'b0),
    .LOCAL_MASTER(1'b1),
    .OOBDIVCTL(2'b10),
    .OOB_PWRUP(1'b1),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE_BUFG_DIV_CTRL(16'h1000),
    .PCIE_RXPCS_CFG_GEN3(16'h02A4),
    .PCIE_RXPMA_CFG(16'h0040),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h0040),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD0(16'b0000000000000000),
    .PCS_RSVD1(3'b000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PLL_SEL_MODE_GEN12(2'h3),
    .PLL_SEL_MODE_GEN3(2'h3),
    .PMA_RSV1(16'hF000),
    .PROCESS_PAR(3'b010),
    .RATE_SW_USE_DRP(1'b0),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(0),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(0),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0000),
    .RXCDR_CFG0_GEN3(16'h0000),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h0756),
    .RXCDR_CFG2_GEN3(16'h07E6),
    .RXCDR_CFG3(16'h0000),
    .RXCDR_CFG3_GEN3(16'h0000),
    .RXCDR_CFG4(16'h0000),
    .RXCDR_CFG4_GEN3(16'h0000),
    .RXCDR_CFG5(16'h0000),
    .RXCDR_CFG5_GEN3(16'h0000),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG0(16'h4480),
    .RXCDR_LOCK_CFG1(16'h5FFF),
    .RXCDR_LOCK_CFG2(16'h77C3),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h4000),
    .RXCFOK_CFG1(16'h0065),
    .RXCFOK_CFG2(16'h002E),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'h0002),
    .RXDFELPM_KL_CFG2(16'h0000),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h7870),
    .RXDFE_GC_CFG2(16'h0000),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0000),
    .RXDFE_H3_CFG0(16'h4000),
    .RXDFE_H3_CFG1(16'h0000),
    .RXDFE_H4_CFG0(16'h2000),
    .RXDFE_H4_CFG1(16'h0003),
    .RXDFE_H5_CFG0(16'h2000),
    .RXDFE_H5_CFG1(16'h0003),
    .RXDFE_H6_CFG0(16'h2000),
    .RXDFE_H6_CFG1(16'h0000),
    .RXDFE_H7_CFG0(16'h2000),
    .RXDFE_H7_CFG1(16'h0000),
    .RXDFE_H8_CFG0(16'h2000),
    .RXDFE_H8_CFG1(16'h0000),
    .RXDFE_H9_CFG0(16'h2000),
    .RXDFE_H9_CFG1(16'h0000),
    .RXDFE_HA_CFG0(16'h2000),
    .RXDFE_HA_CFG1(16'h0000),
    .RXDFE_HB_CFG0(16'h2000),
    .RXDFE_HB_CFG1(16'h0000),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h0000),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h0000),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h0000),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h0000),
    .RXDFE_OS_CFG0(16'h8000),
    .RXDFE_OS_CFG1(16'h0000),
    .RXDFE_UT_CFG0(16'h8000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_VP_CFG0(16'hAA00),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("Sigcfg_1"),
    .RXGBOX_FIFO_INIT_RD_ADDR(4),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'h1000),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'h0002),
    .RXLPM_OS_CFG0(16'h8000),
    .RXLPM_OS_CFG1(16'h0002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(4),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2020),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h6622),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b00),
    .RXPI_CFG2(2'b00),
    .RXPI_CFG3(2'b00),
    .RXPI_CFG4(1'b1),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b000),
    .RXPI_LPM(1'b0),
    .RXPI_VREFSEL(1'b0),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h0AB4),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_CTLE3_LPF(8'b00000001),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b10),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b100),
    .RX_DFE_KL_LPM_KL_CFG0(2'b01),
    .RX_DFE_KL_LPM_KL_CFG1(3'b100),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_HI_LR(1'b0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b00),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_INT_DATAWIDTH(0),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PROGDIV_CFG(0.000000),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(4),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_RES_CTRL(2'b00),
    .RX_SUM_VCMTUNE(4'b0000),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b000),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_WIDEMODE_CDR(1'b0),
    .RX_XCLK_SEL("RXDES"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1110),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL(1'b0),
    .SIM_VERSION(2),
    .TAPDLY_SET_TX(2'h0),
    .TEMPERATUR_PAR(4'b0010),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h0009),
    .TXDLY_LCFG(16'h0050),
    .TXDRVBIAS_N(4'b1010),
    .TXDRVBIAS_P(4'b1111),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(4),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h2020),
    .TXPHDLY_CFG1(16'h0075),
    .TXPH_CFG(16'h0980),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b1),
    .TXPI_CFG4(1'b1),
    .TXPI_CFG5(3'b000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_LPM(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPI_VREFSEL(1'b0),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DCD_CFG(6'b000010),
    .TX_DCD_EN(1'b0),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001101),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_EML_PHI_TUNE(1'b0),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001100),
    .TX_MARGIN_FULL_3(7'b1001010),
    .TX_MARGIN_FULL_4(7'b1001000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000101),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_MODE_SEL(3'b000),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PROGCLK_SEL("CPLL"),
    .TX_PROGDIV_CFG(8.000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(3'b100),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SARC_LPBK_ENB(1'b0),
    .TX_XCLK_SEL("TXUSR"),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .WB_MODE(2'b00)) 
    \gthe3_channel_gen.gen_gthe3_channel_inst[3].GTHE3_CHANNEL_PRIM_INST 
       (.BUFGTCE(bufgtce_out[11:9]),
        .BUFGTCEMASK(bufgtcemask_out[11:9]),
        .BUFGTDIV(bufgtdiv_out[35:27]),
        .BUFGTRESET(bufgtreset_out[11:9]),
        .BUFGTRSTMASK(bufgtrstmask_out[11:9]),
        .CFGRESET(cfgreset_in[3]),
        .CLKRSVD0(clkrsvd0_in[3]),
        .CLKRSVD1(clkrsvd1_in[3]),
        .CPLLFBCLKLOST(cpllfbclklost_out[3]),
        .CPLLLOCK(cplllock_out[3]),
        .CPLLLOCKDETCLK(cplllockdetclk_in[3]),
        .CPLLLOCKEN(cplllocken_in[3]),
        .CPLLPD(cpllpd_in[3]),
        .CPLLREFCLKLOST(cpllrefclklost_out[3]),
        .CPLLREFCLKSEL(cpllrefclksel_in[11:9]),
        .CPLLRESET(cpllreset_in[3]),
        .DMONFIFORESET(dmonfiforeset_in[3]),
        .DMONITORCLK(dmonitorclk_in[3]),
        .DMONITOROUT(dmonitorout_out[67:51]),
        .DRPADDR(drpaddr_in[35:27]),
        .DRPCLK(drpclk_in[3]),
        .DRPDI(drpdi_in[63:48]),
        .DRPDO(drpdo_out[63:48]),
        .DRPEN(drpen_in[3]),
        .DRPRDY(drprdy_out[3]),
        .DRPWE(drpwe_in[3]),
        .EVODDPHICALDONE(evoddphicaldone_in[3]),
        .EVODDPHICALSTART(evoddphicalstart_in[3]),
        .EVODDPHIDRDEN(evoddphidrden_in[3]),
        .EVODDPHIDWREN(evoddphidwren_in[3]),
        .EVODDPHIXRDEN(evoddphixrden_in[3]),
        .EVODDPHIXWREN(evoddphixwren_in[3]),
        .EYESCANDATAERROR(eyescandataerror_out[3]),
        .EYESCANMODE(eyescanmode_in[3]),
        .EYESCANRESET(eyescanreset_in[3]),
        .EYESCANTRIGGER(eyescantrigger_in[3]),
        .GTGREFCLK(gtgrefclk_in[3]),
        .GTHRXN(gthrxn_in[3]),
        .GTHRXP(gthrxp_in[3]),
        .GTHTXN(gthtxn_out[3]),
        .GTHTXP(gthtxp_out[3]),
        .GTNORTHREFCLK0(gtnorthrefclk0_in[3]),
        .GTNORTHREFCLK1(gtnorthrefclk1_in[3]),
        .GTPOWERGOOD(gtpowergood_out[3]),
        .GTREFCLK0(gtrefclk0_in[3]),
        .GTREFCLK1(gtrefclk1_in[3]),
        .GTREFCLKMONITOR(gtrefclkmonitor_out[3]),
        .GTRESETSEL(gtresetsel_in[3]),
        .GTRSVD(gtrsvd_in[63:48]),
        .GTRXRESET(gtrxreset_in[3]),
        .GTSOUTHREFCLK0(gtsouthrefclk0_in[3]),
        .GTSOUTHREFCLK1(gtsouthrefclk1_in[3]),
        .GTTXRESET(gttxreset_in[3]),
        .LOOPBACK(loopback_in[11:9]),
        .LPBKRXTXSEREN(lpbkrxtxseren_in[3]),
        .LPBKTXRXSEREN(lpbktxrxseren_in[3]),
        .PCIEEQRXEQADAPTDONE(pcieeqrxeqadaptdone_in[3]),
        .PCIERATEGEN3(pcierategen3_out[3]),
        .PCIERATEIDLE(pcierateidle_out[3]),
        .PCIERATEQPLLPD(pcierateqpllpd_out[7:6]),
        .PCIERATEQPLLRESET(pcierateqpllreset_out[7:6]),
        .PCIERSTIDLE(pcierstidle_in[3]),
        .PCIERSTTXSYNCSTART(pciersttxsyncstart_in[3]),
        .PCIESYNCTXSYNCDONE(pciesynctxsyncdone_out[3]),
        .PCIEUSERGEN3RDY(pcieusergen3rdy_out[3]),
        .PCIEUSERPHYSTATUSRST(pcieuserphystatusrst_out[3]),
        .PCIEUSERRATEDONE(pcieuserratedone_in[3]),
        .PCIEUSERRATESTART(pcieuserratestart_out[3]),
        .PCSRSVDIN(pcsrsvdin_in[63:48]),
        .PCSRSVDIN2(pcsrsvdin2_in[19:15]),
        .PCSRSVDOUT(pcsrsvdout_out[47:36]),
        .PHYSTATUS(phystatus_out[3]),
        .PINRSRVDAS(pinrsrvdas_out[31:24]),
        .PMARSVDIN(pmarsvdin_in[19:15]),
        .QPLL0CLK(qpll0outclk_out),
        .QPLL0REFCLK(qpll0outrefclk_out),
        .QPLL1CLK(qpll1outclk_out),
        .QPLL1REFCLK(qpll1outrefclk_out),
        .RESETEXCEPTION(resetexception_out[3]),
        .RESETOVRD(resetovrd_in[3]),
        .RSTCLKENTX(rstclkentx_in[3]),
        .RX8B10BEN(rx8b10ben_in[3]),
        .RXBUFRESET(rxbufreset_in[3]),
        .RXBUFSTATUS(rxbufstatus_out[11:9]),
        .RXBYTEISALIGNED(rxbyteisaligned_out[3]),
        .RXBYTEREALIGN(rxbyterealign_out[3]),
        .RXCDRFREQRESET(rxcdrfreqreset_in[3]),
        .RXCDRHOLD(rxcdrhold_in[3]),
        .RXCDRLOCK(rxcdrlock_out[3]),
        .RXCDROVRDEN(rxcdrovrden_in[3]),
        .RXCDRPHDONE(rxcdrphdone_out[3]),
        .RXCDRRESET(rxcdrreset_in[3]),
        .RXCDRRESETRSV(rxcdrresetrsv_in[3]),
        .RXCHANBONDSEQ(rxchanbondseq_out[3]),
        .RXCHANISALIGNED(rxchanisaligned_out[3]),
        .RXCHANREALIGN(rxchanrealign_out[3]),
        .RXCHBONDEN(rxchbonden_in[3]),
        .RXCHBONDI(rxchbondi_in[19:15]),
        .RXCHBONDLEVEL(rxchbondlevel_in[11:9]),
        .RXCHBONDMASTER(rxchbondmaster_in[3]),
        .RXCHBONDO(rxchbondo_out[19:15]),
        .RXCHBONDSLAVE(rxchbondslave_in[3]),
        .RXCLKCORCNT(rxclkcorcnt_out[7:6]),
        .RXCOMINITDET(rxcominitdet_out[3]),
        .RXCOMMADET(rxcommadet_out[3]),
        .RXCOMMADETEN(rxcommadeten_in[3]),
        .RXCOMSASDET(rxcomsasdet_out[3]),
        .RXCOMWAKEDET(rxcomwakedet_out[3]),
        .RXCTRL0(rxctrl0_out[63:48]),
        .RXCTRL1(rxctrl1_out[63:48]),
        .RXCTRL2(rxctrl2_out[31:24]),
        .RXCTRL3(rxctrl3_out[31:24]),
        .RXDATA(rxdata_out[511:384]),
        .RXDATAEXTENDRSVD(rxdataextendrsvd_out[31:24]),
        .RXDATAVALID(rxdatavalid_out[7:6]),
        .RXDFEAGCCTRL(rxdfeagcctrl_in[7:6]),
        .RXDFEAGCHOLD(rxdfeagchold_in[3]),
        .RXDFEAGCOVRDEN(rxdfeagcovrden_in[3]),
        .RXDFELFHOLD(rxdfelfhold_in[3]),
        .RXDFELFOVRDEN(rxdfelfovrden_in[3]),
        .RXDFELPMRESET(rxdfelpmreset_in[3]),
        .RXDFETAP10HOLD(rxdfetap10hold_in[3]),
        .RXDFETAP10OVRDEN(rxdfetap10ovrden_in[3]),
        .RXDFETAP11HOLD(rxdfetap11hold_in[3]),
        .RXDFETAP11OVRDEN(rxdfetap11ovrden_in[3]),
        .RXDFETAP12HOLD(rxdfetap12hold_in[3]),
        .RXDFETAP12OVRDEN(rxdfetap12ovrden_in[3]),
        .RXDFETAP13HOLD(rxdfetap13hold_in[3]),
        .RXDFETAP13OVRDEN(rxdfetap13ovrden_in[3]),
        .RXDFETAP14HOLD(rxdfetap14hold_in[3]),
        .RXDFETAP14OVRDEN(rxdfetap14ovrden_in[3]),
        .RXDFETAP15HOLD(rxdfetap15hold_in[3]),
        .RXDFETAP15OVRDEN(rxdfetap15ovrden_in[3]),
        .RXDFETAP2HOLD(rxdfetap2hold_in[3]),
        .RXDFETAP2OVRDEN(rxdfetap2ovrden_in[3]),
        .RXDFETAP3HOLD(rxdfetap3hold_in[3]),
        .RXDFETAP3OVRDEN(rxdfetap3ovrden_in[3]),
        .RXDFETAP4HOLD(rxdfetap4hold_in[3]),
        .RXDFETAP4OVRDEN(rxdfetap4ovrden_in[3]),
        .RXDFETAP5HOLD(rxdfetap5hold_in[3]),
        .RXDFETAP5OVRDEN(rxdfetap5ovrden_in[3]),
        .RXDFETAP6HOLD(rxdfetap6hold_in[3]),
        .RXDFETAP6OVRDEN(rxdfetap6ovrden_in[3]),
        .RXDFETAP7HOLD(rxdfetap7hold_in[3]),
        .RXDFETAP7OVRDEN(rxdfetap7ovrden_in[3]),
        .RXDFETAP8HOLD(rxdfetap8hold_in[3]),
        .RXDFETAP8OVRDEN(rxdfetap8ovrden_in[3]),
        .RXDFETAP9HOLD(rxdfetap9hold_in[3]),
        .RXDFETAP9OVRDEN(rxdfetap9ovrden_in[3]),
        .RXDFEUTHOLD(rxdfeuthold_in[3]),
        .RXDFEUTOVRDEN(rxdfeutovrden_in[3]),
        .RXDFEVPHOLD(rxdfevphold_in[3]),
        .RXDFEVPOVRDEN(rxdfevpovrden_in[3]),
        .RXDFEVSEN(rxdfevsen_in[3]),
        .RXDFEXYDEN(rxdfexyden_in[3]),
        .RXDLYBYPASS(rxdlybypass_in[3]),
        .RXDLYEN(rxdlyen_in[3]),
        .RXDLYOVRDEN(rxdlyovrden_in[3]),
        .RXDLYSRESET(rxdlysreset_in[3]),
        .RXDLYSRESETDONE(rxdlysresetdone_out[3]),
        .RXELECIDLE(rxelecidle_out[3]),
        .RXELECIDLEMODE(rxelecidlemode_in[7:6]),
        .RXGEARBOXSLIP(rxgearboxslip_in[3]),
        .RXHEADER(rxheader_out[23:18]),
        .RXHEADERVALID(rxheadervalid_out[7:6]),
        .RXLATCLK(rxlatclk_in[3]),
        .RXLPMEN(rxlpmen_in[3]),
        .RXLPMGCHOLD(rxlpmgchold_in[3]),
        .RXLPMGCOVRDEN(rxlpmgcovrden_in[3]),
        .RXLPMHFHOLD(rxlpmhfhold_in[3]),
        .RXLPMHFOVRDEN(rxlpmhfovrden_in[3]),
        .RXLPMLFHOLD(rxlpmlfhold_in[3]),
        .RXLPMLFKLOVRDEN(rxlpmlfklovrden_in[3]),
        .RXLPMOSHOLD(rxlpmoshold_in[3]),
        .RXLPMOSOVRDEN(rxlpmosovrden_in[3]),
        .RXMCOMMAALIGNEN(rxmcommaalignen_in[3]),
        .RXMONITOROUT(rxmonitorout_out[27:21]),
        .RXMONITORSEL(rxmonitorsel_in[7:6]),
        .RXOOBRESET(rxoobreset_in[3]),
        .RXOSCALRESET(rxoscalreset_in[3]),
        .RXOSHOLD(rxoshold_in[3]),
        .RXOSINTCFG(rxosintcfg_in[15:12]),
        .RXOSINTDONE(rxosintdone_out[3]),
        .RXOSINTEN(rxosinten_in[3]),
        .RXOSINTHOLD(rxosinthold_in[3]),
        .RXOSINTOVRDEN(rxosintovrden_in[3]),
        .RXOSINTSTARTED(rxosintstarted_out[3]),
        .RXOSINTSTROBE(rxosintstrobe_in[3]),
        .RXOSINTSTROBEDONE(rxosintstrobedone_out[3]),
        .RXOSINTSTROBESTARTED(rxosintstrobestarted_out[3]),
        .RXOSINTTESTOVRDEN(rxosinttestovrden_in[3]),
        .RXOSOVRDEN(rxosovrden_in[3]),
        .RXOUTCLK(rxoutclk_out[3]),
        .RXOUTCLKFABRIC(rxoutclkfabric_out[3]),
        .RXOUTCLKPCS(rxoutclkpcs_out[3]),
        .RXOUTCLKSEL(rxoutclksel_in[11:9]),
        .RXPCOMMAALIGNEN(rxpcommaalignen_in[3]),
        .RXPCSRESET(rxpcsreset_in[3]),
        .RXPD(rxpd_in[7:6]),
        .RXPHALIGN(rxphalign_in[3]),
        .RXPHALIGNDONE(rxphaligndone_out[3]),
        .RXPHALIGNEN(rxphalignen_in[3]),
        .RXPHALIGNERR(rxphalignerr_out[3]),
        .RXPHDLYPD(rxphdlypd_in[3]),
        .RXPHDLYRESET(rxphdlyreset_in[3]),
        .RXPHOVRDEN(rxphovrden_in[3]),
        .RXPLLCLKSEL(rxpllclksel_in[7:6]),
        .RXPMARESET(rxpmareset_in[3]),
        .RXPMARESETDONE(rxpmaresetdone_out[3]),
        .RXPOLARITY(rxpolarity_in[3]),
        .RXPRBSCNTRESET(rxprbscntreset_in[3]),
        .RXPRBSERR(rxprbserr_out[3]),
        .RXPRBSLOCKED(rxprbslocked_out[3]),
        .RXPRBSSEL(rxprbssel_in[15:12]),
        .RXPRGDIVRESETDONE(rxprgdivresetdone_out[3]),
        .RXPROGDIVRESET(rxprogdivreset_in[3]),
        .RXQPIEN(rxqpien_in[3]),
        .RXQPISENN(rxqpisenn_out[3]),
        .RXQPISENP(rxqpisenp_out[3]),
        .RXRATE(rxrate_in[11:9]),
        .RXRATEDONE(rxratedone_out[3]),
        .RXRATEMODE(rxratemode_in[3]),
        .RXRECCLKOUT(rxrecclkout_out[3]),
        .RXRESETDONE(rxresetdone_out[3]),
        .RXSLIDE(rxslide_in[3]),
        .RXSLIDERDY(rxsliderdy_out[3]),
        .RXSLIPDONE(rxslipdone_out[3]),
        .RXSLIPOUTCLK(rxslipoutclk_in[3]),
        .RXSLIPOUTCLKRDY(rxslipoutclkrdy_out[3]),
        .RXSLIPPMA(rxslippma_in[3]),
        .RXSLIPPMARDY(rxslippmardy_out[3]),
        .RXSTARTOFSEQ(rxstartofseq_out[7:6]),
        .RXSTATUS(rxstatus_out[11:9]),
        .RXSYNCALLIN(rxsyncallin_in[3]),
        .RXSYNCDONE(rxsyncdone_out[3]),
        .RXSYNCIN(rxsyncin_in[3]),
        .RXSYNCMODE(rxsyncmode_in[3]),
        .RXSYNCOUT(rxsyncout_out[3]),
        .RXSYSCLKSEL(rxsysclksel_in[7:6]),
        .RXUSERRDY(rxuserrdy_in[3]),
        .RXUSRCLK(rxusrclk_in[3]),
        .RXUSRCLK2(rxusrclk2_in[3]),
        .RXVALID(rxvalid_out[3]),
        .SIGVALIDCLK(sigvalidclk_in[3]),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS(tx8b10bbypass_in[31:24]),
        .TX8B10BEN(tx8b10ben_in[3]),
        .TXBUFDIFFCTRL(txbufdiffctrl_in[11:9]),
        .TXBUFSTATUS(txbufstatus_out[7:6]),
        .TXCOMFINISH(txcomfinish_out[3]),
        .TXCOMINIT(txcominit_in[3]),
        .TXCOMSAS(txcomsas_in[3]),
        .TXCOMWAKE(txcomwake_in[3]),
        .TXCTRL0(txctrl0_in[63:48]),
        .TXCTRL1(txctrl1_in[63:48]),
        .TXCTRL2(txctrl2_in[31:24]),
        .TXDATA(txdata_in[511:384]),
        .TXDATAEXTENDRSVD(txdataextendrsvd_in[31:24]),
        .TXDEEMPH(txdeemph_in[3]),
        .TXDETECTRX(txdetectrx_in[3]),
        .TXDIFFCTRL(txdiffctrl_in[15:12]),
        .TXDIFFPD(txdiffpd_in[3]),
        .TXDLYBYPASS(txdlybypass_in[3]),
        .TXDLYEN(txdlyen_in[3]),
        .TXDLYHOLD(txdlyhold_in[3]),
        .TXDLYOVRDEN(txdlyovrden_in[3]),
        .TXDLYSRESET(txdlysreset_in[3]),
        .TXDLYSRESETDONE(txdlysresetdone_out[3]),
        .TXDLYUPDOWN(txdlyupdown_in[3]),
        .TXELECIDLE(txelecidle_in[3]),
        .TXHEADER(txheader_in[23:18]),
        .TXINHIBIT(txinhibit_in[3]),
        .TXLATCLK(txlatclk_in[3]),
        .TXMAINCURSOR(txmaincursor_in[27:21]),
        .TXMARGIN(txmargin_in[11:9]),
        .TXOUTCLK(txoutclk_out[3]),
        .TXOUTCLKFABRIC(txoutclkfabric_out[3]),
        .TXOUTCLKPCS(txoutclkpcs_out[3]),
        .TXOUTCLKSEL(txoutclksel_in[11:9]),
        .TXPCSRESET(txpcsreset_in[3]),
        .TXPD(txpd_in[7:6]),
        .TXPDELECIDLEMODE(txpdelecidlemode_in[3]),
        .TXPHALIGN(txphalign_in[3]),
        .TXPHALIGNDONE(txphaligndone_out[3]),
        .TXPHALIGNEN(txphalignen_in[3]),
        .TXPHDLYPD(txphdlypd_in[3]),
        .TXPHDLYRESET(txphdlyreset_in[3]),
        .TXPHDLYTSTCLK(txphdlytstclk_in[3]),
        .TXPHINIT(txphinit_in[3]),
        .TXPHINITDONE(txphinitdone_out[3]),
        .TXPHOVRDEN(txphovrden_in[3]),
        .TXPIPPMEN(txpippmen_in[3]),
        .TXPIPPMOVRDEN(txpippmovrden_in[3]),
        .TXPIPPMPD(txpippmpd_in[3]),
        .TXPIPPMSEL(txpippmsel_in[3]),
        .TXPIPPMSTEPSIZE(txpippmstepsize_in[19:15]),
        .TXPISOPD(txpisopd_in[3]),
        .TXPLLCLKSEL(txpllclksel_in[7:6]),
        .TXPMARESET(txpmareset_in[3]),
        .TXPMARESETDONE(txpmaresetdone_out[3]),
        .TXPOLARITY(txpolarity_in[3]),
        .TXPOSTCURSOR(txpostcursor_in[19:15]),
        .TXPOSTCURSORINV(txpostcursorinv_in[3]),
        .TXPRBSFORCEERR(txprbsforceerr_in[3]),
        .TXPRBSSEL(txprbssel_in[15:12]),
        .TXPRECURSOR(txprecursor_in[19:15]),
        .TXPRECURSORINV(txprecursorinv_in[3]),
        .TXPRGDIVRESETDONE(txprgdivresetdone_out[3]),
        .TXPROGDIVRESET(txprogdivreset_in[3]),
        .TXQPIBIASEN(txqpibiasen_in[3]),
        .TXQPISENN(txqpisenn_out[3]),
        .TXQPISENP(txqpisenp_out[3]),
        .TXQPISTRONGPDOWN(txqpistrongpdown_in[3]),
        .TXQPIWEAKPUP(txqpiweakpup_in[3]),
        .TXRATE(txrate_in[11:9]),
        .TXRATEDONE(txratedone_out[3]),
        .TXRATEMODE(txratemode_in[3]),
        .TXRESETDONE(txresetdone_out[3]),
        .TXSEQUENCE(txsequence_in[27:21]),
        .TXSWING(txswing_in[3]),
        .TXSYNCALLIN(txsyncallin_in[3]),
        .TXSYNCDONE(txsyncdone_out[3]),
        .TXSYNCIN(txsyncin_in[3]),
        .TXSYNCMODE(txsyncmode_in[3]),
        .TXSYNCOUT(txsyncout_out[3]),
        .TXSYSCLKSEL(txsysclksel_in[7:6]),
        .TXUSERRDY(txuserrdy_in[3]),
        .TXUSRCLK(txusrclk_in[3]),
        .TXUSRCLK2(txusrclk2_in[3]));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_5_3_gthe3_common" *) 
module pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_common
   (drprdy_common_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    drpdo_common_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    drpclk_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1reset_in,
    drpdi_common_in,
    qpll0refclksel_in,
    qpll1refclksel_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd1_in,
    qpllrsvd4_in,
    drpaddr_common_in);
  output [0:0]drprdy_common_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [15:0]drpdo_common_out;
  output [1:0]rxrecclk0_sel_out;
  output [1:0]rxrecclk1_sel_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  input [0:0]drpclk_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [0:0]qpll1reset_in;
  input [15:0]drpdi_common_in;
  input [2:0]qpll0refclksel_in;
  input [2:0]qpll1refclksel_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd1_in;
  input [7:0]qpllrsvd4_in;
  input [8:0]drpaddr_common_in;

  wire [8:0]drpaddr_common_in;
  wire [0:0]drpclk_common_in;
  wire [15:0]drpdi_common_in;
  wire [15:0]drpdo_common_out;
  wire [0:0]drpen_common_in;
  wire [0:0]drprdy_common_out;
  wire [0:0]drpwe_common_in;
  wire [0:0]gtgrefclk0_in;
  wire [0:0]gtgrefclk1_in;
  wire [0:0]gtnorthrefclk00_in;
  wire [0:0]gtnorthrefclk01_in;
  wire [0:0]gtnorthrefclk10_in;
  wire [0:0]gtnorthrefclk11_in;
  wire [0:0]gtrefclk00_in;
  wire [0:0]gtrefclk01_in;
  wire [0:0]gtrefclk10_in;
  wire [0:0]gtrefclk11_in;
  wire [0:0]gtsouthrefclk00_in;
  wire [0:0]gtsouthrefclk01_in;
  wire [0:0]gtsouthrefclk10_in;
  wire [0:0]gtsouthrefclk11_in;
  wire [7:0]pmarsvdout0_out;
  wire [7:0]pmarsvdout1_out;
  wire [0:0]qpll0clkrsvd0_in;
  wire [0:0]qpll0clkrsvd1_in;
  wire [0:0]qpll0fbclklost_out;
  wire [0:0]qpll0lock_out;
  wire [0:0]qpll0lockdetclk_in;
  wire [0:0]qpll0locken_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll0pd_in;
  wire [0:0]qpll0refclklost_out;
  wire [2:0]qpll0refclksel_in;
  wire [0:0]qpll0reset_in;
  wire [0:0]qpll1clkrsvd0_in;
  wire [0:0]qpll1clkrsvd1_in;
  wire [0:0]qpll1fbclklost_out;
  wire [0:0]qpll1lock_out;
  wire [0:0]qpll1lockdetclk_in;
  wire [0:0]qpll1locken_in;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [0:0]qpll1pd_in;
  wire [0:0]qpll1refclklost_out;
  wire [2:0]qpll1refclksel_in;
  wire [0:0]qpll1reset_in;
  wire [7:0]qplldmonitor0_out;
  wire [7:0]qplldmonitor1_out;
  wire [7:0]qpllrsvd1_in;
  wire [4:0]qpllrsvd2_in;
  wire [4:0]qpllrsvd3_in;
  wire [7:0]qpllrsvd4_in;
  wire [0:0]refclkoutmonitor0_out;
  wire [0:0]refclkoutmonitor1_out;
  wire [1:0]rxrecclk0_sel_out;
  wire [1:0]rxrecclk1_sel_out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_COMMON #(
    .BIAS_CFG0(16'h0000),
    .BIAS_CFG1(16'h0000),
    .BIAS_CFG2(16'h3000),
    .BIAS_CFG3(16'h0040),
    .BIAS_CFG4(16'h0000),
    .BIAS_CFG_RSVD(10'b0000000000),
    .COMMON_CFG0(16'h0000),
    .COMMON_CFG1(16'h0000),
    .POR_CFG(16'h0004),
    .QPLL0_CFG0(16'h321C),
    .QPLL0_CFG1(16'h1018),
    .QPLL0_CFG1_G3(16'h1018),
    .QPLL0_CFG2(16'h0048),
    .QPLL0_CFG2_G3(16'h0048),
    .QPLL0_CFG3(16'h0120),
    .QPLL0_CFG4(16'h0009),
    .QPLL0_CP(10'b1111111111),
    .QPLL0_CP_G3(10'b1111111111),
    .QPLL0_FBDIV(100),
    .QPLL0_FBDIV_G3(80),
    .QPLL0_INIT_CFG0(16'h0000),
    .QPLL0_INIT_CFG1(8'h00),
    .QPLL0_LOCK_CFG(16'h21E8),
    .QPLL0_LOCK_CFG_G3(16'h21E8),
    .QPLL0_LPF(10'b0000010101),
    .QPLL0_LPF_G3(10'b0000010101),
    .QPLL0_REFCLK_DIV(1),
    .QPLL0_SDM_CFG0(16'b0000000000000000),
    .QPLL0_SDM_CFG1(16'b0000000000000000),
    .QPLL0_SDM_CFG2(16'b0000000000000000),
    .QPLL1_CFG0(16'h321C),
    .QPLL1_CFG1(16'h1018),
    .QPLL1_CFG1_G3(16'h1018),
    .QPLL1_CFG2(16'h0000),
    .QPLL1_CFG2_G3(16'h0040),
    .QPLL1_CFG3(16'h0120),
    .QPLL1_CFG4(16'h0000),
    .QPLL1_CP(10'b1111111111),
    .QPLL1_CP_G3(10'b1111111111),
    .QPLL1_FBDIV(100),
    .QPLL1_FBDIV_G3(80),
    .QPLL1_INIT_CFG0(16'h0000),
    .QPLL1_INIT_CFG1(8'h00),
    .QPLL1_LOCK_CFG(16'h25E8),
    .QPLL1_LOCK_CFG_G3(16'h25E8),
    .QPLL1_LPF(10'b0000010101),
    .QPLL1_LPF_G3(10'b0000010101),
    .QPLL1_REFCLK_DIV(1),
    .QPLL1_SDM_CFG0(16'b0000000000000000),
    .QPLL1_SDM_CFG1(16'b0000000000000000),
    .QPLL1_SDM_CFG2(16'b0000000000000000),
    .RSVD_ATTR0(16'h0001),
    .RSVD_ATTR1(16'h0000),
    .RSVD_ATTR2(16'h0001),
    .RSVD_ATTR3(16'h0000),
    .RXRECCLKOUT0_SEL(2'b00),
    .RXRECCLKOUT1_SEL(2'b00),
    .SARC_EN(1'b1),
    .SARC_SEL(1'b0),
    .SDM0DATA1_0(16'b0000000000000000),
    .SDM0DATA1_1(9'b000000000),
    .SDM0INITSEED0_0(16'b0000000000000000),
    .SDM0INITSEED0_1(9'b000000000),
    .SDM0_DATA_PIN_SEL(1'b0),
    .SDM0_WIDTH_PIN_SEL(1'b0),
    .SDM1DATA1_0(16'b0000000000000000),
    .SDM1DATA1_1(9'b000000000),
    .SDM1INITSEED0_0(16'b0000000000000000),
    .SDM1INITSEED0_1(9'b000000000),
    .SDM1_DATA_PIN_SEL(1'b0),
    .SDM1_WIDTH_PIN_SEL(1'b0),
    .SIM_MODE("FAST"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_VERSION(2)) 
    \gthe3_common_gen.GTHE3_COMMON_PRIM_INST 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DRPADDR(drpaddr_common_in),
        .DRPCLK(drpclk_common_in),
        .DRPDI(drpdi_common_in),
        .DRPDO(drpdo_common_out),
        .DRPEN(drpen_common_in),
        .DRPRDY(drprdy_common_out),
        .DRPWE(drpwe_common_in),
        .GTGREFCLK0(gtgrefclk0_in),
        .GTGREFCLK1(gtgrefclk1_in),
        .GTNORTHREFCLK00(gtnorthrefclk00_in),
        .GTNORTHREFCLK01(gtnorthrefclk01_in),
        .GTNORTHREFCLK10(gtnorthrefclk10_in),
        .GTNORTHREFCLK11(gtnorthrefclk11_in),
        .GTREFCLK00(gtrefclk00_in),
        .GTREFCLK01(gtrefclk01_in),
        .GTREFCLK10(gtrefclk10_in),
        .GTREFCLK11(gtrefclk11_in),
        .GTSOUTHREFCLK00(gtsouthrefclk00_in),
        .GTSOUTHREFCLK01(gtsouthrefclk01_in),
        .GTSOUTHREFCLK10(gtsouthrefclk10_in),
        .GTSOUTHREFCLK11(gtsouthrefclk11_in),
        .PMARSVD0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT0(pmarsvdout0_out),
        .PMARSVDOUT1(pmarsvdout1_out),
        .QPLL0CLKRSVD0(qpll0clkrsvd0_in),
        .QPLL0CLKRSVD1(qpll0clkrsvd1_in),
        .QPLL0FBCLKLOST(qpll0fbclklost_out),
        .QPLL0LOCK(qpll0lock_out),
        .QPLL0LOCKDETCLK(qpll0lockdetclk_in),
        .QPLL0LOCKEN(qpll0locken_in),
        .QPLL0OUTCLK(qpll0outclk_out),
        .QPLL0OUTREFCLK(qpll0outrefclk_out),
        .QPLL0PD(qpll0pd_in),
        .QPLL0REFCLKLOST(qpll0refclklost_out),
        .QPLL0REFCLKSEL(qpll0refclksel_in),
        .QPLL0RESET(qpll0reset_in),
        .QPLL1CLKRSVD0(qpll1clkrsvd0_in),
        .QPLL1CLKRSVD1(qpll1clkrsvd1_in),
        .QPLL1FBCLKLOST(qpll1fbclklost_out),
        .QPLL1LOCK(qpll1lock_out),
        .QPLL1LOCKDETCLK(qpll1lockdetclk_in),
        .QPLL1LOCKEN(qpll1locken_in),
        .QPLL1OUTCLK(qpll1outclk_out),
        .QPLL1OUTREFCLK(qpll1outrefclk_out),
        .QPLL1PD(qpll1pd_in),
        .QPLL1REFCLKLOST(qpll1refclklost_out),
        .QPLL1REFCLKSEL(qpll1refclksel_in),
        .QPLL1RESET(qpll1reset_in),
        .QPLLDMONITOR0(qplldmonitor0_out),
        .QPLLDMONITOR1(qplldmonitor1_out),
        .QPLLRSVD1(qpllrsvd1_in),
        .QPLLRSVD2(qpllrsvd2_in),
        .QPLLRSVD3(qpllrsvd3_in),
        .QPLLRSVD4(qpllrsvd4_in),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(refclkoutmonitor0_out),
        .REFCLKOUTMONITOR1(refclkoutmonitor1_out),
        .RXRECCLK0_SEL(rxrecclk0_sel_out),
        .RXRECCLK1_SEL(rxrecclk1_sel_out));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_5_3_gthe3_common" *) 
module pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_common_343
   (drprdy_common_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    drpdo_common_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    drpclk_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1reset_in,
    drpdi_common_in,
    qpll0refclksel_in,
    qpll1refclksel_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd1_in,
    qpllrsvd4_in,
    drpaddr_common_in);
  output [0:0]drprdy_common_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [15:0]drpdo_common_out;
  output [1:0]rxrecclk0_sel_out;
  output [1:0]rxrecclk1_sel_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  input [0:0]drpclk_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [0:0]qpll1reset_in;
  input [15:0]drpdi_common_in;
  input [2:0]qpll0refclksel_in;
  input [2:0]qpll1refclksel_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd1_in;
  input [7:0]qpllrsvd4_in;
  input [8:0]drpaddr_common_in;

  wire [8:0]drpaddr_common_in;
  wire [0:0]drpclk_common_in;
  wire [15:0]drpdi_common_in;
  wire [15:0]drpdo_common_out;
  wire [0:0]drpen_common_in;
  wire [0:0]drprdy_common_out;
  wire [0:0]drpwe_common_in;
  wire [0:0]gtgrefclk0_in;
  wire [0:0]gtgrefclk1_in;
  wire [0:0]gtnorthrefclk00_in;
  wire [0:0]gtnorthrefclk01_in;
  wire [0:0]gtnorthrefclk10_in;
  wire [0:0]gtnorthrefclk11_in;
  wire [0:0]gtrefclk00_in;
  wire [0:0]gtrefclk01_in;
  wire [0:0]gtrefclk10_in;
  wire [0:0]gtrefclk11_in;
  wire [0:0]gtsouthrefclk00_in;
  wire [0:0]gtsouthrefclk01_in;
  wire [0:0]gtsouthrefclk10_in;
  wire [0:0]gtsouthrefclk11_in;
  wire [7:0]pmarsvdout0_out;
  wire [7:0]pmarsvdout1_out;
  wire [0:0]qpll0clkrsvd0_in;
  wire [0:0]qpll0clkrsvd1_in;
  wire [0:0]qpll0fbclklost_out;
  wire [0:0]qpll0lock_out;
  wire [0:0]qpll0lockdetclk_in;
  wire [0:0]qpll0locken_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll0pd_in;
  wire [0:0]qpll0refclklost_out;
  wire [2:0]qpll0refclksel_in;
  wire [0:0]qpll0reset_in;
  wire [0:0]qpll1clkrsvd0_in;
  wire [0:0]qpll1clkrsvd1_in;
  wire [0:0]qpll1fbclklost_out;
  wire [0:0]qpll1lock_out;
  wire [0:0]qpll1lockdetclk_in;
  wire [0:0]qpll1locken_in;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [0:0]qpll1pd_in;
  wire [0:0]qpll1refclklost_out;
  wire [2:0]qpll1refclksel_in;
  wire [0:0]qpll1reset_in;
  wire [7:0]qplldmonitor0_out;
  wire [7:0]qplldmonitor1_out;
  wire [7:0]qpllrsvd1_in;
  wire [4:0]qpllrsvd2_in;
  wire [4:0]qpllrsvd3_in;
  wire [7:0]qpllrsvd4_in;
  wire [0:0]refclkoutmonitor0_out;
  wire [0:0]refclkoutmonitor1_out;
  wire [1:0]rxrecclk0_sel_out;
  wire [1:0]rxrecclk1_sel_out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE3_COMMON #(
    .BIAS_CFG0(16'h0000),
    .BIAS_CFG1(16'h0000),
    .BIAS_CFG2(16'h3000),
    .BIAS_CFG3(16'h0040),
    .BIAS_CFG4(16'h0000),
    .BIAS_CFG_RSVD(10'b0000000000),
    .COMMON_CFG0(16'h0000),
    .COMMON_CFG1(16'h0000),
    .POR_CFG(16'h0004),
    .QPLL0_CFG0(16'h321C),
    .QPLL0_CFG1(16'h1018),
    .QPLL0_CFG1_G3(16'h1018),
    .QPLL0_CFG2(16'h0048),
    .QPLL0_CFG2_G3(16'h0048),
    .QPLL0_CFG3(16'h0120),
    .QPLL0_CFG4(16'h0009),
    .QPLL0_CP(10'b1111111111),
    .QPLL0_CP_G3(10'b1111111111),
    .QPLL0_FBDIV(100),
    .QPLL0_FBDIV_G3(80),
    .QPLL0_INIT_CFG0(16'h0000),
    .QPLL0_INIT_CFG1(8'h00),
    .QPLL0_LOCK_CFG(16'h21E8),
    .QPLL0_LOCK_CFG_G3(16'h21E8),
    .QPLL0_LPF(10'b0000010101),
    .QPLL0_LPF_G3(10'b0000010101),
    .QPLL0_REFCLK_DIV(1),
    .QPLL0_SDM_CFG0(16'b0000000000000000),
    .QPLL0_SDM_CFG1(16'b0000000000000000),
    .QPLL0_SDM_CFG2(16'b0000000000000000),
    .QPLL1_CFG0(16'h321C),
    .QPLL1_CFG1(16'h1018),
    .QPLL1_CFG1_G3(16'h1018),
    .QPLL1_CFG2(16'h0000),
    .QPLL1_CFG2_G3(16'h0040),
    .QPLL1_CFG3(16'h0120),
    .QPLL1_CFG4(16'h0000),
    .QPLL1_CP(10'b1111111111),
    .QPLL1_CP_G3(10'b1111111111),
    .QPLL1_FBDIV(100),
    .QPLL1_FBDIV_G3(80),
    .QPLL1_INIT_CFG0(16'h0000),
    .QPLL1_INIT_CFG1(8'h00),
    .QPLL1_LOCK_CFG(16'h25E8),
    .QPLL1_LOCK_CFG_G3(16'h25E8),
    .QPLL1_LPF(10'b0000010101),
    .QPLL1_LPF_G3(10'b0000010101),
    .QPLL1_REFCLK_DIV(1),
    .QPLL1_SDM_CFG0(16'b0000000000000000),
    .QPLL1_SDM_CFG1(16'b0000000000000000),
    .QPLL1_SDM_CFG2(16'b0000000000000000),
    .RSVD_ATTR0(16'h0001),
    .RSVD_ATTR1(16'h0000),
    .RSVD_ATTR2(16'h0001),
    .RSVD_ATTR3(16'h0000),
    .RXRECCLKOUT0_SEL(2'b00),
    .RXRECCLKOUT1_SEL(2'b00),
    .SARC_EN(1'b1),
    .SARC_SEL(1'b0),
    .SDM0DATA1_0(16'b0000000000000000),
    .SDM0DATA1_1(9'b000000000),
    .SDM0INITSEED0_0(16'b0000000000000000),
    .SDM0INITSEED0_1(9'b000000000),
    .SDM0_DATA_PIN_SEL(1'b0),
    .SDM0_WIDTH_PIN_SEL(1'b0),
    .SDM1DATA1_0(16'b0000000000000000),
    .SDM1DATA1_1(9'b000000000),
    .SDM1INITSEED0_0(16'b0000000000000000),
    .SDM1INITSEED0_1(9'b000000000),
    .SDM1_DATA_PIN_SEL(1'b0),
    .SDM1_WIDTH_PIN_SEL(1'b0),
    .SIM_MODE("FAST"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_VERSION(2)) 
    \gthe3_common_gen.GTHE3_COMMON_PRIM_INST 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DRPADDR(drpaddr_common_in),
        .DRPCLK(drpclk_common_in),
        .DRPDI(drpdi_common_in),
        .DRPDO(drpdo_common_out),
        .DRPEN(drpen_common_in),
        .DRPRDY(drprdy_common_out),
        .DRPWE(drpwe_common_in),
        .GTGREFCLK0(gtgrefclk0_in),
        .GTGREFCLK1(gtgrefclk1_in),
        .GTNORTHREFCLK00(gtnorthrefclk00_in),
        .GTNORTHREFCLK01(gtnorthrefclk01_in),
        .GTNORTHREFCLK10(gtnorthrefclk10_in),
        .GTNORTHREFCLK11(gtnorthrefclk11_in),
        .GTREFCLK00(gtrefclk00_in),
        .GTREFCLK01(gtrefclk01_in),
        .GTREFCLK10(gtrefclk10_in),
        .GTREFCLK11(gtrefclk11_in),
        .GTSOUTHREFCLK00(gtsouthrefclk00_in),
        .GTSOUTHREFCLK01(gtsouthrefclk01_in),
        .GTSOUTHREFCLK10(gtsouthrefclk10_in),
        .GTSOUTHREFCLK11(gtsouthrefclk11_in),
        .PMARSVD0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT0(pmarsvdout0_out),
        .PMARSVDOUT1(pmarsvdout1_out),
        .QPLL0CLKRSVD0(qpll0clkrsvd0_in),
        .QPLL0CLKRSVD1(qpll0clkrsvd1_in),
        .QPLL0FBCLKLOST(qpll0fbclklost_out),
        .QPLL0LOCK(qpll0lock_out),
        .QPLL0LOCKDETCLK(qpll0lockdetclk_in),
        .QPLL0LOCKEN(qpll0locken_in),
        .QPLL0OUTCLK(qpll0outclk_out),
        .QPLL0OUTREFCLK(qpll0outrefclk_out),
        .QPLL0PD(qpll0pd_in),
        .QPLL0REFCLKLOST(qpll0refclklost_out),
        .QPLL0REFCLKSEL(qpll0refclksel_in),
        .QPLL0RESET(qpll0reset_in),
        .QPLL1CLKRSVD0(qpll1clkrsvd0_in),
        .QPLL1CLKRSVD1(qpll1clkrsvd1_in),
        .QPLL1FBCLKLOST(qpll1fbclklost_out),
        .QPLL1LOCK(qpll1lock_out),
        .QPLL1LOCKDETCLK(qpll1lockdetclk_in),
        .QPLL1LOCKEN(qpll1locken_in),
        .QPLL1OUTCLK(qpll1outclk_out),
        .QPLL1OUTREFCLK(qpll1outrefclk_out),
        .QPLL1PD(qpll1pd_in),
        .QPLL1REFCLKLOST(qpll1refclklost_out),
        .QPLL1REFCLKSEL(qpll1refclksel_in),
        .QPLL1RESET(qpll1reset_in),
        .QPLLDMONITOR0(qplldmonitor0_out),
        .QPLLDMONITOR1(qplldmonitor1_out),
        .QPLLRSVD1(qpllrsvd1_in),
        .QPLLRSVD2(qpllrsvd2_in),
        .QPLLRSVD3(qpllrsvd3_in),
        .QPLLRSVD4(qpllrsvd4_in),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(refclkoutmonitor0_out),
        .REFCLKOUTMONITOR1(refclkoutmonitor1_out),
        .RXRECCLK0_SEL(rxrecclk0_sel_out),
        .RXRECCLK1_SEL(rxrecclk1_sel_out));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram
   (MIREPLAYRAMREADDATA,
    MIREQUESTRAMREADDATA,
    MICOMPLETIONRAMREADDATA,
    CORECLKMIREQUESTRAM,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE,
    MIREQUESTRAMREADENABLE,
    MIREQUESTRAMWRITEENABLE,
    mi_req_raddr0_i,
    mi_req_waddr0_i,
    MIREQUESTRAMWRITEDATA,
    mi_req_raddr1_i,
    mi_req_waddr1_i,
    MICOMPLETIONRAMWRITEENABLEL,
    MICOMPLETIONRAMREADENABLEL,
    mi_cpl_waddr0_i,
    mi_cpl_raddr0_i,
    mi_cpl_wdata_i,
    mi_cpl_wdip_i,
    mi_cpl_waddr1_i,
    mi_cpl_raddr1_i,
    MICOMPLETIONRAMWRITEENABLEU,
    MICOMPLETIONRAMREADENABLEU,
    mi_cpl_waddr2_i,
    mi_cpl_raddr2_i,
    mi_cpl_waddr3_i,
    mi_cpl_raddr3_i);
  output [143:0]MIREPLAYRAMREADDATA;
  output [143:0]MIREQUESTRAMREADDATA;
  output [143:0]MICOMPLETIONRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;
  input [3:0]MIREQUESTRAMREADENABLE;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]mi_req_raddr0_i;
  input [8:0]mi_req_waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [8:0]mi_req_raddr1_i;
  input [8:0]mi_req_waddr1_i;
  input [3:0]MICOMPLETIONRAMWRITEENABLEL;
  input [3:0]MICOMPLETIONRAMREADENABLEL;
  input [9:0]mi_cpl_waddr0_i;
  input [9:0]mi_cpl_raddr0_i;
  input [127:0]mi_cpl_wdata_i;
  input [15:0]mi_cpl_wdip_i;
  input [9:0]mi_cpl_waddr1_i;
  input [9:0]mi_cpl_raddr1_i;
  input [3:0]MICOMPLETIONRAMWRITEENABLEU;
  input [3:0]MICOMPLETIONRAMREADENABLEU;
  input [9:0]mi_cpl_waddr2_i;
  input [9:0]mi_cpl_raddr2_i;
  input [9:0]mi_cpl_waddr3_i;
  input [9:0]mi_cpl_raddr3_i;

  wire CORECLKMIREQUESTRAM;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [3:0]MICOMPLETIONRAMREADENABLEL;
  wire [3:0]MICOMPLETIONRAMREADENABLEU;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEU;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [3:0]MIREQUESTRAMREADENABLE;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire [9:0]mi_cpl_raddr0_i;
  wire [9:0]mi_cpl_raddr1_i;
  wire [9:0]mi_cpl_raddr2_i;
  wire [9:0]mi_cpl_raddr3_i;
  wire [9:0]mi_cpl_waddr0_i;
  wire [9:0]mi_cpl_waddr1_i;
  wire [9:0]mi_cpl_waddr2_i;
  wire [9:0]mi_cpl_waddr3_i;
  wire [127:0]mi_cpl_wdata_i;
  wire [15:0]mi_cpl_wdip_i;
  wire [8:0]mi_req_raddr0_i;
  wire [8:0]mi_req_raddr1_i;
  wire [8:0]mi_req_waddr0_i;
  wire [8:0]mi_req_waddr1_i;

  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_cpl bram_cpl_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .mi_cpl_raddr0_i(mi_cpl_raddr0_i),
        .mi_cpl_raddr1_i(mi_cpl_raddr1_i),
        .mi_cpl_raddr2_i(mi_cpl_raddr2_i),
        .mi_cpl_raddr3_i(mi_cpl_raddr3_i),
        .mi_cpl_waddr0_i(mi_cpl_waddr0_i),
        .mi_cpl_waddr1_i(mi_cpl_waddr1_i),
        .mi_cpl_waddr2_i(mi_cpl_waddr2_i),
        .mi_cpl_waddr3_i(mi_cpl_waddr3_i),
        .mi_cpl_wdata_i(mi_cpl_wdata_i),
        .mi_cpl_wdip_i(mi_cpl_wdip_i),
        .ren_i({MICOMPLETIONRAMREADENABLEU,MICOMPLETIONRAMREADENABLEL}),
        .wen_i({MICOMPLETIONRAMWRITEENABLEU,MICOMPLETIONRAMWRITEENABLEL}));
  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_rep bram_rep_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE));
  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_req bram_req_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMREADENABLE(MIREQUESTRAMREADENABLE),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .mi_req_raddr0_i(mi_req_raddr0_i),
        .mi_req_raddr1_i(mi_req_raddr1_i),
        .mi_req_waddr0_i(mi_req_waddr0_i),
        .mi_req_waddr1_i(mi_req_waddr1_i));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_16k" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_16k
   (MICOMPLETIONRAMREADDATA,
    CORECLKMIREQUESTRAM,
    wen_i,
    ren_i,
    mi_cpl_waddr0_i,
    mi_cpl_raddr0_i,
    mi_cpl_wdata_i,
    mi_cpl_wdip_i,
    mi_cpl_waddr1_i,
    mi_cpl_raddr1_i,
    mi_cpl_waddr2_i,
    mi_cpl_raddr2_i,
    mi_cpl_waddr3_i,
    mi_cpl_raddr3_i);
  output [143:0]MICOMPLETIONRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [7:0]wen_i;
  input [7:0]ren_i;
  input [9:0]mi_cpl_waddr0_i;
  input [9:0]mi_cpl_raddr0_i;
  input [127:0]mi_cpl_wdata_i;
  input [15:0]mi_cpl_wdip_i;
  input [9:0]mi_cpl_waddr1_i;
  input [9:0]mi_cpl_raddr1_i;
  input [9:0]mi_cpl_waddr2_i;
  input [9:0]mi_cpl_raddr2_i;
  input [9:0]mi_cpl_waddr3_i;
  input [9:0]mi_cpl_raddr3_i;

  wire CORECLKMIREQUESTRAM;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [9:0]mi_cpl_raddr0_i;
  wire [9:0]mi_cpl_raddr1_i;
  wire [9:0]mi_cpl_raddr2_i;
  wire [9:0]mi_cpl_raddr3_i;
  wire [9:0]mi_cpl_waddr0_i;
  wire [9:0]mi_cpl_waddr1_i;
  wire [9:0]mi_cpl_waddr2_i;
  wire [9:0]mi_cpl_waddr3_i;
  wire [127:0]mi_cpl_wdata_i;
  wire [15:0]mi_cpl_wdip_i;
  wire [7:0]ren_i;
  wire [7:0]wen_i;
  wire [15:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[0].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[0].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[1].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[1].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[2].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[2].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[3].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[3].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[4].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[4].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[5].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[5].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[6].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[6].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[7].ramb18e2_inst_DOUTADOUT_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[7].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[0].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr0_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr0_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[15:0]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[1:0]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[0].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[16:9],MICOMPLETIONRAMREADDATA[7:0]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[0].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[17],MICOMPLETIONRAMREADDATA[8]}),
        .ENARDEN(wen_i[0]),
        .ENBWREN(ren_i[0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[1].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr0_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr0_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[31:16]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[3:2]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[1].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[34:27],MICOMPLETIONRAMREADDATA[25:18]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[1].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[35],MICOMPLETIONRAMREADDATA[26]}),
        .ENARDEN(wen_i[1]),
        .ENBWREN(ren_i[1]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[2].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr1_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr1_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[47:32]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[5:4]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[2].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[52:45],MICOMPLETIONRAMREADDATA[43:36]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[2].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[53],MICOMPLETIONRAMREADDATA[44]}),
        .ENARDEN(wen_i[2]),
        .ENBWREN(ren_i[2]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[3].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr1_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr1_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[63:48]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[7:6]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[3].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[70:63],MICOMPLETIONRAMREADDATA[61:54]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[3].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[71],MICOMPLETIONRAMREADDATA[62]}),
        .ENARDEN(wen_i[3]),
        .ENBWREN(ren_i[3]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[4].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr2_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr2_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[4].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[79:64]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[9:8]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[4].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[88:81],MICOMPLETIONRAMREADDATA[79:72]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[4].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[89],MICOMPLETIONRAMREADDATA[80]}),
        .ENARDEN(wen_i[4]),
        .ENBWREN(ren_i[4]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[5].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr2_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr2_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[5].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[95:80]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[11:10]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[5].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[106:99],MICOMPLETIONRAMREADDATA[97:90]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[5].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[107],MICOMPLETIONRAMREADDATA[98]}),
        .ENARDEN(wen_i[5]),
        .ENBWREN(ren_i[5]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[6].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr3_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr3_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[6].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[111:96]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[13:12]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[6].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[124:117],MICOMPLETIONRAMREADDATA[115:108]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[6].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[125],MICOMPLETIONRAMREADDATA[116]}),
        .ENARDEN(wen_i[6]),
        .ENBWREN(ren_i[6]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \RAMB18E2[7].ramb18e2_inst 
       (.ADDRARDADDR({mi_cpl_waddr3_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_cpl_raddr3_i,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[7].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN(mi_cpl_wdata_i[127:112]),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP(mi_cpl_wdip_i[15:14]),
        .DINPBDINP({1'b0,1'b0}),
        .DOUTADOUT(\NLW_RAMB18E2[7].ramb18e2_inst_DOUTADOUT_UNCONNECTED [15:0]),
        .DOUTBDOUT({MICOMPLETIONRAMREADDATA[142:135],MICOMPLETIONRAMREADDATA[133:126]}),
        .DOUTPADOUTP(\NLW_RAMB18E2[7].ramb18e2_inst_DOUTPADOUTP_UNCONNECTED [1:0]),
        .DOUTPBDOUTP({MICOMPLETIONRAMREADDATA[143],MICOMPLETIONRAMREADDATA[134]}),
        .ENARDEN(wen_i[7]),
        .ENBWREN(ren_i[7]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_cpl" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_cpl
   (MICOMPLETIONRAMREADDATA,
    CORECLKMIREQUESTRAM,
    wen_i,
    ren_i,
    mi_cpl_waddr0_i,
    mi_cpl_raddr0_i,
    mi_cpl_wdata_i,
    mi_cpl_wdip_i,
    mi_cpl_waddr1_i,
    mi_cpl_raddr1_i,
    mi_cpl_waddr2_i,
    mi_cpl_raddr2_i,
    mi_cpl_waddr3_i,
    mi_cpl_raddr3_i);
  output [143:0]MICOMPLETIONRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [7:0]wen_i;
  input [7:0]ren_i;
  input [9:0]mi_cpl_waddr0_i;
  input [9:0]mi_cpl_raddr0_i;
  input [127:0]mi_cpl_wdata_i;
  input [15:0]mi_cpl_wdip_i;
  input [9:0]mi_cpl_waddr1_i;
  input [9:0]mi_cpl_raddr1_i;
  input [9:0]mi_cpl_waddr2_i;
  input [9:0]mi_cpl_raddr2_i;
  input [9:0]mi_cpl_waddr3_i;
  input [9:0]mi_cpl_raddr3_i;

  wire CORECLKMIREQUESTRAM;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [9:0]mi_cpl_raddr0_i;
  wire [9:0]mi_cpl_raddr1_i;
  wire [9:0]mi_cpl_raddr2_i;
  wire [9:0]mi_cpl_raddr3_i;
  wire [9:0]mi_cpl_waddr0_i;
  wire [9:0]mi_cpl_waddr1_i;
  wire [9:0]mi_cpl_waddr2_i;
  wire [9:0]mi_cpl_waddr3_i;
  wire [127:0]mi_cpl_wdata_i;
  wire [15:0]mi_cpl_wdip_i;
  wire [7:0]ren_i;
  wire [7:0]wen_i;

  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_16k \CPL_FIFO_16KB.bram_16k_inst 
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .mi_cpl_raddr0_i(mi_cpl_raddr0_i),
        .mi_cpl_raddr1_i(mi_cpl_raddr1_i),
        .mi_cpl_raddr2_i(mi_cpl_raddr2_i),
        .mi_cpl_raddr3_i(mi_cpl_raddr3_i),
        .mi_cpl_waddr0_i(mi_cpl_waddr0_i),
        .mi_cpl_waddr1_i(mi_cpl_waddr1_i),
        .mi_cpl_waddr2_i(mi_cpl_waddr2_i),
        .mi_cpl_waddr3_i(mi_cpl_waddr3_i),
        .mi_cpl_wdata_i(mi_cpl_wdata_i),
        .mi_cpl_wdip_i(mi_cpl_wdip_i),
        .ren_i(ren_i),
        .wen_i(wen_i));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_rep" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_rep
   (MIREPLAYRAMREADDATA,
    CORECLKMIREQUESTRAM,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE);
  output [143:0]MIREPLAYRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;

  wire CORECLKMIREQUESTRAM;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;

  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_rep_8k bram_rep_8k_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_rep_8k" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_rep_8k
   (MIREPLAYRAMREADDATA,
    CORECLKMIREQUESTRAM,
    MIREPLAYRAMADDRESS,
    MIREPLAYRAMWRITEDATA,
    MIREPLAYRAMWRITEENABLE);
  output [143:0]MIREPLAYRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [8:0]MIREPLAYRAMADDRESS;
  input [143:0]MIREPLAYRAMWRITEDATA;
  input [1:0]MIREPLAYRAMWRITEENABLE;

  wire CORECLKMIREQUESTRAM;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire \NLW_RAMB36E2[0].ramb36e2_inst_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[0].ramb36e2_inst_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[0].ramb36e2_inst_DBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[0].ramb36e2_inst_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [7:0]\NLW_RAMB36E2[0].ramb36e2_inst_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_RAMB36E2[0].ramb36e2_inst_RDADDRECC_UNCONNECTED ;
  wire \NLW_RAMB36E2[1].ramb36e2_inst_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[1].ramb36e2_inst_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[1].ramb36e2_inst_DBITERR_UNCONNECTED ;
  wire \NLW_RAMB36E2[1].ramb36e2_inst_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [7:0]\NLW_RAMB36E2[1].ramb36e2_inst_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_RAMB36E2[1].ramb36e2_inst_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \RAMB36E2[0].ramb36e2_inst 
       (.ADDRARDADDR({MIREPLAYRAMADDRESS,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({MIREPLAYRAMADDRESS,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_RAMB36E2[0].ramb36e2_inst_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CASOUTDBITERR(\NLW_RAMB36E2[0].ramb36e2_inst_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_RAMB36E2[0].ramb36e2_inst_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DBITERR(\NLW_RAMB36E2[0].ramb36e2_inst_DBITERR_UNCONNECTED ),
        .DINADIN({MIREPLAYRAMWRITEDATA[34:27],MIREPLAYRAMWRITEDATA[25:18],MIREPLAYRAMWRITEDATA[16:9],MIREPLAYRAMWRITEDATA[7:0]}),
        .DINBDIN({MIREPLAYRAMWRITEDATA[70:63],MIREPLAYRAMWRITEDATA[61:54],MIREPLAYRAMWRITEDATA[52:45],MIREPLAYRAMWRITEDATA[43:36]}),
        .DINPADINP({MIREPLAYRAMWRITEDATA[35],MIREPLAYRAMWRITEDATA[26],MIREPLAYRAMWRITEDATA[17],MIREPLAYRAMWRITEDATA[8]}),
        .DINPBDINP({MIREPLAYRAMWRITEDATA[71],MIREPLAYRAMWRITEDATA[62],MIREPLAYRAMWRITEDATA[53],MIREPLAYRAMWRITEDATA[44]}),
        .DOUTADOUT({MIREPLAYRAMREADDATA[34:27],MIREPLAYRAMREADDATA[25:18],MIREPLAYRAMREADDATA[16:9],MIREPLAYRAMREADDATA[7:0]}),
        .DOUTBDOUT({MIREPLAYRAMREADDATA[70:63],MIREPLAYRAMREADDATA[61:54],MIREPLAYRAMREADDATA[52:45],MIREPLAYRAMREADDATA[43:36]}),
        .DOUTPADOUTP({MIREPLAYRAMREADDATA[35],MIREPLAYRAMREADDATA[26],MIREPLAYRAMREADDATA[17],MIREPLAYRAMREADDATA[8]}),
        .DOUTPBDOUTP({MIREPLAYRAMREADDATA[71],MIREPLAYRAMREADDATA[62],MIREPLAYRAMREADDATA[53],MIREPLAYRAMREADDATA[44]}),
        .ECCPARITY(\NLW_RAMB36E2[0].ramb36e2_inst_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b0),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_RAMB36E2[0].ramb36e2_inst_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_RAMB36E2[0].ramb36e2_inst_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0],MIREPLAYRAMWRITEENABLE[0]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \RAMB36E2[1].ramb36e2_inst 
       (.ADDRARDADDR({MIREPLAYRAMADDRESS,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({MIREPLAYRAMADDRESS,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_RAMB36E2[1].ramb36e2_inst_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CASOUTDBITERR(\NLW_RAMB36E2[1].ramb36e2_inst_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_RAMB36E2[1].ramb36e2_inst_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DBITERR(\NLW_RAMB36E2[1].ramb36e2_inst_DBITERR_UNCONNECTED ),
        .DINADIN({MIREPLAYRAMWRITEDATA[106:99],MIREPLAYRAMWRITEDATA[97:90],MIREPLAYRAMWRITEDATA[88:81],MIREPLAYRAMWRITEDATA[79:72]}),
        .DINBDIN({MIREPLAYRAMWRITEDATA[142:135],MIREPLAYRAMWRITEDATA[133:126],MIREPLAYRAMWRITEDATA[124:117],MIREPLAYRAMWRITEDATA[115:108]}),
        .DINPADINP({MIREPLAYRAMWRITEDATA[107],MIREPLAYRAMWRITEDATA[98],MIREPLAYRAMWRITEDATA[89],MIREPLAYRAMWRITEDATA[80]}),
        .DINPBDINP({MIREPLAYRAMWRITEDATA[143],MIREPLAYRAMWRITEDATA[134],MIREPLAYRAMWRITEDATA[125],MIREPLAYRAMWRITEDATA[116]}),
        .DOUTADOUT({MIREPLAYRAMREADDATA[106:99],MIREPLAYRAMREADDATA[97:90],MIREPLAYRAMREADDATA[88:81],MIREPLAYRAMREADDATA[79:72]}),
        .DOUTBDOUT({MIREPLAYRAMREADDATA[142:135],MIREPLAYRAMREADDATA[133:126],MIREPLAYRAMREADDATA[124:117],MIREPLAYRAMREADDATA[115:108]}),
        .DOUTPADOUTP({MIREPLAYRAMREADDATA[107],MIREPLAYRAMREADDATA[98],MIREPLAYRAMREADDATA[89],MIREPLAYRAMREADDATA[80]}),
        .DOUTPBDOUTP({MIREPLAYRAMREADDATA[143],MIREPLAYRAMREADDATA[134],MIREPLAYRAMREADDATA[125],MIREPLAYRAMREADDATA[116]}),
        .ECCPARITY(\NLW_RAMB36E2[1].ramb36e2_inst_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b0),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_RAMB36E2[1].ramb36e2_inst_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_RAMB36E2[1].ramb36e2_inst_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1]}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1],MIREPLAYRAMWRITEENABLE[1]}));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_req" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_req
   (MIREQUESTRAMREADDATA,
    CORECLKMIREQUESTRAM,
    MIREQUESTRAMREADENABLE,
    MIREQUESTRAMWRITEENABLE,
    mi_req_raddr0_i,
    mi_req_waddr0_i,
    MIREQUESTRAMWRITEDATA,
    mi_req_raddr1_i,
    mi_req_waddr1_i);
  output [143:0]MIREQUESTRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [3:0]MIREQUESTRAMREADENABLE;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]mi_req_raddr0_i;
  input [8:0]mi_req_waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [8:0]mi_req_raddr1_i;
  input [8:0]mi_req_waddr1_i;

  wire CORECLKMIREQUESTRAM;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [3:0]MIREQUESTRAMREADENABLE;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire [8:0]mi_req_raddr0_i;
  wire [8:0]mi_req_raddr1_i;
  wire [8:0]mi_req_waddr0_i;
  wire [8:0]mi_req_waddr1_i;

  pcie3_ultrascale_0_pcie3_ultrascale_0_bram_req_8k bram_req_8k_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMREADENABLE(MIREQUESTRAMREADENABLE),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .mi_req_raddr0_i(mi_req_raddr0_i),
        .mi_req_raddr1_i(mi_req_raddr1_i),
        .mi_req_waddr0_i(mi_req_waddr0_i),
        .mi_req_waddr1_i(mi_req_waddr1_i));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_bram_req_8k" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_bram_req_8k
   (MIREQUESTRAMREADDATA,
    CORECLKMIREQUESTRAM,
    MIREQUESTRAMREADENABLE,
    MIREQUESTRAMWRITEENABLE,
    mi_req_raddr0_i,
    mi_req_waddr0_i,
    MIREQUESTRAMWRITEDATA,
    mi_req_raddr1_i,
    mi_req_waddr1_i);
  output [143:0]MIREQUESTRAMREADDATA;
  input CORECLKMIREQUESTRAM;
  input [3:0]MIREQUESTRAMREADENABLE;
  input [3:0]MIREQUESTRAMWRITEENABLE;
  input [8:0]mi_req_raddr0_i;
  input [8:0]mi_req_waddr0_i;
  input [143:0]MIREQUESTRAMWRITEDATA;
  input [8:0]mi_req_raddr1_i;
  input [8:0]mi_req_waddr1_i;

  wire CORECLKMIREQUESTRAM;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [3:0]MIREQUESTRAMREADENABLE;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire [8:0]mi_req_raddr0_i;
  wire [8:0]mi_req_raddr1_i;
  wire [8:0]mi_req_waddr0_i;
  wire [8:0]mi_req_waddr1_i;
  wire [15:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPB_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E2[0].ramb18e2_inst 
       (.ADDRARDADDR({mi_req_raddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_req_waddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[0].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN({MIREQUESTRAMWRITEDATA[16:9],MIREQUESTRAMWRITEDATA[7:0]}),
        .DINBDIN({MIREQUESTRAMWRITEDATA[34:27],MIREQUESTRAMWRITEDATA[25:18]}),
        .DINPADINP({MIREQUESTRAMWRITEDATA[17],MIREQUESTRAMWRITEDATA[8]}),
        .DINPBDINP({MIREQUESTRAMWRITEDATA[35],MIREQUESTRAMWRITEDATA[26]}),
        .DOUTADOUT({MIREQUESTRAMREADDATA[16:9],MIREQUESTRAMREADDATA[7:0]}),
        .DOUTBDOUT({MIREQUESTRAMREADDATA[34:27],MIREQUESTRAMREADDATA[25:18]}),
        .DOUTPADOUTP({MIREQUESTRAMREADDATA[17],MIREQUESTRAMREADDATA[8]}),
        .DOUTPBDOUTP({MIREQUESTRAMREADDATA[35],MIREQUESTRAMREADDATA[26]}),
        .ENARDEN(MIREQUESTRAMREADENABLE[0]),
        .ENBWREN(MIREQUESTRAMWRITEENABLE[0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b1,1'b1,1'b1,1'b1}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E2[1].ramb18e2_inst 
       (.ADDRARDADDR({mi_req_raddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_req_waddr0_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[1].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN({MIREQUESTRAMWRITEDATA[52:45],MIREQUESTRAMWRITEDATA[43:36]}),
        .DINBDIN({MIREQUESTRAMWRITEDATA[70:63],MIREQUESTRAMWRITEDATA[61:54]}),
        .DINPADINP({MIREQUESTRAMWRITEDATA[53],MIREQUESTRAMWRITEDATA[44]}),
        .DINPBDINP({MIREQUESTRAMWRITEDATA[71],MIREQUESTRAMWRITEDATA[62]}),
        .DOUTADOUT({MIREQUESTRAMREADDATA[52:45],MIREQUESTRAMREADDATA[43:36]}),
        .DOUTBDOUT({MIREQUESTRAMREADDATA[70:63],MIREQUESTRAMREADDATA[61:54]}),
        .DOUTPADOUTP({MIREQUESTRAMREADDATA[53],MIREQUESTRAMREADDATA[44]}),
        .DOUTPBDOUTP({MIREQUESTRAMREADDATA[71],MIREQUESTRAMREADDATA[62]}),
        .ENARDEN(MIREQUESTRAMREADENABLE[1]),
        .ENBWREN(MIREQUESTRAMWRITEENABLE[1]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b1,1'b1,1'b1,1'b1}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E2[2].ramb18e2_inst 
       (.ADDRARDADDR({mi_req_raddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_req_waddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[2].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN({MIREQUESTRAMWRITEDATA[88:81],MIREQUESTRAMWRITEDATA[79:72]}),
        .DINBDIN({MIREQUESTRAMWRITEDATA[106:99],MIREQUESTRAMWRITEDATA[97:90]}),
        .DINPADINP({MIREQUESTRAMWRITEDATA[89],MIREQUESTRAMWRITEDATA[80]}),
        .DINPBDINP({MIREQUESTRAMWRITEDATA[107],MIREQUESTRAMWRITEDATA[98]}),
        .DOUTADOUT({MIREQUESTRAMREADDATA[88:81],MIREQUESTRAMREADDATA[79:72]}),
        .DOUTBDOUT({MIREQUESTRAMREADDATA[106:99],MIREQUESTRAMREADDATA[97:90]}),
        .DOUTPADOUTP({MIREQUESTRAMREADDATA[89],MIREQUESTRAMREADDATA[80]}),
        .DOUTPBDOUTP({MIREQUESTRAMREADDATA[107],MIREQUESTRAMREADDATA[98]}),
        .ENARDEN(MIREQUESTRAMREADENABLE[2]),
        .ENBWREN(MIREQUESTRAMWRITEENABLE[2]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b1,1'b1,1'b1,1'b1}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \RAMB18E2[3].ramb18e2_inst 
       (.ADDRARDADDR({mi_req_raddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({mi_req_waddr1_i,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_RAMB18E2[3].ramb18e2_inst_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CLKARDCLK(CORECLKMIREQUESTRAM),
        .CLKBWRCLK(CORECLKMIREQUESTRAM),
        .DINADIN({MIREQUESTRAMWRITEDATA[124:117],MIREQUESTRAMWRITEDATA[115:108]}),
        .DINBDIN({MIREQUESTRAMWRITEDATA[142:135],MIREQUESTRAMWRITEDATA[133:126]}),
        .DINPADINP({MIREQUESTRAMWRITEDATA[125],MIREQUESTRAMWRITEDATA[116]}),
        .DINPBDINP({MIREQUESTRAMWRITEDATA[143],MIREQUESTRAMWRITEDATA[134]}),
        .DOUTADOUT({MIREQUESTRAMREADDATA[124:117],MIREQUESTRAMREADDATA[115:108]}),
        .DOUTBDOUT({MIREQUESTRAMREADDATA[142:135],MIREQUESTRAMREADDATA[133:126]}),
        .DOUTPADOUTP({MIREQUESTRAMREADDATA[125],MIREQUESTRAMREADDATA[116]}),
        .DOUTPBDOUTP({MIREQUESTRAMREADDATA[143],MIREQUESTRAMREADDATA[134]}),
        .ENARDEN(MIREQUESTRAMREADENABLE[3]),
        .ENBWREN(MIREQUESTRAMWRITEENABLE[3]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({1'b1,1'b1,1'b1,1'b1}));
endmodule

(* CHECK_LICENSE_TYPE = "pcie3_ultrascale_0_gt,pcie3_ultrascale_0_gt_gtwizard_top,{}" *) (* CORE_GENERATION_INFO = "pcie3_ultrascale_0_gt,pcie3_ultrascale_0_gt_gtwizard_top,{x_ipProduct=Vivado 2015.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=gtwizard_ultrascale,x_ipVersion=1.5,x_ipCoreRevision=3,x_ipLanguage=VERILOG,x_ipSimLanguage=VERILOG,C_CHANNEL_ENABLE=000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,C_COMMON_SCALING_FACTOR=2,C_CPLL_VCO_FREQUENCY=2000.0,C_FORCE_COMMONS=0,C_FREERUN_FREQUENCY=100,C_GT_TYPE=0,C_GT_REV=17,C_INCLUDE_CPLL_CAL=2,C_LOCATE_COMMON=0,C_LOCATE_RESET_CONTROLLER=1,C_LOCATE_USER_DATA_WIDTH_SIZING=1,C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER=0,C_LOCATE_IN_SYSTEM_IBERT_CORE=2,C_LOCATE_RX_USER_CLOCKING=1,C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER=1,C_LOCATE_TX_USER_CLOCKING=1,C_RESET_CONTROLLER_INSTANCE_CTRL=0,C_RX_BUFFBYPASS_MODE=0,C_RX_BUFFER_BYPASS_INSTANCE_CTRL=0,C_RX_BUFFER_MODE=1,C_RX_CB_DISP=00000000,C_RX_CB_K=00000000,C_RX_CB_MAX_LEVEL=4,C_RX_CB_LEN_SEQ=1,C_RX_CB_NUM_SEQ=0,C_RX_CB_VAL=00000000000000000000000000000000000000000000000000000000000000000000000000000000,C_RX_CC_DISP=00000000,C_RX_CC_ENABLE=1,C_RX_CC_K=00000001,C_RX_CC_LEN_SEQ=1,C_RX_CC_NUM_SEQ=1,C_RX_CC_PERIODICITY=5000,C_RX_CC_VAL=00000000000000000000000000000000000000000000000000000000000000000000000000011100,C_RX_COMMA_M_ENABLE=1,C_RX_COMMA_M_VAL=1010000011,C_RX_COMMA_P_ENABLE=1,C_RX_COMMA_P_VAL=0101111100,C_RX_DATA_DECODING=1,C_RX_ENABLE=1,C_RX_INT_DATA_WIDTH=20,C_RX_LINE_RATE=8,C_RX_MASTER_CHANNEL_IDX=103,C_RX_OUTCLK_BUFG_GT_DIV=1,C_RX_OUTCLK_FREQUENCY=400.0000000,C_RX_OUTCLK_SOURCE=1,C_RX_PLL_TYPE=1,C_RX_RECCLK_OUTPUT=0x000000000000000000000000000000000000000000000000,C_RX_REFCLK_FREQUENCY=100,C_RX_SLIDE_MODE=2,C_RX_USER_CLOCKING_CONTENTS=0,C_RX_USER_CLOCKING_INSTANCE_CTRL=0,C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK=1,C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2=1,C_RX_USER_CLOCKING_SOURCE=0,C_RX_USER_DATA_WIDTH=16,C_RX_USRCLK_FREQUENCY=400.0000000,C_RX_USRCLK2_FREQUENCY=400.0000000,C_SECONDARY_QPLL_ENABLE=0,C_SECONDARY_QPLL_REFCLK_FREQUENCY=257.8125,C_TOTAL_NUM_CHANNELS=8,C_TOTAL_NUM_COMMONS=2,C_TOTAL_NUM_COMMONS_EXAMPLE=0,C_TXPROGDIV_FREQ_ENABLE=1,C_TXPROGDIV_FREQ_SOURCE=2,C_TXPROGDIV_FREQ_VAL=400,C_TX_BUFFBYPASS_MODE=0,C_TX_BUFFER_BYPASS_INSTANCE_CTRL=0,C_TX_BUFFER_MODE=0,C_TX_DATA_ENCODING=1,C_TX_ENABLE=1,C_TX_INT_DATA_WIDTH=20,C_TX_LINE_RATE=8,C_TX_MASTER_CHANNEL_IDX=103,C_TX_OUTCLK_BUFG_GT_DIV=1,C_TX_OUTCLK_FREQUENCY=400.0000000,C_TX_OUTCLK_SOURCE=4,C_TX_PLL_TYPE=1,C_TX_REFCLK_FREQUENCY=100,C_TX_USER_CLOCKING_CONTENTS=0,C_TX_USER_CLOCKING_INSTANCE_CTRL=0,C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK=1,C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2=1,C_TX_USER_CLOCKING_SOURCE=0,C_TX_USER_DATA_WIDTH=16,C_TX_USRCLK_FREQUENCY=400.0000000,C_TX_USRCLK2_FREQUENCY=400.0000000}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt" *) (* X_CORE_INFO = "pcie3_ultrascale_0_gt_gtwizard_top,Vivado 2015.4" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtrefclk01_in,
    qpll1pd_in,
    qpll1reset_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    cpllpd_in,
    cpllreset_in,
    drpclk_in,
    gthrxn_in,
    gthrxp_in,
    gtrefclk0_in,
    gtrxreset_in,
    gttxreset_in,
    loopback_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxcommadeten_in,
    rxlpmen_in,
    rxmcommaalignen_in,
    rxpcommaalignen_in,
    rxpd_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxrate_in,
    rxslide_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    tx8b10ben_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdeemph_in,
    txdetectrx_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txmaincursor_in,
    txmargin_in,
    txoutclksel_in,
    txpd_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprogdivreset_in,
    txrate_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cplllock_out,
    dmonitorout_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxclkcorcnt_out,
    rxcommadet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxoutclk_out,
    rxphaligndone_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxresetdone_out,
    rxstatus_out,
    rxsyncdone_out,
    rxvalid_out,
    txdlysresetdone_out,
    txoutclk_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [1:0]gtrefclk01_in;
  input [1:0]qpll1pd_in;
  input [1:0]qpll1reset_in;
  input [9:0]qpllrsvd2_in;
  input [9:0]qpllrsvd3_in;
  output [1:0]qpll1lock_out;
  output [1:0]qpll1outclk_out;
  output [1:0]qpll1outrefclk_out;
  input [7:0]cpllpd_in;
  input [7:0]cpllreset_in;
  input [7:0]drpclk_in;
  input [7:0]gthrxn_in;
  input [7:0]gthrxp_in;
  input [7:0]gtrefclk0_in;
  input [7:0]gtrxreset_in;
  input [7:0]gttxreset_in;
  input [23:0]loopback_in;
  input [7:0]pcieeqrxeqadaptdone_in;
  input [7:0]pcierstidle_in;
  input [7:0]pciersttxsyncstart_in;
  input [7:0]pcieuserratedone_in;
  input [127:0]pcsrsvdin_in;
  input [7:0]rx8b10ben_in;
  input [7:0]rxbufreset_in;
  input [7:0]rxcdrhold_in;
  input [7:0]rxcommadeten_in;
  input [7:0]rxlpmen_in;
  input [7:0]rxmcommaalignen_in;
  input [7:0]rxpcommaalignen_in;
  input [15:0]rxpd_in;
  input [7:0]rxpolarity_in;
  input [7:0]rxprbscntreset_in;
  input [31:0]rxprbssel_in;
  input [7:0]rxprogdivreset_in;
  input [23:0]rxrate_in;
  input [7:0]rxslide_in;
  input [7:0]rxuserrdy_in;
  input [7:0]rxusrclk_in;
  input [7:0]rxusrclk2_in;
  input [7:0]tx8b10ben_in;
  input [127:0]txctrl0_in;
  input [127:0]txctrl1_in;
  input [63:0]txctrl2_in;
  input [1023:0]txdata_in;
  input [7:0]txdeemph_in;
  input [7:0]txdetectrx_in;
  input [7:0]txdlybypass_in;
  input [7:0]txdlyen_in;
  input [7:0]txdlyhold_in;
  input [7:0]txdlyovrden_in;
  input [7:0]txdlysreset_in;
  input [7:0]txdlyupdown_in;
  input [7:0]txelecidle_in;
  input [7:0]txinhibit_in;
  input [55:0]txmaincursor_in;
  input [23:0]txmargin_in;
  input [23:0]txoutclksel_in;
  input [15:0]txpd_in;
  input [7:0]txphalign_in;
  input [7:0]txphalignen_in;
  input [7:0]txphdlypd_in;
  input [7:0]txphdlyreset_in;
  input [7:0]txphdlytstclk_in;
  input [7:0]txphinit_in;
  input [7:0]txphovrden_in;
  input [39:0]txpostcursor_in;
  input [7:0]txprbsforceerr_in;
  input [31:0]txprbssel_in;
  input [39:0]txprecursor_in;
  input [7:0]txprogdivreset_in;
  input [23:0]txrate_in;
  input [7:0]txswing_in;
  input [7:0]txsyncallin_in;
  input [7:0]txsyncin_in;
  input [7:0]txsyncmode_in;
  input [7:0]txuserrdy_in;
  input [7:0]txusrclk_in;
  input [7:0]txusrclk2_in;
  output [23:0]bufgtce_out;
  output [23:0]bufgtcemask_out;
  output [71:0]bufgtdiv_out;
  output [23:0]bufgtreset_out;
  output [23:0]bufgtrstmask_out;
  output [7:0]cplllock_out;
  output [135:0]dmonitorout_out;
  output [7:0]eyescandataerror_out;
  output [7:0]gthtxn_out;
  output [7:0]gthtxp_out;
  output [7:0]gtpowergood_out;
  output [7:0]pcierategen3_out;
  output [7:0]pcierateidle_out;
  output [15:0]pcierateqpllpd_out;
  output [15:0]pcierateqpllreset_out;
  output [7:0]pciesynctxsyncdone_out;
  output [7:0]pcieusergen3rdy_out;
  output [7:0]pcieuserphystatusrst_out;
  output [7:0]pcieuserratestart_out;
  output [95:0]pcsrsvdout_out;
  output [7:0]phystatus_out;
  output [23:0]rxbufstatus_out;
  output [7:0]rxbyteisaligned_out;
  output [7:0]rxbyterealign_out;
  output [7:0]rxcdrlock_out;
  output [15:0]rxclkcorcnt_out;
  output [7:0]rxcommadet_out;
  output [127:0]rxctrl0_out;
  output [127:0]rxctrl1_out;
  output [63:0]rxctrl2_out;
  output [63:0]rxctrl3_out;
  output [1023:0]rxdata_out;
  output [7:0]rxdlysresetdone_out;
  output [7:0]rxelecidle_out;
  output [7:0]rxoutclk_out;
  output [7:0]rxphaligndone_out;
  output [7:0]rxpmaresetdone_out;
  output [7:0]rxprbserr_out;
  output [7:0]rxprbslocked_out;
  output [7:0]rxprgdivresetdone_out;
  output [7:0]rxresetdone_out;
  output [23:0]rxstatus_out;
  output [7:0]rxsyncdone_out;
  output [7:0]rxvalid_out;
  output [7:0]txdlysresetdone_out;
  output [7:0]txoutclk_out;
  output [7:0]txphaligndone_out;
  output [7:0]txphinitdone_out;
  output [7:0]txpmaresetdone_out;
  output [7:0]txprgdivresetdone_out;
  output [7:0]txresetdone_out;
  output [7:0]txsyncdone_out;
  output [7:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [23:0]bufgtce_out;
  wire [23:0]bufgtcemask_out;
  wire [71:0]bufgtdiv_out;
  wire [23:0]bufgtreset_out;
  wire [23:0]bufgtrstmask_out;
  wire [7:0]cplllock_out;
  wire [7:0]cpllpd_in;
  wire [7:0]cpllreset_in;
  wire [135:0]dmonitorout_out;
  wire [7:0]drpclk_in;
  wire [7:0]eyescandataerror_out;
  wire [7:0]gthrxn_in;
  wire [7:0]gthrxp_in;
  wire [7:0]gthtxn_out;
  wire [7:0]gthtxp_out;
  wire [7:0]gtpowergood_out;
  wire [1:0]gtrefclk01_in;
  wire [7:0]gtrefclk0_in;
  wire [7:0]gtrxreset_in;
  wire [7:0]gttxreset_in;
  wire [0:0]gtwiz_reset_rx_done_in;
  wire [0:0]gtwiz_reset_tx_done_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire [23:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [7:0]pcieeqrxeqadaptdone_in;
  wire [7:0]pcierategen3_out;
  wire [7:0]pcierateidle_out;
  wire [15:0]pcierateqpllpd_out;
  wire [15:0]pcierateqpllreset_out;
  wire [7:0]pcierstidle_in;
  wire [7:0]pciersttxsyncstart_in;
  wire [7:0]pciesynctxsyncdone_out;
  wire [7:0]pcieusergen3rdy_out;
  wire [7:0]pcieuserphystatusrst_out;
  wire [7:0]pcieuserratedone_in;
  wire [7:0]pcieuserratestart_out;
  wire [127:0]pcsrsvdin_in;
  wire [95:0]pcsrsvdout_out;
  wire [7:0]phystatus_out;
  wire [1:0]qpll1lock_out;
  wire [1:0]qpll1outclk_out;
  wire [1:0]qpll1outrefclk_out;
  wire [1:0]qpll1pd_in;
  wire [1:0]qpll1reset_in;
  wire [9:0]qpllrsvd2_in;
  wire [9:0]qpllrsvd3_in;
  wire [7:0]rx8b10ben_in;
  wire [7:0]rxbufreset_in;
  wire [23:0]rxbufstatus_out;
  wire [7:0]rxbyteisaligned_out;
  wire [7:0]rxbyterealign_out;
  wire [7:0]rxcdrhold_in;
  wire [7:0]rxcdrlock_out;
  wire [15:0]rxclkcorcnt_out;
  wire [7:0]rxcommadet_out;
  wire [7:0]rxcommadeten_in;
  wire [127:0]rxctrl0_out;
  wire [127:0]rxctrl1_out;
  wire [63:0]rxctrl2_out;
  wire [63:0]rxctrl3_out;
  wire [1023:0]rxdata_out;
  wire [7:0]rxdlysresetdone_out;
  wire [7:0]rxelecidle_out;
  wire [7:0]rxlpmen_in;
  wire [7:0]rxmcommaalignen_in;
  wire [7:0]rxoutclk_out;
  wire [7:0]rxpcommaalignen_in;
  wire [15:0]rxpd_in;
  wire [7:0]rxphaligndone_out;
  wire [7:0]rxpmaresetdone_out;
  wire [7:0]rxpolarity_in;
  wire [7:0]rxprbscntreset_in;
  wire [7:0]rxprbserr_out;
  wire [7:0]rxprbslocked_out;
  wire [31:0]rxprbssel_in;
  wire [7:0]rxprgdivresetdone_out;
  wire [7:0]rxprogdivreset_in;
  wire [23:0]rxrate_in;
  wire [7:0]rxresetdone_out;
  wire [7:0]rxslide_in;
  wire [23:0]rxstatus_out;
  wire [7:0]rxsyncdone_out;
  wire [7:0]rxuserrdy_in;
  wire [7:0]rxusrclk2_in;
  wire [7:0]rxusrclk_in;
  wire [7:0]rxvalid_out;
  wire [7:0]tx8b10ben_in;
  wire [127:0]txctrl0_in;
  wire [127:0]txctrl1_in;
  wire [63:0]txctrl2_in;
  wire [1023:0]txdata_in;
  wire [7:0]txdeemph_in;
  wire [7:0]txdetectrx_in;
  wire [7:0]txdlybypass_in;
  wire [7:0]txdlyen_in;
  wire [7:0]txdlyhold_in;
  wire [7:0]txdlyovrden_in;
  wire [7:0]txdlysreset_in;
  wire [7:0]txdlysresetdone_out;
  wire [7:0]txdlyupdown_in;
  wire [7:0]txelecidle_in;
  wire [7:0]txinhibit_in;
  wire [55:0]txmaincursor_in;
  wire [23:0]txmargin_in;
  wire [7:0]txoutclk_out;
  wire [23:0]txoutclksel_in;
  wire [15:0]txpd_in;
  wire [7:0]txphalign_in;
  wire [7:0]txphaligndone_out;
  wire [7:0]txphalignen_in;
  wire [7:0]txphdlypd_in;
  wire [7:0]txphdlyreset_in;
  wire [7:0]txphdlytstclk_in;
  wire [7:0]txphinit_in;
  wire [7:0]txphinitdone_out;
  wire [7:0]txphovrden_in;
  wire [7:0]txpmaresetdone_out;
  wire [39:0]txpostcursor_in;
  wire [7:0]txprbsforceerr_in;
  wire [31:0]txprbssel_in;
  wire [39:0]txprecursor_in;
  wire [7:0]txprgdivresetdone_out;
  wire [7:0]txprogdivreset_in;
  wire [23:0]txrate_in;
  wire [7:0]txresetdone_out;
  wire [7:0]txswing_in;
  wire [7:0]txsyncallin_in;
  wire [7:0]txsyncdone_out;
  wire [7:0]txsyncin_in;
  wire [7:0]txsyncmode_in;
  wire [7:0]txsyncout_out;
  wire [7:0]txuserrdy_in;
  wire [7:0]txusrclk2_in;
  wire [7:0]txusrclk_in;
  wire [7:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [31:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [127:0]NLW_inst_drpdo_out_UNCONNECTED;
  wire [1:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [7:0]NLW_inst_drprdy_out_UNCONNECTED;
  wire [7:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [1:0]NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED;
  wire [1:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [127:0]NLW_inst_gtwiz_userdata_rx_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtytxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtytxp_out_UNCONNECTED;
  wire [63:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [15:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [15:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [0:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [1:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [15:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [15:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [1:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [1:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [7:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [39:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [63:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxdatavalid_out_UNCONNECTED;
  wire [47:0]NLW_inst_rxheader_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxheadervalid_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [55:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [15:0]NLW_inst_rxstartofseq_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [0:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [0:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [0:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [15:0]NLW_inst_txbufstatus_out_UNCONNECTED;
  wire [7:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [0:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [7:0]NLW_inst_txoutclkfabric_out_UNCONNECTED;
  wire [7:0]NLW_inst_txoutclkpcs_out_UNCONNECTED;
  wire [7:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [7:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [7:0]NLW_inst_txratedone_out_UNCONNECTED;

  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_COMMON_SCALING_FACTOR = "2" *) 
  (* C_CPLL_VCO_FREQUENCY = "2000.000000" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "100.000000" *) 
  (* C_GT_REV = "17" *) 
  (* C_GT_TYPE = "0" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "0" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "1" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "1" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "1" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "1" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "4" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "1" *) 
  (* C_RX_CC_K = "8'b00000001" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "1" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000011100" *) 
  (* C_RX_COMMA_M_ENABLE = "1" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "1" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "1" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "20" *) 
  (* C_RX_LINE_RATE = "8.000000" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "103" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "400.000000" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "1" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "100.000000" *) 
  (* C_RX_SLIDE_MODE = "2" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "16" *) 
  (* C_RX_USRCLK2_FREQUENCY = "400.000000" *) 
  (* C_RX_USRCLK_FREQUENCY = "400.000000" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_TOTAL_NUM_CHANNELS = "8" *) 
  (* C_TOTAL_NUM_COMMONS = "2" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "1" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "2" *) 
  (* C_TXPROGDIV_FREQ_VAL = "400.000000" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "0" *) 
  (* C_TX_DATA_ENCODING = "1" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "20" *) 
  (* C_TX_LINE_RATE = "8.000000" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "103" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_TX_OUTCLK_FREQUENCY = "400.000000" *) 
  (* C_TX_OUTCLK_SOURCE = "4" *) 
  (* C_TX_PLL_TYPE = "1" *) 
  (* C_TX_REFCLK_FREQUENCY = "100.000000" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "16" *) 
  (* C_TX_USRCLK2_FREQUENCY = "400.000000" *) 
  (* C_TX_USRCLK_FREQUENCY = "400.000000" *) 
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gtwizard_top inst
       (.bgbypassb_in({1'b1,1'b1}),
        .bgmonitorenb_in({1'b1,1'b1}),
        .bgpdb_in({1'b1,1'b1}),
        .bgrcalovrd_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .bgrcalovrdenb_in({1'b1,1'b1}),
        .bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cdrstepdir_in(1'b0),
        .cdrstepsq_in(1'b0),
        .cdrstepsx_in(1'b0),
        .cfgreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[7:0]),
        .cpllfreqlock_in(1'b0),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .cplllocken_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[7:0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1}),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dmonitorclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dmonitorout_out(dmonitorout_out),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpclk_common_in({1'b0,1'b0}),
        .drpclk_in(drpclk_in),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[31:0]),
        .drpdo_out(NLW_inst_drpdo_out_UNCONNECTED[127:0]),
        .drpen_common_in({1'b0,1'b0}),
        .drpen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[1:0]),
        .drprdy_out(NLW_inst_drprdy_out_UNCONNECTED[7:0]),
        .drprst_in(1'b0),
        .drpwe_common_in({1'b0,1'b0}),
        .drpwe_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .evoddphicalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .evoddphidrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .evoddphidwren_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .evoddphixrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .evoddphixwren_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanmode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .eyescanreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .eyescantrigger_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtgrefclk0_in({1'b0,1'b0}),
        .gtgrefclk1_in({1'b0,1'b0}),
        .gtgrefclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtnorthrefclk00_in({1'b0,1'b0}),
        .gtnorthrefclk01_in({1'b0,1'b0}),
        .gtnorthrefclk0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtnorthrefclk10_in({1'b0,1'b0}),
        .gtnorthrefclk11_in({1'b0,1'b0}),
        .gtnorthrefclk1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in({1'b0,1'b0}),
        .gtrefclk01_in(gtrefclk01_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk10_in({1'b0,1'b0}),
        .gtrefclk11_in({1'b0,1'b0}),
        .gtrefclk1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[7:0]),
        .gtresetsel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in(gtrxreset_in),
        .gtrxresetsel_in(1'b0),
        .gtsouthrefclk00_in({1'b0,1'b0}),
        .gtsouthrefclk01_in({1'b0,1'b0}),
        .gtsouthrefclk0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtsouthrefclk10_in({1'b0,1'b0}),
        .gtsouthrefclk11_in({1'b0,1'b0}),
        .gtsouthrefclk1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gttxreset_in(gttxreset_in),
        .gttxresetsel_in(1'b0),
        .gtwiz_buffbypass_rx_done_out(NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(1'b0),
        .gtwiz_buffbypass_rx_start_user_in(1'b0),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in({1'b0,1'b0}),
        .gtwiz_reset_qpll0reset_out(NLW_inst_gtwiz_reset_qpll0reset_out_UNCONNECTED[1:0]),
        .gtwiz_reset_qpll1lock_in({1'b0,1'b0}),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[1:0]),
        .gtwiz_reset_rx_cdr_stable_out(NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(1'b0),
        .gtwiz_reset_rx_done_in(gtwiz_reset_rx_done_in),
        .gtwiz_reset_rx_done_out(NLW_inst_gtwiz_reset_rx_done_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_pll_and_datapath_in(1'b0),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_in(gtwiz_reset_tx_done_in),
        .gtwiz_reset_tx_done_out(NLW_inst_gtwiz_reset_tx_done_out_UNCONNECTED[0]),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(gtwiz_userclk_tx_reset_in),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(NLW_inst_gtwiz_userdata_rx_out_UNCONNECTED[127:0]),
        .gtwiz_userdata_tx_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtyrxn_in(1'b0),
        .gtyrxp_in(1'b0),
        .gtytxn_out(NLW_inst_gtytxn_out_UNCONNECTED[0]),
        .gtytxp_out(NLW_inst_gtytxp_out_UNCONNECTED[0]),
        .loopback_in(loopback_in),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .lpbktxrxseren_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpll0_in(1'b0),
        .pcierateqpll1_in(1'b0),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[63:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[15:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[15:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[0]),
        .qpll0clk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0clkrsvd0_in({1'b0,1'b0}),
        .qpll0clkrsvd1_in({1'b0,1'b0}),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[1:0]),
        .qpll0fbdiv_in(1'b0),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[1:0]),
        .qpll0lockdetclk_in({1'b0,1'b0}),
        .qpll0locken_in({1'b0,1'b0}),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[1:0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[1:0]),
        .qpll0pd_in({1'b1,1'b1}),
        .qpll0refclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[1:0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1}),
        .qpll0reset_in({1'b1,1'b1}),
        .qpll1clk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1clkrsvd0_in({1'b0,1'b0}),
        .qpll1clkrsvd1_in({1'b0,1'b0}),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[1:0]),
        .qpll1fbdiv_in(1'b0),
        .qpll1lock_out(qpll1lock_out),
        .qpll1lockdetclk_in({1'b0,1'b0}),
        .qpll1locken_in({1'b1,1'b1}),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .qpll1pd_in(qpll1pd_in),
        .qpll1refclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[1:0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1}),
        .qpll1reset_in(qpll1reset_in),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[15:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[15:0]),
        .qpllfreqlock_in(1'b0),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in(qpllrsvd2_in),
        .qpllrsvd3_in(qpllrsvd3_in),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in({1'b1,1'b1}),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[1:0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[1:0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[7:0]),
        .resetovrd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rstclkentx_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx8b10ben_in(rx8b10ben_in),
        .rxafecfoken_in(1'b0),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[7:0]),
        .rxcdrreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxcdrresetrsv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[7:0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[7:0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[7:0]),
        .rxchbonden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondmaster_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[39:0]),
        .rxchbondslave_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[0]),
        .rxckcalreset_in(1'b0),
        .rxckcalstart_in(1'b0),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[7:0]),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[7:0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[7:0]),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[63:0]),
        .rxdatavalid_out(NLW_inst_rxdatavalid_out_UNCONNECTED[15:0]),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in({1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .rxdfeagchold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfeagcovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokfcnum_in(1'b0),
        .rxdfecfokfen_in(1'b0),
        .rxdfecfokfpulse_in(1'b0),
        .rxdfecfokhold_in(1'b0),
        .rxdfecfokovren_in(1'b0),
        .rxdfelfhold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfelfovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfelpmreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9hold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9ovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfeuthold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfeutovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfevphold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfevpovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfevsen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdfexyden_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxdlybypass_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxdlyen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdlyovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdlysreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxeqtraining_in(1'b0),
        .rxgearboxslip_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxheader_out(NLW_inst_rxheader_out_UNCONNECTED[47:0]),
        .rxheadervalid_out(NLW_inst_rxheadervalid_out_UNCONNECTED[15:0]),
        .rxlatclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[0]),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmgcovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfhold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfhold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfklovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmoshold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxlpmosovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[55:0]),
        .rxmonitorsel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoobreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoscalreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoshold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxosintcfg_in({1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1}),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[7:0]),
        .rxosinten_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxosinthold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxosintovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[7:0]),
        .rxosintstrobe_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[7:0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[7:0]),
        .rxosinttestovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxosovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[7:0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[7:0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxpd_in(rxpd_in),
        .rxphalign_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[7:0]),
        .rxphdlypd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphdlyreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxpllclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .rxpmareset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_in(rxprogdivreset_in),
        .rxqpien_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[7:0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[7:0]),
        .rxrate_in(rxrate_in),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[7:0]),
        .rxratemode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[3:0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[3:0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[7:0]),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[7:0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[7:0]),
        .rxslipoutclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[7:0]),
        .rxslippma_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[7:0]),
        .rxstartofseq_out(NLW_inst_rxstartofseq_out_UNCONNECTED[15:0]),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxsyncmode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[7:0]),
        .rxsysclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxtermination_in(1'b0),
        .rxuserrdy_in(rxuserrdy_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sdm0data_in(1'b0),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in(1'b0),
        .sdm1data_in(1'b0),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in(1'b0),
        .sigvalidclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tcongpi_in(1'b0),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[0]),
        .tconpowerup_in(1'b0),
        .tconreset_in(1'b0),
        .tconrsvdin1_in(1'b0),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufdiffctrl_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txbufstatus_out(NLW_inst_txbufstatus_out_UNCONNECTED[15:0]),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[7:0]),
        .txcominit_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txcomsas_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txcomwake_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[0]),
        .txdccforcestart_in(1'b0),
        .txdccreset_in(1'b0),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in({1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0}),
        .txdiffpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txelforcestart_in(1'b0),
        .txelpcaldvorwren_in(1'b0),
        .txelpcalpaorwren_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txlfpstreset_in(1'b0),
        .txlfpsu2lpexit_in(1'b0),
        .txlfpsu3wake_in(1'b0),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txmuxdcdexhold_in(1'b0),
        .txmuxdcdorwren_in(1'b0),
        .txoneszeros_in(1'b0),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(NLW_inst_txoutclkfabric_out_UNCONNECTED[7:0]),
        .txoutclkpcs_out(NLW_inst_txoutclkpcs_out_UNCONNECTED[7:0]),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpippmovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpippmpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpippmsel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpllclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .txpmareset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpostcursor_in(txpostcursor_in),
        .txpostcursorinv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprecursorinv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_in(txprogdivreset_in),
        .txqpibiasen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[7:0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[7:0]),
        .txqpistrongpdown_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txqpiweakpup_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txrate_in(txrate_in),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[7:0]),
        .txratemode_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(txresetdone_out),
        .txsequence_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .txuserrdy_in(txuserrdy_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gthe3_channel_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_channel_wrapper
   (cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    pcsrsvdout_out,
    rxdata_out,
    drpdo_out,
    rxctrl0_out,
    rxctrl1_out,
    dmonitorout_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtce_out,
    bufgtcemask_out,
    bufgtreset_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxmonitorout_out,
    pinrsrvdas_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    bufgtdiv_out,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrxreset_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpisopd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txratemode_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    rxdfeagcctrl_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txbufdiffctrl_in,
    txmargin_in,
    txoutclksel_in,
    txrate_in,
    rxosintcfg_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    rxchbondi_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in);
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gthtxn_out;
  output [3:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [3:0]phystatus_out;
  output [3:0]resetexception_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [3:0]rxqpisenn_out;
  output [3:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [3:0]txqpisenn_out;
  output [3:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  output [47:0]pcsrsvdout_out;
  output [511:0]rxdata_out;
  output [63:0]drpdo_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [67:0]dmonitorout_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [7:0]rxclkcorcnt_out;
  output [7:0]rxdatavalid_out;
  output [7:0]rxheadervalid_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [11:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [11:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [11:0]rxbufstatus_out;
  output [11:0]rxstatus_out;
  output [19:0]rxchbondo_out;
  output [23:0]rxheader_out;
  output [27:0]rxmonitorout_out;
  output [31:0]pinrsrvdas_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [31:0]rxdataextendrsvd_out;
  output [35:0]bufgtdiv_out;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [3:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]evoddphicaldone_in;
  input [3:0]evoddphicalstart_in;
  input [3:0]evoddphidrden_in;
  input [3:0]evoddphidwren_in;
  input [3:0]evoddphixrden_in;
  input [3:0]evoddphixwren_in;
  input [3:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtgrefclk_in;
  input [3:0]gthrxn_in;
  input [3:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [3:0]gtresetsel_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]lpbkrxtxseren_in;
  input [3:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [0:0]qpll0outclk_out;
  input [0:0]qpll0outrefclk_out;
  input [0:0]qpll1outclk_out;
  input [0:0]qpll1outrefclk_out;
  input [3:0]resetovrd_in;
  input [3:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [3:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxcommadeten_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [3:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [3:0]rxosinten_in;
  input [3:0]rxosinthold_in;
  input [3:0]rxosintovrden_in;
  input [3:0]rxosintstrobe_in;
  input [3:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [3:0]rxphovrden_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [3:0]rxprogdivreset_in;
  input [3:0]rxqpien_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [3:0]tx8b10ben_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [3:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [3:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [3:0]txpisopd_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [3:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [3:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [3:0]txqpibiasen_in;
  input [3:0]txqpistrongpdown_in;
  input [3:0]txqpiweakpup_in;
  input [3:0]txratemode_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  input [511:0]txdata_in;
  input [63:0]drpdi_in;
  input [63:0]gtrsvd_in;
  input [63:0]pcsrsvdin_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [7:0]rxdfeagcctrl_in;
  input [7:0]rxelecidlemode_in;
  input [7:0]rxmonitorsel_in;
  input [7:0]rxpd_in;
  input [7:0]rxpllclksel_in;
  input [7:0]rxsysclksel_in;
  input [7:0]txpd_in;
  input [7:0]txpllclksel_in;
  input [7:0]txsysclksel_in;
  input [11:0]cpllrefclksel_in;
  input [11:0]loopback_in;
  input [11:0]rxchbondlevel_in;
  input [11:0]rxoutclksel_in;
  input [11:0]rxrate_in;
  input [11:0]txbufdiffctrl_in;
  input [11:0]txmargin_in;
  input [11:0]txoutclksel_in;
  input [11:0]txrate_in;
  input [15:0]rxosintcfg_in;
  input [15:0]rxprbssel_in;
  input [15:0]txdiffctrl_in;
  input [15:0]txprbssel_in;
  input [19:0]pcsrsvdin2_in;
  input [19:0]pmarsvdin_in;
  input [19:0]rxchbondi_in;
  input [19:0]txpippmstepsize_in;
  input [19:0]txpostcursor_in;
  input [19:0]txprecursor_in;
  input [23:0]txheader_in;
  input [27:0]txmaincursor_in;
  input [27:0]txsequence_in;
  input [31:0]tx8b10bbypass_in;
  input [31:0]txctrl2_in;
  input [31:0]txdataextendrsvd_in;
  input [35:0]drpaddr_in;

  wire [11:0]bufgtce_out;
  wire [11:0]bufgtcemask_out;
  wire [35:0]bufgtdiv_out;
  wire [11:0]bufgtreset_out;
  wire [11:0]bufgtrstmask_out;
  wire [3:0]cfgreset_in;
  wire [3:0]clkrsvd0_in;
  wire [3:0]clkrsvd1_in;
  wire [3:0]cpllfbclklost_out;
  wire [3:0]cplllock_out;
  wire [3:0]cplllockdetclk_in;
  wire [3:0]cplllocken_in;
  wire [3:0]cpllpd_in;
  wire [3:0]cpllrefclklost_out;
  wire [11:0]cpllrefclksel_in;
  wire [3:0]cpllreset_in;
  wire [3:0]dmonfiforeset_in;
  wire [3:0]dmonitorclk_in;
  wire [67:0]dmonitorout_out;
  wire [35:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]evoddphicaldone_in;
  wire [3:0]evoddphicalstart_in;
  wire [3:0]evoddphidrden_in;
  wire [3:0]evoddphidwren_in;
  wire [3:0]evoddphixrden_in;
  wire [3:0]evoddphixwren_in;
  wire [3:0]eyescandataerror_out;
  wire [3:0]eyescanmode_in;
  wire [3:0]eyescanreset_in;
  wire [3:0]eyescantrigger_in;
  wire [3:0]gtgrefclk_in;
  wire [3:0]gthrxn_in;
  wire [3:0]gthrxp_in;
  wire [3:0]gthtxn_out;
  wire [3:0]gthtxp_out;
  wire [3:0]gtnorthrefclk0_in;
  wire [3:0]gtnorthrefclk1_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [3:0]gtrefclk1_in;
  wire [3:0]gtrefclkmonitor_out;
  wire [3:0]gtresetsel_in;
  wire [63:0]gtrsvd_in;
  wire [3:0]gtrxreset_in;
  wire [3:0]gtsouthrefclk0_in;
  wire [3:0]gtsouthrefclk1_in;
  wire [3:0]gttxreset_in;
  wire [11:0]loopback_in;
  wire [3:0]lpbkrxtxseren_in;
  wire [3:0]lpbktxrxseren_in;
  wire [3:0]pcieeqrxeqadaptdone_in;
  wire [3:0]pcierategen3_out;
  wire [3:0]pcierateidle_out;
  wire [7:0]pcierateqpllpd_out;
  wire [7:0]pcierateqpllreset_out;
  wire [3:0]pcierstidle_in;
  wire [3:0]pciersttxsyncstart_in;
  wire [3:0]pciesynctxsyncdone_out;
  wire [3:0]pcieusergen3rdy_out;
  wire [3:0]pcieuserphystatusrst_out;
  wire [3:0]pcieuserratedone_in;
  wire [3:0]pcieuserratestart_out;
  wire [19:0]pcsrsvdin2_in;
  wire [63:0]pcsrsvdin_in;
  wire [47:0]pcsrsvdout_out;
  wire [3:0]phystatus_out;
  wire [31:0]pinrsrvdas_out;
  wire [19:0]pmarsvdin_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [3:0]resetexception_out;
  wire [3:0]resetovrd_in;
  wire [3:0]rstclkentx_in;
  wire [3:0]rx8b10ben_in;
  wire [3:0]rxbufreset_in;
  wire [11:0]rxbufstatus_out;
  wire [3:0]rxbyteisaligned_out;
  wire [3:0]rxbyterealign_out;
  wire [3:0]rxcdrfreqreset_in;
  wire [3:0]rxcdrhold_in;
  wire [3:0]rxcdrlock_out;
  wire [3:0]rxcdrovrden_in;
  wire [3:0]rxcdrphdone_out;
  wire [3:0]rxcdrreset_in;
  wire [3:0]rxcdrresetrsv_in;
  wire [3:0]rxchanbondseq_out;
  wire [3:0]rxchanisaligned_out;
  wire [3:0]rxchanrealign_out;
  wire [3:0]rxchbonden_in;
  wire [19:0]rxchbondi_in;
  wire [11:0]rxchbondlevel_in;
  wire [3:0]rxchbondmaster_in;
  wire [19:0]rxchbondo_out;
  wire [3:0]rxchbondslave_in;
  wire [7:0]rxclkcorcnt_out;
  wire [3:0]rxcominitdet_out;
  wire [3:0]rxcommadet_out;
  wire [3:0]rxcommadeten_in;
  wire [3:0]rxcomsasdet_out;
  wire [3:0]rxcomwakedet_out;
  wire [63:0]rxctrl0_out;
  wire [63:0]rxctrl1_out;
  wire [31:0]rxctrl2_out;
  wire [31:0]rxctrl3_out;
  wire [511:0]rxdata_out;
  wire [31:0]rxdataextendrsvd_out;
  wire [7:0]rxdatavalid_out;
  wire [7:0]rxdfeagcctrl_in;
  wire [3:0]rxdfeagchold_in;
  wire [3:0]rxdfeagcovrden_in;
  wire [3:0]rxdfelfhold_in;
  wire [3:0]rxdfelfovrden_in;
  wire [3:0]rxdfelpmreset_in;
  wire [3:0]rxdfetap10hold_in;
  wire [3:0]rxdfetap10ovrden_in;
  wire [3:0]rxdfetap11hold_in;
  wire [3:0]rxdfetap11ovrden_in;
  wire [3:0]rxdfetap12hold_in;
  wire [3:0]rxdfetap12ovrden_in;
  wire [3:0]rxdfetap13hold_in;
  wire [3:0]rxdfetap13ovrden_in;
  wire [3:0]rxdfetap14hold_in;
  wire [3:0]rxdfetap14ovrden_in;
  wire [3:0]rxdfetap15hold_in;
  wire [3:0]rxdfetap15ovrden_in;
  wire [3:0]rxdfetap2hold_in;
  wire [3:0]rxdfetap2ovrden_in;
  wire [3:0]rxdfetap3hold_in;
  wire [3:0]rxdfetap3ovrden_in;
  wire [3:0]rxdfetap4hold_in;
  wire [3:0]rxdfetap4ovrden_in;
  wire [3:0]rxdfetap5hold_in;
  wire [3:0]rxdfetap5ovrden_in;
  wire [3:0]rxdfetap6hold_in;
  wire [3:0]rxdfetap6ovrden_in;
  wire [3:0]rxdfetap7hold_in;
  wire [3:0]rxdfetap7ovrden_in;
  wire [3:0]rxdfetap8hold_in;
  wire [3:0]rxdfetap8ovrden_in;
  wire [3:0]rxdfetap9hold_in;
  wire [3:0]rxdfetap9ovrden_in;
  wire [3:0]rxdfeuthold_in;
  wire [3:0]rxdfeutovrden_in;
  wire [3:0]rxdfevphold_in;
  wire [3:0]rxdfevpovrden_in;
  wire [3:0]rxdfevsen_in;
  wire [3:0]rxdfexyden_in;
  wire [3:0]rxdlybypass_in;
  wire [3:0]rxdlyen_in;
  wire [3:0]rxdlyovrden_in;
  wire [3:0]rxdlysreset_in;
  wire [3:0]rxdlysresetdone_out;
  wire [3:0]rxelecidle_out;
  wire [7:0]rxelecidlemode_in;
  wire [3:0]rxgearboxslip_in;
  wire [23:0]rxheader_out;
  wire [7:0]rxheadervalid_out;
  wire [3:0]rxlatclk_in;
  wire [3:0]rxlpmen_in;
  wire [3:0]rxlpmgchold_in;
  wire [3:0]rxlpmgcovrden_in;
  wire [3:0]rxlpmhfhold_in;
  wire [3:0]rxlpmhfovrden_in;
  wire [3:0]rxlpmlfhold_in;
  wire [3:0]rxlpmlfklovrden_in;
  wire [3:0]rxlpmoshold_in;
  wire [3:0]rxlpmosovrden_in;
  wire [3:0]rxmcommaalignen_in;
  wire [27:0]rxmonitorout_out;
  wire [7:0]rxmonitorsel_in;
  wire [3:0]rxoobreset_in;
  wire [3:0]rxoscalreset_in;
  wire [3:0]rxoshold_in;
  wire [15:0]rxosintcfg_in;
  wire [3:0]rxosintdone_out;
  wire [3:0]rxosinten_in;
  wire [3:0]rxosinthold_in;
  wire [3:0]rxosintovrden_in;
  wire [3:0]rxosintstarted_out;
  wire [3:0]rxosintstrobe_in;
  wire [3:0]rxosintstrobedone_out;
  wire [3:0]rxosintstrobestarted_out;
  wire [3:0]rxosinttestovrden_in;
  wire [3:0]rxosovrden_in;
  wire [3:0]rxoutclk_out;
  wire [3:0]rxoutclkfabric_out;
  wire [3:0]rxoutclkpcs_out;
  wire [11:0]rxoutclksel_in;
  wire [3:0]rxpcommaalignen_in;
  wire [3:0]rxpcsreset_in;
  wire [7:0]rxpd_in;
  wire [3:0]rxphalign_in;
  wire [3:0]rxphaligndone_out;
  wire [3:0]rxphalignen_in;
  wire [3:0]rxphalignerr_out;
  wire [3:0]rxphdlypd_in;
  wire [3:0]rxphdlyreset_in;
  wire [3:0]rxphovrden_in;
  wire [7:0]rxpllclksel_in;
  wire [3:0]rxpmareset_in;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxprbscntreset_in;
  wire [3:0]rxprbserr_out;
  wire [3:0]rxprbslocked_out;
  wire [15:0]rxprbssel_in;
  wire [3:0]rxprgdivresetdone_out;
  wire [3:0]rxprogdivreset_in;
  wire [3:0]rxqpien_in;
  wire [3:0]rxqpisenn_out;
  wire [3:0]rxqpisenp_out;
  wire [11:0]rxrate_in;
  wire [3:0]rxratedone_out;
  wire [3:0]rxratemode_in;
  wire [3:0]rxrecclkout_out;
  wire [3:0]rxresetdone_out;
  wire [3:0]rxslide_in;
  wire [3:0]rxsliderdy_out;
  wire [3:0]rxslipdone_out;
  wire [3:0]rxslipoutclk_in;
  wire [3:0]rxslipoutclkrdy_out;
  wire [3:0]rxslippma_in;
  wire [3:0]rxslippmardy_out;
  wire [7:0]rxstartofseq_out;
  wire [11:0]rxstatus_out;
  wire [3:0]rxsyncallin_in;
  wire [3:0]rxsyncdone_out;
  wire [3:0]rxsyncin_in;
  wire [3:0]rxsyncmode_in;
  wire [3:0]rxsyncout_out;
  wire [7:0]rxsysclksel_in;
  wire [3:0]rxuserrdy_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [3:0]rxvalid_out;
  wire [3:0]sigvalidclk_in;
  wire [31:0]tx8b10bbypass_in;
  wire [3:0]tx8b10ben_in;
  wire [11:0]txbufdiffctrl_in;
  wire [7:0]txbufstatus_out;
  wire [3:0]txcomfinish_out;
  wire [3:0]txcominit_in;
  wire [3:0]txcomsas_in;
  wire [3:0]txcomwake_in;
  wire [63:0]txctrl0_in;
  wire [63:0]txctrl1_in;
  wire [31:0]txctrl2_in;
  wire [511:0]txdata_in;
  wire [31:0]txdataextendrsvd_in;
  wire [3:0]txdeemph_in;
  wire [3:0]txdetectrx_in;
  wire [15:0]txdiffctrl_in;
  wire [3:0]txdiffpd_in;
  wire [3:0]txdlybypass_in;
  wire [3:0]txdlyen_in;
  wire [3:0]txdlyhold_in;
  wire [3:0]txdlyovrden_in;
  wire [3:0]txdlysreset_in;
  wire [3:0]txdlysresetdone_out;
  wire [3:0]txdlyupdown_in;
  wire [3:0]txelecidle_in;
  wire [23:0]txheader_in;
  wire [3:0]txinhibit_in;
  wire [3:0]txlatclk_in;
  wire [27:0]txmaincursor_in;
  wire [11:0]txmargin_in;
  wire [3:0]txoutclk_out;
  wire [3:0]txoutclkfabric_out;
  wire [3:0]txoutclkpcs_out;
  wire [11:0]txoutclksel_in;
  wire [3:0]txpcsreset_in;
  wire [7:0]txpd_in;
  wire [3:0]txpdelecidlemode_in;
  wire [3:0]txphalign_in;
  wire [3:0]txphaligndone_out;
  wire [3:0]txphalignen_in;
  wire [3:0]txphdlypd_in;
  wire [3:0]txphdlyreset_in;
  wire [3:0]txphdlytstclk_in;
  wire [3:0]txphinit_in;
  wire [3:0]txphinitdone_out;
  wire [3:0]txphovrden_in;
  wire [3:0]txpippmen_in;
  wire [3:0]txpippmovrden_in;
  wire [3:0]txpippmpd_in;
  wire [3:0]txpippmsel_in;
  wire [19:0]txpippmstepsize_in;
  wire [3:0]txpisopd_in;
  wire [7:0]txpllclksel_in;
  wire [3:0]txpmareset_in;
  wire [3:0]txpmaresetdone_out;
  wire [3:0]txpolarity_in;
  wire [19:0]txpostcursor_in;
  wire [3:0]txpostcursorinv_in;
  wire [3:0]txprbsforceerr_in;
  wire [15:0]txprbssel_in;
  wire [19:0]txprecursor_in;
  wire [3:0]txprecursorinv_in;
  wire [3:0]txprgdivresetdone_out;
  wire [3:0]txprogdivreset_in;
  wire [3:0]txqpibiasen_in;
  wire [3:0]txqpisenn_out;
  wire [3:0]txqpisenp_out;
  wire [3:0]txqpistrongpdown_in;
  wire [3:0]txqpiweakpup_in;
  wire [11:0]txrate_in;
  wire [3:0]txratedone_out;
  wire [3:0]txratemode_in;
  wire [3:0]txresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txswing_in;
  wire [3:0]txsyncallin_in;
  wire [3:0]txsyncdone_out;
  wire [3:0]txsyncin_in;
  wire [3:0]txsyncmode_in;
  wire [3:0]txsyncout_out;
  wire [7:0]txsysclksel_in;
  wire [3:0]txuserrdy_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;

  pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_channel_344 channel_inst
       (.bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .evoddphicaldone_in(evoddphicaldone_in),
        .evoddphicalstart_in(evoddphicalstart_in),
        .evoddphidrden_in(evoddphidrden_in),
        .evoddphidwren_in(evoddphidwren_in),
        .evoddphixrden_in(evoddphixrden_in),
        .evoddphixwren_in(evoddphixwren_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanmode_in(eyescanmode_in),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gtgrefclk_in(gtgrefclk_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtresetsel_in(gtresetsel_in),
        .gtrsvd_in(gtrsvd_in),
        .gtrxreset_in(gtrxreset_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxreset_in(gttxreset_in),
        .loopback_in(loopback_in),
        .lpbkrxtxseren_in(lpbkrxtxseren_in),
        .lpbktxrxseren_in(lpbktxrxseren_in),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin2_in(pcsrsvdin2_in),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .pmarsvdin_in(pmarsvdin_in),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rstclkentx_in(rstclkentx_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxcdrresetrsv_in(rxcdrresetrsv_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagcctrl_in(rxdfeagcctrl_in),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfevsen_in(rxdfevsen_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintcfg_in(rxosintcfg_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosinten_in(rxosinten_in),
        .rxosinthold_in(rxosinthold_in),
        .rxosintovrden_in(rxosintovrden_in),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobe_in(rxosintstrobe_in),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosinttestovrden_in(rxosinttestovrden_in),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxphovrden_in(rxphovrden_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_in(rxprogdivreset_in),
        .rxqpien_in(rxqpien_in),
        .rxqpisenn_out(rxqpisenn_out),
        .rxqpisenp_out(rxqpisenp_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxuserrdy_in(rxuserrdy_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufdiffctrl_in(txbufdiffctrl_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdiffpd_in(txdiffpd_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpisopd_in(txpisopd_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txpostcursorinv_in(txpostcursorinv_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprecursorinv_in(txprecursorinv_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_in(txprogdivreset_in),
        .txqpibiasen_in(txqpibiasen_in),
        .txqpisenn_out(txqpisenn_out),
        .txqpisenp_out(txqpisenp_out),
        .txqpistrongpdown_in(txqpistrongpdown_in),
        .txqpiweakpup_in(txqpiweakpup_in),
        .txrate_in(txrate_in),
        .txratedone_out(txratedone_out),
        .txratemode_in(txratemode_in),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txuserrdy_in(txuserrdy_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gthe3_channel_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_channel_wrapper_341
   (cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    pcsrsvdout_out,
    rxdata_out,
    drpdo_out,
    rxctrl0_out,
    rxctrl1_out,
    dmonitorout_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtce_out,
    bufgtcemask_out,
    bufgtreset_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxmonitorout_out,
    pinrsrvdas_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    bufgtdiv_out,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrxreset_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpisopd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txratemode_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    rxdfeagcctrl_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txbufdiffctrl_in,
    txmargin_in,
    txoutclksel_in,
    txrate_in,
    rxosintcfg_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    rxchbondi_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gthtxn_out;
  output [3:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [3:0]phystatus_out;
  output [3:0]resetexception_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [3:0]rxqpisenn_out;
  output [3:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [3:0]txqpisenn_out;
  output [3:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  output [47:0]pcsrsvdout_out;
  output [511:0]rxdata_out;
  output [63:0]drpdo_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [67:0]dmonitorout_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [7:0]rxclkcorcnt_out;
  output [7:0]rxdatavalid_out;
  output [7:0]rxheadervalid_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [11:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [11:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [11:0]rxbufstatus_out;
  output [11:0]rxstatus_out;
  output [19:0]rxchbondo_out;
  output [23:0]rxheader_out;
  output [27:0]rxmonitorout_out;
  output [31:0]pinrsrvdas_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [31:0]rxdataextendrsvd_out;
  output [35:0]bufgtdiv_out;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [3:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]evoddphicaldone_in;
  input [3:0]evoddphicalstart_in;
  input [3:0]evoddphidrden_in;
  input [3:0]evoddphidwren_in;
  input [3:0]evoddphixrden_in;
  input [3:0]evoddphixwren_in;
  input [3:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtgrefclk_in;
  input [3:0]gthrxn_in;
  input [3:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [3:0]gtresetsel_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]lpbkrxtxseren_in;
  input [3:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [0:0]qpll0outclk_out;
  input [0:0]qpll0outrefclk_out;
  input [0:0]qpll1outclk_out;
  input [0:0]qpll1outrefclk_out;
  input [3:0]resetovrd_in;
  input [3:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [3:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxcommadeten_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [3:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [3:0]rxosinten_in;
  input [3:0]rxosinthold_in;
  input [3:0]rxosintovrden_in;
  input [3:0]rxosintstrobe_in;
  input [3:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [3:0]rxphovrden_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [3:0]rxprogdivreset_in;
  input [3:0]rxqpien_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [3:0]tx8b10ben_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [3:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [3:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [3:0]txpisopd_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [3:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [3:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [3:0]txqpibiasen_in;
  input [3:0]txqpistrongpdown_in;
  input [3:0]txqpiweakpup_in;
  input [3:0]txratemode_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  input [511:0]txdata_in;
  input [63:0]drpdi_in;
  input [63:0]gtrsvd_in;
  input [63:0]pcsrsvdin_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [7:0]rxdfeagcctrl_in;
  input [7:0]rxelecidlemode_in;
  input [7:0]rxmonitorsel_in;
  input [7:0]rxpd_in;
  input [7:0]rxpllclksel_in;
  input [7:0]rxsysclksel_in;
  input [7:0]txpd_in;
  input [7:0]txpllclksel_in;
  input [7:0]txsysclksel_in;
  input [11:0]cpllrefclksel_in;
  input [11:0]loopback_in;
  input [11:0]rxchbondlevel_in;
  input [11:0]rxoutclksel_in;
  input [11:0]rxrate_in;
  input [11:0]txbufdiffctrl_in;
  input [11:0]txmargin_in;
  input [11:0]txoutclksel_in;
  input [11:0]txrate_in;
  input [15:0]rxosintcfg_in;
  input [15:0]rxprbssel_in;
  input [15:0]txdiffctrl_in;
  input [15:0]txprbssel_in;
  input [19:0]pcsrsvdin2_in;
  input [19:0]pmarsvdin_in;
  input [19:0]rxchbondi_in;
  input [19:0]txpippmstepsize_in;
  input [19:0]txpostcursor_in;
  input [19:0]txprecursor_in;
  input [23:0]txheader_in;
  input [27:0]txmaincursor_in;
  input [27:0]txsequence_in;
  input [31:0]tx8b10bbypass_in;
  input [31:0]txctrl2_in;
  input [31:0]txdataextendrsvd_in;
  input [35:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [11:0]bufgtce_out;
  wire [11:0]bufgtcemask_out;
  wire [35:0]bufgtdiv_out;
  wire [11:0]bufgtreset_out;
  wire [11:0]bufgtrstmask_out;
  wire [3:0]cfgreset_in;
  wire [3:0]clkrsvd0_in;
  wire [3:0]clkrsvd1_in;
  wire [3:0]cpllfbclklost_out;
  wire [3:0]cplllock_out;
  wire [3:0]cplllockdetclk_in;
  wire [3:0]cplllocken_in;
  wire [3:0]cpllpd_in;
  wire [3:0]cpllrefclklost_out;
  wire [11:0]cpllrefclksel_in;
  wire [3:0]cpllreset_in;
  wire [3:0]dmonfiforeset_in;
  wire [3:0]dmonitorclk_in;
  wire [67:0]dmonitorout_out;
  wire [35:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]evoddphicaldone_in;
  wire [3:0]evoddphicalstart_in;
  wire [3:0]evoddphidrden_in;
  wire [3:0]evoddphidwren_in;
  wire [3:0]evoddphixrden_in;
  wire [3:0]evoddphixwren_in;
  wire [3:0]eyescandataerror_out;
  wire [3:0]eyescanmode_in;
  wire [3:0]eyescanreset_in;
  wire [3:0]eyescantrigger_in;
  wire [3:0]gtgrefclk_in;
  wire [3:0]gthrxn_in;
  wire [3:0]gthrxp_in;
  wire [3:0]gthtxn_out;
  wire [3:0]gthtxp_out;
  wire [3:0]gtnorthrefclk0_in;
  wire [3:0]gtnorthrefclk1_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [3:0]gtrefclk1_in;
  wire [3:0]gtrefclkmonitor_out;
  wire [3:0]gtresetsel_in;
  wire [63:0]gtrsvd_in;
  wire [3:0]gtrxreset_in;
  wire [3:0]gtsouthrefclk0_in;
  wire [3:0]gtsouthrefclk1_in;
  wire [3:0]gttxreset_in;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [3:0]lpbkrxtxseren_in;
  wire [3:0]lpbktxrxseren_in;
  wire [3:0]pcieeqrxeqadaptdone_in;
  wire [3:0]pcierategen3_out;
  wire [3:0]pcierateidle_out;
  wire [7:0]pcierateqpllpd_out;
  wire [7:0]pcierateqpllreset_out;
  wire [3:0]pcierstidle_in;
  wire [3:0]pciersttxsyncstart_in;
  wire [3:0]pciesynctxsyncdone_out;
  wire [3:0]pcieusergen3rdy_out;
  wire [3:0]pcieuserphystatusrst_out;
  wire [3:0]pcieuserratedone_in;
  wire [3:0]pcieuserratestart_out;
  wire [19:0]pcsrsvdin2_in;
  wire [63:0]pcsrsvdin_in;
  wire [47:0]pcsrsvdout_out;
  wire [3:0]phystatus_out;
  wire [31:0]pinrsrvdas_out;
  wire [19:0]pmarsvdin_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [3:0]resetexception_out;
  wire [3:0]resetovrd_in;
  wire [3:0]rstclkentx_in;
  wire [3:0]rx8b10ben_in;
  wire [3:0]rxbufreset_in;
  wire [11:0]rxbufstatus_out;
  wire [3:0]rxbyteisaligned_out;
  wire [3:0]rxbyterealign_out;
  wire [3:0]rxcdrfreqreset_in;
  wire [3:0]rxcdrhold_in;
  wire [3:0]rxcdrlock_out;
  wire [3:0]rxcdrovrden_in;
  wire [3:0]rxcdrphdone_out;
  wire [3:0]rxcdrreset_in;
  wire [3:0]rxcdrresetrsv_in;
  wire [3:0]rxchanbondseq_out;
  wire [3:0]rxchanisaligned_out;
  wire [3:0]rxchanrealign_out;
  wire [3:0]rxchbonden_in;
  wire [19:0]rxchbondi_in;
  wire [11:0]rxchbondlevel_in;
  wire [3:0]rxchbondmaster_in;
  wire [19:0]rxchbondo_out;
  wire [3:0]rxchbondslave_in;
  wire [7:0]rxclkcorcnt_out;
  wire [3:0]rxcominitdet_out;
  wire [3:0]rxcommadet_out;
  wire [3:0]rxcommadeten_in;
  wire [3:0]rxcomsasdet_out;
  wire [3:0]rxcomwakedet_out;
  wire [63:0]rxctrl0_out;
  wire [63:0]rxctrl1_out;
  wire [31:0]rxctrl2_out;
  wire [31:0]rxctrl3_out;
  wire [511:0]rxdata_out;
  wire [31:0]rxdataextendrsvd_out;
  wire [7:0]rxdatavalid_out;
  wire [7:0]rxdfeagcctrl_in;
  wire [3:0]rxdfeagchold_in;
  wire [3:0]rxdfeagcovrden_in;
  wire [3:0]rxdfelfhold_in;
  wire [3:0]rxdfelfovrden_in;
  wire [3:0]rxdfelpmreset_in;
  wire [3:0]rxdfetap10hold_in;
  wire [3:0]rxdfetap10ovrden_in;
  wire [3:0]rxdfetap11hold_in;
  wire [3:0]rxdfetap11ovrden_in;
  wire [3:0]rxdfetap12hold_in;
  wire [3:0]rxdfetap12ovrden_in;
  wire [3:0]rxdfetap13hold_in;
  wire [3:0]rxdfetap13ovrden_in;
  wire [3:0]rxdfetap14hold_in;
  wire [3:0]rxdfetap14ovrden_in;
  wire [3:0]rxdfetap15hold_in;
  wire [3:0]rxdfetap15ovrden_in;
  wire [3:0]rxdfetap2hold_in;
  wire [3:0]rxdfetap2ovrden_in;
  wire [3:0]rxdfetap3hold_in;
  wire [3:0]rxdfetap3ovrden_in;
  wire [3:0]rxdfetap4hold_in;
  wire [3:0]rxdfetap4ovrden_in;
  wire [3:0]rxdfetap5hold_in;
  wire [3:0]rxdfetap5ovrden_in;
  wire [3:0]rxdfetap6hold_in;
  wire [3:0]rxdfetap6ovrden_in;
  wire [3:0]rxdfetap7hold_in;
  wire [3:0]rxdfetap7ovrden_in;
  wire [3:0]rxdfetap8hold_in;
  wire [3:0]rxdfetap8ovrden_in;
  wire [3:0]rxdfetap9hold_in;
  wire [3:0]rxdfetap9ovrden_in;
  wire [3:0]rxdfeuthold_in;
  wire [3:0]rxdfeutovrden_in;
  wire [3:0]rxdfevphold_in;
  wire [3:0]rxdfevpovrden_in;
  wire [3:0]rxdfevsen_in;
  wire [3:0]rxdfexyden_in;
  wire [3:0]rxdlybypass_in;
  wire [3:0]rxdlyen_in;
  wire [3:0]rxdlyovrden_in;
  wire [3:0]rxdlysreset_in;
  wire [3:0]rxdlysresetdone_out;
  wire [3:0]rxelecidle_out;
  wire [7:0]rxelecidlemode_in;
  wire [3:0]rxgearboxslip_in;
  wire [23:0]rxheader_out;
  wire [7:0]rxheadervalid_out;
  wire [3:0]rxlatclk_in;
  wire [3:0]rxlpmen_in;
  wire [3:0]rxlpmgchold_in;
  wire [3:0]rxlpmgcovrden_in;
  wire [3:0]rxlpmhfhold_in;
  wire [3:0]rxlpmhfovrden_in;
  wire [3:0]rxlpmlfhold_in;
  wire [3:0]rxlpmlfklovrden_in;
  wire [3:0]rxlpmoshold_in;
  wire [3:0]rxlpmosovrden_in;
  wire [3:0]rxmcommaalignen_in;
  wire [27:0]rxmonitorout_out;
  wire [7:0]rxmonitorsel_in;
  wire [3:0]rxoobreset_in;
  wire [3:0]rxoscalreset_in;
  wire [3:0]rxoshold_in;
  wire [15:0]rxosintcfg_in;
  wire [3:0]rxosintdone_out;
  wire [3:0]rxosinten_in;
  wire [3:0]rxosinthold_in;
  wire [3:0]rxosintovrden_in;
  wire [3:0]rxosintstarted_out;
  wire [3:0]rxosintstrobe_in;
  wire [3:0]rxosintstrobedone_out;
  wire [3:0]rxosintstrobestarted_out;
  wire [3:0]rxosinttestovrden_in;
  wire [3:0]rxosovrden_in;
  wire [3:0]rxoutclk_out;
  wire [3:0]rxoutclkfabric_out;
  wire [3:0]rxoutclkpcs_out;
  wire [11:0]rxoutclksel_in;
  wire [3:0]rxpcommaalignen_in;
  wire [3:0]rxpcsreset_in;
  wire [7:0]rxpd_in;
  wire [3:0]rxphalign_in;
  wire [3:0]rxphaligndone_out;
  wire [3:0]rxphalignen_in;
  wire [3:0]rxphalignerr_out;
  wire [3:0]rxphdlypd_in;
  wire [3:0]rxphdlyreset_in;
  wire [3:0]rxphovrden_in;
  wire [7:0]rxpllclksel_in;
  wire [3:0]rxpmareset_in;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxprbscntreset_in;
  wire [3:0]rxprbserr_out;
  wire [3:0]rxprbslocked_out;
  wire [15:0]rxprbssel_in;
  wire [3:0]rxprgdivresetdone_out;
  wire [3:0]rxprogdivreset_in;
  wire [3:0]rxqpien_in;
  wire [3:0]rxqpisenn_out;
  wire [3:0]rxqpisenp_out;
  wire [11:0]rxrate_in;
  wire [3:0]rxratedone_out;
  wire [3:0]rxratemode_in;
  wire [3:0]rxrecclkout_out;
  wire [3:0]rxresetdone_out;
  wire [3:0]rxslide_in;
  wire [3:0]rxsliderdy_out;
  wire [3:0]rxslipdone_out;
  wire [3:0]rxslipoutclk_in;
  wire [3:0]rxslipoutclkrdy_out;
  wire [3:0]rxslippma_in;
  wire [3:0]rxslippmardy_out;
  wire [7:0]rxstartofseq_out;
  wire [11:0]rxstatus_out;
  wire [3:0]rxsyncallin_in;
  wire [3:0]rxsyncdone_out;
  wire [3:0]rxsyncin_in;
  wire [3:0]rxsyncmode_in;
  wire [3:0]rxsyncout_out;
  wire [7:0]rxsysclksel_in;
  wire [3:0]rxuserrdy_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [3:0]rxvalid_out;
  wire [3:0]sigvalidclk_in;
  wire [31:0]tx8b10bbypass_in;
  wire [3:0]tx8b10ben_in;
  wire [11:0]txbufdiffctrl_in;
  wire [7:0]txbufstatus_out;
  wire [3:0]txcomfinish_out;
  wire [3:0]txcominit_in;
  wire [3:0]txcomsas_in;
  wire [3:0]txcomwake_in;
  wire [63:0]txctrl0_in;
  wire [63:0]txctrl1_in;
  wire [31:0]txctrl2_in;
  wire [511:0]txdata_in;
  wire [31:0]txdataextendrsvd_in;
  wire [3:0]txdeemph_in;
  wire [3:0]txdetectrx_in;
  wire [15:0]txdiffctrl_in;
  wire [3:0]txdiffpd_in;
  wire [3:0]txdlybypass_in;
  wire [3:0]txdlyen_in;
  wire [3:0]txdlyhold_in;
  wire [3:0]txdlyovrden_in;
  wire [3:0]txdlysreset_in;
  wire [3:0]txdlysresetdone_out;
  wire [3:0]txdlyupdown_in;
  wire [3:0]txelecidle_in;
  wire [23:0]txheader_in;
  wire [3:0]txinhibit_in;
  wire [3:0]txlatclk_in;
  wire [27:0]txmaincursor_in;
  wire [11:0]txmargin_in;
  wire [3:0]txoutclk_out;
  wire [3:0]txoutclkfabric_out;
  wire [3:0]txoutclkpcs_out;
  wire [11:0]txoutclksel_in;
  wire [3:0]txpcsreset_in;
  wire [7:0]txpd_in;
  wire [3:0]txpdelecidlemode_in;
  wire [3:0]txphalign_in;
  wire [3:0]txphaligndone_out;
  wire [3:0]txphalignen_in;
  wire [3:0]txphdlypd_in;
  wire [3:0]txphdlyreset_in;
  wire [3:0]txphdlytstclk_in;
  wire [3:0]txphinit_in;
  wire [3:0]txphinitdone_out;
  wire [3:0]txphovrden_in;
  wire [3:0]txpippmen_in;
  wire [3:0]txpippmovrden_in;
  wire [3:0]txpippmpd_in;
  wire [3:0]txpippmsel_in;
  wire [19:0]txpippmstepsize_in;
  wire [3:0]txpisopd_in;
  wire [7:0]txpllclksel_in;
  wire [3:0]txpmareset_in;
  wire [3:0]txpmaresetdone_out;
  wire [3:0]txpolarity_in;
  wire [19:0]txpostcursor_in;
  wire [3:0]txpostcursorinv_in;
  wire [3:0]txprbsforceerr_in;
  wire [15:0]txprbssel_in;
  wire [19:0]txprecursor_in;
  wire [3:0]txprecursorinv_in;
  wire [3:0]txprgdivresetdone_out;
  wire [3:0]txprogdivreset_in;
  wire [3:0]txqpibiasen_in;
  wire [3:0]txqpisenn_out;
  wire [3:0]txqpisenp_out;
  wire [3:0]txqpistrongpdown_in;
  wire [3:0]txqpiweakpup_in;
  wire [11:0]txrate_in;
  wire [3:0]txratedone_out;
  wire [3:0]txratemode_in;
  wire [3:0]txresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txswing_in;
  wire [3:0]txsyncallin_in;
  wire [3:0]txsyncdone_out;
  wire [3:0]txsyncin_in;
  wire [3:0]txsyncmode_in;
  wire [3:0]txsyncout_out;
  wire [7:0]txsysclksel_in;
  wire [3:0]txuserrdy_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;

  pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_channel channel_inst
       (.bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .evoddphicaldone_in(evoddphicaldone_in),
        .evoddphicalstart_in(evoddphicalstart_in),
        .evoddphidrden_in(evoddphidrden_in),
        .evoddphidwren_in(evoddphidwren_in),
        .evoddphixrden_in(evoddphixrden_in),
        .evoddphixwren_in(evoddphixwren_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanmode_in(eyescanmode_in),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gtgrefclk_in(gtgrefclk_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtresetsel_in(gtresetsel_in),
        .gtrsvd_in(gtrsvd_in),
        .gtrxreset_in(gtrxreset_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxreset_in(gttxreset_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in(lpbkrxtxseren_in),
        .lpbktxrxseren_in(lpbktxrxseren_in),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin2_in(pcsrsvdin2_in),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .pmarsvdin_in(pmarsvdin_in),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rstclkentx_in(rstclkentx_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxcdrresetrsv_in(rxcdrresetrsv_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagcctrl_in(rxdfeagcctrl_in),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfevsen_in(rxdfevsen_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintcfg_in(rxosintcfg_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosinten_in(rxosinten_in),
        .rxosinthold_in(rxosinthold_in),
        .rxosintovrden_in(rxosintovrden_in),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobe_in(rxosintstrobe_in),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosinttestovrden_in(rxosinttestovrden_in),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxphovrden_in(rxphovrden_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_in(rxprogdivreset_in),
        .rxqpien_in(rxqpien_in),
        .rxqpisenn_out(rxqpisenn_out),
        .rxqpisenp_out(rxqpisenp_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxuserrdy_in(rxuserrdy_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufdiffctrl_in(txbufdiffctrl_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdiffpd_in(txdiffpd_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpisopd_in(txpisopd_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txpostcursorinv_in(txpostcursorinv_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprecursorinv_in(txprecursorinv_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_in(txprogdivreset_in),
        .txqpibiasen_in(txqpibiasen_in),
        .txqpisenn_out(txqpisenn_out),
        .txqpisenp_out(txqpisenp_out),
        .txqpistrongpdown_in(txqpistrongpdown_in),
        .txqpiweakpup_in(txqpiweakpup_in),
        .txrate_in(txrate_in),
        .txratedone_out(txratedone_out),
        .txratemode_in(txratemode_in),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txuserrdy_in(txuserrdy_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gthe3_common_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_common_wrapper
   (drprdy_common_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    drpdo_common_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    drpclk_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1reset_in,
    drpdi_common_in,
    qpll0refclksel_in,
    qpll1refclksel_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd1_in,
    qpllrsvd4_in,
    drpaddr_common_in);
  output [0:0]drprdy_common_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [15:0]drpdo_common_out;
  output [1:0]rxrecclk0_sel_out;
  output [1:0]rxrecclk1_sel_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  input [0:0]drpclk_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [0:0]qpll1reset_in;
  input [15:0]drpdi_common_in;
  input [2:0]qpll0refclksel_in;
  input [2:0]qpll1refclksel_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd1_in;
  input [7:0]qpllrsvd4_in;
  input [8:0]drpaddr_common_in;

  wire [8:0]drpaddr_common_in;
  wire [0:0]drpclk_common_in;
  wire [15:0]drpdi_common_in;
  wire [15:0]drpdo_common_out;
  wire [0:0]drpen_common_in;
  wire [0:0]drprdy_common_out;
  wire [0:0]drpwe_common_in;
  wire [0:0]gtgrefclk0_in;
  wire [0:0]gtgrefclk1_in;
  wire [0:0]gtnorthrefclk00_in;
  wire [0:0]gtnorthrefclk01_in;
  wire [0:0]gtnorthrefclk10_in;
  wire [0:0]gtnorthrefclk11_in;
  wire [0:0]gtrefclk00_in;
  wire [0:0]gtrefclk01_in;
  wire [0:0]gtrefclk10_in;
  wire [0:0]gtrefclk11_in;
  wire [0:0]gtsouthrefclk00_in;
  wire [0:0]gtsouthrefclk01_in;
  wire [0:0]gtsouthrefclk10_in;
  wire [0:0]gtsouthrefclk11_in;
  wire [7:0]pmarsvdout0_out;
  wire [7:0]pmarsvdout1_out;
  wire [0:0]qpll0clkrsvd0_in;
  wire [0:0]qpll0clkrsvd1_in;
  wire [0:0]qpll0fbclklost_out;
  wire [0:0]qpll0lock_out;
  wire [0:0]qpll0lockdetclk_in;
  wire [0:0]qpll0locken_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll0pd_in;
  wire [0:0]qpll0refclklost_out;
  wire [2:0]qpll0refclksel_in;
  wire [0:0]qpll0reset_in;
  wire [0:0]qpll1clkrsvd0_in;
  wire [0:0]qpll1clkrsvd1_in;
  wire [0:0]qpll1fbclklost_out;
  wire [0:0]qpll1lock_out;
  wire [0:0]qpll1lockdetclk_in;
  wire [0:0]qpll1locken_in;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [0:0]qpll1pd_in;
  wire [0:0]qpll1refclklost_out;
  wire [2:0]qpll1refclksel_in;
  wire [0:0]qpll1reset_in;
  wire [7:0]qplldmonitor0_out;
  wire [7:0]qplldmonitor1_out;
  wire [7:0]qpllrsvd1_in;
  wire [4:0]qpllrsvd2_in;
  wire [4:0]qpllrsvd3_in;
  wire [7:0]qpllrsvd4_in;
  wire [0:0]refclkoutmonitor0_out;
  wire [0:0]refclkoutmonitor1_out;
  wire [1:0]rxrecclk0_sel_out;
  wire [1:0]rxrecclk1_sel_out;

  pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_common_343 common_inst
       (.drpaddr_common_in(drpaddr_common_in),
        .drpclk_common_in(drpclk_common_in),
        .drpdi_common_in(drpdi_common_in),
        .drpdo_common_out(drpdo_common_out),
        .drpen_common_in(drpen_common_in),
        .drprdy_common_out(drprdy_common_out),
        .drpwe_common_in(drpwe_common_in),
        .gtgrefclk0_in(gtgrefclk0_in),
        .gtgrefclk1_in(gtgrefclk1_in),
        .gtnorthrefclk00_in(gtnorthrefclk00_in),
        .gtnorthrefclk01_in(gtnorthrefclk01_in),
        .gtnorthrefclk10_in(gtnorthrefclk10_in),
        .gtnorthrefclk11_in(gtnorthrefclk11_in),
        .gtrefclk00_in(gtrefclk00_in),
        .gtrefclk01_in(gtrefclk01_in),
        .gtrefclk10_in(gtrefclk10_in),
        .gtrefclk11_in(gtrefclk11_in),
        .gtsouthrefclk00_in(gtsouthrefclk00_in),
        .gtsouthrefclk01_in(gtsouthrefclk01_in),
        .gtsouthrefclk10_in(gtsouthrefclk10_in),
        .gtsouthrefclk11_in(gtsouthrefclk11_in),
        .pmarsvdout0_out(pmarsvdout0_out),
        .pmarsvdout1_out(pmarsvdout1_out),
        .qpll0clkrsvd0_in(qpll0clkrsvd0_in),
        .qpll0clkrsvd1_in(qpll0clkrsvd1_in),
        .qpll0fbclklost_out(qpll0fbclklost_out),
        .qpll0lock_out(qpll0lock_out),
        .qpll0lockdetclk_in(qpll0lockdetclk_in),
        .qpll0locken_in(qpll0locken_in),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .qpll0pd_in(qpll0pd_in),
        .qpll0refclklost_out(qpll0refclklost_out),
        .qpll0refclksel_in(qpll0refclksel_in),
        .qpll0reset_in(qpll0reset_in),
        .qpll1clkrsvd0_in(qpll1clkrsvd0_in),
        .qpll1clkrsvd1_in(qpll1clkrsvd1_in),
        .qpll1fbclklost_out(qpll1fbclklost_out),
        .qpll1lock_out(qpll1lock_out),
        .qpll1lockdetclk_in(qpll1lockdetclk_in),
        .qpll1locken_in(qpll1locken_in),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .qpll1pd_in(qpll1pd_in),
        .qpll1refclklost_out(qpll1refclklost_out),
        .qpll1refclksel_in(qpll1refclksel_in),
        .qpll1reset_in(qpll1reset_in),
        .qplldmonitor0_out(qplldmonitor0_out),
        .qplldmonitor1_out(qplldmonitor1_out),
        .qpllrsvd1_in(qpllrsvd1_in),
        .qpllrsvd2_in(qpllrsvd2_in),
        .qpllrsvd3_in(qpllrsvd3_in),
        .qpllrsvd4_in(qpllrsvd4_in),
        .refclkoutmonitor0_out(refclkoutmonitor0_out),
        .refclkoutmonitor1_out(refclkoutmonitor1_out),
        .rxrecclk0_sel_out(rxrecclk0_sel_out),
        .rxrecclk1_sel_out(rxrecclk1_sel_out));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gthe3_common_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_common_wrapper_342
   (drprdy_common_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    drpdo_common_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    drpclk_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1reset_in,
    drpdi_common_in,
    qpll0refclksel_in,
    qpll1refclksel_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd1_in,
    qpllrsvd4_in,
    drpaddr_common_in);
  output [0:0]drprdy_common_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [15:0]drpdo_common_out;
  output [1:0]rxrecclk0_sel_out;
  output [1:0]rxrecclk1_sel_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  input [0:0]drpclk_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [0:0]qpll1reset_in;
  input [15:0]drpdi_common_in;
  input [2:0]qpll0refclksel_in;
  input [2:0]qpll1refclksel_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd1_in;
  input [7:0]qpllrsvd4_in;
  input [8:0]drpaddr_common_in;

  wire [8:0]drpaddr_common_in;
  wire [0:0]drpclk_common_in;
  wire [15:0]drpdi_common_in;
  wire [15:0]drpdo_common_out;
  wire [0:0]drpen_common_in;
  wire [0:0]drprdy_common_out;
  wire [0:0]drpwe_common_in;
  wire [0:0]gtgrefclk0_in;
  wire [0:0]gtgrefclk1_in;
  wire [0:0]gtnorthrefclk00_in;
  wire [0:0]gtnorthrefclk01_in;
  wire [0:0]gtnorthrefclk10_in;
  wire [0:0]gtnorthrefclk11_in;
  wire [0:0]gtrefclk00_in;
  wire [0:0]gtrefclk01_in;
  wire [0:0]gtrefclk10_in;
  wire [0:0]gtrefclk11_in;
  wire [0:0]gtsouthrefclk00_in;
  wire [0:0]gtsouthrefclk01_in;
  wire [0:0]gtsouthrefclk10_in;
  wire [0:0]gtsouthrefclk11_in;
  wire [7:0]pmarsvdout0_out;
  wire [7:0]pmarsvdout1_out;
  wire [0:0]qpll0clkrsvd0_in;
  wire [0:0]qpll0clkrsvd1_in;
  wire [0:0]qpll0fbclklost_out;
  wire [0:0]qpll0lock_out;
  wire [0:0]qpll0lockdetclk_in;
  wire [0:0]qpll0locken_in;
  wire [0:0]qpll0outclk_out;
  wire [0:0]qpll0outrefclk_out;
  wire [0:0]qpll0pd_in;
  wire [0:0]qpll0refclklost_out;
  wire [2:0]qpll0refclksel_in;
  wire [0:0]qpll0reset_in;
  wire [0:0]qpll1clkrsvd0_in;
  wire [0:0]qpll1clkrsvd1_in;
  wire [0:0]qpll1fbclklost_out;
  wire [0:0]qpll1lock_out;
  wire [0:0]qpll1lockdetclk_in;
  wire [0:0]qpll1locken_in;
  wire [0:0]qpll1outclk_out;
  wire [0:0]qpll1outrefclk_out;
  wire [0:0]qpll1pd_in;
  wire [0:0]qpll1refclklost_out;
  wire [2:0]qpll1refclksel_in;
  wire [0:0]qpll1reset_in;
  wire [7:0]qplldmonitor0_out;
  wire [7:0]qplldmonitor1_out;
  wire [7:0]qpllrsvd1_in;
  wire [4:0]qpllrsvd2_in;
  wire [4:0]qpllrsvd3_in;
  wire [7:0]qpllrsvd4_in;
  wire [0:0]refclkoutmonitor0_out;
  wire [0:0]refclkoutmonitor1_out;
  wire [1:0]rxrecclk0_sel_out;
  wire [1:0]rxrecclk1_sel_out;

  pcie3_ultrascale_0_gtwizard_ultrascale_v1_5_3_gthe3_common common_inst
       (.drpaddr_common_in(drpaddr_common_in),
        .drpclk_common_in(drpclk_common_in),
        .drpdi_common_in(drpdi_common_in),
        .drpdo_common_out(drpdo_common_out),
        .drpen_common_in(drpen_common_in),
        .drprdy_common_out(drprdy_common_out),
        .drpwe_common_in(drpwe_common_in),
        .gtgrefclk0_in(gtgrefclk0_in),
        .gtgrefclk1_in(gtgrefclk1_in),
        .gtnorthrefclk00_in(gtnorthrefclk00_in),
        .gtnorthrefclk01_in(gtnorthrefclk01_in),
        .gtnorthrefclk10_in(gtnorthrefclk10_in),
        .gtnorthrefclk11_in(gtnorthrefclk11_in),
        .gtrefclk00_in(gtrefclk00_in),
        .gtrefclk01_in(gtrefclk01_in),
        .gtrefclk10_in(gtrefclk10_in),
        .gtrefclk11_in(gtrefclk11_in),
        .gtsouthrefclk00_in(gtsouthrefclk00_in),
        .gtsouthrefclk01_in(gtsouthrefclk01_in),
        .gtsouthrefclk10_in(gtsouthrefclk10_in),
        .gtsouthrefclk11_in(gtsouthrefclk11_in),
        .pmarsvdout0_out(pmarsvdout0_out),
        .pmarsvdout1_out(pmarsvdout1_out),
        .qpll0clkrsvd0_in(qpll0clkrsvd0_in),
        .qpll0clkrsvd1_in(qpll0clkrsvd1_in),
        .qpll0fbclklost_out(qpll0fbclklost_out),
        .qpll0lock_out(qpll0lock_out),
        .qpll0lockdetclk_in(qpll0lockdetclk_in),
        .qpll0locken_in(qpll0locken_in),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .qpll0pd_in(qpll0pd_in),
        .qpll0refclklost_out(qpll0refclklost_out),
        .qpll0refclksel_in(qpll0refclksel_in),
        .qpll0reset_in(qpll0reset_in),
        .qpll1clkrsvd0_in(qpll1clkrsvd0_in),
        .qpll1clkrsvd1_in(qpll1clkrsvd1_in),
        .qpll1fbclklost_out(qpll1fbclklost_out),
        .qpll1lock_out(qpll1lock_out),
        .qpll1lockdetclk_in(qpll1lockdetclk_in),
        .qpll1locken_in(qpll1locken_in),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .qpll1pd_in(qpll1pd_in),
        .qpll1refclklost_out(qpll1refclklost_out),
        .qpll1refclksel_in(qpll1refclksel_in),
        .qpll1reset_in(qpll1reset_in),
        .qplldmonitor0_out(qplldmonitor0_out),
        .qplldmonitor1_out(qplldmonitor1_out),
        .qpllrsvd1_in(qpllrsvd1_in),
        .qpllrsvd2_in(qpllrsvd2_in),
        .qpllrsvd3_in(qpllrsvd3_in),
        .qpllrsvd4_in(qpllrsvd4_in),
        .refclkoutmonitor0_out(refclkoutmonitor0_out),
        .refclkoutmonitor1_out(refclkoutmonitor1_out),
        .rxrecclk0_sel_out(rxrecclk0_sel_out),
        .rxrecclk1_sel_out(rxrecclk1_sel_out));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gtwizard_gthe3" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gtwizard_gthe3
   (drprdy_common_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    drpdo_common_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    pcierategen3_out,
    pcierateidle_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    phystatus_out,
    resetexception_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txcomfinish_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    pcsrsvdout_out,
    rxdata_out,
    drpdo_out,
    rxctrl0_out,
    rxctrl1_out,
    dmonitorout_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    rxclkcorcnt_out,
    rxdatavalid_out,
    rxheadervalid_out,
    rxstartofseq_out,
    txbufstatus_out,
    bufgtce_out,
    bufgtcemask_out,
    bufgtreset_out,
    bufgtrstmask_out,
    rxbufstatus_out,
    rxstatus_out,
    rxchbondo_out,
    rxheader_out,
    rxmonitorout_out,
    pinrsrvdas_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdataextendrsvd_out,
    bufgtdiv_out,
    drpclk_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1reset_in,
    drpdi_common_in,
    qpll0refclksel_in,
    qpll1refclksel_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd1_in,
    qpllrsvd4_in,
    drpaddr_common_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpclk_in,
    drpen_in,
    drpwe_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrxreset_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxcommadeten_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tx8b10ben_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txinhibit_in,
    txlatclk_in,
    txpcsreset_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpisopd_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txratemode_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    txdata_in,
    drpdi_in,
    gtrsvd_in,
    pcsrsvdin_in,
    txctrl0_in,
    txctrl1_in,
    rxdfeagcctrl_in,
    rxelecidlemode_in,
    rxmonitorsel_in,
    rxpd_in,
    rxpllclksel_in,
    rxsysclksel_in,
    txpd_in,
    txpllclksel_in,
    txsysclksel_in,
    cpllrefclksel_in,
    loopback_in,
    rxchbondlevel_in,
    rxoutclksel_in,
    rxrate_in,
    txbufdiffctrl_in,
    txmargin_in,
    txoutclksel_in,
    txrate_in,
    rxosintcfg_in,
    rxprbssel_in,
    txdiffctrl_in,
    txprbssel_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    rxchbondi_in,
    txpippmstepsize_in,
    txpostcursor_in,
    txprecursor_in,
    txheader_in,
    txmaincursor_in,
    txsequence_in,
    tx8b10bbypass_in,
    txctrl2_in,
    txdataextendrsvd_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [1:0]drprdy_common_out;
  output [1:0]qpll0fbclklost_out;
  output [1:0]qpll0lock_out;
  output [1:0]qpll0outclk_out;
  output [1:0]qpll0outrefclk_out;
  output [1:0]qpll0refclklost_out;
  output [1:0]qpll1fbclklost_out;
  output [1:0]qpll1lock_out;
  output [1:0]qpll1outclk_out;
  output [1:0]qpll1outrefclk_out;
  output [1:0]qpll1refclklost_out;
  output [1:0]refclkoutmonitor0_out;
  output [1:0]refclkoutmonitor1_out;
  output [31:0]drpdo_common_out;
  output [3:0]rxrecclk0_sel_out;
  output [3:0]rxrecclk1_sel_out;
  output [15:0]pmarsvdout0_out;
  output [15:0]pmarsvdout1_out;
  output [15:0]qplldmonitor0_out;
  output [15:0]qplldmonitor1_out;
  output [7:0]cpllfbclklost_out;
  output [7:0]cplllock_out;
  output [7:0]cpllrefclklost_out;
  output [7:0]drprdy_out;
  output [7:0]eyescandataerror_out;
  output [7:0]gthtxn_out;
  output [7:0]gthtxp_out;
  output [7:0]gtpowergood_out;
  output [7:0]gtrefclkmonitor_out;
  output [7:0]pcierategen3_out;
  output [7:0]pcierateidle_out;
  output [7:0]pciesynctxsyncdone_out;
  output [7:0]pcieusergen3rdy_out;
  output [7:0]pcieuserphystatusrst_out;
  output [7:0]pcieuserratestart_out;
  output [7:0]phystatus_out;
  output [7:0]resetexception_out;
  output [7:0]rxbyteisaligned_out;
  output [7:0]rxbyterealign_out;
  output [7:0]rxcdrlock_out;
  output [7:0]rxcdrphdone_out;
  output [7:0]rxchanbondseq_out;
  output [7:0]rxchanisaligned_out;
  output [7:0]rxchanrealign_out;
  output [7:0]rxcominitdet_out;
  output [7:0]rxcommadet_out;
  output [7:0]rxcomsasdet_out;
  output [7:0]rxcomwakedet_out;
  output [7:0]rxdlysresetdone_out;
  output [7:0]rxelecidle_out;
  output [7:0]rxosintdone_out;
  output [7:0]rxosintstarted_out;
  output [7:0]rxosintstrobedone_out;
  output [7:0]rxosintstrobestarted_out;
  output [7:0]rxoutclk_out;
  output [7:0]rxoutclkfabric_out;
  output [7:0]rxoutclkpcs_out;
  output [7:0]rxphaligndone_out;
  output [7:0]rxphalignerr_out;
  output [7:0]rxpmaresetdone_out;
  output [7:0]rxprbserr_out;
  output [7:0]rxprbslocked_out;
  output [7:0]rxprgdivresetdone_out;
  output [7:0]rxqpisenn_out;
  output [7:0]rxqpisenp_out;
  output [7:0]rxratedone_out;
  output [7:0]rxrecclkout_out;
  output [7:0]rxresetdone_out;
  output [7:0]rxsliderdy_out;
  output [7:0]rxslipdone_out;
  output [7:0]rxslipoutclkrdy_out;
  output [7:0]rxslippmardy_out;
  output [7:0]rxsyncdone_out;
  output [7:0]rxsyncout_out;
  output [7:0]rxvalid_out;
  output [7:0]txcomfinish_out;
  output [7:0]txdlysresetdone_out;
  output [7:0]txoutclk_out;
  output [7:0]txoutclkfabric_out;
  output [7:0]txoutclkpcs_out;
  output [7:0]txphaligndone_out;
  output [7:0]txphinitdone_out;
  output [7:0]txpmaresetdone_out;
  output [7:0]txprgdivresetdone_out;
  output [7:0]txqpisenn_out;
  output [7:0]txqpisenp_out;
  output [7:0]txratedone_out;
  output [7:0]txresetdone_out;
  output [7:0]txsyncdone_out;
  output [7:0]txsyncout_out;
  output [95:0]pcsrsvdout_out;
  output [1023:0]rxdata_out;
  output [127:0]drpdo_out;
  output [127:0]rxctrl0_out;
  output [127:0]rxctrl1_out;
  output [135:0]dmonitorout_out;
  output [15:0]pcierateqpllpd_out;
  output [15:0]pcierateqpllreset_out;
  output [15:0]rxclkcorcnt_out;
  output [15:0]rxdatavalid_out;
  output [15:0]rxheadervalid_out;
  output [15:0]rxstartofseq_out;
  output [15:0]txbufstatus_out;
  output [23:0]bufgtce_out;
  output [23:0]bufgtcemask_out;
  output [23:0]bufgtreset_out;
  output [23:0]bufgtrstmask_out;
  output [23:0]rxbufstatus_out;
  output [23:0]rxstatus_out;
  output [39:0]rxchbondo_out;
  output [47:0]rxheader_out;
  output [55:0]rxmonitorout_out;
  output [63:0]pinrsrvdas_out;
  output [63:0]rxctrl2_out;
  output [63:0]rxctrl3_out;
  output [63:0]rxdataextendrsvd_out;
  output [71:0]bufgtdiv_out;
  input [1:0]drpclk_common_in;
  input [1:0]drpen_common_in;
  input [1:0]drpwe_common_in;
  input [1:0]gtgrefclk0_in;
  input [1:0]gtgrefclk1_in;
  input [1:0]gtnorthrefclk00_in;
  input [1:0]gtnorthrefclk01_in;
  input [1:0]gtnorthrefclk10_in;
  input [1:0]gtnorthrefclk11_in;
  input [1:0]gtrefclk00_in;
  input [1:0]gtrefclk01_in;
  input [1:0]gtrefclk10_in;
  input [1:0]gtrefclk11_in;
  input [1:0]gtsouthrefclk00_in;
  input [1:0]gtsouthrefclk01_in;
  input [1:0]gtsouthrefclk10_in;
  input [1:0]gtsouthrefclk11_in;
  input [1:0]qpll0clkrsvd0_in;
  input [1:0]qpll0clkrsvd1_in;
  input [1:0]qpll0lockdetclk_in;
  input [1:0]qpll0locken_in;
  input [1:0]qpll0pd_in;
  input [1:0]qpll0reset_in;
  input [1:0]qpll1clkrsvd0_in;
  input [1:0]qpll1clkrsvd1_in;
  input [1:0]qpll1lockdetclk_in;
  input [1:0]qpll1locken_in;
  input [1:0]qpll1pd_in;
  input [1:0]qpll1reset_in;
  input [31:0]drpdi_common_in;
  input [5:0]qpll0refclksel_in;
  input [5:0]qpll1refclksel_in;
  input [9:0]qpllrsvd2_in;
  input [9:0]qpllrsvd3_in;
  input [15:0]qpllrsvd1_in;
  input [15:0]qpllrsvd4_in;
  input [17:0]drpaddr_common_in;
  input [7:0]cfgreset_in;
  input [7:0]clkrsvd0_in;
  input [7:0]clkrsvd1_in;
  input [7:0]cplllockdetclk_in;
  input [7:0]cplllocken_in;
  input [7:0]cpllpd_in;
  input [7:0]cpllreset_in;
  input [7:0]dmonfiforeset_in;
  input [7:0]dmonitorclk_in;
  input [7:0]drpclk_in;
  input [7:0]drpen_in;
  input [7:0]drpwe_in;
  input [7:0]evoddphicaldone_in;
  input [7:0]evoddphicalstart_in;
  input [7:0]evoddphidrden_in;
  input [7:0]evoddphidwren_in;
  input [7:0]evoddphixrden_in;
  input [7:0]evoddphixwren_in;
  input [7:0]eyescanmode_in;
  input [7:0]eyescanreset_in;
  input [7:0]eyescantrigger_in;
  input [7:0]gtgrefclk_in;
  input [7:0]gthrxn_in;
  input [7:0]gthrxp_in;
  input [7:0]gtnorthrefclk0_in;
  input [7:0]gtnorthrefclk1_in;
  input [7:0]gtrefclk0_in;
  input [7:0]gtrefclk1_in;
  input [7:0]gtresetsel_in;
  input [7:0]gtrxreset_in;
  input [7:0]gtsouthrefclk0_in;
  input [7:0]gtsouthrefclk1_in;
  input [7:0]gttxreset_in;
  input [7:0]lpbkrxtxseren_in;
  input [7:0]lpbktxrxseren_in;
  input [7:0]pcieeqrxeqadaptdone_in;
  input [7:0]pcierstidle_in;
  input [7:0]pciersttxsyncstart_in;
  input [7:0]pcieuserratedone_in;
  input [7:0]resetovrd_in;
  input [7:0]rstclkentx_in;
  input [7:0]rx8b10ben_in;
  input [7:0]rxbufreset_in;
  input [7:0]rxcdrfreqreset_in;
  input [7:0]rxcdrhold_in;
  input [7:0]rxcdrovrden_in;
  input [7:0]rxcdrreset_in;
  input [7:0]rxcdrresetrsv_in;
  input [7:0]rxchbonden_in;
  input [7:0]rxchbondmaster_in;
  input [7:0]rxchbondslave_in;
  input [7:0]rxcommadeten_in;
  input [7:0]rxdfeagchold_in;
  input [7:0]rxdfeagcovrden_in;
  input [7:0]rxdfelfhold_in;
  input [7:0]rxdfelfovrden_in;
  input [7:0]rxdfelpmreset_in;
  input [7:0]rxdfetap10hold_in;
  input [7:0]rxdfetap10ovrden_in;
  input [7:0]rxdfetap11hold_in;
  input [7:0]rxdfetap11ovrden_in;
  input [7:0]rxdfetap12hold_in;
  input [7:0]rxdfetap12ovrden_in;
  input [7:0]rxdfetap13hold_in;
  input [7:0]rxdfetap13ovrden_in;
  input [7:0]rxdfetap14hold_in;
  input [7:0]rxdfetap14ovrden_in;
  input [7:0]rxdfetap15hold_in;
  input [7:0]rxdfetap15ovrden_in;
  input [7:0]rxdfetap2hold_in;
  input [7:0]rxdfetap2ovrden_in;
  input [7:0]rxdfetap3hold_in;
  input [7:0]rxdfetap3ovrden_in;
  input [7:0]rxdfetap4hold_in;
  input [7:0]rxdfetap4ovrden_in;
  input [7:0]rxdfetap5hold_in;
  input [7:0]rxdfetap5ovrden_in;
  input [7:0]rxdfetap6hold_in;
  input [7:0]rxdfetap6ovrden_in;
  input [7:0]rxdfetap7hold_in;
  input [7:0]rxdfetap7ovrden_in;
  input [7:0]rxdfetap8hold_in;
  input [7:0]rxdfetap8ovrden_in;
  input [7:0]rxdfetap9hold_in;
  input [7:0]rxdfetap9ovrden_in;
  input [7:0]rxdfeuthold_in;
  input [7:0]rxdfeutovrden_in;
  input [7:0]rxdfevphold_in;
  input [7:0]rxdfevpovrden_in;
  input [7:0]rxdfevsen_in;
  input [7:0]rxdfexyden_in;
  input [7:0]rxdlybypass_in;
  input [7:0]rxdlyen_in;
  input [7:0]rxdlyovrden_in;
  input [7:0]rxdlysreset_in;
  input [7:0]rxgearboxslip_in;
  input [7:0]rxlatclk_in;
  input [7:0]rxlpmen_in;
  input [7:0]rxlpmgchold_in;
  input [7:0]rxlpmgcovrden_in;
  input [7:0]rxlpmhfhold_in;
  input [7:0]rxlpmhfovrden_in;
  input [7:0]rxlpmlfhold_in;
  input [7:0]rxlpmlfklovrden_in;
  input [7:0]rxlpmoshold_in;
  input [7:0]rxlpmosovrden_in;
  input [7:0]rxmcommaalignen_in;
  input [7:0]rxoobreset_in;
  input [7:0]rxoscalreset_in;
  input [7:0]rxoshold_in;
  input [7:0]rxosinten_in;
  input [7:0]rxosinthold_in;
  input [7:0]rxosintovrden_in;
  input [7:0]rxosintstrobe_in;
  input [7:0]rxosinttestovrden_in;
  input [7:0]rxosovrden_in;
  input [7:0]rxpcommaalignen_in;
  input [7:0]rxpcsreset_in;
  input [7:0]rxphalign_in;
  input [7:0]rxphalignen_in;
  input [7:0]rxphdlypd_in;
  input [7:0]rxphdlyreset_in;
  input [7:0]rxphovrden_in;
  input [7:0]rxpmareset_in;
  input [7:0]rxpolarity_in;
  input [7:0]rxprbscntreset_in;
  input [7:0]rxprogdivreset_in;
  input [7:0]rxqpien_in;
  input [7:0]rxratemode_in;
  input [7:0]rxslide_in;
  input [7:0]rxslipoutclk_in;
  input [7:0]rxslippma_in;
  input [7:0]rxsyncallin_in;
  input [7:0]rxsyncin_in;
  input [7:0]rxsyncmode_in;
  input [7:0]rxuserrdy_in;
  input [7:0]rxusrclk_in;
  input [7:0]rxusrclk2_in;
  input [7:0]sigvalidclk_in;
  input [7:0]tx8b10ben_in;
  input [7:0]txcominit_in;
  input [7:0]txcomsas_in;
  input [7:0]txcomwake_in;
  input [7:0]txdeemph_in;
  input [7:0]txdetectrx_in;
  input [7:0]txdiffpd_in;
  input [7:0]txdlybypass_in;
  input [7:0]txdlyen_in;
  input [7:0]txdlyhold_in;
  input [7:0]txdlyovrden_in;
  input [7:0]txdlysreset_in;
  input [7:0]txdlyupdown_in;
  input [7:0]txelecidle_in;
  input [7:0]txinhibit_in;
  input [7:0]txlatclk_in;
  input [7:0]txpcsreset_in;
  input [7:0]txpdelecidlemode_in;
  input [7:0]txphalign_in;
  input [7:0]txphalignen_in;
  input [7:0]txphdlypd_in;
  input [7:0]txphdlyreset_in;
  input [7:0]txphdlytstclk_in;
  input [7:0]txphinit_in;
  input [7:0]txphovrden_in;
  input [7:0]txpippmen_in;
  input [7:0]txpippmovrden_in;
  input [7:0]txpippmpd_in;
  input [7:0]txpippmsel_in;
  input [7:0]txpisopd_in;
  input [7:0]txpmareset_in;
  input [7:0]txpolarity_in;
  input [7:0]txpostcursorinv_in;
  input [7:0]txprbsforceerr_in;
  input [7:0]txprecursorinv_in;
  input [7:0]txprogdivreset_in;
  input [7:0]txqpibiasen_in;
  input [7:0]txqpistrongpdown_in;
  input [7:0]txqpiweakpup_in;
  input [7:0]txratemode_in;
  input [7:0]txswing_in;
  input [7:0]txsyncallin_in;
  input [7:0]txsyncin_in;
  input [7:0]txsyncmode_in;
  input [7:0]txuserrdy_in;
  input [7:0]txusrclk_in;
  input [7:0]txusrclk2_in;
  input [1023:0]txdata_in;
  input [127:0]drpdi_in;
  input [127:0]gtrsvd_in;
  input [127:0]pcsrsvdin_in;
  input [127:0]txctrl0_in;
  input [127:0]txctrl1_in;
  input [15:0]rxdfeagcctrl_in;
  input [15:0]rxelecidlemode_in;
  input [15:0]rxmonitorsel_in;
  input [15:0]rxpd_in;
  input [15:0]rxpllclksel_in;
  input [15:0]rxsysclksel_in;
  input [15:0]txpd_in;
  input [15:0]txpllclksel_in;
  input [15:0]txsysclksel_in;
  input [23:0]cpllrefclksel_in;
  input [23:0]loopback_in;
  input [23:0]rxchbondlevel_in;
  input [23:0]rxoutclksel_in;
  input [23:0]rxrate_in;
  input [23:0]txbufdiffctrl_in;
  input [23:0]txmargin_in;
  input [23:0]txoutclksel_in;
  input [23:0]txrate_in;
  input [31:0]rxosintcfg_in;
  input [31:0]rxprbssel_in;
  input [31:0]txdiffctrl_in;
  input [31:0]txprbssel_in;
  input [39:0]pcsrsvdin2_in;
  input [39:0]pmarsvdin_in;
  input [39:0]rxchbondi_in;
  input [39:0]txpippmstepsize_in;
  input [39:0]txpostcursor_in;
  input [39:0]txprecursor_in;
  input [47:0]txheader_in;
  input [55:0]txmaincursor_in;
  input [55:0]txsequence_in;
  input [63:0]tx8b10bbypass_in;
  input [63:0]txctrl2_in;
  input [63:0]txdataextendrsvd_in;
  input [71:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [23:0]bufgtce_out;
  wire [23:0]bufgtcemask_out;
  wire [71:0]bufgtdiv_out;
  wire [23:0]bufgtreset_out;
  wire [23:0]bufgtrstmask_out;
  wire [7:0]cfgreset_in;
  wire [7:0]clkrsvd0_in;
  wire [7:0]clkrsvd1_in;
  wire [7:0]cpllfbclklost_out;
  wire [7:0]cplllock_out;
  wire [7:0]cplllockdetclk_in;
  wire [7:0]cplllocken_in;
  wire [7:0]cpllpd_in;
  wire [7:0]cpllrefclklost_out;
  wire [23:0]cpllrefclksel_in;
  wire [7:0]cpllreset_in;
  wire [7:0]dmonfiforeset_in;
  wire [7:0]dmonitorclk_in;
  wire [135:0]dmonitorout_out;
  wire [17:0]drpaddr_common_in;
  wire [71:0]drpaddr_in;
  wire [1:0]drpclk_common_in;
  wire [7:0]drpclk_in;
  wire [31:0]drpdi_common_in;
  wire [127:0]drpdi_in;
  wire [31:0]drpdo_common_out;
  wire [127:0]drpdo_out;
  wire [1:0]drpen_common_in;
  wire [7:0]drpen_in;
  wire [1:0]drprdy_common_out;
  wire [7:0]drprdy_out;
  wire [1:0]drpwe_common_in;
  wire [7:0]drpwe_in;
  wire [7:0]evoddphicaldone_in;
  wire [7:0]evoddphicalstart_in;
  wire [7:0]evoddphidrden_in;
  wire [7:0]evoddphidwren_in;
  wire [7:0]evoddphixrden_in;
  wire [7:0]evoddphixwren_in;
  wire [7:0]eyescandataerror_out;
  wire [7:0]eyescanmode_in;
  wire [7:0]eyescanreset_in;
  wire [7:0]eyescantrigger_in;
  wire [1:0]gtgrefclk0_in;
  wire [1:0]gtgrefclk1_in;
  wire [7:0]gtgrefclk_in;
  wire [7:0]gthrxn_in;
  wire [7:0]gthrxp_in;
  wire [7:0]gthtxn_out;
  wire [7:0]gthtxp_out;
  wire [1:0]gtnorthrefclk00_in;
  wire [1:0]gtnorthrefclk01_in;
  wire [7:0]gtnorthrefclk0_in;
  wire [1:0]gtnorthrefclk10_in;
  wire [1:0]gtnorthrefclk11_in;
  wire [7:0]gtnorthrefclk1_in;
  wire [7:0]gtpowergood_out;
  wire [1:0]gtrefclk00_in;
  wire [1:0]gtrefclk01_in;
  wire [7:0]gtrefclk0_in;
  wire [1:0]gtrefclk10_in;
  wire [1:0]gtrefclk11_in;
  wire [7:0]gtrefclk1_in;
  wire [7:0]gtrefclkmonitor_out;
  wire [7:0]gtresetsel_in;
  wire [127:0]gtrsvd_in;
  wire [7:0]gtrxreset_in;
  wire [1:0]gtsouthrefclk00_in;
  wire [1:0]gtsouthrefclk01_in;
  wire [7:0]gtsouthrefclk0_in;
  wire [1:0]gtsouthrefclk10_in;
  wire [1:0]gtsouthrefclk11_in;
  wire [7:0]gtsouthrefclk1_in;
  wire [7:0]gttxreset_in;
  wire [23:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [7:0]lpbkrxtxseren_in;
  wire [7:0]lpbktxrxseren_in;
  wire [7:0]pcieeqrxeqadaptdone_in;
  wire [7:0]pcierategen3_out;
  wire [7:0]pcierateidle_out;
  wire [15:0]pcierateqpllpd_out;
  wire [15:0]pcierateqpllreset_out;
  wire [7:0]pcierstidle_in;
  wire [7:0]pciersttxsyncstart_in;
  wire [7:0]pciesynctxsyncdone_out;
  wire [7:0]pcieusergen3rdy_out;
  wire [7:0]pcieuserphystatusrst_out;
  wire [7:0]pcieuserratedone_in;
  wire [7:0]pcieuserratestart_out;
  wire [39:0]pcsrsvdin2_in;
  wire [127:0]pcsrsvdin_in;
  wire [95:0]pcsrsvdout_out;
  wire [7:0]phystatus_out;
  wire [63:0]pinrsrvdas_out;
  wire [39:0]pmarsvdin_in;
  wire [15:0]pmarsvdout0_out;
  wire [15:0]pmarsvdout1_out;
  wire [1:0]qpll0clkrsvd0_in;
  wire [1:0]qpll0clkrsvd1_in;
  wire [1:0]qpll0fbclklost_out;
  wire [1:0]qpll0lock_out;
  wire [1:0]qpll0lockdetclk_in;
  wire [1:0]qpll0locken_in;
  wire [1:0]qpll0outclk_out;
  wire [1:0]qpll0outrefclk_out;
  wire [1:0]qpll0pd_in;
  wire [1:0]qpll0refclklost_out;
  wire [5:0]qpll0refclksel_in;
  wire [1:0]qpll0reset_in;
  wire [1:0]qpll1clkrsvd0_in;
  wire [1:0]qpll1clkrsvd1_in;
  wire [1:0]qpll1fbclklost_out;
  wire [1:0]qpll1lock_out;
  wire [1:0]qpll1lockdetclk_in;
  wire [1:0]qpll1locken_in;
  wire [1:0]qpll1outclk_out;
  wire [1:0]qpll1outrefclk_out;
  wire [1:0]qpll1pd_in;
  wire [1:0]qpll1refclklost_out;
  wire [5:0]qpll1refclksel_in;
  wire [1:0]qpll1reset_in;
  wire [15:0]qplldmonitor0_out;
  wire [15:0]qplldmonitor1_out;
  wire [15:0]qpllrsvd1_in;
  wire [9:0]qpllrsvd2_in;
  wire [9:0]qpllrsvd3_in;
  wire [15:0]qpllrsvd4_in;
  wire [1:0]refclkoutmonitor0_out;
  wire [1:0]refclkoutmonitor1_out;
  wire [7:0]resetexception_out;
  wire [7:0]resetovrd_in;
  wire [7:0]rstclkentx_in;
  wire [7:0]rx8b10ben_in;
  wire [7:0]rxbufreset_in;
  wire [23:0]rxbufstatus_out;
  wire [7:0]rxbyteisaligned_out;
  wire [7:0]rxbyterealign_out;
  wire [7:0]rxcdrfreqreset_in;
  wire [7:0]rxcdrhold_in;
  wire [7:0]rxcdrlock_out;
  wire [7:0]rxcdrovrden_in;
  wire [7:0]rxcdrphdone_out;
  wire [7:0]rxcdrreset_in;
  wire [7:0]rxcdrresetrsv_in;
  wire [7:0]rxchanbondseq_out;
  wire [7:0]rxchanisaligned_out;
  wire [7:0]rxchanrealign_out;
  wire [7:0]rxchbonden_in;
  wire [39:0]rxchbondi_in;
  wire [23:0]rxchbondlevel_in;
  wire [7:0]rxchbondmaster_in;
  wire [39:0]rxchbondo_out;
  wire [7:0]rxchbondslave_in;
  wire [15:0]rxclkcorcnt_out;
  wire [7:0]rxcominitdet_out;
  wire [7:0]rxcommadet_out;
  wire [7:0]rxcommadeten_in;
  wire [7:0]rxcomsasdet_out;
  wire [7:0]rxcomwakedet_out;
  wire [127:0]rxctrl0_out;
  wire [127:0]rxctrl1_out;
  wire [63:0]rxctrl2_out;
  wire [63:0]rxctrl3_out;
  wire [1023:0]rxdata_out;
  wire [63:0]rxdataextendrsvd_out;
  wire [15:0]rxdatavalid_out;
  wire [15:0]rxdfeagcctrl_in;
  wire [7:0]rxdfeagchold_in;
  wire [7:0]rxdfeagcovrden_in;
  wire [7:0]rxdfelfhold_in;
  wire [7:0]rxdfelfovrden_in;
  wire [7:0]rxdfelpmreset_in;
  wire [7:0]rxdfetap10hold_in;
  wire [7:0]rxdfetap10ovrden_in;
  wire [7:0]rxdfetap11hold_in;
  wire [7:0]rxdfetap11ovrden_in;
  wire [7:0]rxdfetap12hold_in;
  wire [7:0]rxdfetap12ovrden_in;
  wire [7:0]rxdfetap13hold_in;
  wire [7:0]rxdfetap13ovrden_in;
  wire [7:0]rxdfetap14hold_in;
  wire [7:0]rxdfetap14ovrden_in;
  wire [7:0]rxdfetap15hold_in;
  wire [7:0]rxdfetap15ovrden_in;
  wire [7:0]rxdfetap2hold_in;
  wire [7:0]rxdfetap2ovrden_in;
  wire [7:0]rxdfetap3hold_in;
  wire [7:0]rxdfetap3ovrden_in;
  wire [7:0]rxdfetap4hold_in;
  wire [7:0]rxdfetap4ovrden_in;
  wire [7:0]rxdfetap5hold_in;
  wire [7:0]rxdfetap5ovrden_in;
  wire [7:0]rxdfetap6hold_in;
  wire [7:0]rxdfetap6ovrden_in;
  wire [7:0]rxdfetap7hold_in;
  wire [7:0]rxdfetap7ovrden_in;
  wire [7:0]rxdfetap8hold_in;
  wire [7:0]rxdfetap8ovrden_in;
  wire [7:0]rxdfetap9hold_in;
  wire [7:0]rxdfetap9ovrden_in;
  wire [7:0]rxdfeuthold_in;
  wire [7:0]rxdfeutovrden_in;
  wire [7:0]rxdfevphold_in;
  wire [7:0]rxdfevpovrden_in;
  wire [7:0]rxdfevsen_in;
  wire [7:0]rxdfexyden_in;
  wire [7:0]rxdlybypass_in;
  wire [7:0]rxdlyen_in;
  wire [7:0]rxdlyovrden_in;
  wire [7:0]rxdlysreset_in;
  wire [7:0]rxdlysresetdone_out;
  wire [7:0]rxelecidle_out;
  wire [15:0]rxelecidlemode_in;
  wire [7:0]rxgearboxslip_in;
  wire [47:0]rxheader_out;
  wire [15:0]rxheadervalid_out;
  wire [7:0]rxlatclk_in;
  wire [7:0]rxlpmen_in;
  wire [7:0]rxlpmgchold_in;
  wire [7:0]rxlpmgcovrden_in;
  wire [7:0]rxlpmhfhold_in;
  wire [7:0]rxlpmhfovrden_in;
  wire [7:0]rxlpmlfhold_in;
  wire [7:0]rxlpmlfklovrden_in;
  wire [7:0]rxlpmoshold_in;
  wire [7:0]rxlpmosovrden_in;
  wire [7:0]rxmcommaalignen_in;
  wire [55:0]rxmonitorout_out;
  wire [15:0]rxmonitorsel_in;
  wire [7:0]rxoobreset_in;
  wire [7:0]rxoscalreset_in;
  wire [7:0]rxoshold_in;
  wire [31:0]rxosintcfg_in;
  wire [7:0]rxosintdone_out;
  wire [7:0]rxosinten_in;
  wire [7:0]rxosinthold_in;
  wire [7:0]rxosintovrden_in;
  wire [7:0]rxosintstarted_out;
  wire [7:0]rxosintstrobe_in;
  wire [7:0]rxosintstrobedone_out;
  wire [7:0]rxosintstrobestarted_out;
  wire [7:0]rxosinttestovrden_in;
  wire [7:0]rxosovrden_in;
  wire [7:0]rxoutclk_out;
  wire [7:0]rxoutclkfabric_out;
  wire [7:0]rxoutclkpcs_out;
  wire [23:0]rxoutclksel_in;
  wire [7:0]rxpcommaalignen_in;
  wire [7:0]rxpcsreset_in;
  wire [15:0]rxpd_in;
  wire [7:0]rxphalign_in;
  wire [7:0]rxphaligndone_out;
  wire [7:0]rxphalignen_in;
  wire [7:0]rxphalignerr_out;
  wire [7:0]rxphdlypd_in;
  wire [7:0]rxphdlyreset_in;
  wire [7:0]rxphovrden_in;
  wire [15:0]rxpllclksel_in;
  wire [7:0]rxpmareset_in;
  wire [7:0]rxpmaresetdone_out;
  wire [7:0]rxpolarity_in;
  wire [7:0]rxprbscntreset_in;
  wire [7:0]rxprbserr_out;
  wire [7:0]rxprbslocked_out;
  wire [31:0]rxprbssel_in;
  wire [7:0]rxprgdivresetdone_out;
  wire [7:0]rxprogdivreset_in;
  wire [7:0]rxqpien_in;
  wire [7:0]rxqpisenn_out;
  wire [7:0]rxqpisenp_out;
  wire [23:0]rxrate_in;
  wire [7:0]rxratedone_out;
  wire [7:0]rxratemode_in;
  wire [3:0]rxrecclk0_sel_out;
  wire [3:0]rxrecclk1_sel_out;
  wire [7:0]rxrecclkout_out;
  wire [7:0]rxresetdone_out;
  wire [7:0]rxslide_in;
  wire [7:0]rxsliderdy_out;
  wire [7:0]rxslipdone_out;
  wire [7:0]rxslipoutclk_in;
  wire [7:0]rxslipoutclkrdy_out;
  wire [7:0]rxslippma_in;
  wire [7:0]rxslippmardy_out;
  wire [15:0]rxstartofseq_out;
  wire [23:0]rxstatus_out;
  wire [7:0]rxsyncallin_in;
  wire [7:0]rxsyncdone_out;
  wire [7:0]rxsyncin_in;
  wire [7:0]rxsyncmode_in;
  wire [7:0]rxsyncout_out;
  wire [15:0]rxsysclksel_in;
  wire [7:0]rxuserrdy_in;
  wire [7:0]rxusrclk2_in;
  wire [7:0]rxusrclk_in;
  wire [7:0]rxvalid_out;
  wire [7:0]sigvalidclk_in;
  wire [63:0]tx8b10bbypass_in;
  wire [7:0]tx8b10ben_in;
  wire [23:0]txbufdiffctrl_in;
  wire [15:0]txbufstatus_out;
  wire [7:0]txcomfinish_out;
  wire [7:0]txcominit_in;
  wire [7:0]txcomsas_in;
  wire [7:0]txcomwake_in;
  wire [127:0]txctrl0_in;
  wire [127:0]txctrl1_in;
  wire [63:0]txctrl2_in;
  wire [1023:0]txdata_in;
  wire [63:0]txdataextendrsvd_in;
  wire [7:0]txdeemph_in;
  wire [7:0]txdetectrx_in;
  wire [31:0]txdiffctrl_in;
  wire [7:0]txdiffpd_in;
  wire [7:0]txdlybypass_in;
  wire [7:0]txdlyen_in;
  wire [7:0]txdlyhold_in;
  wire [7:0]txdlyovrden_in;
  wire [7:0]txdlysreset_in;
  wire [7:0]txdlysresetdone_out;
  wire [7:0]txdlyupdown_in;
  wire [7:0]txelecidle_in;
  wire [47:0]txheader_in;
  wire [7:0]txinhibit_in;
  wire [7:0]txlatclk_in;
  wire [55:0]txmaincursor_in;
  wire [23:0]txmargin_in;
  wire [7:0]txoutclk_out;
  wire [7:0]txoutclkfabric_out;
  wire [7:0]txoutclkpcs_out;
  wire [23:0]txoutclksel_in;
  wire [7:0]txpcsreset_in;
  wire [15:0]txpd_in;
  wire [7:0]txpdelecidlemode_in;
  wire [7:0]txphalign_in;
  wire [7:0]txphaligndone_out;
  wire [7:0]txphalignen_in;
  wire [7:0]txphdlypd_in;
  wire [7:0]txphdlyreset_in;
  wire [7:0]txphdlytstclk_in;
  wire [7:0]txphinit_in;
  wire [7:0]txphinitdone_out;
  wire [7:0]txphovrden_in;
  wire [7:0]txpippmen_in;
  wire [7:0]txpippmovrden_in;
  wire [7:0]txpippmpd_in;
  wire [7:0]txpippmsel_in;
  wire [39:0]txpippmstepsize_in;
  wire [7:0]txpisopd_in;
  wire [15:0]txpllclksel_in;
  wire [7:0]txpmareset_in;
  wire [7:0]txpmaresetdone_out;
  wire [7:0]txpolarity_in;
  wire [39:0]txpostcursor_in;
  wire [7:0]txpostcursorinv_in;
  wire [7:0]txprbsforceerr_in;
  wire [31:0]txprbssel_in;
  wire [39:0]txprecursor_in;
  wire [7:0]txprecursorinv_in;
  wire [7:0]txprgdivresetdone_out;
  wire [7:0]txprogdivreset_in;
  wire [7:0]txqpibiasen_in;
  wire [7:0]txqpisenn_out;
  wire [7:0]txqpisenp_out;
  wire [7:0]txqpistrongpdown_in;
  wire [7:0]txqpiweakpup_in;
  wire [23:0]txrate_in;
  wire [7:0]txratedone_out;
  wire [7:0]txratemode_in;
  wire [7:0]txresetdone_out;
  wire [55:0]txsequence_in;
  wire [7:0]txswing_in;
  wire [7:0]txsyncallin_in;
  wire [7:0]txsyncdone_out;
  wire [7:0]txsyncin_in;
  wire [7:0]txsyncmode_in;
  wire [7:0]txsyncout_out;
  wire [15:0]txsysclksel_in;
  wire [7:0]txuserrdy_in;
  wire [7:0]txusrclk2_in;
  wire [7:0]txusrclk_in;

  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_channel_wrapper \gen_gtwizard_gthe3.gen_channel_container[24].gen_enabled_channel.gthe3_channel_wrapper_inst 
       (.bufgtce_out(bufgtce_out[11:0]),
        .bufgtcemask_out(bufgtcemask_out[11:0]),
        .bufgtdiv_out(bufgtdiv_out[35:0]),
        .bufgtreset_out(bufgtreset_out[11:0]),
        .bufgtrstmask_out(bufgtrstmask_out[11:0]),
        .cfgreset_in(cfgreset_in[3:0]),
        .clkrsvd0_in(clkrsvd0_in[3:0]),
        .clkrsvd1_in(clkrsvd1_in[3:0]),
        .cpllfbclklost_out(cpllfbclklost_out[3:0]),
        .cplllock_out(cplllock_out[3:0]),
        .cplllockdetclk_in(cplllockdetclk_in[3:0]),
        .cplllocken_in(cplllocken_in[3:0]),
        .cpllpd_in(cpllpd_in[3:0]),
        .cpllrefclklost_out(cpllrefclklost_out[3:0]),
        .cpllrefclksel_in(cpllrefclksel_in[11:0]),
        .cpllreset_in(cpllreset_in[3:0]),
        .dmonfiforeset_in(dmonfiforeset_in[3:0]),
        .dmonitorclk_in(dmonitorclk_in[3:0]),
        .dmonitorout_out(dmonitorout_out[67:0]),
        .drpaddr_in(drpaddr_in[35:0]),
        .drpclk_in(drpclk_in[3:0]),
        .drpdi_in(drpdi_in[63:0]),
        .drpdo_out(drpdo_out[63:0]),
        .drpen_in(drpen_in[3:0]),
        .drprdy_out(drprdy_out[3:0]),
        .drpwe_in(drpwe_in[3:0]),
        .evoddphicaldone_in(evoddphicaldone_in[3:0]),
        .evoddphicalstart_in(evoddphicalstart_in[3:0]),
        .evoddphidrden_in(evoddphidrden_in[3:0]),
        .evoddphidwren_in(evoddphidwren_in[3:0]),
        .evoddphixrden_in(evoddphixrden_in[3:0]),
        .evoddphixwren_in(evoddphixwren_in[3:0]),
        .eyescandataerror_out(eyescandataerror_out[3:0]),
        .eyescanmode_in(eyescanmode_in[3:0]),
        .eyescanreset_in(eyescanreset_in[3:0]),
        .eyescantrigger_in(eyescantrigger_in[3:0]),
        .gtgrefclk_in(gtgrefclk_in[3:0]),
        .gthrxn_in(gthrxn_in[3:0]),
        .gthrxp_in(gthrxp_in[3:0]),
        .gthtxn_out(gthtxn_out[3:0]),
        .gthtxp_out(gthtxp_out[3:0]),
        .gtnorthrefclk0_in(gtnorthrefclk0_in[3:0]),
        .gtnorthrefclk1_in(gtnorthrefclk1_in[3:0]),
        .gtpowergood_out(gtpowergood_out[3:0]),
        .gtrefclk0_in(gtrefclk0_in[3:0]),
        .gtrefclk1_in(gtrefclk1_in[3:0]),
        .gtrefclkmonitor_out(gtrefclkmonitor_out[3:0]),
        .gtresetsel_in(gtresetsel_in[3:0]),
        .gtrsvd_in(gtrsvd_in[63:0]),
        .gtrxreset_in(gtrxreset_in[3:0]),
        .gtsouthrefclk0_in(gtsouthrefclk0_in[3:0]),
        .gtsouthrefclk1_in(gtsouthrefclk1_in[3:0]),
        .gttxreset_in(gttxreset_in[3:0]),
        .loopback_in(loopback_in[11:0]),
        .lpbkrxtxseren_in(lpbkrxtxseren_in[3:0]),
        .lpbktxrxseren_in(lpbktxrxseren_in[3:0]),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in[3:0]),
        .pcierategen3_out(pcierategen3_out[3:0]),
        .pcierateidle_out(pcierateidle_out[3:0]),
        .pcierateqpllpd_out(pcierateqpllpd_out[7:0]),
        .pcierateqpllreset_out(pcierateqpllreset_out[7:0]),
        .pcierstidle_in(pcierstidle_in[3:0]),
        .pciersttxsyncstart_in(pciersttxsyncstart_in[3:0]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[3:0]),
        .pcieusergen3rdy_out(pcieusergen3rdy_out[3:0]),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out[3:0]),
        .pcieuserratedone_in(pcieuserratedone_in[3:0]),
        .pcieuserratestart_out(pcieuserratestart_out[3:0]),
        .pcsrsvdin2_in(pcsrsvdin2_in[19:0]),
        .pcsrsvdin_in(pcsrsvdin_in[63:0]),
        .pcsrsvdout_out(pcsrsvdout_out[47:0]),
        .phystatus_out(phystatus_out[3:0]),
        .pinrsrvdas_out(pinrsrvdas_out[31:0]),
        .pmarsvdin_in(pmarsvdin_in[19:0]),
        .qpll0outclk_out(qpll0outclk_out[0]),
        .qpll0outrefclk_out(qpll0outrefclk_out[0]),
        .qpll1outclk_out(qpll1outclk_out[0]),
        .qpll1outrefclk_out(qpll1outrefclk_out[0]),
        .resetexception_out(resetexception_out[3:0]),
        .resetovrd_in(resetovrd_in[3:0]),
        .rstclkentx_in(rstclkentx_in[3:0]),
        .rx8b10ben_in(rx8b10ben_in[3:0]),
        .rxbufreset_in(rxbufreset_in[3:0]),
        .rxbufstatus_out(rxbufstatus_out[11:0]),
        .rxbyteisaligned_out(rxbyteisaligned_out[3:0]),
        .rxbyterealign_out(rxbyterealign_out[3:0]),
        .rxcdrfreqreset_in(rxcdrfreqreset_in[3:0]),
        .rxcdrhold_in(rxcdrhold_in[3:0]),
        .rxcdrlock_out(rxcdrlock_out[3:0]),
        .rxcdrovrden_in(rxcdrovrden_in[3:0]),
        .rxcdrphdone_out(rxcdrphdone_out[3:0]),
        .rxcdrreset_in(rxcdrreset_in[3:0]),
        .rxcdrresetrsv_in(rxcdrresetrsv_in[3:0]),
        .rxchanbondseq_out(rxchanbondseq_out[3:0]),
        .rxchanisaligned_out(rxchanisaligned_out[3:0]),
        .rxchanrealign_out(rxchanrealign_out[3:0]),
        .rxchbonden_in(rxchbonden_in[3:0]),
        .rxchbondi_in(rxchbondi_in[19:0]),
        .rxchbondlevel_in(rxchbondlevel_in[11:0]),
        .rxchbondmaster_in(rxchbondmaster_in[3:0]),
        .rxchbondo_out(rxchbondo_out[19:0]),
        .rxchbondslave_in(rxchbondslave_in[3:0]),
        .rxclkcorcnt_out(rxclkcorcnt_out[7:0]),
        .rxcominitdet_out(rxcominitdet_out[3:0]),
        .rxcommadet_out(rxcommadet_out[3:0]),
        .rxcommadeten_in(rxcommadeten_in[3:0]),
        .rxcomsasdet_out(rxcomsasdet_out[3:0]),
        .rxcomwakedet_out(rxcomwakedet_out[3:0]),
        .rxctrl0_out(rxctrl0_out[63:0]),
        .rxctrl1_out(rxctrl1_out[63:0]),
        .rxctrl2_out(rxctrl2_out[31:0]),
        .rxctrl3_out(rxctrl3_out[31:0]),
        .rxdata_out(rxdata_out[511:0]),
        .rxdataextendrsvd_out(rxdataextendrsvd_out[31:0]),
        .rxdatavalid_out(rxdatavalid_out[7:0]),
        .rxdfeagcctrl_in(rxdfeagcctrl_in[7:0]),
        .rxdfeagchold_in(rxdfeagchold_in[3:0]),
        .rxdfeagcovrden_in(rxdfeagcovrden_in[3:0]),
        .rxdfelfhold_in(rxdfelfhold_in[3:0]),
        .rxdfelfovrden_in(rxdfelfovrden_in[3:0]),
        .rxdfelpmreset_in(rxdfelpmreset_in[3:0]),
        .rxdfetap10hold_in(rxdfetap10hold_in[3:0]),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in[3:0]),
        .rxdfetap11hold_in(rxdfetap11hold_in[3:0]),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in[3:0]),
        .rxdfetap12hold_in(rxdfetap12hold_in[3:0]),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in[3:0]),
        .rxdfetap13hold_in(rxdfetap13hold_in[3:0]),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in[3:0]),
        .rxdfetap14hold_in(rxdfetap14hold_in[3:0]),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in[3:0]),
        .rxdfetap15hold_in(rxdfetap15hold_in[3:0]),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in[3:0]),
        .rxdfetap2hold_in(rxdfetap2hold_in[3:0]),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in[3:0]),
        .rxdfetap3hold_in(rxdfetap3hold_in[3:0]),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in[3:0]),
        .rxdfetap4hold_in(rxdfetap4hold_in[3:0]),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in[3:0]),
        .rxdfetap5hold_in(rxdfetap5hold_in[3:0]),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in[3:0]),
        .rxdfetap6hold_in(rxdfetap6hold_in[3:0]),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in[3:0]),
        .rxdfetap7hold_in(rxdfetap7hold_in[3:0]),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in[3:0]),
        .rxdfetap8hold_in(rxdfetap8hold_in[3:0]),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in[3:0]),
        .rxdfetap9hold_in(rxdfetap9hold_in[3:0]),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in[3:0]),
        .rxdfeuthold_in(rxdfeuthold_in[3:0]),
        .rxdfeutovrden_in(rxdfeutovrden_in[3:0]),
        .rxdfevphold_in(rxdfevphold_in[3:0]),
        .rxdfevpovrden_in(rxdfevpovrden_in[3:0]),
        .rxdfevsen_in(rxdfevsen_in[3:0]),
        .rxdfexyden_in(rxdfexyden_in[3:0]),
        .rxdlybypass_in(rxdlybypass_in[3:0]),
        .rxdlyen_in(rxdlyen_in[3:0]),
        .rxdlyovrden_in(rxdlyovrden_in[3:0]),
        .rxdlysreset_in(rxdlysreset_in[3:0]),
        .rxdlysresetdone_out(rxdlysresetdone_out[3:0]),
        .rxelecidle_out(rxelecidle_out[3:0]),
        .rxelecidlemode_in(rxelecidlemode_in[7:0]),
        .rxgearboxslip_in(rxgearboxslip_in[3:0]),
        .rxheader_out(rxheader_out[23:0]),
        .rxheadervalid_out(rxheadervalid_out[7:0]),
        .rxlatclk_in(rxlatclk_in[3:0]),
        .rxlpmen_in(rxlpmen_in[3:0]),
        .rxlpmgchold_in(rxlpmgchold_in[3:0]),
        .rxlpmgcovrden_in(rxlpmgcovrden_in[3:0]),
        .rxlpmhfhold_in(rxlpmhfhold_in[3:0]),
        .rxlpmhfovrden_in(rxlpmhfovrden_in[3:0]),
        .rxlpmlfhold_in(rxlpmlfhold_in[3:0]),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in[3:0]),
        .rxlpmoshold_in(rxlpmoshold_in[3:0]),
        .rxlpmosovrden_in(rxlpmosovrden_in[3:0]),
        .rxmcommaalignen_in(rxmcommaalignen_in[3:0]),
        .rxmonitorout_out(rxmonitorout_out[27:0]),
        .rxmonitorsel_in(rxmonitorsel_in[7:0]),
        .rxoobreset_in(rxoobreset_in[3:0]),
        .rxoscalreset_in(rxoscalreset_in[3:0]),
        .rxoshold_in(rxoshold_in[3:0]),
        .rxosintcfg_in(rxosintcfg_in[15:0]),
        .rxosintdone_out(rxosintdone_out[3:0]),
        .rxosinten_in(rxosinten_in[3:0]),
        .rxosinthold_in(rxosinthold_in[3:0]),
        .rxosintovrden_in(rxosintovrden_in[3:0]),
        .rxosintstarted_out(rxosintstarted_out[3:0]),
        .rxosintstrobe_in(rxosintstrobe_in[3:0]),
        .rxosintstrobedone_out(rxosintstrobedone_out[3:0]),
        .rxosintstrobestarted_out(rxosintstrobestarted_out[3:0]),
        .rxosinttestovrden_in(rxosinttestovrden_in[3:0]),
        .rxosovrden_in(rxosovrden_in[3:0]),
        .rxoutclk_out(rxoutclk_out[3:0]),
        .rxoutclkfabric_out(rxoutclkfabric_out[3:0]),
        .rxoutclkpcs_out(rxoutclkpcs_out[3:0]),
        .rxoutclksel_in(rxoutclksel_in[11:0]),
        .rxpcommaalignen_in(rxpcommaalignen_in[3:0]),
        .rxpcsreset_in(rxpcsreset_in[3:0]),
        .rxpd_in(rxpd_in[7:0]),
        .rxphalign_in(rxphalign_in[3:0]),
        .rxphaligndone_out(rxphaligndone_out[3:0]),
        .rxphalignen_in(rxphalignen_in[3:0]),
        .rxphalignerr_out(rxphalignerr_out[3:0]),
        .rxphdlypd_in(rxphdlypd_in[3:0]),
        .rxphdlyreset_in(rxphdlyreset_in[3:0]),
        .rxphovrden_in(rxphovrden_in[3:0]),
        .rxpllclksel_in(rxpllclksel_in[7:0]),
        .rxpmareset_in(rxpmareset_in[3:0]),
        .rxpmaresetdone_out(rxpmaresetdone_out[3:0]),
        .rxpolarity_in(rxpolarity_in[3:0]),
        .rxprbscntreset_in(rxprbscntreset_in[3:0]),
        .rxprbserr_out(rxprbserr_out[3:0]),
        .rxprbslocked_out(rxprbslocked_out[3:0]),
        .rxprbssel_in(rxprbssel_in[15:0]),
        .rxprgdivresetdone_out(rxprgdivresetdone_out[3:0]),
        .rxprogdivreset_in(rxprogdivreset_in[3:0]),
        .rxqpien_in(rxqpien_in[3:0]),
        .rxqpisenn_out(rxqpisenn_out[3:0]),
        .rxqpisenp_out(rxqpisenp_out[3:0]),
        .rxrate_in(rxrate_in[11:0]),
        .rxratedone_out(rxratedone_out[3:0]),
        .rxratemode_in(rxratemode_in[3:0]),
        .rxrecclkout_out(rxrecclkout_out[3:0]),
        .rxresetdone_out(rxresetdone_out[3:0]),
        .rxslide_in(rxslide_in[3:0]),
        .rxsliderdy_out(rxsliderdy_out[3:0]),
        .rxslipdone_out(rxslipdone_out[3:0]),
        .rxslipoutclk_in(rxslipoutclk_in[3:0]),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out[3:0]),
        .rxslippma_in(rxslippma_in[3:0]),
        .rxslippmardy_out(rxslippmardy_out[3:0]),
        .rxstartofseq_out(rxstartofseq_out[7:0]),
        .rxstatus_out(rxstatus_out[11:0]),
        .rxsyncallin_in(rxsyncallin_in[3:0]),
        .rxsyncdone_out(rxsyncdone_out[3:0]),
        .rxsyncin_in(rxsyncin_in[3:0]),
        .rxsyncmode_in(rxsyncmode_in[3:0]),
        .rxsyncout_out(rxsyncout_out[3:0]),
        .rxsysclksel_in(rxsysclksel_in[7:0]),
        .rxuserrdy_in(rxuserrdy_in[3:0]),
        .rxusrclk2_in(rxusrclk2_in[3:0]),
        .rxusrclk_in(rxusrclk_in[3:0]),
        .rxvalid_out(rxvalid_out[3:0]),
        .sigvalidclk_in(sigvalidclk_in[3:0]),
        .tx8b10bbypass_in(tx8b10bbypass_in[31:0]),
        .tx8b10ben_in(tx8b10ben_in[3:0]),
        .txbufdiffctrl_in(txbufdiffctrl_in[11:0]),
        .txbufstatus_out(txbufstatus_out[7:0]),
        .txcomfinish_out(txcomfinish_out[3:0]),
        .txcominit_in(txcominit_in[3:0]),
        .txcomsas_in(txcomsas_in[3:0]),
        .txcomwake_in(txcomwake_in[3:0]),
        .txctrl0_in(txctrl0_in[63:0]),
        .txctrl1_in(txctrl1_in[63:0]),
        .txctrl2_in(txctrl2_in[31:0]),
        .txdata_in(txdata_in[511:0]),
        .txdataextendrsvd_in(txdataextendrsvd_in[31:0]),
        .txdeemph_in(txdeemph_in[3:0]),
        .txdetectrx_in(txdetectrx_in[3:0]),
        .txdiffctrl_in(txdiffctrl_in[15:0]),
        .txdiffpd_in(txdiffpd_in[3:0]),
        .txdlybypass_in(txdlybypass_in[3:0]),
        .txdlyen_in(txdlyen_in[3:0]),
        .txdlyhold_in(txdlyhold_in[3:0]),
        .txdlyovrden_in(txdlyovrden_in[3:0]),
        .txdlysreset_in(txdlysreset_in[3:0]),
        .txdlysresetdone_out(txdlysresetdone_out[3:0]),
        .txdlyupdown_in(txdlyupdown_in[3:0]),
        .txelecidle_in(txelecidle_in[3:0]),
        .txheader_in(txheader_in[23:0]),
        .txinhibit_in(txinhibit_in[3:0]),
        .txlatclk_in(txlatclk_in[3:0]),
        .txmaincursor_in(txmaincursor_in[27:0]),
        .txmargin_in(txmargin_in[11:0]),
        .txoutclk_out(txoutclk_out[3:0]),
        .txoutclkfabric_out(txoutclkfabric_out[3:0]),
        .txoutclkpcs_out(txoutclkpcs_out[3:0]),
        .txoutclksel_in(txoutclksel_in[11:0]),
        .txpcsreset_in(txpcsreset_in[3:0]),
        .txpd_in(txpd_in[7:0]),
        .txpdelecidlemode_in(txpdelecidlemode_in[3:0]),
        .txphalign_in(txphalign_in[3:0]),
        .txphaligndone_out(txphaligndone_out[3:0]),
        .txphalignen_in(txphalignen_in[3:0]),
        .txphdlypd_in(txphdlypd_in[3:0]),
        .txphdlyreset_in(txphdlyreset_in[3:0]),
        .txphdlytstclk_in(txphdlytstclk_in[3:0]),
        .txphinit_in(txphinit_in[3:0]),
        .txphinitdone_out(txphinitdone_out[3:0]),
        .txphovrden_in(txphovrden_in[3:0]),
        .txpippmen_in(txpippmen_in[3:0]),
        .txpippmovrden_in(txpippmovrden_in[3:0]),
        .txpippmpd_in(txpippmpd_in[3:0]),
        .txpippmsel_in(txpippmsel_in[3:0]),
        .txpippmstepsize_in(txpippmstepsize_in[19:0]),
        .txpisopd_in(txpisopd_in[3:0]),
        .txpllclksel_in(txpllclksel_in[7:0]),
        .txpmareset_in(txpmareset_in[3:0]),
        .txpmaresetdone_out(txpmaresetdone_out[3:0]),
        .txpolarity_in(txpolarity_in[3:0]),
        .txpostcursor_in(txpostcursor_in[19:0]),
        .txpostcursorinv_in(txpostcursorinv_in[3:0]),
        .txprbsforceerr_in(txprbsforceerr_in[3:0]),
        .txprbssel_in(txprbssel_in[15:0]),
        .txprecursor_in(txprecursor_in[19:0]),
        .txprecursorinv_in(txprecursorinv_in[3:0]),
        .txprgdivresetdone_out(txprgdivresetdone_out[3:0]),
        .txprogdivreset_in(txprogdivreset_in[3:0]),
        .txqpibiasen_in(txqpibiasen_in[3:0]),
        .txqpisenn_out(txqpisenn_out[3:0]),
        .txqpisenp_out(txqpisenp_out[3:0]),
        .txqpistrongpdown_in(txqpistrongpdown_in[3:0]),
        .txqpiweakpup_in(txqpiweakpup_in[3:0]),
        .txrate_in(txrate_in[11:0]),
        .txratedone_out(txratedone_out[3:0]),
        .txratemode_in(txratemode_in[3:0]),
        .txresetdone_out(txresetdone_out[3:0]),
        .txsequence_in(txsequence_in[27:0]),
        .txswing_in(txswing_in[3:0]),
        .txsyncallin_in(txsyncallin_in[3:0]),
        .txsyncdone_out(txsyncdone_out[3:0]),
        .txsyncin_in(txsyncin_in[3:0]),
        .txsyncmode_in(txsyncmode_in[3:0]),
        .txsyncout_out(txsyncout_out[3:0]),
        .txsysclksel_in(txsysclksel_in[7:0]),
        .txuserrdy_in(txuserrdy_in[3:0]),
        .txusrclk2_in(txusrclk2_in[3:0]),
        .txusrclk_in(txusrclk_in[3:0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_channel_wrapper_341 \gen_gtwizard_gthe3.gen_channel_container[25].gen_enabled_channel.gthe3_channel_wrapper_inst 
       (.bufgtce_out(bufgtce_out[23:12]),
        .bufgtcemask_out(bufgtcemask_out[23:12]),
        .bufgtdiv_out(bufgtdiv_out[71:36]),
        .bufgtreset_out(bufgtreset_out[23:12]),
        .bufgtrstmask_out(bufgtrstmask_out[23:12]),
        .cfgreset_in(cfgreset_in[7:4]),
        .clkrsvd0_in(clkrsvd0_in[7:4]),
        .clkrsvd1_in(clkrsvd1_in[7:4]),
        .cpllfbclklost_out(cpllfbclklost_out[7:4]),
        .cplllock_out(cplllock_out[7:4]),
        .cplllockdetclk_in(cplllockdetclk_in[7:4]),
        .cplllocken_in(cplllocken_in[7:4]),
        .cpllpd_in(cpllpd_in[7:4]),
        .cpllrefclklost_out(cpllrefclklost_out[7:4]),
        .cpllrefclksel_in(cpllrefclksel_in[23:12]),
        .cpllreset_in(cpllreset_in[7:4]),
        .dmonfiforeset_in(dmonfiforeset_in[7:4]),
        .dmonitorclk_in(dmonitorclk_in[7:4]),
        .dmonitorout_out(dmonitorout_out[135:68]),
        .drpaddr_in(drpaddr_in[71:36]),
        .drpclk_in(drpclk_in[7:4]),
        .drpdi_in(drpdi_in[127:64]),
        .drpdo_out(drpdo_out[127:64]),
        .drpen_in(drpen_in[7:4]),
        .drprdy_out(drprdy_out[7:4]),
        .drpwe_in(drpwe_in[7:4]),
        .evoddphicaldone_in(evoddphicaldone_in[7:4]),
        .evoddphicalstart_in(evoddphicalstart_in[7:4]),
        .evoddphidrden_in(evoddphidrden_in[7:4]),
        .evoddphidwren_in(evoddphidwren_in[7:4]),
        .evoddphixrden_in(evoddphixrden_in[7:4]),
        .evoddphixwren_in(evoddphixwren_in[7:4]),
        .eyescandataerror_out(eyescandataerror_out[7:4]),
        .eyescanmode_in(eyescanmode_in[7:4]),
        .eyescanreset_in(eyescanreset_in[7:4]),
        .eyescantrigger_in(eyescantrigger_in[7:4]),
        .gtgrefclk_in(gtgrefclk_in[7:4]),
        .gthrxn_in(gthrxn_in[7:4]),
        .gthrxp_in(gthrxp_in[7:4]),
        .gthtxn_out(gthtxn_out[7:4]),
        .gthtxp_out(gthtxp_out[7:4]),
        .gtnorthrefclk0_in(gtnorthrefclk0_in[7:4]),
        .gtnorthrefclk1_in(gtnorthrefclk1_in[7:4]),
        .gtpowergood_out(gtpowergood_out[7:4]),
        .gtrefclk0_in(gtrefclk0_in[7:4]),
        .gtrefclk1_in(gtrefclk1_in[7:4]),
        .gtrefclkmonitor_out(gtrefclkmonitor_out[7:4]),
        .gtresetsel_in(gtresetsel_in[7:4]),
        .gtrsvd_in(gtrsvd_in[127:64]),
        .gtrxreset_in(gtrxreset_in[7:4]),
        .gtsouthrefclk0_in(gtsouthrefclk0_in[7:4]),
        .gtsouthrefclk1_in(gtsouthrefclk1_in[7:4]),
        .gttxreset_in(gttxreset_in[7:4]),
        .loopback_in(loopback_in[23:12]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in(lpbkrxtxseren_in[7:4]),
        .lpbktxrxseren_in(lpbktxrxseren_in[7:4]),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in[7:4]),
        .pcierategen3_out(pcierategen3_out[7:4]),
        .pcierateidle_out(pcierateidle_out[7:4]),
        .pcierateqpllpd_out(pcierateqpllpd_out[15:8]),
        .pcierateqpllreset_out(pcierateqpllreset_out[15:8]),
        .pcierstidle_in(pcierstidle_in[7:4]),
        .pciersttxsyncstart_in(pciersttxsyncstart_in[7:4]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[7:4]),
        .pcieusergen3rdy_out(pcieusergen3rdy_out[7:4]),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out[7:4]),
        .pcieuserratedone_in(pcieuserratedone_in[7:4]),
        .pcieuserratestart_out(pcieuserratestart_out[7:4]),
        .pcsrsvdin2_in(pcsrsvdin2_in[39:20]),
        .pcsrsvdin_in(pcsrsvdin_in[127:64]),
        .pcsrsvdout_out(pcsrsvdout_out[95:48]),
        .phystatus_out(phystatus_out[7:4]),
        .pinrsrvdas_out(pinrsrvdas_out[63:32]),
        .pmarsvdin_in(pmarsvdin_in[39:20]),
        .qpll0outclk_out(qpll0outclk_out[1]),
        .qpll0outrefclk_out(qpll0outrefclk_out[1]),
        .qpll1outclk_out(qpll1outclk_out[1]),
        .qpll1outrefclk_out(qpll1outrefclk_out[1]),
        .resetexception_out(resetexception_out[7:4]),
        .resetovrd_in(resetovrd_in[7:4]),
        .rstclkentx_in(rstclkentx_in[7:4]),
        .rx8b10ben_in(rx8b10ben_in[7:4]),
        .rxbufreset_in(rxbufreset_in[7:4]),
        .rxbufstatus_out(rxbufstatus_out[23:12]),
        .rxbyteisaligned_out(rxbyteisaligned_out[7:4]),
        .rxbyterealign_out(rxbyterealign_out[7:4]),
        .rxcdrfreqreset_in(rxcdrfreqreset_in[7:4]),
        .rxcdrhold_in(rxcdrhold_in[7:4]),
        .rxcdrlock_out(rxcdrlock_out[7:4]),
        .rxcdrovrden_in(rxcdrovrden_in[7:4]),
        .rxcdrphdone_out(rxcdrphdone_out[7:4]),
        .rxcdrreset_in(rxcdrreset_in[7:4]),
        .rxcdrresetrsv_in(rxcdrresetrsv_in[7:4]),
        .rxchanbondseq_out(rxchanbondseq_out[7:4]),
        .rxchanisaligned_out(rxchanisaligned_out[7:4]),
        .rxchanrealign_out(rxchanrealign_out[7:4]),
        .rxchbonden_in(rxchbonden_in[7:4]),
        .rxchbondi_in(rxchbondi_in[39:20]),
        .rxchbondlevel_in(rxchbondlevel_in[23:12]),
        .rxchbondmaster_in(rxchbondmaster_in[7:4]),
        .rxchbondo_out(rxchbondo_out[39:20]),
        .rxchbondslave_in(rxchbondslave_in[7:4]),
        .rxclkcorcnt_out(rxclkcorcnt_out[15:8]),
        .rxcominitdet_out(rxcominitdet_out[7:4]),
        .rxcommadet_out(rxcommadet_out[7:4]),
        .rxcommadeten_in(rxcommadeten_in[7:4]),
        .rxcomsasdet_out(rxcomsasdet_out[7:4]),
        .rxcomwakedet_out(rxcomwakedet_out[7:4]),
        .rxctrl0_out(rxctrl0_out[127:64]),
        .rxctrl1_out(rxctrl1_out[127:64]),
        .rxctrl2_out(rxctrl2_out[63:32]),
        .rxctrl3_out(rxctrl3_out[63:32]),
        .rxdata_out(rxdata_out[1023:512]),
        .rxdataextendrsvd_out(rxdataextendrsvd_out[63:32]),
        .rxdatavalid_out(rxdatavalid_out[15:8]),
        .rxdfeagcctrl_in(rxdfeagcctrl_in[15:8]),
        .rxdfeagchold_in(rxdfeagchold_in[7:4]),
        .rxdfeagcovrden_in(rxdfeagcovrden_in[7:4]),
        .rxdfelfhold_in(rxdfelfhold_in[7:4]),
        .rxdfelfovrden_in(rxdfelfovrden_in[7:4]),
        .rxdfelpmreset_in(rxdfelpmreset_in[7:4]),
        .rxdfetap10hold_in(rxdfetap10hold_in[7:4]),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in[7:4]),
        .rxdfetap11hold_in(rxdfetap11hold_in[7:4]),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in[7:4]),
        .rxdfetap12hold_in(rxdfetap12hold_in[7:4]),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in[7:4]),
        .rxdfetap13hold_in(rxdfetap13hold_in[7:4]),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in[7:4]),
        .rxdfetap14hold_in(rxdfetap14hold_in[7:4]),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in[7:4]),
        .rxdfetap15hold_in(rxdfetap15hold_in[7:4]),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in[7:4]),
        .rxdfetap2hold_in(rxdfetap2hold_in[7:4]),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in[7:4]),
        .rxdfetap3hold_in(rxdfetap3hold_in[7:4]),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in[7:4]),
        .rxdfetap4hold_in(rxdfetap4hold_in[7:4]),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in[7:4]),
        .rxdfetap5hold_in(rxdfetap5hold_in[7:4]),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in[7:4]),
        .rxdfetap6hold_in(rxdfetap6hold_in[7:4]),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in[7:4]),
        .rxdfetap7hold_in(rxdfetap7hold_in[7:4]),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in[7:4]),
        .rxdfetap8hold_in(rxdfetap8hold_in[7:4]),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in[7:4]),
        .rxdfetap9hold_in(rxdfetap9hold_in[7:4]),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in[7:4]),
        .rxdfeuthold_in(rxdfeuthold_in[7:4]),
        .rxdfeutovrden_in(rxdfeutovrden_in[7:4]),
        .rxdfevphold_in(rxdfevphold_in[7:4]),
        .rxdfevpovrden_in(rxdfevpovrden_in[7:4]),
        .rxdfevsen_in(rxdfevsen_in[7:4]),
        .rxdfexyden_in(rxdfexyden_in[7:4]),
        .rxdlybypass_in(rxdlybypass_in[7:4]),
        .rxdlyen_in(rxdlyen_in[7:4]),
        .rxdlyovrden_in(rxdlyovrden_in[7:4]),
        .rxdlysreset_in(rxdlysreset_in[7:4]),
        .rxdlysresetdone_out(rxdlysresetdone_out[7:4]),
        .rxelecidle_out(rxelecidle_out[7:4]),
        .rxelecidlemode_in(rxelecidlemode_in[15:8]),
        .rxgearboxslip_in(rxgearboxslip_in[7:4]),
        .rxheader_out(rxheader_out[47:24]),
        .rxheadervalid_out(rxheadervalid_out[15:8]),
        .rxlatclk_in(rxlatclk_in[7:4]),
        .rxlpmen_in(rxlpmen_in[7:4]),
        .rxlpmgchold_in(rxlpmgchold_in[7:4]),
        .rxlpmgcovrden_in(rxlpmgcovrden_in[7:4]),
        .rxlpmhfhold_in(rxlpmhfhold_in[7:4]),
        .rxlpmhfovrden_in(rxlpmhfovrden_in[7:4]),
        .rxlpmlfhold_in(rxlpmlfhold_in[7:4]),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in[7:4]),
        .rxlpmoshold_in(rxlpmoshold_in[7:4]),
        .rxlpmosovrden_in(rxlpmosovrden_in[7:4]),
        .rxmcommaalignen_in(rxmcommaalignen_in[7:4]),
        .rxmonitorout_out(rxmonitorout_out[55:28]),
        .rxmonitorsel_in(rxmonitorsel_in[15:8]),
        .rxoobreset_in(rxoobreset_in[7:4]),
        .rxoscalreset_in(rxoscalreset_in[7:4]),
        .rxoshold_in(rxoshold_in[7:4]),
        .rxosintcfg_in(rxosintcfg_in[31:16]),
        .rxosintdone_out(rxosintdone_out[7:4]),
        .rxosinten_in(rxosinten_in[7:4]),
        .rxosinthold_in(rxosinthold_in[7:4]),
        .rxosintovrden_in(rxosintovrden_in[7:4]),
        .rxosintstarted_out(rxosintstarted_out[7:4]),
        .rxosintstrobe_in(rxosintstrobe_in[7:4]),
        .rxosintstrobedone_out(rxosintstrobedone_out[7:4]),
        .rxosintstrobestarted_out(rxosintstrobestarted_out[7:4]),
        .rxosinttestovrden_in(rxosinttestovrden_in[7:4]),
        .rxosovrden_in(rxosovrden_in[7:4]),
        .rxoutclk_out(rxoutclk_out[7:4]),
        .rxoutclkfabric_out(rxoutclkfabric_out[7:4]),
        .rxoutclkpcs_out(rxoutclkpcs_out[7:4]),
        .rxoutclksel_in(rxoutclksel_in[23:12]),
        .rxpcommaalignen_in(rxpcommaalignen_in[7:4]),
        .rxpcsreset_in(rxpcsreset_in[7:4]),
        .rxpd_in(rxpd_in[15:8]),
        .rxphalign_in(rxphalign_in[7:4]),
        .rxphaligndone_out(rxphaligndone_out[7:4]),
        .rxphalignen_in(rxphalignen_in[7:4]),
        .rxphalignerr_out(rxphalignerr_out[7:4]),
        .rxphdlypd_in(rxphdlypd_in[7:4]),
        .rxphdlyreset_in(rxphdlyreset_in[7:4]),
        .rxphovrden_in(rxphovrden_in[7:4]),
        .rxpllclksel_in(rxpllclksel_in[15:8]),
        .rxpmareset_in(rxpmareset_in[7:4]),
        .rxpmaresetdone_out(rxpmaresetdone_out[7:4]),
        .rxpolarity_in(rxpolarity_in[7:4]),
        .rxprbscntreset_in(rxprbscntreset_in[7:4]),
        .rxprbserr_out(rxprbserr_out[7:4]),
        .rxprbslocked_out(rxprbslocked_out[7:4]),
        .rxprbssel_in(rxprbssel_in[31:16]),
        .rxprgdivresetdone_out(rxprgdivresetdone_out[7:4]),
        .rxprogdivreset_in(rxprogdivreset_in[7:4]),
        .rxqpien_in(rxqpien_in[7:4]),
        .rxqpisenn_out(rxqpisenn_out[7:4]),
        .rxqpisenp_out(rxqpisenp_out[7:4]),
        .rxrate_in(rxrate_in[23:12]),
        .rxratedone_out(rxratedone_out[7:4]),
        .rxratemode_in(rxratemode_in[7:4]),
        .rxrecclkout_out(rxrecclkout_out[7:4]),
        .rxresetdone_out(rxresetdone_out[7:4]),
        .rxslide_in(rxslide_in[7:4]),
        .rxsliderdy_out(rxsliderdy_out[7:4]),
        .rxslipdone_out(rxslipdone_out[7:4]),
        .rxslipoutclk_in(rxslipoutclk_in[7:4]),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out[7:4]),
        .rxslippma_in(rxslippma_in[7:4]),
        .rxslippmardy_out(rxslippmardy_out[7:4]),
        .rxstartofseq_out(rxstartofseq_out[15:8]),
        .rxstatus_out(rxstatus_out[23:12]),
        .rxsyncallin_in(rxsyncallin_in[7:4]),
        .rxsyncdone_out(rxsyncdone_out[7:4]),
        .rxsyncin_in(rxsyncin_in[7:4]),
        .rxsyncmode_in(rxsyncmode_in[7:4]),
        .rxsyncout_out(rxsyncout_out[7:4]),
        .rxsysclksel_in(rxsysclksel_in[15:8]),
        .rxuserrdy_in(rxuserrdy_in[7:4]),
        .rxusrclk2_in(rxusrclk2_in[7:4]),
        .rxusrclk_in(rxusrclk_in[7:4]),
        .rxvalid_out(rxvalid_out[7:4]),
        .sigvalidclk_in(sigvalidclk_in[7:4]),
        .tx8b10bbypass_in(tx8b10bbypass_in[63:32]),
        .tx8b10ben_in(tx8b10ben_in[7:4]),
        .txbufdiffctrl_in(txbufdiffctrl_in[23:12]),
        .txbufstatus_out(txbufstatus_out[15:8]),
        .txcomfinish_out(txcomfinish_out[7:4]),
        .txcominit_in(txcominit_in[7:4]),
        .txcomsas_in(txcomsas_in[7:4]),
        .txcomwake_in(txcomwake_in[7:4]),
        .txctrl0_in(txctrl0_in[127:64]),
        .txctrl1_in(txctrl1_in[127:64]),
        .txctrl2_in(txctrl2_in[63:32]),
        .txdata_in(txdata_in[1023:512]),
        .txdataextendrsvd_in(txdataextendrsvd_in[63:32]),
        .txdeemph_in(txdeemph_in[7:4]),
        .txdetectrx_in(txdetectrx_in[7:4]),
        .txdiffctrl_in(txdiffctrl_in[31:16]),
        .txdiffpd_in(txdiffpd_in[7:4]),
        .txdlybypass_in(txdlybypass_in[7:4]),
        .txdlyen_in(txdlyen_in[7:4]),
        .txdlyhold_in(txdlyhold_in[7:4]),
        .txdlyovrden_in(txdlyovrden_in[7:4]),
        .txdlysreset_in(txdlysreset_in[7:4]),
        .txdlysresetdone_out(txdlysresetdone_out[7:4]),
        .txdlyupdown_in(txdlyupdown_in[7:4]),
        .txelecidle_in(txelecidle_in[7:4]),
        .txheader_in(txheader_in[47:24]),
        .txinhibit_in(txinhibit_in[7:4]),
        .txlatclk_in(txlatclk_in[7:4]),
        .txmaincursor_in(txmaincursor_in[55:28]),
        .txmargin_in(txmargin_in[23:12]),
        .txoutclk_out(txoutclk_out[7:4]),
        .txoutclkfabric_out(txoutclkfabric_out[7:4]),
        .txoutclkpcs_out(txoutclkpcs_out[7:4]),
        .txoutclksel_in(txoutclksel_in[23:12]),
        .txpcsreset_in(txpcsreset_in[7:4]),
        .txpd_in(txpd_in[15:8]),
        .txpdelecidlemode_in(txpdelecidlemode_in[7:4]),
        .txphalign_in(txphalign_in[7:4]),
        .txphaligndone_out(txphaligndone_out[7:4]),
        .txphalignen_in(txphalignen_in[7:4]),
        .txphdlypd_in(txphdlypd_in[7:4]),
        .txphdlyreset_in(txphdlyreset_in[7:4]),
        .txphdlytstclk_in(txphdlytstclk_in[7:4]),
        .txphinit_in(txphinit_in[7:4]),
        .txphinitdone_out(txphinitdone_out[7:4]),
        .txphovrden_in(txphovrden_in[7:4]),
        .txpippmen_in(txpippmen_in[7:4]),
        .txpippmovrden_in(txpippmovrden_in[7:4]),
        .txpippmpd_in(txpippmpd_in[7:4]),
        .txpippmsel_in(txpippmsel_in[7:4]),
        .txpippmstepsize_in(txpippmstepsize_in[39:20]),
        .txpisopd_in(txpisopd_in[7:4]),
        .txpllclksel_in(txpllclksel_in[15:8]),
        .txpmareset_in(txpmareset_in[7:4]),
        .txpmaresetdone_out(txpmaresetdone_out[7:4]),
        .txpolarity_in(txpolarity_in[7:4]),
        .txpostcursor_in(txpostcursor_in[39:20]),
        .txpostcursorinv_in(txpostcursorinv_in[7:4]),
        .txprbsforceerr_in(txprbsforceerr_in[7:4]),
        .txprbssel_in(txprbssel_in[31:16]),
        .txprecursor_in(txprecursor_in[39:20]),
        .txprecursorinv_in(txprecursorinv_in[7:4]),
        .txprgdivresetdone_out(txprgdivresetdone_out[7:4]),
        .txprogdivreset_in(txprogdivreset_in[7:4]),
        .txqpibiasen_in(txqpibiasen_in[7:4]),
        .txqpisenn_out(txqpisenn_out[7:4]),
        .txqpisenp_out(txqpisenp_out[7:4]),
        .txqpistrongpdown_in(txqpistrongpdown_in[7:4]),
        .txqpiweakpup_in(txqpiweakpup_in[7:4]),
        .txrate_in(txrate_in[23:12]),
        .txratedone_out(txratedone_out[7:4]),
        .txratemode_in(txratemode_in[7:4]),
        .txresetdone_out(txresetdone_out[7:4]),
        .txsequence_in(txsequence_in[55:28]),
        .txswing_in(txswing_in[7:4]),
        .txsyncallin_in(txsyncallin_in[7:4]),
        .txsyncdone_out(txsyncdone_out[7:4]),
        .txsyncin_in(txsyncin_in[7:4]),
        .txsyncmode_in(txsyncmode_in[7:4]),
        .txsyncout_out(txsyncout_out[7:4]),
        .txsysclksel_in(txsysclksel_in[15:8]),
        .txuserrdy_in(txuserrdy_in[7:4]),
        .txusrclk2_in(txusrclk2_in[7:4]),
        .txusrclk_in(txusrclk_in[7:4]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_common_wrapper \gen_gtwizard_gthe3.gen_common.gen_common_container[24].gen_enabled_common.gthe3_common_wrapper_inst 
       (.drpaddr_common_in(drpaddr_common_in[8:0]),
        .drpclk_common_in(drpclk_common_in[0]),
        .drpdi_common_in(drpdi_common_in[15:0]),
        .drpdo_common_out(drpdo_common_out[15:0]),
        .drpen_common_in(drpen_common_in[0]),
        .drprdy_common_out(drprdy_common_out[0]),
        .drpwe_common_in(drpwe_common_in[0]),
        .gtgrefclk0_in(gtgrefclk0_in[0]),
        .gtgrefclk1_in(gtgrefclk1_in[0]),
        .gtnorthrefclk00_in(gtnorthrefclk00_in[0]),
        .gtnorthrefclk01_in(gtnorthrefclk01_in[0]),
        .gtnorthrefclk10_in(gtnorthrefclk10_in[0]),
        .gtnorthrefclk11_in(gtnorthrefclk11_in[0]),
        .gtrefclk00_in(gtrefclk00_in[0]),
        .gtrefclk01_in(gtrefclk01_in[0]),
        .gtrefclk10_in(gtrefclk10_in[0]),
        .gtrefclk11_in(gtrefclk11_in[0]),
        .gtsouthrefclk00_in(gtsouthrefclk00_in[0]),
        .gtsouthrefclk01_in(gtsouthrefclk01_in[0]),
        .gtsouthrefclk10_in(gtsouthrefclk10_in[0]),
        .gtsouthrefclk11_in(gtsouthrefclk11_in[0]),
        .pmarsvdout0_out(pmarsvdout0_out[7:0]),
        .pmarsvdout1_out(pmarsvdout1_out[7:0]),
        .qpll0clkrsvd0_in(qpll0clkrsvd0_in[0]),
        .qpll0clkrsvd1_in(qpll0clkrsvd1_in[0]),
        .qpll0fbclklost_out(qpll0fbclklost_out[0]),
        .qpll0lock_out(qpll0lock_out[0]),
        .qpll0lockdetclk_in(qpll0lockdetclk_in[0]),
        .qpll0locken_in(qpll0locken_in[0]),
        .qpll0outclk_out(qpll0outclk_out[0]),
        .qpll0outrefclk_out(qpll0outrefclk_out[0]),
        .qpll0pd_in(qpll0pd_in[0]),
        .qpll0refclklost_out(qpll0refclklost_out[0]),
        .qpll0refclksel_in(qpll0refclksel_in[2:0]),
        .qpll0reset_in(qpll0reset_in[0]),
        .qpll1clkrsvd0_in(qpll1clkrsvd0_in[0]),
        .qpll1clkrsvd1_in(qpll1clkrsvd1_in[0]),
        .qpll1fbclklost_out(qpll1fbclklost_out[0]),
        .qpll1lock_out(qpll1lock_out[0]),
        .qpll1lockdetclk_in(qpll1lockdetclk_in[0]),
        .qpll1locken_in(qpll1locken_in[0]),
        .qpll1outclk_out(qpll1outclk_out[0]),
        .qpll1outrefclk_out(qpll1outrefclk_out[0]),
        .qpll1pd_in(qpll1pd_in[0]),
        .qpll1refclklost_out(qpll1refclklost_out[0]),
        .qpll1refclksel_in(qpll1refclksel_in[2:0]),
        .qpll1reset_in(qpll1reset_in[0]),
        .qplldmonitor0_out(qplldmonitor0_out[7:0]),
        .qplldmonitor1_out(qplldmonitor1_out[7:0]),
        .qpllrsvd1_in(qpllrsvd1_in[7:0]),
        .qpllrsvd2_in(qpllrsvd2_in[4:0]),
        .qpllrsvd3_in(qpllrsvd3_in[4:0]),
        .qpllrsvd4_in(qpllrsvd4_in[7:0]),
        .refclkoutmonitor0_out(refclkoutmonitor0_out[0]),
        .refclkoutmonitor1_out(refclkoutmonitor1_out[0]),
        .rxrecclk0_sel_out(rxrecclk0_sel_out[1:0]),
        .rxrecclk1_sel_out(rxrecclk1_sel_out[1:0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gthe3_common_wrapper_342 \gen_gtwizard_gthe3.gen_common.gen_common_container[25].gen_enabled_common.gthe3_common_wrapper_inst 
       (.drpaddr_common_in(drpaddr_common_in[17:9]),
        .drpclk_common_in(drpclk_common_in[1]),
        .drpdi_common_in(drpdi_common_in[31:16]),
        .drpdo_common_out(drpdo_common_out[31:16]),
        .drpen_common_in(drpen_common_in[1]),
        .drprdy_common_out(drprdy_common_out[1]),
        .drpwe_common_in(drpwe_common_in[1]),
        .gtgrefclk0_in(gtgrefclk0_in[1]),
        .gtgrefclk1_in(gtgrefclk1_in[1]),
        .gtnorthrefclk00_in(gtnorthrefclk00_in[1]),
        .gtnorthrefclk01_in(gtnorthrefclk01_in[1]),
        .gtnorthrefclk10_in(gtnorthrefclk10_in[1]),
        .gtnorthrefclk11_in(gtnorthrefclk11_in[1]),
        .gtrefclk00_in(gtrefclk00_in[1]),
        .gtrefclk01_in(gtrefclk01_in[1]),
        .gtrefclk10_in(gtrefclk10_in[1]),
        .gtrefclk11_in(gtrefclk11_in[1]),
        .gtsouthrefclk00_in(gtsouthrefclk00_in[1]),
        .gtsouthrefclk01_in(gtsouthrefclk01_in[1]),
        .gtsouthrefclk10_in(gtsouthrefclk10_in[1]),
        .gtsouthrefclk11_in(gtsouthrefclk11_in[1]),
        .pmarsvdout0_out(pmarsvdout0_out[15:8]),
        .pmarsvdout1_out(pmarsvdout1_out[15:8]),
        .qpll0clkrsvd0_in(qpll0clkrsvd0_in[1]),
        .qpll0clkrsvd1_in(qpll0clkrsvd1_in[1]),
        .qpll0fbclklost_out(qpll0fbclklost_out[1]),
        .qpll0lock_out(qpll0lock_out[1]),
        .qpll0lockdetclk_in(qpll0lockdetclk_in[1]),
        .qpll0locken_in(qpll0locken_in[1]),
        .qpll0outclk_out(qpll0outclk_out[1]),
        .qpll0outrefclk_out(qpll0outrefclk_out[1]),
        .qpll0pd_in(qpll0pd_in[1]),
        .qpll0refclklost_out(qpll0refclklost_out[1]),
        .qpll0refclksel_in(qpll0refclksel_in[5:3]),
        .qpll0reset_in(qpll0reset_in[1]),
        .qpll1clkrsvd0_in(qpll1clkrsvd0_in[1]),
        .qpll1clkrsvd1_in(qpll1clkrsvd1_in[1]),
        .qpll1fbclklost_out(qpll1fbclklost_out[1]),
        .qpll1lock_out(qpll1lock_out[1]),
        .qpll1lockdetclk_in(qpll1lockdetclk_in[1]),
        .qpll1locken_in(qpll1locken_in[1]),
        .qpll1outclk_out(qpll1outclk_out[1]),
        .qpll1outrefclk_out(qpll1outrefclk_out[1]),
        .qpll1pd_in(qpll1pd_in[1]),
        .qpll1refclklost_out(qpll1refclklost_out[1]),
        .qpll1refclksel_in(qpll1refclksel_in[5:3]),
        .qpll1reset_in(qpll1reset_in[1]),
        .qplldmonitor0_out(qplldmonitor0_out[15:8]),
        .qplldmonitor1_out(qplldmonitor1_out[15:8]),
        .qpllrsvd1_in(qpllrsvd1_in[15:8]),
        .qpllrsvd2_in(qpllrsvd2_in[9:5]),
        .qpllrsvd3_in(qpllrsvd3_in[9:5]),
        .qpllrsvd4_in(qpllrsvd4_in[15:8]),
        .refclkoutmonitor0_out(refclkoutmonitor0_out[1]),
        .refclkoutmonitor1_out(refclkoutmonitor1_out[1]),
        .rxrecclk0_sel_out(rxrecclk0_sel_out[3:2]),
        .rxrecclk1_sel_out(rxrecclk1_sel_out[3:2]));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_COMMON_SCALING_FACTOR = "2" *) (* C_CPLL_VCO_FREQUENCY = "2000.000000" *) 
(* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "100.000000" *) (* C_GT_REV = "17" *) 
(* C_GT_TYPE = "0" *) (* C_INCLUDE_CPLL_CAL = "2" *) (* C_LOCATE_COMMON = "0" *) 
(* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "1" *) (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "1" *) (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
(* C_LOCATE_USER_DATA_WIDTH_SIZING = "1" *) (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RX_BUFFBYPASS_MODE = "0" *) 
(* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "1" *) (* C_RX_CB_DISP = "8'b00000000" *) 
(* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) (* C_RX_CB_MAX_LEVEL = "4" *) 
(* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_CC_DISP = "8'b00000000" *) 
(* C_RX_CC_ENABLE = "1" *) (* C_RX_CC_K = "8'b00000001" *) (* C_RX_CC_LEN_SEQ = "1" *) 
(* C_RX_CC_NUM_SEQ = "1" *) (* C_RX_CC_PERIODICITY = "5000" *) (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000011100" *) 
(* C_RX_COMMA_M_ENABLE = "1" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) (* C_RX_COMMA_P_ENABLE = "1" *) 
(* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "1" *) (* C_RX_ENABLE = "1" *) 
(* C_RX_INT_DATA_WIDTH = "20" *) (* C_RX_LINE_RATE = "8.000000" *) (* C_RX_MASTER_CHANNEL_IDX = "103" *) 
(* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "400.000000" *) (* C_RX_OUTCLK_SOURCE = "1" *) 
(* C_RX_PLL_TYPE = "1" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_REFCLK_FREQUENCY = "100.000000" *) 
(* C_RX_SLIDE_MODE = "2" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
(* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
(* C_RX_USER_DATA_WIDTH = "16" *) (* C_RX_USRCLK2_FREQUENCY = "400.000000" *) (* C_RX_USRCLK_FREQUENCY = "400.000000" *) 
(* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) (* C_TOTAL_NUM_CHANNELS = "8" *) 
(* C_TOTAL_NUM_COMMONS = "2" *) (* C_TOTAL_NUM_COMMONS_EXAMPLE = "0" *) (* C_TXPROGDIV_FREQ_ENABLE = "1" *) 
(* C_TXPROGDIV_FREQ_SOURCE = "2" *) (* C_TXPROGDIV_FREQ_VAL = "400.000000" *) (* C_TX_BUFFBYPASS_MODE = "0" *) 
(* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_TX_BUFFER_MODE = "0" *) (* C_TX_DATA_ENCODING = "1" *) 
(* C_TX_ENABLE = "1" *) (* C_TX_INT_DATA_WIDTH = "20" *) (* C_TX_LINE_RATE = "8.000000" *) 
(* C_TX_MASTER_CHANNEL_IDX = "103" *) (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_TX_OUTCLK_FREQUENCY = "400.000000" *) 
(* C_TX_OUTCLK_SOURCE = "4" *) (* C_TX_PLL_TYPE = "1" *) (* C_TX_REFCLK_FREQUENCY = "100.000000" *) 
(* C_TX_USER_CLOCKING_CONTENTS = "0" *) (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
(* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) (* C_TX_USER_CLOCKING_SOURCE = "0" *) (* C_TX_USER_DATA_WIDTH = "16" *) 
(* C_TX_USRCLK2_FREQUENCY = "400.000000" *) (* C_TX_USRCLK_FREQUENCY = "400.000000" *) (* ORIG_REF_NAME = "pcie3_ultrascale_0_gt_gtwizard_top" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    qpllfreqlock_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txelpcaldvorwren_in,
    txelpcalpaorwren_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [1:0]gtwiz_reset_qpll0lock_in;
  input [1:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [1:0]gtwiz_reset_qpll0reset_out;
  output [1:0]gtwiz_reset_qpll1reset_out;
  input [143:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [143:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [7:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [127:0]gtwiz_userdata_tx_in;
  output [127:0]gtwiz_userdata_rx_out;
  input [1:0]bgbypassb_in;
  input [1:0]bgmonitorenb_in;
  input [1:0]bgpdb_in;
  input [9:0]bgrcalovrd_in;
  input [1:0]bgrcalovrdenb_in;
  input [17:0]drpaddr_common_in;
  input [1:0]drpclk_common_in;
  input [31:0]drpdi_common_in;
  input [1:0]drpen_common_in;
  input [1:0]drpwe_common_in;
  input [1:0]gtgrefclk0_in;
  input [1:0]gtgrefclk1_in;
  input [1:0]gtnorthrefclk00_in;
  input [1:0]gtnorthrefclk01_in;
  input [1:0]gtnorthrefclk10_in;
  input [1:0]gtnorthrefclk11_in;
  input [1:0]gtrefclk00_in;
  input [1:0]gtrefclk01_in;
  input [1:0]gtrefclk10_in;
  input [1:0]gtrefclk11_in;
  input [1:0]gtsouthrefclk00_in;
  input [1:0]gtsouthrefclk01_in;
  input [1:0]gtsouthrefclk10_in;
  input [1:0]gtsouthrefclk11_in;
  input [0:0]pcierateqpll0_in;
  input [0:0]pcierateqpll1_in;
  input [15:0]pmarsvd0_in;
  input [15:0]pmarsvd1_in;
  input [1:0]qpll0clkrsvd0_in;
  input [1:0]qpll0clkrsvd1_in;
  input [0:0]qpll0fbdiv_in;
  input [1:0]qpll0lockdetclk_in;
  input [1:0]qpll0locken_in;
  input [1:0]qpll0pd_in;
  input [5:0]qpll0refclksel_in;
  input [1:0]qpll0reset_in;
  input [1:0]qpll1clkrsvd0_in;
  input [1:0]qpll1clkrsvd1_in;
  input [0:0]qpll1fbdiv_in;
  input [1:0]qpll1lockdetclk_in;
  input [1:0]qpll1locken_in;
  input [1:0]qpll1pd_in;
  input [5:0]qpll1refclksel_in;
  input [1:0]qpll1reset_in;
  input [15:0]qpllrsvd1_in;
  input [9:0]qpllrsvd2_in;
  input [9:0]qpllrsvd3_in;
  input [15:0]qpllrsvd4_in;
  input [1:0]rcalenb_in;
  input [0:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [0:0]sdm0width_in;
  input [0:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [0:0]sdm1width_in;
  input [0:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [0:0]tconreset_in;
  input [0:0]tconrsvdin1_in;
  output [31:0]drpdo_common_out;
  output [1:0]drprdy_common_out;
  output [15:0]pmarsvdout0_out;
  output [15:0]pmarsvdout1_out;
  output [1:0]qpll0fbclklost_out;
  output [1:0]qpll0lock_out;
  output [1:0]qpll0outclk_out;
  output [1:0]qpll0outrefclk_out;
  output [1:0]qpll0refclklost_out;
  output [1:0]qpll1fbclklost_out;
  output [1:0]qpll1lock_out;
  output [1:0]qpll1outclk_out;
  output [1:0]qpll1outrefclk_out;
  output [1:0]qpll1refclklost_out;
  output [15:0]qplldmonitor0_out;
  output [15:0]qplldmonitor1_out;
  output [1:0]refclkoutmonitor0_out;
  output [1:0]refclkoutmonitor1_out;
  output [3:0]rxrecclk0_sel_out;
  output [3:0]rxrecclk1_sel_out;
  output [0:0]rxrecclk0sel_out;
  output [0:0]rxrecclk1sel_out;
  output [0:0]sdm0finalout_out;
  output [0:0]sdm0testdata_out;
  output [0:0]sdm1finalout_out;
  output [0:0]sdm1testdata_out;
  output [0:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  input [0:0]cdrstepdir_in;
  input [0:0]cdrstepsq_in;
  input [0:0]cdrstepsx_in;
  input [7:0]cfgreset_in;
  input [7:0]clkrsvd0_in;
  input [7:0]clkrsvd1_in;
  input [0:0]cpllfreqlock_in;
  input [7:0]cplllockdetclk_in;
  input [7:0]cplllocken_in;
  input [7:0]cpllpd_in;
  input [23:0]cpllrefclksel_in;
  input [7:0]cpllreset_in;
  input [7:0]dmonfiforeset_in;
  input [7:0]dmonitorclk_in;
  input [71:0]drpaddr_in;
  input [7:0]drpclk_in;
  input [127:0]drpdi_in;
  input [7:0]drpen_in;
  input [0:0]drprst_in;
  input [7:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [7:0]evoddphicaldone_in;
  input [7:0]evoddphicalstart_in;
  input [7:0]evoddphidrden_in;
  input [7:0]evoddphidwren_in;
  input [7:0]evoddphixrden_in;
  input [7:0]evoddphixwren_in;
  input [7:0]eyescanmode_in;
  input [7:0]eyescanreset_in;
  input [7:0]eyescantrigger_in;
  input [7:0]gtgrefclk_in;
  input [7:0]gthrxn_in;
  input [7:0]gthrxp_in;
  input [7:0]gtnorthrefclk0_in;
  input [7:0]gtnorthrefclk1_in;
  input [7:0]gtrefclk0_in;
  input [7:0]gtrefclk1_in;
  input [7:0]gtresetsel_in;
  input [127:0]gtrsvd_in;
  input [7:0]gtrxreset_in;
  input [0:0]gtrxresetsel_in;
  input [7:0]gtsouthrefclk0_in;
  input [7:0]gtsouthrefclk1_in;
  input [7:0]gttxreset_in;
  input [0:0]gttxresetsel_in;
  input [0:0]gtyrxn_in;
  input [0:0]gtyrxp_in;
  input [23:0]loopback_in;
  input [0:0]looprsvd_in;
  input [7:0]lpbkrxtxseren_in;
  input [7:0]lpbktxrxseren_in;
  input [7:0]pcieeqrxeqadaptdone_in;
  input [7:0]pcierstidle_in;
  input [7:0]pciersttxsyncstart_in;
  input [7:0]pcieuserratedone_in;
  input [127:0]pcsrsvdin_in;
  input [39:0]pcsrsvdin2_in;
  input [39:0]pmarsvdin_in;
  input [7:0]qpll0clk_in;
  input [7:0]qpll0refclk_in;
  input [7:0]qpll1clk_in;
  input [7:0]qpll1refclk_in;
  input [0:0]qpllfreqlock_in;
  input [7:0]resetovrd_in;
  input [7:0]rstclkentx_in;
  input [7:0]rx8b10ben_in;
  input [0:0]rxafecfoken_in;
  input [7:0]rxbufreset_in;
  input [7:0]rxcdrfreqreset_in;
  input [7:0]rxcdrhold_in;
  input [7:0]rxcdrovrden_in;
  input [7:0]rxcdrreset_in;
  input [7:0]rxcdrresetrsv_in;
  input [7:0]rxchbonden_in;
  input [39:0]rxchbondi_in;
  input [23:0]rxchbondlevel_in;
  input [7:0]rxchbondmaster_in;
  input [7:0]rxchbondslave_in;
  input [0:0]rxckcalreset_in;
  input [0:0]rxckcalstart_in;
  input [7:0]rxcommadeten_in;
  input [15:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [7:0]rxdfeagchold_in;
  input [7:0]rxdfeagcovrden_in;
  input [0:0]rxdfecfokfcnum_in;
  input [0:0]rxdfecfokfen_in;
  input [0:0]rxdfecfokfpulse_in;
  input [0:0]rxdfecfokhold_in;
  input [0:0]rxdfecfokovren_in;
  input [7:0]rxdfelfhold_in;
  input [7:0]rxdfelfovrden_in;
  input [7:0]rxdfelpmreset_in;
  input [7:0]rxdfetap10hold_in;
  input [7:0]rxdfetap10ovrden_in;
  input [7:0]rxdfetap11hold_in;
  input [7:0]rxdfetap11ovrden_in;
  input [7:0]rxdfetap12hold_in;
  input [7:0]rxdfetap12ovrden_in;
  input [7:0]rxdfetap13hold_in;
  input [7:0]rxdfetap13ovrden_in;
  input [7:0]rxdfetap14hold_in;
  input [7:0]rxdfetap14ovrden_in;
  input [7:0]rxdfetap15hold_in;
  input [7:0]rxdfetap15ovrden_in;
  input [7:0]rxdfetap2hold_in;
  input [7:0]rxdfetap2ovrden_in;
  input [7:0]rxdfetap3hold_in;
  input [7:0]rxdfetap3ovrden_in;
  input [7:0]rxdfetap4hold_in;
  input [7:0]rxdfetap4ovrden_in;
  input [7:0]rxdfetap5hold_in;
  input [7:0]rxdfetap5ovrden_in;
  input [7:0]rxdfetap6hold_in;
  input [7:0]rxdfetap6ovrden_in;
  input [7:0]rxdfetap7hold_in;
  input [7:0]rxdfetap7ovrden_in;
  input [7:0]rxdfetap8hold_in;
  input [7:0]rxdfetap8ovrden_in;
  input [7:0]rxdfetap9hold_in;
  input [7:0]rxdfetap9ovrden_in;
  input [7:0]rxdfeuthold_in;
  input [7:0]rxdfeutovrden_in;
  input [7:0]rxdfevphold_in;
  input [7:0]rxdfevpovrden_in;
  input [7:0]rxdfevsen_in;
  input [7:0]rxdfexyden_in;
  input [7:0]rxdlybypass_in;
  input [7:0]rxdlyen_in;
  input [7:0]rxdlyovrden_in;
  input [7:0]rxdlysreset_in;
  input [15:0]rxelecidlemode_in;
  input [0:0]rxeqtraining_in;
  input [7:0]rxgearboxslip_in;
  input [7:0]rxlatclk_in;
  input [7:0]rxlpmen_in;
  input [7:0]rxlpmgchold_in;
  input [7:0]rxlpmgcovrden_in;
  input [7:0]rxlpmhfhold_in;
  input [7:0]rxlpmhfovrden_in;
  input [7:0]rxlpmlfhold_in;
  input [7:0]rxlpmlfklovrden_in;
  input [7:0]rxlpmoshold_in;
  input [7:0]rxlpmosovrden_in;
  input [7:0]rxmcommaalignen_in;
  input [15:0]rxmonitorsel_in;
  input [7:0]rxoobreset_in;
  input [7:0]rxoscalreset_in;
  input [7:0]rxoshold_in;
  input [31:0]rxosintcfg_in;
  input [7:0]rxosinten_in;
  input [7:0]rxosinthold_in;
  input [7:0]rxosintovrden_in;
  input [7:0]rxosintstrobe_in;
  input [7:0]rxosinttestovrden_in;
  input [7:0]rxosovrden_in;
  input [23:0]rxoutclksel_in;
  input [7:0]rxpcommaalignen_in;
  input [7:0]rxpcsreset_in;
  input [15:0]rxpd_in;
  input [7:0]rxphalign_in;
  input [7:0]rxphalignen_in;
  input [7:0]rxphdlypd_in;
  input [7:0]rxphdlyreset_in;
  input [7:0]rxphovrden_in;
  input [15:0]rxpllclksel_in;
  input [7:0]rxpmareset_in;
  input [7:0]rxpolarity_in;
  input [7:0]rxprbscntreset_in;
  input [31:0]rxprbssel_in;
  input [7:0]rxprogdivreset_in;
  input [7:0]rxqpien_in;
  input [23:0]rxrate_in;
  input [7:0]rxratemode_in;
  input [7:0]rxslide_in;
  input [7:0]rxslipoutclk_in;
  input [7:0]rxslippma_in;
  input [7:0]rxsyncallin_in;
  input [7:0]rxsyncin_in;
  input [7:0]rxsyncmode_in;
  input [15:0]rxsysclksel_in;
  input [0:0]rxtermination_in;
  input [7:0]rxuserrdy_in;
  input [7:0]rxusrclk_in;
  input [7:0]rxusrclk2_in;
  input [7:0]sigvalidclk_in;
  input [159:0]tstin_in;
  input [63:0]tx8b10bbypass_in;
  input [7:0]tx8b10ben_in;
  input [23:0]txbufdiffctrl_in;
  input [7:0]txcominit_in;
  input [7:0]txcomsas_in;
  input [7:0]txcomwake_in;
  input [127:0]txctrl0_in;
  input [127:0]txctrl1_in;
  input [63:0]txctrl2_in;
  input [1023:0]txdata_in;
  input [63:0]txdataextendrsvd_in;
  input [0:0]txdccforcestart_in;
  input [0:0]txdccreset_in;
  input [7:0]txdeemph_in;
  input [7:0]txdetectrx_in;
  input [31:0]txdiffctrl_in;
  input [7:0]txdiffpd_in;
  input [7:0]txdlybypass_in;
  input [7:0]txdlyen_in;
  input [7:0]txdlyhold_in;
  input [7:0]txdlyovrden_in;
  input [7:0]txdlysreset_in;
  input [7:0]txdlyupdown_in;
  input [7:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [0:0]txelpcaldvorwren_in;
  input [0:0]txelpcalpaorwren_in;
  input [47:0]txheader_in;
  input [7:0]txinhibit_in;
  input [7:0]txlatclk_in;
  input [0:0]txlfpstreset_in;
  input [0:0]txlfpsu2lpexit_in;
  input [0:0]txlfpsu3wake_in;
  input [55:0]txmaincursor_in;
  input [23:0]txmargin_in;
  input [0:0]txmuxdcdexhold_in;
  input [0:0]txmuxdcdorwren_in;
  input [0:0]txoneszeros_in;
  input [23:0]txoutclksel_in;
  input [7:0]txpcsreset_in;
  input [15:0]txpd_in;
  input [7:0]txpdelecidlemode_in;
  input [7:0]txphalign_in;
  input [7:0]txphalignen_in;
  input [7:0]txphdlypd_in;
  input [7:0]txphdlyreset_in;
  input [7:0]txphdlytstclk_in;
  input [7:0]txphinit_in;
  input [7:0]txphovrden_in;
  input [7:0]txpippmen_in;
  input [7:0]txpippmovrden_in;
  input [7:0]txpippmpd_in;
  input [7:0]txpippmsel_in;
  input [39:0]txpippmstepsize_in;
  input [7:0]txpisopd_in;
  input [15:0]txpllclksel_in;
  input [7:0]txpmareset_in;
  input [7:0]txpolarity_in;
  input [39:0]txpostcursor_in;
  input [7:0]txpostcursorinv_in;
  input [7:0]txprbsforceerr_in;
  input [31:0]txprbssel_in;
  input [39:0]txprecursor_in;
  input [7:0]txprecursorinv_in;
  input [7:0]txprogdivreset_in;
  input [7:0]txqpibiasen_in;
  input [7:0]txqpistrongpdown_in;
  input [7:0]txqpiweakpup_in;
  input [23:0]txrate_in;
  input [7:0]txratemode_in;
  input [55:0]txsequence_in;
  input [7:0]txswing_in;
  input [7:0]txsyncallin_in;
  input [7:0]txsyncin_in;
  input [7:0]txsyncmode_in;
  input [15:0]txsysclksel_in;
  input [7:0]txuserrdy_in;
  input [7:0]txusrclk_in;
  input [7:0]txusrclk2_in;
  output [23:0]bufgtce_out;
  output [23:0]bufgtcemask_out;
  output [71:0]bufgtdiv_out;
  output [23:0]bufgtreset_out;
  output [23:0]bufgtrstmask_out;
  output [7:0]cpllfbclklost_out;
  output [7:0]cplllock_out;
  output [7:0]cpllrefclklost_out;
  output [135:0]dmonitorout_out;
  output [0:0]dmonitoroutclk_out;
  output [127:0]drpdo_out;
  output [7:0]drprdy_out;
  output [7:0]eyescandataerror_out;
  output [7:0]gthtxn_out;
  output [7:0]gthtxp_out;
  output [7:0]gtpowergood_out;
  output [7:0]gtrefclkmonitor_out;
  output [0:0]gtytxn_out;
  output [0:0]gtytxp_out;
  output [7:0]pcierategen3_out;
  output [7:0]pcierateidle_out;
  output [15:0]pcierateqpllpd_out;
  output [15:0]pcierateqpllreset_out;
  output [7:0]pciesynctxsyncdone_out;
  output [7:0]pcieusergen3rdy_out;
  output [7:0]pcieuserphystatusrst_out;
  output [7:0]pcieuserratestart_out;
  output [95:0]pcsrsvdout_out;
  output [7:0]phystatus_out;
  output [63:0]pinrsrvdas_out;
  output [0:0]powerpresent_out;
  output [7:0]resetexception_out;
  output [23:0]rxbufstatus_out;
  output [7:0]rxbyteisaligned_out;
  output [7:0]rxbyterealign_out;
  output [7:0]rxcdrlock_out;
  output [7:0]rxcdrphdone_out;
  output [7:0]rxchanbondseq_out;
  output [7:0]rxchanisaligned_out;
  output [7:0]rxchanrealign_out;
  output [39:0]rxchbondo_out;
  output [0:0]rxckcaldone_out;
  output [15:0]rxclkcorcnt_out;
  output [7:0]rxcominitdet_out;
  output [7:0]rxcommadet_out;
  output [7:0]rxcomsasdet_out;
  output [7:0]rxcomwakedet_out;
  output [127:0]rxctrl0_out;
  output [127:0]rxctrl1_out;
  output [63:0]rxctrl2_out;
  output [63:0]rxctrl3_out;
  output [1023:0]rxdata_out;
  output [63:0]rxdataextendrsvd_out;
  output [15:0]rxdatavalid_out;
  output [7:0]rxdlysresetdone_out;
  output [7:0]rxelecidle_out;
  output [47:0]rxheader_out;
  output [15:0]rxheadervalid_out;
  output [0:0]rxlfpstresetdet_out;
  output [0:0]rxlfpsu2lpexitdet_out;
  output [0:0]rxlfpsu3wakedet_out;
  output [55:0]rxmonitorout_out;
  output [7:0]rxosintdone_out;
  output [7:0]rxosintstarted_out;
  output [7:0]rxosintstrobedone_out;
  output [7:0]rxosintstrobestarted_out;
  output [7:0]rxoutclk_out;
  output [7:0]rxoutclkfabric_out;
  output [7:0]rxoutclkpcs_out;
  output [7:0]rxphaligndone_out;
  output [7:0]rxphalignerr_out;
  output [7:0]rxpmaresetdone_out;
  output [7:0]rxprbserr_out;
  output [7:0]rxprbslocked_out;
  output [7:0]rxprgdivresetdone_out;
  output [7:0]rxqpisenn_out;
  output [7:0]rxqpisenp_out;
  output [7:0]rxratedone_out;
  output [7:0]rxrecclkout_out;
  output [7:0]rxresetdone_out;
  output [7:0]rxsliderdy_out;
  output [7:0]rxslipdone_out;
  output [7:0]rxslipoutclkrdy_out;
  output [7:0]rxslippmardy_out;
  output [15:0]rxstartofseq_out;
  output [23:0]rxstatus_out;
  output [7:0]rxsyncdone_out;
  output [7:0]rxsyncout_out;
  output [7:0]rxvalid_out;
  output [15:0]txbufstatus_out;
  output [7:0]txcomfinish_out;
  output [0:0]txdccdone_out;
  output [7:0]txdlysresetdone_out;
  output [7:0]txoutclk_out;
  output [7:0]txoutclkfabric_out;
  output [7:0]txoutclkpcs_out;
  output [7:0]txphaligndone_out;
  output [7:0]txphinitdone_out;
  output [7:0]txpmaresetdone_out;
  output [7:0]txprgdivresetdone_out;
  output [7:0]txqpisenn_out;
  output [7:0]txqpisenp_out;
  output [7:0]txratedone_out;
  output [7:0]txresetdone_out;
  output [7:0]txsyncdone_out;
  output [7:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire \<const0> ;
  wire [1:0]bgbypassb_in;
  wire [1:0]bgmonitorenb_in;
  wire [1:0]bgpdb_in;
  wire [9:0]bgrcalovrd_in;
  wire [1:0]bgrcalovrdenb_in;
  wire [23:0]bufgtce_out;
  wire [23:0]bufgtcemask_out;
  wire [71:0]bufgtdiv_out;
  wire [23:0]bufgtreset_out;
  wire [23:0]bufgtrstmask_out;
  wire [7:0]cfgreset_in;
  wire [7:0]clkrsvd0_in;
  wire [7:0]clkrsvd1_in;
  wire [7:0]cpllfbclklost_out;
  wire [7:0]cplllock_out;
  wire [7:0]cplllockdetclk_in;
  wire [7:0]cplllocken_in;
  wire [7:0]cpllpd_in;
  wire [7:0]cpllrefclklost_out;
  wire [23:0]cpllrefclksel_in;
  wire [7:0]cpllreset_in;
  wire [7:0]dmonfiforeset_in;
  wire [7:0]dmonitorclk_in;
  wire [135:0]dmonitorout_out;
  wire [17:0]drpaddr_common_in;
  wire [71:0]drpaddr_in;
  wire [1:0]drpclk_common_in;
  wire [7:0]drpclk_in;
  wire [31:0]drpdi_common_in;
  wire [127:0]drpdi_in;
  wire [31:0]drpdo_common_out;
  wire [127:0]drpdo_out;
  wire [1:0]drpen_common_in;
  wire [7:0]drpen_in;
  wire [1:0]drprdy_common_out;
  wire [7:0]drprdy_out;
  wire [1:0]drpwe_common_in;
  wire [7:0]drpwe_in;
  wire [7:0]evoddphicaldone_in;
  wire [7:0]evoddphicalstart_in;
  wire [7:0]evoddphidrden_in;
  wire [7:0]evoddphidwren_in;
  wire [7:0]evoddphixrden_in;
  wire [7:0]evoddphixwren_in;
  wire [7:0]eyescandataerror_out;
  wire [7:0]eyescanmode_in;
  wire [7:0]eyescanreset_in;
  wire [7:0]eyescantrigger_in;
  wire [1:0]gtgrefclk0_in;
  wire [1:0]gtgrefclk1_in;
  wire [7:0]gtgrefclk_in;
  wire [7:0]gthrxn_in;
  wire [7:0]gthrxp_in;
  wire [7:0]gthtxn_out;
  wire [7:0]gthtxp_out;
  wire [1:0]gtnorthrefclk00_in;
  wire [1:0]gtnorthrefclk01_in;
  wire [7:0]gtnorthrefclk0_in;
  wire [1:0]gtnorthrefclk10_in;
  wire [1:0]gtnorthrefclk11_in;
  wire [7:0]gtnorthrefclk1_in;
  wire [7:0]gtpowergood_out;
  wire [1:0]gtrefclk00_in;
  wire [1:0]gtrefclk01_in;
  wire [7:0]gtrefclk0_in;
  wire [1:0]gtrefclk10_in;
  wire [1:0]gtrefclk11_in;
  wire [7:0]gtrefclk1_in;
  wire [7:0]gtrefclkmonitor_out;
  wire [7:0]gtresetsel_in;
  wire [127:0]gtrsvd_in;
  wire [7:0]gtrxreset_in;
  wire [1:0]gtsouthrefclk00_in;
  wire [1:0]gtsouthrefclk01_in;
  wire [7:0]gtsouthrefclk0_in;
  wire [1:0]gtsouthrefclk10_in;
  wire [1:0]gtsouthrefclk11_in;
  wire [7:0]gtsouthrefclk1_in;
  wire [7:0]gttxreset_in;
  wire [0:0]gtwiz_buffbypass_rx_reset_in;
  wire [0:0]gtwiz_buffbypass_rx_start_user_in;
  wire [0:0]gtwiz_buffbypass_tx_reset_in;
  wire [0:0]gtwiz_buffbypass_tx_start_user_in;
  wire [7:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  wire [143:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  wire [143:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  wire [0:0]gtwiz_reset_all_in;
  wire [0:0]gtwiz_reset_clk_freerun_in;
  wire [1:0]gtwiz_reset_qpll0lock_in;
  wire [1:0]gtwiz_reset_qpll1lock_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_in;
  wire [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_rx_reset_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [0:0]gtwiz_userclk_tx_reset_in;
  wire [127:0]gtwiz_userdata_tx_in;
  wire [23:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [7:0]lpbkrxtxseren_in;
  wire [7:0]lpbktxrxseren_in;
  wire [7:0]pcieeqrxeqadaptdone_in;
  wire [7:0]pcierategen3_out;
  wire [7:0]pcierateidle_out;
  wire [15:0]pcierateqpllpd_out;
  wire [15:0]pcierateqpllreset_out;
  wire [7:0]pcierstidle_in;
  wire [7:0]pciersttxsyncstart_in;
  wire [7:0]pciesynctxsyncdone_out;
  wire [7:0]pcieusergen3rdy_out;
  wire [7:0]pcieuserphystatusrst_out;
  wire [7:0]pcieuserratedone_in;
  wire [7:0]pcieuserratestart_out;
  wire [39:0]pcsrsvdin2_in;
  wire [127:0]pcsrsvdin_in;
  wire [95:0]pcsrsvdout_out;
  wire [7:0]phystatus_out;
  wire [63:0]pinrsrvdas_out;
  wire [15:0]pmarsvd0_in;
  wire [15:0]pmarsvd1_in;
  wire [39:0]pmarsvdin_in;
  wire [15:0]pmarsvdout0_out;
  wire [15:0]pmarsvdout1_out;
  wire [7:0]qpll0clk_in;
  wire [1:0]qpll0clkrsvd0_in;
  wire [1:0]qpll0clkrsvd1_in;
  wire [1:0]qpll0fbclklost_out;
  wire [1:0]qpll0lock_out;
  wire [1:0]qpll0lockdetclk_in;
  wire [1:0]qpll0locken_in;
  wire [1:0]qpll0outclk_out;
  wire [1:0]qpll0outrefclk_out;
  wire [1:0]qpll0pd_in;
  wire [7:0]qpll0refclk_in;
  wire [1:0]qpll0refclklost_out;
  wire [5:0]qpll0refclksel_in;
  wire [1:0]qpll0reset_in;
  wire [7:0]qpll1clk_in;
  wire [1:0]qpll1clkrsvd0_in;
  wire [1:0]qpll1clkrsvd1_in;
  wire [1:0]qpll1fbclklost_out;
  wire [1:0]qpll1lock_out;
  wire [1:0]qpll1lockdetclk_in;
  wire [1:0]qpll1locken_in;
  wire [1:0]qpll1outclk_out;
  wire [1:0]qpll1outrefclk_out;
  wire [1:0]qpll1pd_in;
  wire [7:0]qpll1refclk_in;
  wire [1:0]qpll1refclklost_out;
  wire [5:0]qpll1refclksel_in;
  wire [1:0]qpll1reset_in;
  wire [15:0]qplldmonitor0_out;
  wire [15:0]qplldmonitor1_out;
  wire [15:0]qpllrsvd1_in;
  wire [9:0]qpllrsvd2_in;
  wire [9:0]qpllrsvd3_in;
  wire [15:0]qpllrsvd4_in;
  wire [1:0]rcalenb_in;
  wire [1:0]refclkoutmonitor0_out;
  wire [1:0]refclkoutmonitor1_out;
  wire [7:0]resetexception_out;
  wire [7:0]resetovrd_in;
  wire [7:0]rstclkentx_in;
  wire [7:0]rx8b10ben_in;
  wire [7:0]rxbufreset_in;
  wire [23:0]rxbufstatus_out;
  wire [7:0]rxbyteisaligned_out;
  wire [7:0]rxbyterealign_out;
  wire [7:0]rxcdrfreqreset_in;
  wire [7:0]rxcdrhold_in;
  wire [7:0]rxcdrlock_out;
  wire [7:0]rxcdrovrden_in;
  wire [7:0]rxcdrphdone_out;
  wire [7:0]rxcdrreset_in;
  wire [7:0]rxcdrresetrsv_in;
  wire [7:0]rxchanbondseq_out;
  wire [7:0]rxchanisaligned_out;
  wire [7:0]rxchanrealign_out;
  wire [7:0]rxchbonden_in;
  wire [39:0]rxchbondi_in;
  wire [23:0]rxchbondlevel_in;
  wire [7:0]rxchbondmaster_in;
  wire [39:0]rxchbondo_out;
  wire [7:0]rxchbondslave_in;
  wire [15:0]rxclkcorcnt_out;
  wire [7:0]rxcominitdet_out;
  wire [7:0]rxcommadet_out;
  wire [7:0]rxcommadeten_in;
  wire [7:0]rxcomsasdet_out;
  wire [7:0]rxcomwakedet_out;
  wire [127:0]rxctrl0_out;
  wire [127:0]rxctrl1_out;
  wire [63:0]rxctrl2_out;
  wire [63:0]rxctrl3_out;
  wire [1023:0]rxdata_out;
  wire [63:0]rxdataextendrsvd_out;
  wire [15:0]rxdatavalid_out;
  wire [15:0]rxdfeagcctrl_in;
  wire [7:0]rxdfeagchold_in;
  wire [7:0]rxdfeagcovrden_in;
  wire [7:0]rxdfelfhold_in;
  wire [7:0]rxdfelfovrden_in;
  wire [7:0]rxdfelpmreset_in;
  wire [7:0]rxdfetap10hold_in;
  wire [7:0]rxdfetap10ovrden_in;
  wire [7:0]rxdfetap11hold_in;
  wire [7:0]rxdfetap11ovrden_in;
  wire [7:0]rxdfetap12hold_in;
  wire [7:0]rxdfetap12ovrden_in;
  wire [7:0]rxdfetap13hold_in;
  wire [7:0]rxdfetap13ovrden_in;
  wire [7:0]rxdfetap14hold_in;
  wire [7:0]rxdfetap14ovrden_in;
  wire [7:0]rxdfetap15hold_in;
  wire [7:0]rxdfetap15ovrden_in;
  wire [7:0]rxdfetap2hold_in;
  wire [7:0]rxdfetap2ovrden_in;
  wire [7:0]rxdfetap3hold_in;
  wire [7:0]rxdfetap3ovrden_in;
  wire [7:0]rxdfetap4hold_in;
  wire [7:0]rxdfetap4ovrden_in;
  wire [7:0]rxdfetap5hold_in;
  wire [7:0]rxdfetap5ovrden_in;
  wire [7:0]rxdfetap6hold_in;
  wire [7:0]rxdfetap6ovrden_in;
  wire [7:0]rxdfetap7hold_in;
  wire [7:0]rxdfetap7ovrden_in;
  wire [7:0]rxdfetap8hold_in;
  wire [7:0]rxdfetap8ovrden_in;
  wire [7:0]rxdfetap9hold_in;
  wire [7:0]rxdfetap9ovrden_in;
  wire [7:0]rxdfeuthold_in;
  wire [7:0]rxdfeutovrden_in;
  wire [7:0]rxdfevphold_in;
  wire [7:0]rxdfevpovrden_in;
  wire [7:0]rxdfevsen_in;
  wire [7:0]rxdfexyden_in;
  wire [7:0]rxdlybypass_in;
  wire [7:0]rxdlyen_in;
  wire [7:0]rxdlyovrden_in;
  wire [7:0]rxdlysreset_in;
  wire [7:0]rxdlysresetdone_out;
  wire [7:0]rxelecidle_out;
  wire [15:0]rxelecidlemode_in;
  wire [7:0]rxgearboxslip_in;
  wire [47:0]rxheader_out;
  wire [15:0]rxheadervalid_out;
  wire [7:0]rxlatclk_in;
  wire [7:0]rxlpmen_in;
  wire [7:0]rxlpmgchold_in;
  wire [7:0]rxlpmgcovrden_in;
  wire [7:0]rxlpmhfhold_in;
  wire [7:0]rxlpmhfovrden_in;
  wire [7:0]rxlpmlfhold_in;
  wire [7:0]rxlpmlfklovrden_in;
  wire [7:0]rxlpmoshold_in;
  wire [7:0]rxlpmosovrden_in;
  wire [7:0]rxmcommaalignen_in;
  wire [55:0]rxmonitorout_out;
  wire [15:0]rxmonitorsel_in;
  wire [7:0]rxoobreset_in;
  wire [7:0]rxoscalreset_in;
  wire [7:0]rxoshold_in;
  wire [31:0]rxosintcfg_in;
  wire [7:0]rxosintdone_out;
  wire [7:0]rxosinten_in;
  wire [7:0]rxosinthold_in;
  wire [7:0]rxosintovrden_in;
  wire [7:0]rxosintstarted_out;
  wire [7:0]rxosintstrobe_in;
  wire [7:0]rxosintstrobedone_out;
  wire [7:0]rxosintstrobestarted_out;
  wire [7:0]rxosinttestovrden_in;
  wire [7:0]rxosovrden_in;
  wire [7:0]rxoutclk_out;
  wire [7:0]rxoutclkfabric_out;
  wire [7:0]rxoutclkpcs_out;
  wire [23:0]rxoutclksel_in;
  wire [7:0]rxpcommaalignen_in;
  wire [7:0]rxpcsreset_in;
  wire [15:0]rxpd_in;
  wire [7:0]rxphalign_in;
  wire [7:0]rxphaligndone_out;
  wire [7:0]rxphalignen_in;
  wire [7:0]rxphalignerr_out;
  wire [7:0]rxphdlypd_in;
  wire [7:0]rxphdlyreset_in;
  wire [7:0]rxphovrden_in;
  wire [15:0]rxpllclksel_in;
  wire [7:0]rxpmareset_in;
  wire [7:0]rxpmaresetdone_out;
  wire [7:0]rxpolarity_in;
  wire [7:0]rxprbscntreset_in;
  wire [7:0]rxprbserr_out;
  wire [7:0]rxprbslocked_out;
  wire [31:0]rxprbssel_in;
  wire [7:0]rxprgdivresetdone_out;
  wire [7:0]rxprogdivreset_in;
  wire [7:0]rxqpien_in;
  wire [7:0]rxqpisenn_out;
  wire [7:0]rxqpisenp_out;
  wire [23:0]rxrate_in;
  wire [7:0]rxratedone_out;
  wire [7:0]rxratemode_in;
  wire [3:0]rxrecclk0_sel_out;
  wire [3:0]rxrecclk1_sel_out;
  wire [7:0]rxrecclkout_out;
  wire [7:0]rxresetdone_out;
  wire [7:0]rxslide_in;
  wire [7:0]rxsliderdy_out;
  wire [7:0]rxslipdone_out;
  wire [7:0]rxslipoutclk_in;
  wire [7:0]rxslipoutclkrdy_out;
  wire [7:0]rxslippma_in;
  wire [7:0]rxslippmardy_out;
  wire [15:0]rxstartofseq_out;
  wire [23:0]rxstatus_out;
  wire [7:0]rxsyncallin_in;
  wire [7:0]rxsyncdone_out;
  wire [7:0]rxsyncin_in;
  wire [7:0]rxsyncmode_in;
  wire [7:0]rxsyncout_out;
  wire [15:0]rxsysclksel_in;
  wire [7:0]rxuserrdy_in;
  wire [7:0]rxusrclk2_in;
  wire [7:0]rxusrclk_in;
  wire [7:0]rxvalid_out;
  wire [7:0]sigvalidclk_in;
  wire [159:0]tstin_in;
  wire [63:0]tx8b10bbypass_in;
  wire [7:0]tx8b10ben_in;
  wire [23:0]txbufdiffctrl_in;
  wire [15:0]txbufstatus_out;
  wire [7:0]txcomfinish_out;
  wire [7:0]txcominit_in;
  wire [7:0]txcomsas_in;
  wire [7:0]txcomwake_in;
  wire [127:0]txctrl0_in;
  wire [127:0]txctrl1_in;
  wire [63:0]txctrl2_in;
  wire [1023:0]txdata_in;
  wire [63:0]txdataextendrsvd_in;
  wire [7:0]txdeemph_in;
  wire [7:0]txdetectrx_in;
  wire [31:0]txdiffctrl_in;
  wire [7:0]txdiffpd_in;
  wire [7:0]txdlybypass_in;
  wire [7:0]txdlyen_in;
  wire [7:0]txdlyhold_in;
  wire [7:0]txdlyovrden_in;
  wire [7:0]txdlysreset_in;
  wire [7:0]txdlysresetdone_out;
  wire [7:0]txdlyupdown_in;
  wire [7:0]txelecidle_in;
  wire [47:0]txheader_in;
  wire [7:0]txinhibit_in;
  wire [7:0]txlatclk_in;
  wire [55:0]txmaincursor_in;
  wire [23:0]txmargin_in;
  wire [7:0]txoutclk_out;
  wire [7:0]txoutclkfabric_out;
  wire [7:0]txoutclkpcs_out;
  wire [23:0]txoutclksel_in;
  wire [7:0]txpcsreset_in;
  wire [15:0]txpd_in;
  wire [7:0]txpdelecidlemode_in;
  wire [7:0]txphalign_in;
  wire [7:0]txphaligndone_out;
  wire [7:0]txphalignen_in;
  wire [7:0]txphdlypd_in;
  wire [7:0]txphdlyreset_in;
  wire [7:0]txphdlytstclk_in;
  wire [7:0]txphinit_in;
  wire [7:0]txphinitdone_out;
  wire [7:0]txphovrden_in;
  wire [7:0]txpippmen_in;
  wire [7:0]txpippmovrden_in;
  wire [7:0]txpippmpd_in;
  wire [7:0]txpippmsel_in;
  wire [39:0]txpippmstepsize_in;
  wire [7:0]txpisopd_in;
  wire [15:0]txpllclksel_in;
  wire [7:0]txpmareset_in;
  wire [7:0]txpmaresetdone_out;
  wire [7:0]txpolarity_in;
  wire [39:0]txpostcursor_in;
  wire [7:0]txpostcursorinv_in;
  wire [7:0]txprbsforceerr_in;
  wire [31:0]txprbssel_in;
  wire [39:0]txprecursor_in;
  wire [7:0]txprecursorinv_in;
  wire [7:0]txprgdivresetdone_out;
  wire [7:0]txprogdivreset_in;
  wire [7:0]txqpibiasen_in;
  wire [7:0]txqpisenn_out;
  wire [7:0]txqpisenp_out;
  wire [7:0]txqpistrongpdown_in;
  wire [7:0]txqpiweakpup_in;
  wire [23:0]txrate_in;
  wire [7:0]txratedone_out;
  wire [7:0]txratemode_in;
  wire [7:0]txresetdone_out;
  wire [55:0]txsequence_in;
  wire [7:0]txswing_in;
  wire [7:0]txsyncallin_in;
  wire [7:0]txsyncdone_out;
  wire [7:0]txsyncin_in;
  wire [7:0]txsyncmode_in;
  wire [7:0]txsyncout_out;
  wire [15:0]txsysclksel_in;
  wire [7:0]txuserrdy_in;
  wire [7:0]txusrclk2_in;
  wire [7:0]txusrclk_in;

  assign dmonitoroutclk_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll0reset_out[1:0] = qpll0reset_in;
  assign gtwiz_reset_qpll1reset_out[1:0] = qpll1reset_in;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign gtwiz_reset_rx_done_out[0] = gtwiz_reset_rx_done_in;
  assign gtwiz_reset_tx_done_out[0] = gtwiz_reset_tx_done_in;
  assign gtwiz_userclk_rx_active_out[0] = gtwiz_userclk_rx_active_in;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = gtwiz_userclk_tx_active_in;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userdata_rx_out[127] = \<const0> ;
  assign gtwiz_userdata_rx_out[126] = \<const0> ;
  assign gtwiz_userdata_rx_out[125] = \<const0> ;
  assign gtwiz_userdata_rx_out[124] = \<const0> ;
  assign gtwiz_userdata_rx_out[123] = \<const0> ;
  assign gtwiz_userdata_rx_out[122] = \<const0> ;
  assign gtwiz_userdata_rx_out[121] = \<const0> ;
  assign gtwiz_userdata_rx_out[120] = \<const0> ;
  assign gtwiz_userdata_rx_out[119] = \<const0> ;
  assign gtwiz_userdata_rx_out[118] = \<const0> ;
  assign gtwiz_userdata_rx_out[117] = \<const0> ;
  assign gtwiz_userdata_rx_out[116] = \<const0> ;
  assign gtwiz_userdata_rx_out[115] = \<const0> ;
  assign gtwiz_userdata_rx_out[114] = \<const0> ;
  assign gtwiz_userdata_rx_out[113] = \<const0> ;
  assign gtwiz_userdata_rx_out[112] = \<const0> ;
  assign gtwiz_userdata_rx_out[111] = \<const0> ;
  assign gtwiz_userdata_rx_out[110] = \<const0> ;
  assign gtwiz_userdata_rx_out[109] = \<const0> ;
  assign gtwiz_userdata_rx_out[108] = \<const0> ;
  assign gtwiz_userdata_rx_out[107] = \<const0> ;
  assign gtwiz_userdata_rx_out[106] = \<const0> ;
  assign gtwiz_userdata_rx_out[105] = \<const0> ;
  assign gtwiz_userdata_rx_out[104] = \<const0> ;
  assign gtwiz_userdata_rx_out[103] = \<const0> ;
  assign gtwiz_userdata_rx_out[102] = \<const0> ;
  assign gtwiz_userdata_rx_out[101] = \<const0> ;
  assign gtwiz_userdata_rx_out[100] = \<const0> ;
  assign gtwiz_userdata_rx_out[99] = \<const0> ;
  assign gtwiz_userdata_rx_out[98] = \<const0> ;
  assign gtwiz_userdata_rx_out[97] = \<const0> ;
  assign gtwiz_userdata_rx_out[96] = \<const0> ;
  assign gtwiz_userdata_rx_out[95] = \<const0> ;
  assign gtwiz_userdata_rx_out[94] = \<const0> ;
  assign gtwiz_userdata_rx_out[93] = \<const0> ;
  assign gtwiz_userdata_rx_out[92] = \<const0> ;
  assign gtwiz_userdata_rx_out[91] = \<const0> ;
  assign gtwiz_userdata_rx_out[90] = \<const0> ;
  assign gtwiz_userdata_rx_out[89] = \<const0> ;
  assign gtwiz_userdata_rx_out[88] = \<const0> ;
  assign gtwiz_userdata_rx_out[87] = \<const0> ;
  assign gtwiz_userdata_rx_out[86] = \<const0> ;
  assign gtwiz_userdata_rx_out[85] = \<const0> ;
  assign gtwiz_userdata_rx_out[84] = \<const0> ;
  assign gtwiz_userdata_rx_out[83] = \<const0> ;
  assign gtwiz_userdata_rx_out[82] = \<const0> ;
  assign gtwiz_userdata_rx_out[81] = \<const0> ;
  assign gtwiz_userdata_rx_out[80] = \<const0> ;
  assign gtwiz_userdata_rx_out[79] = \<const0> ;
  assign gtwiz_userdata_rx_out[78] = \<const0> ;
  assign gtwiz_userdata_rx_out[77] = \<const0> ;
  assign gtwiz_userdata_rx_out[76] = \<const0> ;
  assign gtwiz_userdata_rx_out[75] = \<const0> ;
  assign gtwiz_userdata_rx_out[74] = \<const0> ;
  assign gtwiz_userdata_rx_out[73] = \<const0> ;
  assign gtwiz_userdata_rx_out[72] = \<const0> ;
  assign gtwiz_userdata_rx_out[71] = \<const0> ;
  assign gtwiz_userdata_rx_out[70] = \<const0> ;
  assign gtwiz_userdata_rx_out[69] = \<const0> ;
  assign gtwiz_userdata_rx_out[68] = \<const0> ;
  assign gtwiz_userdata_rx_out[67] = \<const0> ;
  assign gtwiz_userdata_rx_out[66] = \<const0> ;
  assign gtwiz_userdata_rx_out[65] = \<const0> ;
  assign gtwiz_userdata_rx_out[64] = \<const0> ;
  assign gtwiz_userdata_rx_out[63] = \<const0> ;
  assign gtwiz_userdata_rx_out[62] = \<const0> ;
  assign gtwiz_userdata_rx_out[61] = \<const0> ;
  assign gtwiz_userdata_rx_out[60] = \<const0> ;
  assign gtwiz_userdata_rx_out[59] = \<const0> ;
  assign gtwiz_userdata_rx_out[58] = \<const0> ;
  assign gtwiz_userdata_rx_out[57] = \<const0> ;
  assign gtwiz_userdata_rx_out[56] = \<const0> ;
  assign gtwiz_userdata_rx_out[55] = \<const0> ;
  assign gtwiz_userdata_rx_out[54] = \<const0> ;
  assign gtwiz_userdata_rx_out[53] = \<const0> ;
  assign gtwiz_userdata_rx_out[52] = \<const0> ;
  assign gtwiz_userdata_rx_out[51] = \<const0> ;
  assign gtwiz_userdata_rx_out[50] = \<const0> ;
  assign gtwiz_userdata_rx_out[49] = \<const0> ;
  assign gtwiz_userdata_rx_out[48] = \<const0> ;
  assign gtwiz_userdata_rx_out[47] = \<const0> ;
  assign gtwiz_userdata_rx_out[46] = \<const0> ;
  assign gtwiz_userdata_rx_out[45] = \<const0> ;
  assign gtwiz_userdata_rx_out[44] = \<const0> ;
  assign gtwiz_userdata_rx_out[43] = \<const0> ;
  assign gtwiz_userdata_rx_out[42] = \<const0> ;
  assign gtwiz_userdata_rx_out[41] = \<const0> ;
  assign gtwiz_userdata_rx_out[40] = \<const0> ;
  assign gtwiz_userdata_rx_out[39] = \<const0> ;
  assign gtwiz_userdata_rx_out[38] = \<const0> ;
  assign gtwiz_userdata_rx_out[37] = \<const0> ;
  assign gtwiz_userdata_rx_out[36] = \<const0> ;
  assign gtwiz_userdata_rx_out[35] = \<const0> ;
  assign gtwiz_userdata_rx_out[34] = \<const0> ;
  assign gtwiz_userdata_rx_out[33] = \<const0> ;
  assign gtwiz_userdata_rx_out[32] = \<const0> ;
  assign gtwiz_userdata_rx_out[31] = \<const0> ;
  assign gtwiz_userdata_rx_out[30] = \<const0> ;
  assign gtwiz_userdata_rx_out[29] = \<const0> ;
  assign gtwiz_userdata_rx_out[28] = \<const0> ;
  assign gtwiz_userdata_rx_out[27] = \<const0> ;
  assign gtwiz_userdata_rx_out[26] = \<const0> ;
  assign gtwiz_userdata_rx_out[25] = \<const0> ;
  assign gtwiz_userdata_rx_out[24] = \<const0> ;
  assign gtwiz_userdata_rx_out[23] = \<const0> ;
  assign gtwiz_userdata_rx_out[22] = \<const0> ;
  assign gtwiz_userdata_rx_out[21] = \<const0> ;
  assign gtwiz_userdata_rx_out[20] = \<const0> ;
  assign gtwiz_userdata_rx_out[19] = \<const0> ;
  assign gtwiz_userdata_rx_out[18] = \<const0> ;
  assign gtwiz_userdata_rx_out[17] = \<const0> ;
  assign gtwiz_userdata_rx_out[16] = \<const0> ;
  assign gtwiz_userdata_rx_out[15] = \<const0> ;
  assign gtwiz_userdata_rx_out[14] = \<const0> ;
  assign gtwiz_userdata_rx_out[13] = \<const0> ;
  assign gtwiz_userdata_rx_out[12] = \<const0> ;
  assign gtwiz_userdata_rx_out[11] = \<const0> ;
  assign gtwiz_userdata_rx_out[10] = \<const0> ;
  assign gtwiz_userdata_rx_out[9] = \<const0> ;
  assign gtwiz_userdata_rx_out[8] = \<const0> ;
  assign gtwiz_userdata_rx_out[7] = \<const0> ;
  assign gtwiz_userdata_rx_out[6] = \<const0> ;
  assign gtwiz_userdata_rx_out[5] = \<const0> ;
  assign gtwiz_userdata_rx_out[4] = \<const0> ;
  assign gtwiz_userdata_rx_out[3] = \<const0> ;
  assign gtwiz_userdata_rx_out[2] = \<const0> ;
  assign gtwiz_userdata_rx_out[1] = \<const0> ;
  assign gtwiz_userdata_rx_out[0] = \<const0> ;
  assign gtytxn_out[0] = \<const0> ;
  assign gtytxp_out[0] = \<const0> ;
  assign powerpresent_out[0] = \<const0> ;
  assign rxckcaldone_out[0] = \<const0> ;
  assign rxlfpstresetdet_out[0] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[0] = \<const0> ;
  assign rxlfpsu3wakedet_out[0] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txdccdone_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt_gtwizard_gthe3 \gen_gtwizard_gthe3_top.pcie3_ultrascale_0_gt_gtwizard_gthe3_inst 
       (.bufgtce_out(bufgtce_out),
        .bufgtcemask_out(bufgtcemask_out),
        .bufgtdiv_out(bufgtdiv_out),
        .bufgtreset_out(bufgtreset_out),
        .bufgtrstmask_out(bufgtrstmask_out),
        .cfgreset_in(cfgreset_in),
        .clkrsvd0_in(clkrsvd0_in),
        .clkrsvd1_in(clkrsvd1_in),
        .cpllfbclklost_out(cpllfbclklost_out),
        .cplllock_out(cplllock_out),
        .cplllockdetclk_in(cplllockdetclk_in),
        .cplllocken_in(cplllocken_in),
        .cpllpd_in(cpllpd_in),
        .cpllrefclklost_out(cpllrefclklost_out),
        .cpllrefclksel_in(cpllrefclksel_in),
        .cpllreset_in(cpllreset_in),
        .dmonfiforeset_in(dmonfiforeset_in),
        .dmonitorclk_in(dmonitorclk_in),
        .dmonitorout_out(dmonitorout_out),
        .drpaddr_common_in(drpaddr_common_in),
        .drpaddr_in(drpaddr_in),
        .drpclk_common_in(drpclk_common_in),
        .drpclk_in(drpclk_in),
        .drpdi_common_in(drpdi_common_in),
        .drpdi_in(drpdi_in),
        .drpdo_common_out(drpdo_common_out),
        .drpdo_out(drpdo_out),
        .drpen_common_in(drpen_common_in),
        .drpen_in(drpen_in),
        .drprdy_common_out(drprdy_common_out),
        .drprdy_out(drprdy_out),
        .drpwe_common_in(drpwe_common_in),
        .drpwe_in(drpwe_in),
        .evoddphicaldone_in(evoddphicaldone_in),
        .evoddphicalstart_in(evoddphicalstart_in),
        .evoddphidrden_in(evoddphidrden_in),
        .evoddphidwren_in(evoddphidwren_in),
        .evoddphixrden_in(evoddphixrden_in),
        .evoddphixwren_in(evoddphixwren_in),
        .eyescandataerror_out(eyescandataerror_out),
        .eyescanmode_in(eyescanmode_in),
        .eyescanreset_in(eyescanreset_in),
        .eyescantrigger_in(eyescantrigger_in),
        .gtgrefclk0_in(gtgrefclk0_in),
        .gtgrefclk1_in(gtgrefclk1_in),
        .gtgrefclk_in(gtgrefclk_in),
        .gthrxn_in(gthrxn_in),
        .gthrxp_in(gthrxp_in),
        .gthtxn_out(gthtxn_out),
        .gthtxp_out(gthtxp_out),
        .gtnorthrefclk00_in(gtnorthrefclk00_in),
        .gtnorthrefclk01_in(gtnorthrefclk01_in),
        .gtnorthrefclk0_in(gtnorthrefclk0_in),
        .gtnorthrefclk10_in(gtnorthrefclk10_in),
        .gtnorthrefclk11_in(gtnorthrefclk11_in),
        .gtnorthrefclk1_in(gtnorthrefclk1_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(gtrefclk00_in),
        .gtrefclk01_in(gtrefclk01_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtrefclk10_in(gtrefclk10_in),
        .gtrefclk11_in(gtrefclk11_in),
        .gtrefclk1_in(gtrefclk1_in),
        .gtrefclkmonitor_out(gtrefclkmonitor_out),
        .gtresetsel_in(gtresetsel_in),
        .gtrsvd_in(gtrsvd_in),
        .gtrxreset_in(gtrxreset_in),
        .gtsouthrefclk00_in(gtsouthrefclk00_in),
        .gtsouthrefclk01_in(gtsouthrefclk01_in),
        .gtsouthrefclk0_in(gtsouthrefclk0_in),
        .gtsouthrefclk10_in(gtsouthrefclk10_in),
        .gtsouthrefclk11_in(gtsouthrefclk11_in),
        .gtsouthrefclk1_in(gtsouthrefclk1_in),
        .gttxreset_in(gttxreset_in),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in(lpbkrxtxseren_in),
        .lpbktxrxseren_in(lpbktxrxseren_in),
        .pcieeqrxeqadaptdone_in(pcieeqrxeqadaptdone_in),
        .pcierategen3_out(pcierategen3_out),
        .pcierateidle_out(pcierateidle_out),
        .pcierateqpllpd_out(pcierateqpllpd_out),
        .pcierateqpllreset_out(pcierateqpllreset_out),
        .pcierstidle_in(pcierstidle_in),
        .pciersttxsyncstart_in(pciersttxsyncstart_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out(pcieusergen3rdy_out),
        .pcieuserphystatusrst_out(pcieuserphystatusrst_out),
        .pcieuserratedone_in(pcieuserratedone_in),
        .pcieuserratestart_out(pcieuserratestart_out),
        .pcsrsvdin2_in(pcsrsvdin2_in),
        .pcsrsvdin_in(pcsrsvdin_in),
        .pcsrsvdout_out(pcsrsvdout_out),
        .phystatus_out(phystatus_out),
        .pinrsrvdas_out(pinrsrvdas_out),
        .pmarsvdin_in(pmarsvdin_in),
        .pmarsvdout0_out(pmarsvdout0_out),
        .pmarsvdout1_out(pmarsvdout1_out),
        .qpll0clkrsvd0_in(qpll0clkrsvd0_in),
        .qpll0clkrsvd1_in(qpll0clkrsvd1_in),
        .qpll0fbclklost_out(qpll0fbclklost_out),
        .qpll0lock_out(qpll0lock_out),
        .qpll0lockdetclk_in(qpll0lockdetclk_in),
        .qpll0locken_in(qpll0locken_in),
        .qpll0outclk_out(qpll0outclk_out),
        .qpll0outrefclk_out(qpll0outrefclk_out),
        .qpll0pd_in(qpll0pd_in),
        .qpll0refclklost_out(qpll0refclklost_out),
        .qpll0refclksel_in(qpll0refclksel_in),
        .qpll0reset_in(qpll0reset_in),
        .qpll1clkrsvd0_in(qpll1clkrsvd0_in),
        .qpll1clkrsvd1_in(qpll1clkrsvd1_in),
        .qpll1fbclklost_out(qpll1fbclklost_out),
        .qpll1lock_out(qpll1lock_out),
        .qpll1lockdetclk_in(qpll1lockdetclk_in),
        .qpll1locken_in(qpll1locken_in),
        .qpll1outclk_out(qpll1outclk_out),
        .qpll1outrefclk_out(qpll1outrefclk_out),
        .qpll1pd_in(qpll1pd_in),
        .qpll1refclklost_out(qpll1refclklost_out),
        .qpll1refclksel_in(qpll1refclksel_in),
        .qpll1reset_in(qpll1reset_in),
        .qplldmonitor0_out(qplldmonitor0_out),
        .qplldmonitor1_out(qplldmonitor1_out),
        .qpllrsvd1_in(qpllrsvd1_in),
        .qpllrsvd2_in(qpllrsvd2_in),
        .qpllrsvd3_in(qpllrsvd3_in),
        .qpllrsvd4_in(qpllrsvd4_in),
        .refclkoutmonitor0_out(refclkoutmonitor0_out),
        .refclkoutmonitor1_out(refclkoutmonitor1_out),
        .resetexception_out(resetexception_out),
        .resetovrd_in(resetovrd_in),
        .rstclkentx_in(rstclkentx_in),
        .rx8b10ben_in(rx8b10ben_in),
        .rxbufreset_in(rxbufreset_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxbyteisaligned_out(rxbyteisaligned_out),
        .rxbyterealign_out(rxbyterealign_out),
        .rxcdrfreqreset_in(rxcdrfreqreset_in),
        .rxcdrhold_in(rxcdrhold_in),
        .rxcdrlock_out(rxcdrlock_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxcdrphdone_out(rxcdrphdone_out),
        .rxcdrreset_in(rxcdrreset_in),
        .rxcdrresetrsv_in(rxcdrresetrsv_in),
        .rxchanbondseq_out(rxchanbondseq_out),
        .rxchanisaligned_out(rxchanisaligned_out),
        .rxchanrealign_out(rxchanrealign_out),
        .rxchbonden_in(rxchbonden_in),
        .rxchbondi_in(rxchbondi_in),
        .rxchbondlevel_in(rxchbondlevel_in),
        .rxchbondmaster_in(rxchbondmaster_in),
        .rxchbondo_out(rxchbondo_out),
        .rxchbondslave_in(rxchbondslave_in),
        .rxclkcorcnt_out(rxclkcorcnt_out),
        .rxcominitdet_out(rxcominitdet_out),
        .rxcommadet_out(rxcommadet_out),
        .rxcommadeten_in(rxcommadeten_in),
        .rxcomsasdet_out(rxcomsasdet_out),
        .rxcomwakedet_out(rxcomwakedet_out),
        .rxctrl0_out(rxctrl0_out),
        .rxctrl1_out(rxctrl1_out),
        .rxctrl2_out(rxctrl2_out),
        .rxctrl3_out(rxctrl3_out),
        .rxdata_out(rxdata_out),
        .rxdataextendrsvd_out(rxdataextendrsvd_out),
        .rxdatavalid_out(rxdatavalid_out),
        .rxdfeagcctrl_in(rxdfeagcctrl_in),
        .rxdfeagchold_in(rxdfeagchold_in),
        .rxdfeagcovrden_in(rxdfeagcovrden_in),
        .rxdfelfhold_in(rxdfelfhold_in),
        .rxdfelfovrden_in(rxdfelfovrden_in),
        .rxdfelpmreset_in(rxdfelpmreset_in),
        .rxdfetap10hold_in(rxdfetap10hold_in),
        .rxdfetap10ovrden_in(rxdfetap10ovrden_in),
        .rxdfetap11hold_in(rxdfetap11hold_in),
        .rxdfetap11ovrden_in(rxdfetap11ovrden_in),
        .rxdfetap12hold_in(rxdfetap12hold_in),
        .rxdfetap12ovrden_in(rxdfetap12ovrden_in),
        .rxdfetap13hold_in(rxdfetap13hold_in),
        .rxdfetap13ovrden_in(rxdfetap13ovrden_in),
        .rxdfetap14hold_in(rxdfetap14hold_in),
        .rxdfetap14ovrden_in(rxdfetap14ovrden_in),
        .rxdfetap15hold_in(rxdfetap15hold_in),
        .rxdfetap15ovrden_in(rxdfetap15ovrden_in),
        .rxdfetap2hold_in(rxdfetap2hold_in),
        .rxdfetap2ovrden_in(rxdfetap2ovrden_in),
        .rxdfetap3hold_in(rxdfetap3hold_in),
        .rxdfetap3ovrden_in(rxdfetap3ovrden_in),
        .rxdfetap4hold_in(rxdfetap4hold_in),
        .rxdfetap4ovrden_in(rxdfetap4ovrden_in),
        .rxdfetap5hold_in(rxdfetap5hold_in),
        .rxdfetap5ovrden_in(rxdfetap5ovrden_in),
        .rxdfetap6hold_in(rxdfetap6hold_in),
        .rxdfetap6ovrden_in(rxdfetap6ovrden_in),
        .rxdfetap7hold_in(rxdfetap7hold_in),
        .rxdfetap7ovrden_in(rxdfetap7ovrden_in),
        .rxdfetap8hold_in(rxdfetap8hold_in),
        .rxdfetap8ovrden_in(rxdfetap8ovrden_in),
        .rxdfetap9hold_in(rxdfetap9hold_in),
        .rxdfetap9ovrden_in(rxdfetap9ovrden_in),
        .rxdfeuthold_in(rxdfeuthold_in),
        .rxdfeutovrden_in(rxdfeutovrden_in),
        .rxdfevphold_in(rxdfevphold_in),
        .rxdfevpovrden_in(rxdfevpovrden_in),
        .rxdfevsen_in(rxdfevsen_in),
        .rxdfexyden_in(rxdfexyden_in),
        .rxdlybypass_in(rxdlybypass_in),
        .rxdlyen_in(rxdlyen_in),
        .rxdlyovrden_in(rxdlyovrden_in),
        .rxdlysreset_in(rxdlysreset_in),
        .rxdlysresetdone_out(rxdlysresetdone_out),
        .rxelecidle_out(rxelecidle_out),
        .rxelecidlemode_in(rxelecidlemode_in),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxlatclk_in(rxlatclk_in),
        .rxlpmen_in(rxlpmen_in),
        .rxlpmgchold_in(rxlpmgchold_in),
        .rxlpmgcovrden_in(rxlpmgcovrden_in),
        .rxlpmhfhold_in(rxlpmhfhold_in),
        .rxlpmhfovrden_in(rxlpmhfovrden_in),
        .rxlpmlfhold_in(rxlpmlfhold_in),
        .rxlpmlfklovrden_in(rxlpmlfklovrden_in),
        .rxlpmoshold_in(rxlpmoshold_in),
        .rxlpmosovrden_in(rxlpmosovrden_in),
        .rxmcommaalignen_in(rxmcommaalignen_in),
        .rxmonitorout_out(rxmonitorout_out),
        .rxmonitorsel_in(rxmonitorsel_in),
        .rxoobreset_in(rxoobreset_in),
        .rxoscalreset_in(rxoscalreset_in),
        .rxoshold_in(rxoshold_in),
        .rxosintcfg_in(rxosintcfg_in),
        .rxosintdone_out(rxosintdone_out),
        .rxosinten_in(rxosinten_in),
        .rxosinthold_in(rxosinthold_in),
        .rxosintovrden_in(rxosintovrden_in),
        .rxosintstarted_out(rxosintstarted_out),
        .rxosintstrobe_in(rxosintstrobe_in),
        .rxosintstrobedone_out(rxosintstrobedone_out),
        .rxosintstrobestarted_out(rxosintstrobestarted_out),
        .rxosinttestovrden_in(rxosinttestovrden_in),
        .rxosovrden_in(rxosovrden_in),
        .rxoutclk_out(rxoutclk_out),
        .rxoutclkfabric_out(rxoutclkfabric_out),
        .rxoutclkpcs_out(rxoutclkpcs_out),
        .rxoutclksel_in(rxoutclksel_in),
        .rxpcommaalignen_in(rxpcommaalignen_in),
        .rxpcsreset_in(rxpcsreset_in),
        .rxpd_in(rxpd_in),
        .rxphalign_in(rxphalign_in),
        .rxphaligndone_out(rxphaligndone_out),
        .rxphalignen_in(rxphalignen_in),
        .rxphalignerr_out(rxphalignerr_out),
        .rxphdlypd_in(rxphdlypd_in),
        .rxphdlyreset_in(rxphdlyreset_in),
        .rxphovrden_in(rxphovrden_in),
        .rxpllclksel_in(rxpllclksel_in),
        .rxpmareset_in(rxpmareset_in),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in(rxprbscntreset_in),
        .rxprbserr_out(rxprbserr_out),
        .rxprbslocked_out(rxprbslocked_out),
        .rxprbssel_in(rxprbssel_in),
        .rxprgdivresetdone_out(rxprgdivresetdone_out),
        .rxprogdivreset_in(rxprogdivreset_in),
        .rxqpien_in(rxqpien_in),
        .rxqpisenn_out(rxqpisenn_out),
        .rxqpisenp_out(rxqpisenp_out),
        .rxrate_in(rxrate_in),
        .rxratedone_out(rxratedone_out),
        .rxratemode_in(rxratemode_in),
        .rxrecclk0_sel_out(rxrecclk0_sel_out),
        .rxrecclk1_sel_out(rxrecclk1_sel_out),
        .rxrecclkout_out(rxrecclkout_out),
        .rxresetdone_out(rxresetdone_out),
        .rxslide_in(rxslide_in),
        .rxsliderdy_out(rxsliderdy_out),
        .rxslipdone_out(rxslipdone_out),
        .rxslipoutclk_in(rxslipoutclk_in),
        .rxslipoutclkrdy_out(rxslipoutclkrdy_out),
        .rxslippma_in(rxslippma_in),
        .rxslippmardy_out(rxslippmardy_out),
        .rxstartofseq_out(rxstartofseq_out),
        .rxstatus_out(rxstatus_out),
        .rxsyncallin_in(rxsyncallin_in),
        .rxsyncdone_out(rxsyncdone_out),
        .rxsyncin_in(rxsyncin_in),
        .rxsyncmode_in(rxsyncmode_in),
        .rxsyncout_out(rxsyncout_out),
        .rxsysclksel_in(rxsysclksel_in),
        .rxuserrdy_in(rxuserrdy_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .rxvalid_out(rxvalid_out),
        .sigvalidclk_in(sigvalidclk_in),
        .tx8b10bbypass_in(tx8b10bbypass_in),
        .tx8b10ben_in(tx8b10ben_in),
        .txbufdiffctrl_in(txbufdiffctrl_in),
        .txbufstatus_out(txbufstatus_out),
        .txcomfinish_out(txcomfinish_out),
        .txcominit_in(txcominit_in),
        .txcomsas_in(txcomsas_in),
        .txcomwake_in(txcomwake_in),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdataextendrsvd_in(txdataextendrsvd_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txdiffctrl_in(txdiffctrl_in),
        .txdiffpd_in(txdiffpd_in),
        .txdlybypass_in(txdlybypass_in),
        .txdlyen_in(txdlyen_in),
        .txdlyhold_in(txdlyhold_in),
        .txdlyovrden_in(txdlyovrden_in),
        .txdlysreset_in(txdlysreset_in),
        .txdlysresetdone_out(txdlysresetdone_out),
        .txdlyupdown_in(txdlyupdown_in),
        .txelecidle_in(txelecidle_in),
        .txheader_in(txheader_in),
        .txinhibit_in(txinhibit_in),
        .txlatclk_in(txlatclk_in),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in(txmargin_in),
        .txoutclk_out(txoutclk_out),
        .txoutclkfabric_out(txoutclkfabric_out),
        .txoutclkpcs_out(txoutclkpcs_out),
        .txoutclksel_in(txoutclksel_in),
        .txpcsreset_in(txpcsreset_in),
        .txpd_in(txpd_in),
        .txpdelecidlemode_in(txpdelecidlemode_in),
        .txphalign_in(txphalign_in),
        .txphaligndone_out(txphaligndone_out),
        .txphalignen_in(txphalignen_in),
        .txphdlypd_in(txphdlypd_in),
        .txphdlyreset_in(txphdlyreset_in),
        .txphdlytstclk_in(txphdlytstclk_in),
        .txphinit_in(txphinit_in),
        .txphinitdone_out(txphinitdone_out),
        .txphovrden_in(txphovrden_in),
        .txpippmen_in(txpippmen_in),
        .txpippmovrden_in(txpippmovrden_in),
        .txpippmpd_in(txpippmpd_in),
        .txpippmsel_in(txpippmsel_in),
        .txpippmstepsize_in(txpippmstepsize_in),
        .txpisopd_in(txpisopd_in),
        .txpllclksel_in(txpllclksel_in),
        .txpmareset_in(txpmareset_in),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in(txpolarity_in),
        .txpostcursor_in(txpostcursor_in),
        .txpostcursorinv_in(txpostcursorinv_in),
        .txprbsforceerr_in(txprbsforceerr_in),
        .txprbssel_in(txprbssel_in),
        .txprecursor_in(txprecursor_in),
        .txprecursorinv_in(txprecursorinv_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_in(txprogdivreset_in),
        .txqpibiasen_in(txqpibiasen_in),
        .txqpisenn_out(txqpisenn_out),
        .txqpisenp_out(txqpisenp_out),
        .txqpistrongpdown_in(txqpistrongpdown_in),
        .txqpiweakpup_in(txqpiweakpup_in),
        .txrate_in(txrate_in),
        .txratedone_out(txratedone_out),
        .txratemode_in(txratemode_in),
        .txresetdone_out(txresetdone_out),
        .txsequence_in(txsequence_in),
        .txswing_in(txswing_in),
        .txsyncallin_in(txsyncallin_in),
        .txsyncdone_out(txsyncdone_out),
        .txsyncin_in(txsyncin_in),
        .txsyncmode_in(txsyncmode_in),
        .txsyncout_out(txsyncout_out),
        .txsysclksel_in(txsysclksel_in),
        .txuserrdy_in(txuserrdy_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_gtwizard_top" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_gtwizard_top
   (int_qpll1lock_out,
    int_qpll1outclk_out,
    int_qpll1outrefclk_out,
    CLK_PCLK_CEMASK,
    gt_bufgtdiv,
    CLK_PCLK_MASK,
    cplllock_out,
    gt_dmonitorout,
    gt_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    gt_gtpowergood,
    gt_pcierateidle,
    pciesynctxsyncdone_out,
    gt_pcieuserratestart,
    gt_phystatus,
    gt_rxbufstatus,
    gt_rxcdrlock,
    gt_rxcommadet,
    rxctrl0_out,
    rxdata_out,
    gt_rxdlysresetdone,
    rxelecidle_out,
    gt_rxphaligndone,
    gt_rxpmaresetdone,
    gt_rxprbserr,
    gt_rxresetdone,
    gt_rxstatus,
    gt_rxsyncdone,
    gt_rxvalid,
    gt_txdlysresetdone,
    CLK_USERCLK_IN,
    gt_txphaligndone,
    gt_txphinitdone,
    txprgdivresetdone_out,
    gt_txresetdone,
    CLK_PCLK_CE,
    CLK_PCLK_CLR,
    sys_clk_gt,
    Q,
    in0,
    sys_clk,
    pci_exp_rxn,
    pci_exp_rxp,
    gtrxreset_in,
    gt_loopback,
    CLK_USERCLK_CEMASK,
    pciersttxsyncstart_in,
    gt_pcieuserratedone,
    rxcdrhold_in,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,
    rxpolarity_in,
    gt_rxprbscntreset,
    gt_txprbssel,
    rxprogdivreset_in,
    rxuserrdy_in,
    CLK_PCLK,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdeemph_in,
    txdetectrx_in,
    gt_txelecidle,
    gt_txinhibit,
    txmaincursor_in,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    out,
    txpostcursor_in,
    gt_txprbsforceerr,
    txprecursor_in,
    txswing_in,
    phy_rrst_n,
    rst_qpll1pd,
    rst_qpll1reset,
    lopt,
    lopt_1);
  output [1:0]int_qpll1lock_out;
  output [1:0]int_qpll1outclk_out;
  output [1:0]int_qpll1outrefclk_out;
  output CLK_PCLK_CEMASK;
  output [8:0]gt_bufgtdiv;
  output CLK_PCLK_MASK;
  output [7:0]cplllock_out;
  output [135:0]gt_dmonitorout;
  output [7:0]gt_eyescandataerror;
  output [7:0]pci_exp_txn;
  output [7:0]pci_exp_txp;
  output [7:0]gt_gtpowergood;
  output [7:0]gt_pcierateidle;
  output [7:0]pciesynctxsyncdone_out;
  output [7:0]gt_pcieuserratestart;
  output [7:0]gt_phystatus;
  output [23:0]gt_rxbufstatus;
  output [7:0]gt_rxcdrlock;
  output [7:0]gt_rxcommadet;
  output [47:0]rxctrl0_out;
  output [255:0]rxdata_out;
  output [7:0]gt_rxdlysresetdone;
  output [7:0]rxelecidle_out;
  output [7:0]gt_rxphaligndone;
  output [7:0]gt_rxpmaresetdone;
  output [7:0]gt_rxprbserr;
  output [7:0]gt_rxresetdone;
  output [23:0]gt_rxstatus;
  output [7:0]gt_rxsyncdone;
  output [7:0]gt_rxvalid;
  output [7:0]gt_txdlysresetdone;
  output CLK_USERCLK_IN;
  output [7:0]gt_txphaligndone;
  output [7:0]gt_txphinitdone;
  output [7:0]txprgdivresetdone_out;
  output [7:0]gt_txresetdone;
  output CLK_PCLK_CE;
  output CLK_PCLK_CLR;
  input sys_clk_gt;
  input [1:0]Q;
  input [0:0]in0;
  input sys_clk;
  input [7:0]pci_exp_rxn;
  input [7:0]pci_exp_rxp;
  input [0:0]gtrxreset_in;
  input [23:0]gt_loopback;
  input CLK_USERCLK_CEMASK;
  input [0:0]pciersttxsyncstart_in;
  input [7:0]gt_pcieuserratedone;
  input [0:0]rxcdrhold_in;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  input [7:0]rxpolarity_in;
  input [7:0]gt_rxprbscntreset;
  input [31:0]gt_txprbssel;
  input [0:0]rxprogdivreset_in;
  input [0:0]rxuserrdy_in;
  input CLK_PCLK;
  input [31:0]txctrl0_in;
  input [7:0]txctrl1_in;
  input [15:0]txctrl2_in;
  input [255:0]txdata_in;
  input [0:0]txdeemph_in;
  input [0:0]txdetectrx_in;
  input [7:0]gt_txelecidle;
  input [7:0]gt_txinhibit;
  input [55:0]txmaincursor_in;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  input [2:0]out;
  input [39:0]txpostcursor_in;
  input [7:0]gt_txprbsforceerr;
  input [39:0]txprecursor_in;
  input [0:0]txswing_in;
  input phy_rrst_n;
  input rst_qpll1pd;
  input rst_qpll1reset;
  output lopt;
  output lopt_1;

  wire CLK_PCLK;
  wire CLK_PCLK_CE;
  wire CLK_PCLK_CEMASK;
  wire CLK_PCLK_CLR;
  wire CLK_PCLK_MASK;
  wire CLK_USERCLK_CEMASK;
  wire CLK_USERCLK_IN;
  wire [1:0]Q;
  wire [7:0]cplllock_out;
  wire gt_bufgtce;
  wire [8:0]gt_bufgtdiv;
  wire gt_bufgtreset;
  wire [135:0]gt_dmonitorout;
  wire [7:0]gt_eyescandataerror;
  wire [7:0]gt_gtpowergood;
  wire [23:0]gt_loopback;
  wire [7:0]gt_pcierateidle;
  wire [8:0]gt_pcierateqpllpd;
  wire [8:0]gt_pcierateqpllreset;
  wire [7:0]gt_pcieuserratedone;
  wire [7:0]gt_pcieuserratestart;
  wire [7:0]gt_phystatus;
  wire [23:0]gt_rxbufstatus;
  wire [7:0]gt_rxcdrlock;
  wire [7:0]gt_rxcommadet;
  wire [7:0]gt_rxdlysresetdone;
  wire [7:0]gt_rxphaligndone;
  wire [7:0]gt_rxpmaresetdone;
  wire [7:0]gt_rxprbscntreset;
  wire [7:0]gt_rxprbserr;
  wire [7:0]gt_rxprogdivresetdone;
  wire [7:0]gt_rxresetdone;
  wire [23:0]gt_rxstatus;
  wire [7:0]gt_rxsyncdone;
  wire [7:0]gt_rxvalid;
  wire [7:0]gt_txdlysresetdone;
  wire [7:0]gt_txelecidle;
  wire [7:0]gt_txinhibit;
  wire [7:0]gt_txphaligndone;
  wire [7:0]gt_txphinitdone;
  wire [7:0]gt_txprbsforceerr;
  wire [31:0]gt_txprbssel;
  wire [7:0]gt_txresetdone;
  wire [0:0]gtrxreset_in;
  wire [0:0]in0;
  wire [1:0]int_qpll1lock_out;
  wire [1:0]int_qpll1outclk_out;
  wire [1:0]int_qpll1outrefclk_out;
  wire lopt;
  wire lopt_1;
  wire [2:0]out;
  wire [7:0]pci_exp_rxn;
  wire [7:0]pci_exp_rxp;
  wire [7:0]pci_exp_txn;
  wire [7:0]pci_exp_txp;
  wire pcie3_ultrascale_0_gt_i_i_15_n_0;
  wire pcie3_ultrascale_0_gt_i_i_5_n_0;
  wire pcie3_ultrascale_0_gt_i_n_10;
  wire pcie3_ultrascale_0_gt_i_n_100;
  wire pcie3_ultrascale_0_gt_i_n_101;
  wire pcie3_ultrascale_0_gt_i_n_102;
  wire pcie3_ultrascale_0_gt_i_n_103;
  wire pcie3_ultrascale_0_gt_i_n_104;
  wire pcie3_ultrascale_0_gt_i_n_105;
  wire pcie3_ultrascale_0_gt_i_n_106;
  wire pcie3_ultrascale_0_gt_i_n_107;
  wire pcie3_ultrascale_0_gt_i_n_108;
  wire pcie3_ultrascale_0_gt_i_n_109;
  wire pcie3_ultrascale_0_gt_i_n_11;
  wire pcie3_ultrascale_0_gt_i_n_110;
  wire pcie3_ultrascale_0_gt_i_n_111;
  wire pcie3_ultrascale_0_gt_i_n_112;
  wire pcie3_ultrascale_0_gt_i_n_113;
  wire pcie3_ultrascale_0_gt_i_n_114;
  wire pcie3_ultrascale_0_gt_i_n_115;
  wire pcie3_ultrascale_0_gt_i_n_116;
  wire pcie3_ultrascale_0_gt_i_n_117;
  wire pcie3_ultrascale_0_gt_i_n_118;
  wire pcie3_ultrascale_0_gt_i_n_119;
  wire pcie3_ultrascale_0_gt_i_n_12;
  wire pcie3_ultrascale_0_gt_i_n_120;
  wire pcie3_ultrascale_0_gt_i_n_121;
  wire pcie3_ultrascale_0_gt_i_n_122;
  wire pcie3_ultrascale_0_gt_i_n_123;
  wire pcie3_ultrascale_0_gt_i_n_124;
  wire pcie3_ultrascale_0_gt_i_n_125;
  wire pcie3_ultrascale_0_gt_i_n_126;
  wire pcie3_ultrascale_0_gt_i_n_127;
  wire pcie3_ultrascale_0_gt_i_n_129;
  wire pcie3_ultrascale_0_gt_i_n_13;
  wire pcie3_ultrascale_0_gt_i_n_130;
  wire pcie3_ultrascale_0_gt_i_n_131;
  wire pcie3_ultrascale_0_gt_i_n_132;
  wire pcie3_ultrascale_0_gt_i_n_133;
  wire pcie3_ultrascale_0_gt_i_n_134;
  wire pcie3_ultrascale_0_gt_i_n_135;
  wire pcie3_ultrascale_0_gt_i_n_136;
  wire pcie3_ultrascale_0_gt_i_n_137;
  wire pcie3_ultrascale_0_gt_i_n_138;
  wire pcie3_ultrascale_0_gt_i_n_139;
  wire pcie3_ultrascale_0_gt_i_n_14;
  wire pcie3_ultrascale_0_gt_i_n_140;
  wire pcie3_ultrascale_0_gt_i_n_141;
  wire pcie3_ultrascale_0_gt_i_n_142;
  wire pcie3_ultrascale_0_gt_i_n_143;
  wire pcie3_ultrascale_0_gt_i_n_144;
  wire pcie3_ultrascale_0_gt_i_n_145;
  wire pcie3_ultrascale_0_gt_i_n_146;
  wire pcie3_ultrascale_0_gt_i_n_147;
  wire pcie3_ultrascale_0_gt_i_n_148;
  wire pcie3_ultrascale_0_gt_i_n_149;
  wire pcie3_ultrascale_0_gt_i_n_15;
  wire pcie3_ultrascale_0_gt_i_n_150;
  wire pcie3_ultrascale_0_gt_i_n_151;
  wire pcie3_ultrascale_0_gt_i_n_153;
  wire pcie3_ultrascale_0_gt_i_n_154;
  wire pcie3_ultrascale_0_gt_i_n_155;
  wire pcie3_ultrascale_0_gt_i_n_156;
  wire pcie3_ultrascale_0_gt_i_n_157;
  wire pcie3_ultrascale_0_gt_i_n_158;
  wire pcie3_ultrascale_0_gt_i_n_159;
  wire pcie3_ultrascale_0_gt_i_n_16;
  wire pcie3_ultrascale_0_gt_i_n_160;
  wire pcie3_ultrascale_0_gt_i_n_161;
  wire pcie3_ultrascale_0_gt_i_n_162;
  wire pcie3_ultrascale_0_gt_i_n_163;
  wire pcie3_ultrascale_0_gt_i_n_164;
  wire pcie3_ultrascale_0_gt_i_n_165;
  wire pcie3_ultrascale_0_gt_i_n_166;
  wire pcie3_ultrascale_0_gt_i_n_167;
  wire pcie3_ultrascale_0_gt_i_n_168;
  wire pcie3_ultrascale_0_gt_i_n_169;
  wire pcie3_ultrascale_0_gt_i_n_17;
  wire pcie3_ultrascale_0_gt_i_n_170;
  wire pcie3_ultrascale_0_gt_i_n_171;
  wire pcie3_ultrascale_0_gt_i_n_172;
  wire pcie3_ultrascale_0_gt_i_n_173;
  wire pcie3_ultrascale_0_gt_i_n_18;
  wire pcie3_ultrascale_0_gt_i_n_19;
  wire pcie3_ultrascale_0_gt_i_n_20;
  wire pcie3_ultrascale_0_gt_i_n_2062;
  wire pcie3_ultrascale_0_gt_i_n_2063;
  wire pcie3_ultrascale_0_gt_i_n_2064;
  wire pcie3_ultrascale_0_gt_i_n_2065;
  wire pcie3_ultrascale_0_gt_i_n_2066;
  wire pcie3_ultrascale_0_gt_i_n_2067;
  wire pcie3_ultrascale_0_gt_i_n_2068;
  wire pcie3_ultrascale_0_gt_i_n_2069;
  wire pcie3_ultrascale_0_gt_i_n_21;
  wire pcie3_ultrascale_0_gt_i_n_2135;
  wire pcie3_ultrascale_0_gt_i_n_2136;
  wire pcie3_ultrascale_0_gt_i_n_2137;
  wire pcie3_ultrascale_0_gt_i_n_2138;
  wire pcie3_ultrascale_0_gt_i_n_2139;
  wire pcie3_ultrascale_0_gt_i_n_2140;
  wire pcie3_ultrascale_0_gt_i_n_2141;
  wire pcie3_ultrascale_0_gt_i_n_22;
  wire pcie3_ultrascale_0_gt_i_n_23;
  wire pcie3_ultrascale_0_gt_i_n_24;
  wire pcie3_ultrascale_0_gt_i_n_25;
  wire pcie3_ultrascale_0_gt_i_n_26;
  wire pcie3_ultrascale_0_gt_i_n_27;
  wire pcie3_ultrascale_0_gt_i_n_28;
  wire pcie3_ultrascale_0_gt_i_n_29;
  wire pcie3_ultrascale_0_gt_i_n_30;
  wire pcie3_ultrascale_0_gt_i_n_31;
  wire pcie3_ultrascale_0_gt_i_n_33;
  wire pcie3_ultrascale_0_gt_i_n_34;
  wire pcie3_ultrascale_0_gt_i_n_35;
  wire pcie3_ultrascale_0_gt_i_n_350;
  wire pcie3_ultrascale_0_gt_i_n_351;
  wire pcie3_ultrascale_0_gt_i_n_352;
  wire pcie3_ultrascale_0_gt_i_n_353;
  wire pcie3_ultrascale_0_gt_i_n_354;
  wire pcie3_ultrascale_0_gt_i_n_355;
  wire pcie3_ultrascale_0_gt_i_n_356;
  wire pcie3_ultrascale_0_gt_i_n_357;
  wire pcie3_ultrascale_0_gt_i_n_36;
  wire pcie3_ultrascale_0_gt_i_n_37;
  wire pcie3_ultrascale_0_gt_i_n_374;
  wire pcie3_ultrascale_0_gt_i_n_376;
  wire pcie3_ultrascale_0_gt_i_n_377;
  wire pcie3_ultrascale_0_gt_i_n_378;
  wire pcie3_ultrascale_0_gt_i_n_379;
  wire pcie3_ultrascale_0_gt_i_n_38;
  wire pcie3_ultrascale_0_gt_i_n_380;
  wire pcie3_ultrascale_0_gt_i_n_381;
  wire pcie3_ultrascale_0_gt_i_n_39;
  wire pcie3_ultrascale_0_gt_i_n_390;
  wire pcie3_ultrascale_0_gt_i_n_392;
  wire pcie3_ultrascale_0_gt_i_n_393;
  wire pcie3_ultrascale_0_gt_i_n_394;
  wire pcie3_ultrascale_0_gt_i_n_395;
  wire pcie3_ultrascale_0_gt_i_n_396;
  wire pcie3_ultrascale_0_gt_i_n_397;
  wire pcie3_ultrascale_0_gt_i_n_40;
  wire pcie3_ultrascale_0_gt_i_n_406;
  wire pcie3_ultrascale_0_gt_i_n_407;
  wire pcie3_ultrascale_0_gt_i_n_408;
  wire pcie3_ultrascale_0_gt_i_n_409;
  wire pcie3_ultrascale_0_gt_i_n_41;
  wire pcie3_ultrascale_0_gt_i_n_410;
  wire pcie3_ultrascale_0_gt_i_n_411;
  wire pcie3_ultrascale_0_gt_i_n_412;
  wire pcie3_ultrascale_0_gt_i_n_413;
  wire pcie3_ultrascale_0_gt_i_n_414;
  wire pcie3_ultrascale_0_gt_i_n_415;
  wire pcie3_ultrascale_0_gt_i_n_416;
  wire pcie3_ultrascale_0_gt_i_n_417;
  wire pcie3_ultrascale_0_gt_i_n_418;
  wire pcie3_ultrascale_0_gt_i_n_419;
  wire pcie3_ultrascale_0_gt_i_n_42;
  wire pcie3_ultrascale_0_gt_i_n_420;
  wire pcie3_ultrascale_0_gt_i_n_421;
  wire pcie3_ultrascale_0_gt_i_n_43;
  wire pcie3_ultrascale_0_gt_i_n_44;
  wire pcie3_ultrascale_0_gt_i_n_45;
  wire pcie3_ultrascale_0_gt_i_n_46;
  wire pcie3_ultrascale_0_gt_i_n_47;
  wire pcie3_ultrascale_0_gt_i_n_48;
  wire pcie3_ultrascale_0_gt_i_n_49;
  wire pcie3_ultrascale_0_gt_i_n_50;
  wire pcie3_ultrascale_0_gt_i_n_51;
  wire pcie3_ultrascale_0_gt_i_n_52;
  wire pcie3_ultrascale_0_gt_i_n_53;
  wire pcie3_ultrascale_0_gt_i_n_6;
  wire pcie3_ultrascale_0_gt_i_n_63;
  wire pcie3_ultrascale_0_gt_i_n_64;
  wire pcie3_ultrascale_0_gt_i_n_65;
  wire pcie3_ultrascale_0_gt_i_n_66;
  wire pcie3_ultrascale_0_gt_i_n_67;
  wire pcie3_ultrascale_0_gt_i_n_68;
  wire pcie3_ultrascale_0_gt_i_n_69;
  wire pcie3_ultrascale_0_gt_i_n_7;
  wire pcie3_ultrascale_0_gt_i_n_70;
  wire pcie3_ultrascale_0_gt_i_n_71;
  wire pcie3_ultrascale_0_gt_i_n_72;
  wire pcie3_ultrascale_0_gt_i_n_73;
  wire pcie3_ultrascale_0_gt_i_n_74;
  wire pcie3_ultrascale_0_gt_i_n_75;
  wire pcie3_ultrascale_0_gt_i_n_76;
  wire pcie3_ultrascale_0_gt_i_n_77;
  wire pcie3_ultrascale_0_gt_i_n_78;
  wire pcie3_ultrascale_0_gt_i_n_79;
  wire pcie3_ultrascale_0_gt_i_n_80;
  wire pcie3_ultrascale_0_gt_i_n_81;
  wire pcie3_ultrascale_0_gt_i_n_82;
  wire pcie3_ultrascale_0_gt_i_n_83;
  wire pcie3_ultrascale_0_gt_i_n_84;
  wire pcie3_ultrascale_0_gt_i_n_85;
  wire pcie3_ultrascale_0_gt_i_n_86;
  wire pcie3_ultrascale_0_gt_i_n_87;
  wire pcie3_ultrascale_0_gt_i_n_88;
  wire pcie3_ultrascale_0_gt_i_n_89;
  wire pcie3_ultrascale_0_gt_i_n_9;
  wire pcie3_ultrascale_0_gt_i_n_90;
  wire pcie3_ultrascale_0_gt_i_n_91;
  wire pcie3_ultrascale_0_gt_i_n_92;
  wire pcie3_ultrascale_0_gt_i_n_93;
  wire pcie3_ultrascale_0_gt_i_n_94;
  wire pcie3_ultrascale_0_gt_i_n_95;
  wire pcie3_ultrascale_0_gt_i_n_96;
  wire pcie3_ultrascale_0_gt_i_n_97;
  wire pcie3_ultrascale_0_gt_i_n_98;
  wire pcie3_ultrascale_0_gt_i_n_99;
  wire [0:0]pciersttxsyncstart_in;
  wire [7:0]pciesynctxsyncdone_out;
  wire phy_rrst_n;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  wire [1:0]qpll1pd_in;
  wire [1:0]qpll1reset_in;
  wire rst_qpll1pd;
  wire rst_qpll1reset;
  wire [7:0]rx8b10ben_in;
  wire [0:0]rxcdrhold_in;
  wire [47:0]rxctrl0_out;
  wire [255:0]rxdata_out;
  wire [7:0]rxelecidle_out;
  wire [7:0]rxpolarity_in;
  wire [0:0]rxprogdivreset_in;
  wire [0:0]rxuserrdy_in;
  wire sys_clk;
  wire sys_clk_gt;
  wire [31:0]txctrl0_in;
  wire [7:0]txctrl1_in;
  wire [15:0]txctrl2_in;
  wire [255:0]txdata_in;
  wire [0:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [55:0]txmaincursor_in;
  wire [39:0]txpostcursor_in;
  wire [39:0]txprecursor_in;
  wire [7:0]txprgdivresetdone_out;
  wire [0:0]txswing_in;
  wire txsyncallin_all;
  wire [7:7]txsyncout_out;
  wire [95:0]NLW_pcie3_ultrascale_0_gt_i_pcsrsvdout_out_UNCONNECTED;
  wire [7:0]NLW_pcie3_ultrascale_0_gt_i_rxbyteisaligned_out_UNCONNECTED;
  wire [7:0]NLW_pcie3_ultrascale_0_gt_i_rxbyterealign_out_UNCONNECTED;
  wire [15:0]NLW_pcie3_ultrascale_0_gt_i_rxclkcorcnt_out_UNCONNECTED;
  wire [127:6]NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED;
  wire [127:0]NLW_pcie3_ultrascale_0_gt_i_rxctrl1_out_UNCONNECTED;
  wire [63:0]NLW_pcie3_ultrascale_0_gt_i_rxctrl2_out_UNCONNECTED;
  wire [63:0]NLW_pcie3_ultrascale_0_gt_i_rxctrl3_out_UNCONNECTED;
  wire [1023:32]NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED;
  wire [7:0]NLW_pcie3_ultrascale_0_gt_i_rxoutclk_out_UNCONNECTED;
  wire [7:0]NLW_pcie3_ultrascale_0_gt_i_txpmaresetdone_out_UNCONNECTED;
  wire [7:0]NLW_pcie3_ultrascale_0_gt_i_txsyncdone_out_UNCONNECTED;
  wire [6:0]NLW_pcie3_ultrascale_0_gt_i_txsyncout_out_UNCONNECTED;

  LUT2 #(
    .INIT(4'hB)) 
    bufg_gt_userclk_i_1
       (.I0(gt_bufgtce),
        .I1(phy_rrst_n),
        .O(CLK_PCLK_CE));
  LUT2 #(
    .INIT(4'h2)) 
    bufg_gt_userclk_i_2
       (.I0(gt_bufgtreset),
        .I1(in0),
        .O(CLK_PCLK_CLR));
  (* CHECK_LICENSE_TYPE = "pcie3_ultrascale_0_gt,pcie3_ultrascale_0_gt_gtwizard_top,{}" *) 
  (* CORE_GENERATION_INFO = "pcie3_ultrascale_0_gt,pcie3_ultrascale_0_gt_gtwizard_top,{x_ipProduct=Vivado 2015.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=gtwizard_ultrascale,x_ipVersion=1.5,x_ipCoreRevision=3,x_ipLanguage=VERILOG,x_ipSimLanguage=VERILOG,C_CHANNEL_ENABLE=000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,C_COMMON_SCALING_FACTOR=2,C_CPLL_VCO_FREQUENCY=2000.0,C_FORCE_COMMONS=0,C_FREERUN_FREQUENCY=100,C_GT_TYPE=0,C_GT_REV=17,C_INCLUDE_CPLL_CAL=2,C_LOCATE_COMMON=0,C_LOCATE_RESET_CONTROLLER=1,C_LOCATE_USER_DATA_WIDTH_SIZING=1,C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER=0,C_LOCATE_IN_SYSTEM_IBERT_CORE=2,C_LOCATE_RX_USER_CLOCKING=1,C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER=1,C_LOCATE_TX_USER_CLOCKING=1,C_RESET_CONTROLLER_INSTANCE_CTRL=0,C_RX_BUFFBYPASS_MODE=0,C_RX_BUFFER_BYPASS_INSTANCE_CTRL=0,C_RX_BUFFER_MODE=1,C_RX_CB_DISP=00000000,C_RX_CB_K=00000000,C_RX_CB_MAX_LEVEL=4,C_RX_CB_LEN_SEQ=1,C_RX_CB_NUM_SEQ=0,C_RX_CB_VAL=00000000000000000000000000000000000000000000000000000000000000000000000000000000,C_RX_CC_DISP=00000000,C_RX_CC_ENABLE=1,C_RX_CC_K=00000001,C_RX_CC_LEN_SEQ=1,C_RX_CC_NUM_SEQ=1,C_RX_CC_PERIODICITY=5000,C_RX_CC_VAL=00000000000000000000000000000000000000000000000000000000000000000000000000011100,C_RX_COMMA_M_ENABLE=1,C_RX_COMMA_M_VAL=1010000011,C_RX_COMMA_P_ENABLE=1,C_RX_COMMA_P_VAL=0101111100,C_RX_DATA_DECODING=1,C_RX_ENABLE=1,C_RX_INT_DATA_WIDTH=20,C_RX_LINE_RATE=8,C_RX_MASTER_CHANNEL_IDX=103,C_RX_OUTCLK_BUFG_GT_DIV=1,C_RX_OUTCLK_FREQUENCY=400.0000000,C_RX_OUTCLK_SOURCE=1,C_RX_PLL_TYPE=1,C_RX_RECCLK_OUTPUT=0x000000000000000000000000000000000000000000000000,C_RX_REFCLK_FREQUENCY=100,C_RX_SLIDE_MODE=2,C_RX_USER_CLOCKING_CONTENTS=0,C_RX_USER_CLOCKING_INSTANCE_CTRL=0,C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK=1,C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2=1,C_RX_USER_CLOCKING_SOURCE=0,C_RX_USER_DATA_WIDTH=16,C_RX_USRCLK_FREQUENCY=400.0000000,C_RX_USRCLK2_FREQUENCY=400.0000000,C_SECONDARY_QPLL_ENABLE=0,C_SECONDARY_QPLL_REFCLK_FREQUENCY=257.8125,C_TOTAL_NUM_CHANNELS=8,C_TOTAL_NUM_COMMONS=2,C_TOTAL_NUM_COMMONS_EXAMPLE=0,C_TXPROGDIV_FREQ_ENABLE=1,C_TXPROGDIV_FREQ_SOURCE=2,C_TXPROGDIV_FREQ_VAL=400,C_TX_BUFFBYPASS_MODE=0,C_TX_BUFFER_BYPASS_INSTANCE_CTRL=0,C_TX_BUFFER_MODE=0,C_TX_DATA_ENCODING=1,C_TX_ENABLE=1,C_TX_INT_DATA_WIDTH=20,C_TX_LINE_RATE=8,C_TX_MASTER_CHANNEL_IDX=103,C_TX_OUTCLK_BUFG_GT_DIV=1,C_TX_OUTCLK_FREQUENCY=400.0000000,C_TX_OUTCLK_SOURCE=4,C_TX_PLL_TYPE=1,C_TX_REFCLK_FREQUENCY=100,C_TX_USER_CLOCKING_CONTENTS=0,C_TX_USER_CLOCKING_INSTANCE_CTRL=0,C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK=1,C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2=1,C_TX_USER_CLOCKING_SOURCE=0,C_TX_USER_DATA_WIDTH=16,C_TX_USRCLK_FREQUENCY=400.0000000,C_TX_USRCLK2_FREQUENCY=400.0000000}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "pcie3_ultrascale_0_gt_gtwizard_top,Vivado 2015.4" *) 
  pcie3_ultrascale_0_pcie3_ultrascale_0_gt pcie3_ultrascale_0_gt_i
       (.bufgtce_out({pcie3_ultrascale_0_gt_i_n_6,pcie3_ultrascale_0_gt_i_n_7,gt_bufgtce,pcie3_ultrascale_0_gt_i_n_9,pcie3_ultrascale_0_gt_i_n_10,pcie3_ultrascale_0_gt_i_n_11,pcie3_ultrascale_0_gt_i_n_12,pcie3_ultrascale_0_gt_i_n_13,pcie3_ultrascale_0_gt_i_n_14,pcie3_ultrascale_0_gt_i_n_15,pcie3_ultrascale_0_gt_i_n_16,pcie3_ultrascale_0_gt_i_n_17,pcie3_ultrascale_0_gt_i_n_18,pcie3_ultrascale_0_gt_i_n_19,pcie3_ultrascale_0_gt_i_n_20,pcie3_ultrascale_0_gt_i_n_21,pcie3_ultrascale_0_gt_i_n_22,pcie3_ultrascale_0_gt_i_n_23,pcie3_ultrascale_0_gt_i_n_24,pcie3_ultrascale_0_gt_i_n_25,pcie3_ultrascale_0_gt_i_n_26,pcie3_ultrascale_0_gt_i_n_27,pcie3_ultrascale_0_gt_i_n_28,pcie3_ultrascale_0_gt_i_n_29}),
        .bufgtcemask_out({pcie3_ultrascale_0_gt_i_n_30,pcie3_ultrascale_0_gt_i_n_31,CLK_PCLK_CEMASK,pcie3_ultrascale_0_gt_i_n_33,pcie3_ultrascale_0_gt_i_n_34,pcie3_ultrascale_0_gt_i_n_35,pcie3_ultrascale_0_gt_i_n_36,pcie3_ultrascale_0_gt_i_n_37,pcie3_ultrascale_0_gt_i_n_38,pcie3_ultrascale_0_gt_i_n_39,pcie3_ultrascale_0_gt_i_n_40,pcie3_ultrascale_0_gt_i_n_41,pcie3_ultrascale_0_gt_i_n_42,pcie3_ultrascale_0_gt_i_n_43,pcie3_ultrascale_0_gt_i_n_44,pcie3_ultrascale_0_gt_i_n_45,pcie3_ultrascale_0_gt_i_n_46,pcie3_ultrascale_0_gt_i_n_47,pcie3_ultrascale_0_gt_i_n_48,pcie3_ultrascale_0_gt_i_n_49,pcie3_ultrascale_0_gt_i_n_50,pcie3_ultrascale_0_gt_i_n_51,pcie3_ultrascale_0_gt_i_n_52,pcie3_ultrascale_0_gt_i_n_53}),
        .bufgtdiv_out({gt_bufgtdiv,pcie3_ultrascale_0_gt_i_n_63,pcie3_ultrascale_0_gt_i_n_64,pcie3_ultrascale_0_gt_i_n_65,pcie3_ultrascale_0_gt_i_n_66,pcie3_ultrascale_0_gt_i_n_67,pcie3_ultrascale_0_gt_i_n_68,pcie3_ultrascale_0_gt_i_n_69,pcie3_ultrascale_0_gt_i_n_70,pcie3_ultrascale_0_gt_i_n_71,pcie3_ultrascale_0_gt_i_n_72,pcie3_ultrascale_0_gt_i_n_73,pcie3_ultrascale_0_gt_i_n_74,pcie3_ultrascale_0_gt_i_n_75,pcie3_ultrascale_0_gt_i_n_76,pcie3_ultrascale_0_gt_i_n_77,pcie3_ultrascale_0_gt_i_n_78,pcie3_ultrascale_0_gt_i_n_79,pcie3_ultrascale_0_gt_i_n_80,pcie3_ultrascale_0_gt_i_n_81,pcie3_ultrascale_0_gt_i_n_82,pcie3_ultrascale_0_gt_i_n_83,pcie3_ultrascale_0_gt_i_n_84,pcie3_ultrascale_0_gt_i_n_85,pcie3_ultrascale_0_gt_i_n_86,pcie3_ultrascale_0_gt_i_n_87,pcie3_ultrascale_0_gt_i_n_88,pcie3_ultrascale_0_gt_i_n_89,pcie3_ultrascale_0_gt_i_n_90,pcie3_ultrascale_0_gt_i_n_91,pcie3_ultrascale_0_gt_i_n_92,pcie3_ultrascale_0_gt_i_n_93,pcie3_ultrascale_0_gt_i_n_94,pcie3_ultrascale_0_gt_i_n_95,pcie3_ultrascale_0_gt_i_n_96,pcie3_ultrascale_0_gt_i_n_97,pcie3_ultrascale_0_gt_i_n_98,pcie3_ultrascale_0_gt_i_n_99,pcie3_ultrascale_0_gt_i_n_100,pcie3_ultrascale_0_gt_i_n_101,pcie3_ultrascale_0_gt_i_n_102,pcie3_ultrascale_0_gt_i_n_103,pcie3_ultrascale_0_gt_i_n_104,pcie3_ultrascale_0_gt_i_n_105,pcie3_ultrascale_0_gt_i_n_106,pcie3_ultrascale_0_gt_i_n_107,pcie3_ultrascale_0_gt_i_n_108,pcie3_ultrascale_0_gt_i_n_109,pcie3_ultrascale_0_gt_i_n_110,pcie3_ultrascale_0_gt_i_n_111,pcie3_ultrascale_0_gt_i_n_112,pcie3_ultrascale_0_gt_i_n_113,pcie3_ultrascale_0_gt_i_n_114,pcie3_ultrascale_0_gt_i_n_115,pcie3_ultrascale_0_gt_i_n_116,pcie3_ultrascale_0_gt_i_n_117,pcie3_ultrascale_0_gt_i_n_118,pcie3_ultrascale_0_gt_i_n_119,pcie3_ultrascale_0_gt_i_n_120,pcie3_ultrascale_0_gt_i_n_121,pcie3_ultrascale_0_gt_i_n_122,pcie3_ultrascale_0_gt_i_n_123,pcie3_ultrascale_0_gt_i_n_124,pcie3_ultrascale_0_gt_i_n_125}),
        .bufgtreset_out({pcie3_ultrascale_0_gt_i_n_126,pcie3_ultrascale_0_gt_i_n_127,gt_bufgtreset,pcie3_ultrascale_0_gt_i_n_129,pcie3_ultrascale_0_gt_i_n_130,pcie3_ultrascale_0_gt_i_n_131,pcie3_ultrascale_0_gt_i_n_132,pcie3_ultrascale_0_gt_i_n_133,pcie3_ultrascale_0_gt_i_n_134,pcie3_ultrascale_0_gt_i_n_135,pcie3_ultrascale_0_gt_i_n_136,pcie3_ultrascale_0_gt_i_n_137,pcie3_ultrascale_0_gt_i_n_138,pcie3_ultrascale_0_gt_i_n_139,pcie3_ultrascale_0_gt_i_n_140,pcie3_ultrascale_0_gt_i_n_141,pcie3_ultrascale_0_gt_i_n_142,pcie3_ultrascale_0_gt_i_n_143,pcie3_ultrascale_0_gt_i_n_144,pcie3_ultrascale_0_gt_i_n_145,pcie3_ultrascale_0_gt_i_n_146,pcie3_ultrascale_0_gt_i_n_147,pcie3_ultrascale_0_gt_i_n_148,pcie3_ultrascale_0_gt_i_n_149}),
        .bufgtrstmask_out({pcie3_ultrascale_0_gt_i_n_150,pcie3_ultrascale_0_gt_i_n_151,CLK_PCLK_MASK,pcie3_ultrascale_0_gt_i_n_153,pcie3_ultrascale_0_gt_i_n_154,pcie3_ultrascale_0_gt_i_n_155,pcie3_ultrascale_0_gt_i_n_156,pcie3_ultrascale_0_gt_i_n_157,pcie3_ultrascale_0_gt_i_n_158,pcie3_ultrascale_0_gt_i_n_159,pcie3_ultrascale_0_gt_i_n_160,pcie3_ultrascale_0_gt_i_n_161,pcie3_ultrascale_0_gt_i_n_162,pcie3_ultrascale_0_gt_i_n_163,pcie3_ultrascale_0_gt_i_n_164,pcie3_ultrascale_0_gt_i_n_165,pcie3_ultrascale_0_gt_i_n_166,pcie3_ultrascale_0_gt_i_n_167,pcie3_ultrascale_0_gt_i_n_168,pcie3_ultrascale_0_gt_i_n_169,pcie3_ultrascale_0_gt_i_n_170,pcie3_ultrascale_0_gt_i_n_171,pcie3_ultrascale_0_gt_i_n_172,pcie3_ultrascale_0_gt_i_n_173}),
        .cplllock_out(cplllock_out),
        .cpllpd_in({in0,in0,in0,in0,in0,in0,in0,in0}),
        .cpllreset_in({in0,in0,in0,in0,in0,in0,in0,in0}),
        .dmonitorout_out({gt_dmonitorout[16:0],gt_dmonitorout[33:17],gt_dmonitorout[50:34],gt_dmonitorout[67:51],gt_dmonitorout[84:68],gt_dmonitorout[101:85],gt_dmonitorout[118:102],gt_dmonitorout[135:119]}),
        .drpclk_in({sys_clk,sys_clk,sys_clk,sys_clk,sys_clk,sys_clk,sys_clk,sys_clk}),
        .eyescandataerror_out({gt_eyescandataerror[0],gt_eyescandataerror[1],gt_eyescandataerror[2],gt_eyescandataerror[3],gt_eyescandataerror[4],gt_eyescandataerror[5],gt_eyescandataerror[6],gt_eyescandataerror[7]}),
        .gthrxn_in({pci_exp_rxn[0],pci_exp_rxn[1],pci_exp_rxn[2],pci_exp_rxn[3],pci_exp_rxn[4],pci_exp_rxn[5],pci_exp_rxn[6],pci_exp_rxn[7]}),
        .gthrxp_in({pci_exp_rxp[0],pci_exp_rxp[1],pci_exp_rxp[2],pci_exp_rxp[3],pci_exp_rxp[4],pci_exp_rxp[5],pci_exp_rxp[6],pci_exp_rxp[7]}),
        .gthtxn_out({pci_exp_txn[0],pci_exp_txn[1],pci_exp_txn[2],pci_exp_txn[3],pci_exp_txn[4],pci_exp_txn[5],pci_exp_txn[6],pci_exp_txn[7]}),
        .gthtxp_out({pci_exp_txp[0],pci_exp_txp[1],pci_exp_txp[2],pci_exp_txp[3],pci_exp_txp[4],pci_exp_txp[5],pci_exp_txp[6],pci_exp_txp[7]}),
        .gtpowergood_out({gt_gtpowergood[0],gt_gtpowergood[1],gt_gtpowergood[2],gt_gtpowergood[3],gt_gtpowergood[4],gt_gtpowergood[5],gt_gtpowergood[6],gt_gtpowergood[7]}),
        .gtrefclk01_in({sys_clk_gt,sys_clk_gt}),
        .gtrefclk0_in({sys_clk_gt,sys_clk_gt,sys_clk_gt,sys_clk_gt,sys_clk_gt,sys_clk_gt,sys_clk_gt,sys_clk_gt}),
        .gtrxreset_in({gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in}),
        .gttxreset_in({gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in,gtrxreset_in}),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_userclk_rx_active_in(1'b0),
        .gtwiz_userclk_tx_active_in(1'b0),
        .gtwiz_userclk_tx_reset_in(gt_bufgtreset),
        .loopback_in({gt_loopback[2:0],gt_loopback[5:3],gt_loopback[8:6],gt_loopback[11:9],gt_loopback[14:12],gt_loopback[17:15],gt_loopback[20:18],gt_loopback[23:21]}),
        .lopt(CLK_PCLK_CE),
        .lopt_1(CLK_PCLK_CLR),
        .lopt_2(lopt),
        .lopt_3(lopt_1),
        .pcieeqrxeqadaptdone_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcierategen3_out({pcie3_ultrascale_0_gt_i_n_350,pcie3_ultrascale_0_gt_i_n_351,pcie3_ultrascale_0_gt_i_n_352,pcie3_ultrascale_0_gt_i_n_353,pcie3_ultrascale_0_gt_i_n_354,pcie3_ultrascale_0_gt_i_n_355,pcie3_ultrascale_0_gt_i_n_356,pcie3_ultrascale_0_gt_i_n_357}),
        .pcierateidle_out({gt_pcierateidle[0],gt_pcierateidle[1],gt_pcierateidle[2],gt_pcierateidle[3],gt_pcierateidle[4],gt_pcierateidle[5],gt_pcierateidle[6],gt_pcierateidle[7]}),
        .pcierateqpllpd_out({gt_pcierateqpllpd[1:0],gt_pcierateqpllpd[3:2],gt_pcierateqpllpd[5:4],gt_pcierateqpllpd[7:6],pcie3_ultrascale_0_gt_i_n_374,gt_pcierateqpllpd[8],pcie3_ultrascale_0_gt_i_n_376,pcie3_ultrascale_0_gt_i_n_377,pcie3_ultrascale_0_gt_i_n_378,pcie3_ultrascale_0_gt_i_n_379,pcie3_ultrascale_0_gt_i_n_380,pcie3_ultrascale_0_gt_i_n_381}),
        .pcierateqpllreset_out({gt_pcierateqpllreset[1:0],gt_pcierateqpllreset[3:2],gt_pcierateqpllreset[5:4],gt_pcierateqpllreset[7:6],pcie3_ultrascale_0_gt_i_n_390,gt_pcierateqpllreset[8],pcie3_ultrascale_0_gt_i_n_392,pcie3_ultrascale_0_gt_i_n_393,pcie3_ultrascale_0_gt_i_n_394,pcie3_ultrascale_0_gt_i_n_395,pcie3_ultrascale_0_gt_i_n_396,pcie3_ultrascale_0_gt_i_n_397}),
        .pcierstidle_in({CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK,CLK_USERCLK_CEMASK}),
        .pciersttxsyncstart_in({pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in,pciersttxsyncstart_in}),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .pcieusergen3rdy_out({pcie3_ultrascale_0_gt_i_n_406,pcie3_ultrascale_0_gt_i_n_407,pcie3_ultrascale_0_gt_i_n_408,pcie3_ultrascale_0_gt_i_n_409,pcie3_ultrascale_0_gt_i_n_410,pcie3_ultrascale_0_gt_i_n_411,pcie3_ultrascale_0_gt_i_n_412,pcie3_ultrascale_0_gt_i_n_413}),
        .pcieuserphystatusrst_out({pcie3_ultrascale_0_gt_i_n_414,pcie3_ultrascale_0_gt_i_n_415,pcie3_ultrascale_0_gt_i_n_416,pcie3_ultrascale_0_gt_i_n_417,pcie3_ultrascale_0_gt_i_n_418,pcie3_ultrascale_0_gt_i_n_419,pcie3_ultrascale_0_gt_i_n_420,pcie3_ultrascale_0_gt_i_n_421}),
        .pcieuserratedone_in({gt_pcieuserratedone[0],gt_pcieuserratedone[1],gt_pcieuserratedone[2],gt_pcieuserratedone[3],gt_pcieuserratedone[4],gt_pcieuserratedone[5],gt_pcieuserratedone[6],gt_pcieuserratedone[7]}),
        .pcieuserratestart_out({gt_pcieuserratestart[0],gt_pcieuserratestart[1],gt_pcieuserratestart[2],gt_pcieuserratestart[3],gt_pcieuserratestart[4],gt_pcieuserratestart[5],gt_pcieuserratestart[6],gt_pcieuserratestart[7]}),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,cplllock_out[7],pcie3_ultrascale_0_gt_i_i_5_n_0}),
        .pcsrsvdout_out(NLW_pcie3_ultrascale_0_gt_i_pcsrsvdout_out_UNCONNECTED[95:0]),
        .phystatus_out({gt_phystatus[0],gt_phystatus[1],gt_phystatus[2],gt_phystatus[3],gt_phystatus[4],gt_phystatus[5],gt_phystatus[6],gt_phystatus[7]}),
        .qpll1lock_out(int_qpll1lock_out),
        .qpll1outclk_out(int_qpll1outclk_out),
        .qpll1outrefclk_out(int_qpll1outrefclk_out),
        .qpll1pd_in(qpll1pd_in),
        .qpll1reset_in(qpll1reset_in),
        .qpllrsvd2_in({1'b0,1'b0,1'b1,Q,1'b0,1'b0,1'b1,Q}),
        .qpllrsvd3_in({1'b0,1'b0,1'b1,Q,1'b0,1'b0,1'b1,Q}),
        .rx8b10ben_in(rx8b10ben_in),
        .rxbufreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxbufstatus_out({gt_rxbufstatus[2:0],gt_rxbufstatus[5:3],gt_rxbufstatus[8:6],gt_rxbufstatus[11:9],gt_rxbufstatus[14:12],gt_rxbufstatus[17:15],gt_rxbufstatus[20:18],gt_rxbufstatus[23:21]}),
        .rxbyteisaligned_out(NLW_pcie3_ultrascale_0_gt_i_rxbyteisaligned_out_UNCONNECTED[7:0]),
        .rxbyterealign_out(NLW_pcie3_ultrascale_0_gt_i_rxbyterealign_out_UNCONNECTED[7:0]),
        .rxcdrhold_in({rxcdrhold_in,rxcdrhold_in,rxcdrhold_in,rxcdrhold_in,rxcdrhold_in,rxcdrhold_in,rxcdrhold_in,rxcdrhold_in}),
        .rxcdrlock_out({gt_rxcdrlock[0],gt_rxcdrlock[1],gt_rxcdrlock[2],gt_rxcdrlock[3],gt_rxcdrlock[4],gt_rxcdrlock[5],gt_rxcdrlock[6],gt_rxcdrlock[7]}),
        .rxclkcorcnt_out(NLW_pcie3_ultrascale_0_gt_i_rxclkcorcnt_out_UNCONNECTED[15:0]),
        .rxcommadet_out({gt_rxcommadet[0],gt_rxcommadet[1],gt_rxcommadet[2],gt_rxcommadet[3],gt_rxcommadet[4],gt_rxcommadet[5],gt_rxcommadet[6],gt_rxcommadet[7]}),
        .rxcommadeten_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxctrl0_out({NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[127:118],rxctrl0_out[47:42],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[111:102],rxctrl0_out[41:36],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[95:86],rxctrl0_out[35:30],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[79:70],rxctrl0_out[29:24],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[63:54],rxctrl0_out[23:18],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[47:38],rxctrl0_out[17:12],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[31:22],rxctrl0_out[11:6],NLW_pcie3_ultrascale_0_gt_i_rxctrl0_out_UNCONNECTED[15:6],rxctrl0_out[5:0]}),
        .rxctrl1_out(NLW_pcie3_ultrascale_0_gt_i_rxctrl1_out_UNCONNECTED[127:0]),
        .rxctrl2_out(NLW_pcie3_ultrascale_0_gt_i_rxctrl2_out_UNCONNECTED[63:0]),
        .rxctrl3_out(NLW_pcie3_ultrascale_0_gt_i_rxctrl3_out_UNCONNECTED[63:0]),
        .rxdata_out({NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[1023:928],rxdata_out[255:224],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[895:800],rxdata_out[223:192],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[767:672],rxdata_out[191:160],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[639:544],rxdata_out[159:128],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[511:416],rxdata_out[127:96],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[383:288],rxdata_out[95:64],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[255:160],rxdata_out[63:32],NLW_pcie3_ultrascale_0_gt_i_rxdata_out_UNCONNECTED[127:32],rxdata_out[31:0]}),
        .rxdlysresetdone_out({gt_rxdlysresetdone[0],gt_rxdlysresetdone[1],gt_rxdlysresetdone[2],gt_rxdlysresetdone[3],gt_rxdlysresetdone[4],gt_rxdlysresetdone[5],gt_rxdlysresetdone[6],gt_rxdlysresetdone[7]}),
        .rxelecidle_out(rxelecidle_out),
        .rxlpmen_in(rx8b10ben_in),
        .rxmcommaalignen_in(rx8b10ben_in),
        .rxoutclk_out(NLW_pcie3_ultrascale_0_gt_i_rxoutclk_out_UNCONNECTED[7:0]),
        .rxpcommaalignen_in(rx8b10ben_in),
        .rxpd_in({\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] }),
        .rxphaligndone_out({gt_rxphaligndone[0],gt_rxphaligndone[1],gt_rxphaligndone[2],gt_rxphaligndone[3],gt_rxphaligndone[4],gt_rxphaligndone[5],gt_rxphaligndone[6],gt_rxphaligndone[7]}),
        .rxpmaresetdone_out({gt_rxpmaresetdone[0],gt_rxpmaresetdone[1],gt_rxpmaresetdone[2],gt_rxpmaresetdone[3],gt_rxpmaresetdone[4],gt_rxpmaresetdone[5],gt_rxpmaresetdone[6],gt_rxpmaresetdone[7]}),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in({gt_rxprbscntreset[0],gt_rxprbscntreset[1],gt_rxprbscntreset[2],gt_rxprbscntreset[3],gt_rxprbscntreset[4],gt_rxprbscntreset[5],gt_rxprbscntreset[6],gt_rxprbscntreset[7]}),
        .rxprbserr_out({gt_rxprbserr[0],gt_rxprbserr[1],gt_rxprbserr[2],gt_rxprbserr[3],gt_rxprbserr[4],gt_rxprbserr[5],gt_rxprbserr[6],gt_rxprbserr[7]}),
        .rxprbslocked_out({pcie3_ultrascale_0_gt_i_n_2062,pcie3_ultrascale_0_gt_i_n_2063,pcie3_ultrascale_0_gt_i_n_2064,pcie3_ultrascale_0_gt_i_n_2065,pcie3_ultrascale_0_gt_i_n_2066,pcie3_ultrascale_0_gt_i_n_2067,pcie3_ultrascale_0_gt_i_n_2068,pcie3_ultrascale_0_gt_i_n_2069}),
        .rxprbssel_in({gt_txprbssel[3:0],gt_txprbssel[7:4],gt_txprbssel[11:8],gt_txprbssel[15:12],gt_txprbssel[19:16],gt_txprbssel[23:20],gt_txprbssel[27:24],gt_txprbssel[31:28]}),
        .rxprgdivresetdone_out({gt_rxprogdivresetdone[0],gt_rxprogdivresetdone[1],gt_rxprogdivresetdone[2],gt_rxprogdivresetdone[3],gt_rxprogdivresetdone[4],gt_rxprogdivresetdone[5],gt_rxprogdivresetdone[6],gt_rxprogdivresetdone[7]}),
        .rxprogdivreset_in({rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in}),
        .rxrate_in({1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q}),
        .rxresetdone_out({gt_rxresetdone[0],gt_rxresetdone[1],gt_rxresetdone[2],gt_rxresetdone[3],gt_rxresetdone[4],gt_rxresetdone[5],gt_rxresetdone[6],gt_rxresetdone[7]}),
        .rxslide_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxstatus_out({gt_rxstatus[2:0],gt_rxstatus[5:3],gt_rxstatus[8:6],gt_rxstatus[11:9],gt_rxstatus[14:12],gt_rxstatus[17:15],gt_rxstatus[20:18],gt_rxstatus[23:21]}),
        .rxsyncdone_out({gt_rxsyncdone[0],gt_rxsyncdone[1],gt_rxsyncdone[2],gt_rxsyncdone[3],gt_rxsyncdone[4],gt_rxsyncdone[5],gt_rxsyncdone[6],gt_rxsyncdone[7]}),
        .rxuserrdy_in({rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in}),
        .rxusrclk2_in({CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK}),
        .rxusrclk_in({CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK}),
        .rxvalid_out({gt_rxvalid[0],gt_rxvalid[1],gt_rxvalid[2],gt_rxvalid[3],gt_rxvalid[4],gt_rxvalid[5],gt_rxvalid[6],gt_rxvalid[7]}),
        .tx8b10ben_in(rx8b10ben_in),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[31:28],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[27:24],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[23:20],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[19:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[15:12],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[11:8],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[7:4],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl0_in[3:0],1'b0,1'b0}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[5],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[4],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[3],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[2],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[1],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl1_in[0]}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[15:14],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[13:12],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[11:10],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[9:8],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[5:4],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[3:2],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txctrl2_in[1:0]}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[255:224],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[223:192],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[191:160],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[159:128],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[127:96],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[95:64],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[63:32],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,txdata_in[31:0]}),
        .txdeemph_in({txdeemph_in,txdeemph_in,txdeemph_in,txdeemph_in,txdeemph_in,txdeemph_in,txdeemph_in,txdeemph_in}),
        .txdetectrx_in({txdetectrx_in,txdetectrx_in,txdetectrx_in,txdetectrx_in,txdetectrx_in,txdetectrx_in,txdetectrx_in,txdetectrx_in}),
        .txdlybypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlyen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlyhold_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlyovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlysreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdlysresetdone_out({gt_txdlysresetdone[0],gt_txdlysresetdone[1],gt_txdlysresetdone[2],gt_txdlysresetdone[3],gt_txdlysresetdone[4],gt_txdlysresetdone[5],gt_txdlysresetdone[6],gt_txdlysresetdone[7]}),
        .txdlyupdown_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txelecidle_in({gt_txelecidle[0],gt_txelecidle[1],gt_txelecidle[2],gt_txelecidle[3],gt_txelecidle[4],gt_txelecidle[5],gt_txelecidle[6],gt_txelecidle[7]}),
        .txinhibit_in({gt_txinhibit[0],gt_txinhibit[1],gt_txinhibit[2],gt_txinhibit[3],gt_txinhibit[4],gt_txinhibit[5],gt_txinhibit[6],gt_txinhibit[7]}),
        .txmaincursor_in(txmaincursor_in),
        .txmargin_in({\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] ,\pipe_stages_1.pipe_tx_margin_q_reg[2] }),
        .txoutclk_out({CLK_USERCLK_IN,pcie3_ultrascale_0_gt_i_n_2135,pcie3_ultrascale_0_gt_i_n_2136,pcie3_ultrascale_0_gt_i_n_2137,pcie3_ultrascale_0_gt_i_n_2138,pcie3_ultrascale_0_gt_i_n_2139,pcie3_ultrascale_0_gt_i_n_2140,pcie3_ultrascale_0_gt_i_n_2141}),
        .txoutclksel_in({out,out,out,out,out,out,out,out}),
        .txpd_in({\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,\pipe_stages_1.pipe_tx_powerdown_q_reg[1] }),
        .txphalign_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphaligndone_out({gt_txphaligndone[0],gt_txphaligndone[1],gt_txphaligndone[2],gt_txphaligndone[3],gt_txphaligndone[4],gt_txphaligndone[5],gt_txphaligndone[6],gt_txphaligndone[7]}),
        .txphalignen_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphdlypd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphdlyreset_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphdlytstclk_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphinit_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txphinitdone_out({gt_txphinitdone[0],gt_txphinitdone[1],gt_txphinitdone[2],gt_txphinitdone[3],gt_txphinitdone[4],gt_txphinitdone[5],gt_txphinitdone[6],gt_txphinitdone[7]}),
        .txphovrden_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(NLW_pcie3_ultrascale_0_gt_i_txpmaresetdone_out_UNCONNECTED[7:0]),
        .txpostcursor_in(txpostcursor_in),
        .txprbsforceerr_in({gt_txprbsforceerr[0],gt_txprbsforceerr[1],gt_txprbsforceerr[2],gt_txprbsforceerr[3],gt_txprbsforceerr[4],gt_txprbsforceerr[5],gt_txprbsforceerr[6],gt_txprbsforceerr[7]}),
        .txprbssel_in({gt_txprbssel[3:0],gt_txprbssel[7:4],gt_txprbssel[11:8],gt_txprbssel[15:12],gt_txprbssel[19:16],gt_txprbssel[23:20],gt_txprbssel[27:24],gt_txprbssel[31:28]}),
        .txprecursor_in(txprecursor_in),
        .txprgdivresetdone_out(txprgdivresetdone_out),
        .txprogdivreset_in({rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in,rxprogdivreset_in}),
        .txrate_in({1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q,1'b0,Q}),
        .txresetdone_out({gt_txresetdone[0],gt_txresetdone[1],gt_txresetdone[2],gt_txresetdone[3],gt_txresetdone[4],gt_txresetdone[5],gt_txresetdone[6],gt_txresetdone[7]}),
        .txswing_in({txswing_in,txswing_in,txswing_in,txswing_in,txswing_in,txswing_in,txswing_in,txswing_in}),
        .txsyncallin_in({txsyncallin_all,txsyncallin_all,txsyncallin_all,txsyncallin_all,txsyncallin_all,txsyncallin_all,txsyncallin_all,txsyncallin_all}),
        .txsyncdone_out(NLW_pcie3_ultrascale_0_gt_i_txsyncdone_out_UNCONNECTED[7:0]),
        .txsyncin_in({txsyncout_out,txsyncout_out,txsyncout_out,txsyncout_out,txsyncout_out,txsyncout_out,txsyncout_out,txsyncout_out}),
        .txsyncmode_in({1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txsyncout_out({txsyncout_out,NLW_pcie3_ultrascale_0_gt_i_txsyncout_out_UNCONNECTED[6:0]}),
        .txuserrdy_in({rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in,rxuserrdy_in}),
        .txusrclk2_in({CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK}),
        .txusrclk_in({CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK,CLK_PCLK}));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    pcie3_ultrascale_0_gt_i_i_1
       (.I0(gt_pcierateqpllpd[0]),
        .I1(rst_qpll1pd),
        .I2(pcie3_ultrascale_0_gt_i_n_381),
        .O(qpll1pd_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_10
       (.I0(pcie3_ultrascale_0_gt_i_n_354),
        .O(rx8b10ben_in[3]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_11
       (.I0(pcie3_ultrascale_0_gt_i_n_355),
        .O(rx8b10ben_in[2]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_12
       (.I0(pcie3_ultrascale_0_gt_i_n_356),
        .O(rx8b10ben_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_13
       (.I0(pcie3_ultrascale_0_gt_i_n_357),
        .O(rx8b10ben_in[0]));
  LUT3 #(
    .INIT(8'h80)) 
    pcie3_ultrascale_0_gt_i_i_14
       (.I0(pcie3_ultrascale_0_gt_i_i_15_n_0),
        .I1(gt_txphaligndone[3]),
        .I2(gt_txphaligndone[2]),
        .O(txsyncallin_all));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    pcie3_ultrascale_0_gt_i_i_15
       (.I0(gt_txphaligndone[1]),
        .I1(gt_txphaligndone[0]),
        .I2(gt_txphaligndone[6]),
        .I3(gt_txphaligndone[7]),
        .I4(gt_txphaligndone[4]),
        .I5(gt_txphaligndone[5]),
        .O(pcie3_ultrascale_0_gt_i_i_15_n_0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    pcie3_ultrascale_0_gt_i_i_2
       (.I0(gt_pcierateqpllpd[8]),
        .I1(rst_qpll1pd),
        .I2(gt_pcierateqpllpd[6]),
        .O(qpll1pd_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    pcie3_ultrascale_0_gt_i_i_3
       (.I0(gt_pcierateqpllreset[0]),
        .I1(rst_qpll1reset),
        .I2(pcie3_ultrascale_0_gt_i_n_397),
        .O(qpll1reset_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    pcie3_ultrascale_0_gt_i_i_4
       (.I0(gt_pcierateqpllreset[8]),
        .I1(rst_qpll1reset),
        .I2(gt_pcierateqpllreset[6]),
        .O(qpll1reset_in[0]));
  LUT2 #(
    .INIT(4'h8)) 
    pcie3_ultrascale_0_gt_i_i_5
       (.I0(int_qpll1lock_out[0]),
        .I1(int_qpll1lock_out[1]),
        .O(pcie3_ultrascale_0_gt_i_i_5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_6
       (.I0(pcie3_ultrascale_0_gt_i_n_350),
        .O(rx8b10ben_in[7]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_7
       (.I0(pcie3_ultrascale_0_gt_i_n_351),
        .O(rx8b10ben_in[6]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_8
       (.I0(pcie3_ultrascale_0_gt_i_n_352),
        .O(rx8b10ben_in[5]));
  LUT1 #(
    .INIT(2'h1)) 
    pcie3_ultrascale_0_gt_i_i_9
       (.I0(pcie3_ultrascale_0_gt_i_n_353),
        .O(rx8b10ben_in[4]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_init_ctrl" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_init_ctrl
   (RESETN,
    Q,
    SR,
    MGMTSTICKYRESETN,
    idle_reg,
    phy_rst_idle);
  output RESETN;
  output [1:0]Q;
  output [0:0]SR;
  output MGMTSTICKYRESETN;
  input idle_reg;
  input phy_rst_idle;

  wire MGMTSTICKYRESETN;
  wire [1:0]Q;
  wire RESETN;
  wire [0:0]SR;
  wire idle_reg;
  wire p_0_in;
  wire phy_rst_idle;
  wire reg_cold_reset0;
  wire \reg_cold_reset_reg_n_0_[0] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]reg_phy_rdy;
  wire \reg_phy_rdy[1]_i_1_n_0 ;
  wire [1:0]reg_reset_timer;
  wire reg_reset_timer0;
  wire \reg_reset_timer[0]_i_1_n_0 ;
  wire \reg_reset_timer[1]_i_2_n_0 ;
  wire \reg_state[0]_i_1_n_0 ;
  wire \reg_state[2]_i_1_n_0 ;

  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'hE)) 
    PCIE_3_1_inst_i_2
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(MGMTSTICKYRESETN));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h8)) 
    PCIE_3_1_inst_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(RESETN));
  LUT2 #(
    .INIT(4'h7)) 
    \pipe_stages_1.pipe_tx_elec_idle_q_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_cold_reset[1]_i_1 
       (.I0(p_0_in),
        .I1(reg_phy_rdy[1]),
        .O(reg_cold_reset0));
  FDSE #(
    .INIT(1'b1)) 
    \reg_cold_reset_reg[0] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(\reg_cold_reset_reg_n_0_[0] ),
        .S(reg_cold_reset0));
  FDSE #(
    .INIT(1'b1)) 
    \reg_cold_reset_reg[1] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(\reg_cold_reset_reg_n_0_[0] ),
        .Q(p_0_in),
        .S(reg_cold_reset0));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_phy_rdy[1]_i_1 
       (.I0(phy_rst_idle),
        .O(\reg_phy_rdy[1]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDPE #(
    .INIT(1'b1)) 
    \reg_phy_rdy_reg[0] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\reg_phy_rdy[1]_i_1_n_0 ),
        .Q(reg_phy_rdy[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDPE #(
    .INIT(1'b1)) 
    \reg_phy_rdy_reg[1] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(reg_phy_rdy[0]),
        .PRE(\reg_phy_rdy[1]_i_1_n_0 ),
        .Q(reg_phy_rdy[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \reg_reset_timer[0]_i_1 
       (.I0(reg_reset_timer[0]),
        .O(\reg_reset_timer[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \reg_reset_timer[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(reg_reset_timer[1]),
        .I3(reg_reset_timer[0]),
        .O(reg_reset_timer0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \reg_reset_timer[1]_i_2 
       (.I0(reg_reset_timer[0]),
        .I1(reg_reset_timer[1]),
        .O(\reg_reset_timer[1]_i_2_n_0 ));
  FDCE \reg_reset_timer_reg[0] 
       (.C(idle_reg),
        .CE(reg_reset_timer0),
        .CLR(\reg_phy_rdy[1]_i_1_n_0 ),
        .D(\reg_reset_timer[0]_i_1_n_0 ),
        .Q(reg_reset_timer[0]));
  FDCE \reg_reset_timer_reg[1] 
       (.C(idle_reg),
        .CE(reg_reset_timer0),
        .CLR(\reg_phy_rdy[1]_i_1_n_0 ),
        .D(\reg_reset_timer[1]_i_2_n_0 ),
        .Q(reg_reset_timer[1]));
  LUT3 #(
    .INIT(8'h2B)) 
    \reg_state[0]_i_1 
       (.I0(Q[0]),
        .I1(reg_phy_rdy[1]),
        .I2(Q[1]),
        .O(\reg_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h11111111F1111111)) 
    \reg_state[2]_i_1 
       (.I0(reg_phy_rdy[1]),
        .I1(SR),
        .I2(reg_reset_timer[0]),
        .I3(reg_reset_timer[1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\reg_state[2]_i_1_n_0 ));
  FDCE \reg_state_reg[0] 
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(p_0_in),
        .D(\reg_state[0]_i_1_n_0 ),
        .Q(Q[0]));
  FDCE \reg_state_reg[2] 
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(p_0_in),
        .D(\reg_state[2]_i_1_n_0 ),
        .Q(Q[1]));
endmodule

(* ARI_CAP_ENABLE = "FALSE" *) (* AXISTEN_IF_CC_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_CC_PARITY_CHK = "FALSE" *) 
(* AXISTEN_IF_CQ_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_ENABLE_CLIENT_TAG = "TRUE" *) (* AXISTEN_IF_ENABLE_MSG_ROUTE = "18'b000000000000000000" *) 
(* AXISTEN_IF_ENABLE_RX_MSG_INTFC = "FALSE" *) (* AXISTEN_IF_RC_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_RC_STRADDLE = "FALSE" *) 
(* AXISTEN_IF_RQ_ALIGNMENT_MODE = "FALSE" *) (* AXISTEN_IF_RQ_PARITY_CHK = "FALSE" *) (* AXISTEN_IF_WIDTH = "2'b01" *) 
(* CFG_CTL_IF = "TRUE" *) (* CFG_EXT_IF = "TRUE" *) (* CFG_FC_IF = "TRUE" *) 
(* CFG_MGMT_IF = "TRUE" *) (* CFG_STATUS_IF = "TRUE" *) (* CFG_TX_MSG_IF = "TRUE" *) 
(* COMPLETION_SPACE = "16KB" *) (* CORE_CLK_FREQ = "1" *) (* CRM_CORE_CLK_FREQ_500 = "FALSE" *) 
(* CRM_USER_CLK_FREQ = "2'b10" *) (* C_DATA_WIDTH = "128" *) (* DEBUG_CFG_LOCAL_MGMT_REG_ACCESS_OVERRIDE = "FALSE" *) 
(* DEBUG_PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) (* DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS = "FALSE" *) (* DEDICATE_PERST = "TRUE" *) 
(* DEV_PORT_TYPE = "0" *) (* DIS_GT_WIZARD = "FALSE" *) (* DNSTREAM_LINK_NUM = "8'b00000000" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* EN_GT_SELECTION = "FALSE" *) (* EXT_CH_GT_DRP = "FALSE" *) 
(* EXT_PIPE_SIM = "FALSE" *) (* EXT_STARTUP_PRIMITIVE = "FALSE" *) (* INTERFACE_SPEED = "500MHZ" *) 
(* KEEP_WIDTH = "4" *) (* LL_ACK_TIMEOUT = "9'b000000000" *) (* LL_ACK_TIMEOUT_EN = "FALSE" *) 
(* LL_ACK_TIMEOUT_FUNC = "0" *) (* LL_CPL_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_CPL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
(* LL_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) (* LL_NP_FC_UPDATE_TIMER = "16'b0000000000000000" *) 
(* LL_NP_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) (* LL_P_FC_UPDATE_TIMER = "16'b0000000000000000" *) (* LL_P_FC_UPDATE_TIMER_OVERRIDE = "FALSE" *) 
(* LL_REPLAY_TIMEOUT = "9'b000000000" *) (* LL_REPLAY_TIMEOUT_EN = "FALSE" *) (* LL_REPLAY_TIMEOUT_FUNC = "0" *) 
(* LTR_TX_MESSAGE_MINIMUM_INTERVAL = "10'b0011111010" *) (* LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE = "FALSE" *) (* LTR_TX_MESSAGE_ON_LTR_ENABLE = "FALSE" *) 
(* MCAP_CAP_NEXTPTR = "0" *) (* MCAP_CONFIGURE_OVERRIDE = "FALSE" *) (* MCAP_ENABLE = "FALSE" *) 
(* MCAP_ENABLEMENT = "NONE" *) (* MCAP_EOS_DESIGN_SWITCH = "FALSE" *) (* MCAP_FPGA_BITSTREAM_VERSION = "0" *) 
(* MCAP_GATE_IO_ENABLE_DESIGN_SWITCH = "FALSE" *) (* MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH = "FALSE" *) (* MCAP_INPUT_GATE_DESIGN_SWITCH = "FALSE" *) 
(* MCAP_INTERRUPT_ON_MCAP_EOS = "FALSE" *) (* MCAP_INTERRUPT_ON_MCAP_ERROR = "FALSE" *) (* MCAP_VSEC_ID = "16'b0000000000000001" *) 
(* MCAP_VSEC_LEN = "12'b000000101100" *) (* MCAP_VSEC_REV = "4'b0000" *) (* MSIX_EN = "FALSE" *) 
(* MSI_EN = "TRUE" *) (* NO_DECODE_LOGIC = "FALSE" *) (* ORIG_REF_NAME = "pcie3_ultrascale_0_pcie3_uscale_core_top" *) 
(* PCIE3_DRP = "FALSE" *) (* PCIE_CHAN_BOND = "0" *) (* PCIE_CHAN_BOND_EN = "FALSE" *) 
(* PCIE_CONFIGURATION = "FALSE" *) (* PCIE_EXT_CLK = "FALSE" *) (* PCIE_FAST_CONFIG = "NONE" *) 
(* PCIE_GT_DEVICE = "GTH" *) (* PCIE_LINK_SPEED = "3" *) (* PCIE_LPM_DFE = "LPM" *) 
(* PCIE_TXBUF_EN = "FALSE" *) (* PCIE_USE_MODE = "2.0" *) (* PER_FUNC_STATUS_IF = "TRUE" *) 
(* PF0_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) (* PF0_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) (* PF0_AER_CAP_NEXTPTR = "336" *) 
(* PF0_ARI_CAP_NEXTPTR = "0" *) (* PF0_ARI_CAP_NEXT_FUNC = "0" *) (* PF0_ARI_CAP_VER = "4'b0001" *) 
(* PF0_BAR0_APERTURE_SIZE = "13" *) (* PF0_BAR0_CONTROL = "4" *) (* PF0_BAR1_APERTURE_SIZE = "0" *) 
(* PF0_BAR1_CONTROL = "0" *) (* PF0_BAR2_APERTURE_SIZE = "13" *) (* PF0_BAR2_CONTROL = "4" *) 
(* PF0_BAR3_APERTURE_SIZE = "0" *) (* PF0_BAR3_CONTROL = "0" *) (* PF0_BAR4_APERTURE_SIZE = "13" *) 
(* PF0_BAR4_CONTROL = "4" *) (* PF0_BAR5_APERTURE_SIZE = "0" *) (* PF0_BAR5_CONTROL = "0" *) 
(* PF0_BIST_REGISTER = "8'b00000000" *) (* PF0_CAPABILITY_POINTER = "128" *) (* PF0_CLASS_CODE = "360448" *) 
(* PF0_DEVICE_ID = "1296" *) (* PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) 
(* PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_ARI_FORWARD_ENABLE = "FALSE" *) (* PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE = "TRUE" *) 
(* PF0_DEV_CAP2_LTR_SUPPORT = "FALSE" *) (* PF0_DEV_CAP2_OBFF_SUPPORT = "0" *) (* PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT = "FALSE" *) 
(* PF0_DEV_CAP_ENDPOINT_L0S_LATENCY = "0" *) (* PF0_DEV_CAP_ENDPOINT_L1_LATENCY = "0" *) (* PF0_DEV_CAP_EXT_TAG_SUPPORTED = "FALSE" *) 
(* PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE = "FALSE" *) (* PF0_DEV_CAP_MAX_PAYLOAD_SIZE = "2" *) (* PF0_DPA_CAP_NEXTPTR = "0" *) 
(* PF0_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) (* PF0_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "0" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "0" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "0" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "0" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "0" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "0" *) (* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "0" *) 
(* PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "0" *) (* PF0_DPA_CAP_VER = "4'b0001" *) (* PF0_DSN_CAP_NEXTPTR = "0" *) 
(* PF0_EXPANSION_ROM_APERTURE_SIZE = "0" *) (* PF0_EXPANSION_ROM_ENABLE = "FALSE" *) (* PF0_INTERRUPT_LINE = "8'b00000000" *) 
(* PF0_INTERRUPT_PIN = "1" *) (* PF0_LINK_CAP_ASPM_SUPPORT = "0" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
(* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1 = "7" *) 
(* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2 = "7" *) (* PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1 = "7" *) 
(* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1 = "7" *) 
(* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2 = "7" *) (* PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3 = "7" *) (* PF0_LINK_STATUS_SLOT_CLOCK_CONFIG = "TRUE" *) 
(* PF0_LTR_CAP_MAX_NOSNOOP_LAT = "10'b0000000000" *) (* PF0_LTR_CAP_MAX_SNOOP_LAT = "10'b0000000000" *) (* PF0_LTR_CAP_NEXTPTR = "0" *) 
(* PF0_LTR_CAP_VER = "4'b0001" *) (* PF0_MSIX_CAP_NEXTPTR = "0" *) (* PF0_MSIX_CAP_PBA_BIR = "0" *) 
(* PF0_MSIX_CAP_PBA_OFFSET = "0" *) (* PF0_MSIX_CAP_TABLE_BIR = "0" *) (* PF0_MSIX_CAP_TABLE_OFFSET = "0" *) 
(* PF0_MSIX_CAP_TABLE_SIZE = "0" *) (* PF0_MSI_CAP_MULTIMSGCAP = "0" *) (* PF0_MSI_CAP_NEXTPTR = "192" *) 
(* PF0_MSI_CAP_PERVECMASKCAP = "FALSE" *) (* PF0_PB_CAP_DATA_REG_D0 = "0" *) (* PF0_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
(* PF0_PB_CAP_DATA_REG_D1 = "0" *) (* PF0_PB_CAP_DATA_REG_D3HOT = "0" *) (* PF0_PB_CAP_NEXTPTR = "0" *) 
(* PF0_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) (* PF0_PB_CAP_VER = "4'b0001" *) (* PF0_PM_CAP_ID = "8'b00000001" *) 
(* PF0_PM_CAP_NEXTPTR = "144" *) (* PF0_PM_CAP_PMESUPPORT_D0 = "FALSE" *) (* PF0_PM_CAP_PMESUPPORT_D1 = "FALSE" *) 
(* PF0_PM_CAP_PMESUPPORT_D3HOT = "FALSE" *) (* PF0_PM_CAP_SUPP_D1_STATE = "FALSE" *) (* PF0_PM_CAP_VER_ID = "3'b011" *) 
(* PF0_PM_CSR_NOSOFTRESET = "TRUE" *) (* PF0_RBAR_CAP_ENABLE = "FALSE" *) (* PF0_RBAR_CAP_NEXTPTR = "0" *) 
(* PF0_RBAR_CAP_SIZE0 = "0" *) (* PF0_RBAR_CAP_SIZE1 = "0" *) (* PF0_RBAR_CAP_SIZE2 = "0" *) 
(* PF0_RBAR_CAP_VER = "4'b0001" *) (* PF0_RBAR_CONTROL_INDEX0 = "3'b000" *) (* PF0_RBAR_CONTROL_INDEX1 = "3'b000" *) 
(* PF0_RBAR_CONTROL_INDEX2 = "3'b000" *) (* PF0_RBAR_CONTROL_SIZE0 = "5'b00000" *) (* PF0_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
(* PF0_RBAR_CONTROL_SIZE2 = "5'b00000" *) (* PF0_RBAR_NUM = "3'b001" *) (* PF0_REVISION_ID = "5" *) 
(* PF0_SECONDARY_PCIE_CAP_NEXTPTR = "0" *) (* PF0_SRIOV_BAR0_APERTURE_SIZE = "0" *) (* PF0_SRIOV_BAR0_CONTROL = "0" *) 
(* PF0_SRIOV_BAR1_APERTURE_SIZE = "0" *) (* PF0_SRIOV_BAR1_CONTROL = "0" *) (* PF0_SRIOV_BAR2_APERTURE_SIZE = "0" *) 
(* PF0_SRIOV_BAR2_CONTROL = "0" *) (* PF0_SRIOV_BAR3_APERTURE_SIZE = "0" *) (* PF0_SRIOV_BAR3_CONTROL = "0" *) 
(* PF0_SRIOV_BAR4_APERTURE_SIZE = "0" *) (* PF0_SRIOV_BAR4_CONTROL = "0" *) (* PF0_SRIOV_BAR5_APERTURE_SIZE = "0" *) 
(* PF0_SRIOV_BAR5_CONTROL = "0" *) (* PF0_SRIOV_CAP_INITIAL_VF = "0" *) (* PF0_SRIOV_CAP_NEXTPTR = "0" *) 
(* PF0_SRIOV_CAP_TOTAL_VF = "0" *) (* PF0_SRIOV_CAP_VER = "0" *) (* PF0_SRIOV_FIRST_VF_OFFSET = "0" *) 
(* PF0_SRIOV_FUNC_DEP_LINK = "0" *) (* PF0_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) (* PF0_SRIOV_VF_DEVICE_ID = "0" *) 
(* PF0_SUBSYSTEM_ID = "8288" *) (* PF0_SUBSYSTEM_VENDOR_ID = "6622" *) (* PF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* PF0_TPHR_CAP_ENABLE = "FALSE" *) (* PF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* PF0_TPHR_CAP_NEXTPTR = "0" *) 
(* PF0_TPHR_CAP_ST_MODE_SEL = "0" *) (* PF0_TPHR_CAP_ST_TABLE_LOC = "0" *) (* PF0_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
(* PF0_TPHR_CAP_VER = "1" *) (* PF0_VC_CAP_ENABLE = "FALSE" *) (* PF0_VC_CAP_NEXTPTR = "0" *) 
(* PF0_VC_CAP_VER = "4'b0001" *) (* PF0_VENDOR_ID = "6622" *) (* PF1_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) 
(* PF1_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) (* PF1_AER_CAP_NEXTPTR = "0" *) (* PF1_ARI_CAP_NEXTPTR = "0" *) 
(* PF1_ARI_CAP_NEXT_FUNC = "8'b00000000" *) (* PF1_BAR0_APERTURE_SIZE = "0" *) (* PF1_BAR0_CONTROL = "0" *) 
(* PF1_BAR1_APERTURE_SIZE = "0" *) (* PF1_BAR1_CONTROL = "0" *) (* PF1_BAR2_APERTURE_SIZE = "0" *) 
(* PF1_BAR2_CONTROL = "0" *) (* PF1_BAR3_APERTURE_SIZE = "0" *) (* PF1_BAR3_CONTROL = "0" *) 
(* PF1_BAR4_APERTURE_SIZE = "0" *) (* PF1_BAR4_CONTROL = "0" *) (* PF1_BAR5_APERTURE_SIZE = "0" *) 
(* PF1_BAR5_CONTROL = "0" *) (* PF1_BIST_REGISTER = "8'b00000000" *) (* PF1_CAPABILITY_POINTER = "128" *) 
(* PF1_CLASS_CODE = "360448" *) (* PF1_DEVICE_ID = "32785" *) (* PF1_DEV_CAP_MAX_PAYLOAD_SIZE = "2" *) 
(* PF1_DPA_CAP_NEXTPTR = "0" *) (* PF1_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) (* PF1_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "0" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "0" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "0" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "0" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "0" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "0" *) 
(* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "0" *) (* PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "0" *) (* PF1_DPA_CAP_VER = "4'b0001" *) 
(* PF1_DSN_CAP_NEXTPTR = "0" *) (* PF1_EXPANSION_ROM_APERTURE_SIZE = "0" *) (* PF1_EXPANSION_ROM_ENABLE = "FALSE" *) 
(* PF1_INTERRUPT_LINE = "8'b00000000" *) (* PF1_INTERRUPT_PIN = "0" *) (* PF1_MSIX_CAP_NEXTPTR = "0" *) 
(* PF1_MSIX_CAP_PBA_BIR = "0" *) (* PF1_MSIX_CAP_PBA_OFFSET = "0" *) (* PF1_MSIX_CAP_TABLE_BIR = "0" *) 
(* PF1_MSIX_CAP_TABLE_OFFSET = "0" *) (* PF1_MSIX_CAP_TABLE_SIZE = "0" *) (* PF1_MSI_CAP_MULTIMSGCAP = "0" *) 
(* PF1_MSI_CAP_NEXTPTR = "0" *) (* PF1_MSI_CAP_PERVECMASKCAP = "FALSE" *) (* PF1_PB_CAP_DATA_REG_D0 = "0" *) 
(* PF1_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) (* PF1_PB_CAP_DATA_REG_D1 = "0" *) (* PF1_PB_CAP_DATA_REG_D3HOT = "0" *) 
(* PF1_PB_CAP_NEXTPTR = "0" *) (* PF1_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) (* PF1_PB_CAP_VER = "4'b0001" *) 
(* PF1_PM_CAP_ID = "8'b00000001" *) (* PF1_PM_CAP_NEXTPTR = "0" *) (* PF1_PM_CAP_VER_ID = "3'b011" *) 
(* PF1_RBAR_CAP_ENABLE = "FALSE" *) (* PF1_RBAR_CAP_NEXTPTR = "0" *) (* PF1_RBAR_CAP_SIZE0 = "0" *) 
(* PF1_RBAR_CAP_SIZE1 = "0" *) (* PF1_RBAR_CAP_SIZE2 = "0" *) (* PF1_RBAR_CAP_VER = "4'b0001" *) 
(* PF1_RBAR_CONTROL_INDEX0 = "3'b000" *) (* PF1_RBAR_CONTROL_INDEX1 = "3'b000" *) (* PF1_RBAR_CONTROL_INDEX2 = "3'b000" *) 
(* PF1_RBAR_CONTROL_SIZE0 = "5'b00000" *) (* PF1_RBAR_CONTROL_SIZE1 = "5'b00000" *) (* PF1_RBAR_CONTROL_SIZE2 = "5'b00000" *) 
(* PF1_RBAR_NUM = "3'b001" *) (* PF1_REVISION_ID = "0" *) (* PF1_SRIOV_BAR0_APERTURE_SIZE = "0" *) 
(* PF1_SRIOV_BAR0_CONTROL = "0" *) (* PF1_SRIOV_BAR1_APERTURE_SIZE = "0" *) (* PF1_SRIOV_BAR1_CONTROL = "0" *) 
(* PF1_SRIOV_BAR2_APERTURE_SIZE = "0" *) (* PF1_SRIOV_BAR2_CONTROL = "0" *) (* PF1_SRIOV_BAR3_APERTURE_SIZE = "0" *) 
(* PF1_SRIOV_BAR3_CONTROL = "0" *) (* PF1_SRIOV_BAR4_APERTURE_SIZE = "0" *) (* PF1_SRIOV_BAR4_CONTROL = "0" *) 
(* PF1_SRIOV_BAR5_APERTURE_SIZE = "0" *) (* PF1_SRIOV_BAR5_CONTROL = "0" *) (* PF1_SRIOV_CAP_INITIAL_VF = "0" *) 
(* PF1_SRIOV_CAP_NEXTPTR = "0" *) (* PF1_SRIOV_CAP_TOTAL_VF = "0" *) (* PF1_SRIOV_CAP_VER = "0" *) 
(* PF1_SRIOV_FIRST_VF_OFFSET = "0" *) (* PF1_SRIOV_FUNC_DEP_LINK = "1" *) (* PF1_SRIOV_SUPPORTED_PAGE_SIZE = "1363" *) 
(* PF1_SRIOV_VF_DEVICE_ID = "0" *) (* PF1_SUBSYSTEM_ID = "7" *) (* PF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) 
(* PF1_TPHR_CAP_ENABLE = "FALSE" *) (* PF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* PF1_TPHR_CAP_NEXTPTR = "0" *) 
(* PF1_TPHR_CAP_ST_MODE_SEL = "0" *) (* PF1_TPHR_CAP_ST_TABLE_LOC = "0" *) (* PF1_TPHR_CAP_ST_TABLE_SIZE = "0" *) 
(* PF1_TPHR_CAP_VER = "1" *) (* PF2_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) (* PF2_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) 
(* PF2_AER_CAP_NEXTPTR = "12'b000000000000" *) (* PF2_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* PF2_ARI_CAP_NEXT_FUNC = "8'b00000000" *) 
(* PF2_BAR0_APERTURE_SIZE = "6'b000011" *) (* PF2_BAR0_CONTROL = "3'b100" *) (* PF2_BAR1_APERTURE_SIZE = "6'b000000" *) 
(* PF2_BAR1_CONTROL = "3'b000" *) (* PF2_BAR2_APERTURE_SIZE = "5'b00011" *) (* PF2_BAR2_CONTROL = "3'b100" *) 
(* PF2_BAR3_APERTURE_SIZE = "5'b00011" *) (* PF2_BAR3_CONTROL = "3'b000" *) (* PF2_BAR4_APERTURE_SIZE = "5'b00011" *) 
(* PF2_BAR4_CONTROL = "3'b100" *) (* PF2_BAR5_APERTURE_SIZE = "5'b00011" *) (* PF2_BAR5_CONTROL = "3'b000" *) 
(* PF2_BIST_REGISTER = "8'b00000000" *) (* PF2_CAPABILITY_POINTER = "8'b01010000" *) (* PF2_CLASS_CODE = "24'b000000000000000000000000" *) 
(* PF2_DEVICE_ID = "16'b0000000000000000" *) (* PF2_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b011" *) (* PF2_DPA_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF2_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) (* PF2_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) 
(* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) 
(* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) (* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) 
(* PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) (* PF2_DPA_CAP_VER = "4'b0001" *) (* PF2_DSN_CAP_NEXTPTR = "12'b000100001100" *) 
(* PF2_EXPANSION_ROM_APERTURE_SIZE = "5'b00011" *) (* PF2_EXPANSION_ROM_ENABLE = "FALSE" *) (* PF2_INTERRUPT_LINE = "8'b00000000" *) 
(* PF2_INTERRUPT_PIN = "3'b001" *) (* PF2_MSIX_CAP_NEXTPTR = "8'b00000000" *) (* PF2_MSIX_CAP_PBA_BIR = "0" *) 
(* PF2_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) (* PF2_MSIX_CAP_TABLE_BIR = "0" *) (* PF2_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) 
(* PF2_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) (* PF2_MSI_CAP_MULTIMSGCAP = "0" *) (* PF2_MSI_CAP_NEXTPTR = "8'b00000000" *) 
(* PF2_MSI_CAP_PERVECMASKCAP = "FALSE" *) (* PF2_PB_CAP_DATA_REG_D0 = "0" *) (* PF2_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) 
(* PF2_PB_CAP_DATA_REG_D1 = "0" *) (* PF2_PB_CAP_DATA_REG_D3HOT = "0" *) (* PF2_PB_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF2_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) (* PF2_PB_CAP_VER = "4'b0001" *) (* PF2_PM_CAP_ID = "8'b00000001" *) 
(* PF2_PM_CAP_NEXTPTR = "8'b00000000" *) (* PF2_PM_CAP_VER_ID = "3'b011" *) (* PF2_RBAR_CAP_ENABLE = "FALSE" *) 
(* PF2_RBAR_CAP_NEXTPTR = "12'b000000000000" *) (* PF2_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) (* PF2_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) 
(* PF2_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) (* PF2_RBAR_CAP_VER = "4'b0001" *) (* PF2_RBAR_CONTROL_INDEX0 = "3'b000" *) 
(* PF2_RBAR_CONTROL_INDEX1 = "3'b000" *) (* PF2_RBAR_CONTROL_INDEX2 = "3'b000" *) (* PF2_RBAR_CONTROL_SIZE0 = "5'b00000" *) 
(* PF2_RBAR_CONTROL_SIZE1 = "5'b00000" *) (* PF2_RBAR_CONTROL_SIZE2 = "5'b00000" *) (* PF2_RBAR_NUM = "3'b001" *) 
(* PF2_REVISION_ID = "8'b00000000" *) (* PF2_SRIOV_BAR0_APERTURE_SIZE = "5'b00011" *) (* PF2_SRIOV_BAR0_CONTROL = "3'b100" *) 
(* PF2_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) (* PF2_SRIOV_BAR1_CONTROL = "3'b000" *) (* PF2_SRIOV_BAR2_APERTURE_SIZE = "5'b00011" *) 
(* PF2_SRIOV_BAR2_CONTROL = "3'b100" *) (* PF2_SRIOV_BAR3_APERTURE_SIZE = "5'b00011" *) (* PF2_SRIOV_BAR3_CONTROL = "3'b000" *) 
(* PF2_SRIOV_BAR4_APERTURE_SIZE = "5'b00011" *) (* PF2_SRIOV_BAR4_CONTROL = "3'b100" *) (* PF2_SRIOV_BAR5_APERTURE_SIZE = "5'b00011" *) 
(* PF2_SRIOV_BAR5_CONTROL = "3'b000" *) (* PF2_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) (* PF2_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF2_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) (* PF2_SRIOV_CAP_VER = "4'b0001" *) (* PF2_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) 
(* PF2_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) (* PF2_SRIOV_SUPPORTED_PAGE_SIZE = "0" *) (* PF2_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) 
(* PF2_SUBSYSTEM_ID = "16'b0000000000000000" *) (* PF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* PF2_TPHR_CAP_ENABLE = "FALSE" *) 
(* PF2_TPHR_CAP_INT_VEC_MODE = "TRUE" *) (* PF2_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* PF2_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
(* PF2_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* PF2_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* PF2_TPHR_CAP_VER = "4'b0001" *) 
(* PF3_AER_CAP_ECRC_CHECK_CAPABLE = "FALSE" *) (* PF3_AER_CAP_ECRC_GEN_CAPABLE = "FALSE" *) (* PF3_AER_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF3_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* PF3_ARI_CAP_NEXT_FUNC = "8'b00000000" *) (* PF3_BAR0_APERTURE_SIZE = "6'b000011" *) 
(* PF3_BAR0_CONTROL = "3'b100" *) (* PF3_BAR1_APERTURE_SIZE = "6'b000000" *) (* PF3_BAR1_CONTROL = "3'b000" *) 
(* PF3_BAR2_APERTURE_SIZE = "5'b00011" *) (* PF3_BAR2_CONTROL = "3'b100" *) (* PF3_BAR3_APERTURE_SIZE = "5'b00011" *) 
(* PF3_BAR3_CONTROL = "3'b000" *) (* PF3_BAR4_APERTURE_SIZE = "5'b00011" *) (* PF3_BAR4_CONTROL = "3'b100" *) 
(* PF3_BAR5_APERTURE_SIZE = "5'b00011" *) (* PF3_BAR5_CONTROL = "3'b000" *) (* PF3_BIST_REGISTER = "8'b00000000" *) 
(* PF3_CAPABILITY_POINTER = "8'b01010000" *) (* PF3_CLASS_CODE = "24'b000000000000000000000000" *) (* PF3_DEVICE_ID = "16'b0000000000000000" *) 
(* PF3_DEV_CAP_MAX_PAYLOAD_SIZE = "3'b011" *) (* PF3_DPA_CAP_NEXTPTR = "12'b000000000000" *) (* PF3_DPA_CAP_SUB_STATE_CONTROL = "5'b00000" *) 
(* PF3_DPA_CAP_SUB_STATE_CONTROL_EN = "TRUE" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION0 = "8'b00000000" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION1 = "8'b00000000" *) 
(* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION2 = "8'b00000000" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION3 = "8'b00000000" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION4 = "8'b00000000" *) 
(* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION5 = "8'b00000000" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION6 = "8'b00000000" *) (* PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION7 = "8'b00000000" *) 
(* PF3_DPA_CAP_VER = "4'b0001" *) (* PF3_DSN_CAP_NEXTPTR = "12'b000100001100" *) (* PF3_EXPANSION_ROM_APERTURE_SIZE = "5'b00011" *) 
(* PF3_EXPANSION_ROM_ENABLE = "FALSE" *) (* PF3_INTERRUPT_LINE = "8'b00000000" *) (* PF3_INTERRUPT_PIN = "3'b001" *) 
(* PF3_MSIX_CAP_NEXTPTR = "8'b00000000" *) (* PF3_MSIX_CAP_PBA_BIR = "0" *) (* PF3_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
(* PF3_MSIX_CAP_TABLE_BIR = "0" *) (* PF3_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) (* PF3_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
(* PF3_MSI_CAP_MULTIMSGCAP = "0" *) (* PF3_MSI_CAP_NEXTPTR = "8'b00000000" *) (* PF3_MSI_CAP_PERVECMASKCAP = "FALSE" *) 
(* PF3_PB_CAP_DATA_REG_D0 = "0" *) (* PF3_PB_CAP_DATA_REG_D0_SUSTAINED = "0" *) (* PF3_PB_CAP_DATA_REG_D1 = "0" *) 
(* PF3_PB_CAP_DATA_REG_D3HOT = "0" *) (* PF3_PB_CAP_NEXTPTR = "12'b000000000000" *) (* PF3_PB_CAP_SYSTEM_ALLOCATED = "FALSE" *) 
(* PF3_PB_CAP_VER = "4'b0001" *) (* PF3_PM_CAP_ID = "8'b00000001" *) (* PF3_PM_CAP_NEXTPTR = "8'b00000000" *) 
(* PF3_PM_CAP_VER_ID = "3'b011" *) (* PF3_RBAR_CAP_ENABLE = "FALSE" *) (* PF3_RBAR_CAP_NEXTPTR = "12'b000000000000" *) 
(* PF3_RBAR_CAP_SIZE0 = "20'b00000000000000000000" *) (* PF3_RBAR_CAP_SIZE1 = "20'b00000000000000000000" *) (* PF3_RBAR_CAP_SIZE2 = "20'b00000000000000000000" *) 
(* PF3_RBAR_CAP_VER = "4'b0001" *) (* PF3_RBAR_CONTROL_INDEX0 = "3'b000" *) (* PF3_RBAR_CONTROL_INDEX1 = "3'b000" *) 
(* PF3_RBAR_CONTROL_INDEX2 = "3'b000" *) (* PF3_RBAR_CONTROL_SIZE0 = "5'b00000" *) (* PF3_RBAR_CONTROL_SIZE1 = "5'b00000" *) 
(* PF3_RBAR_CONTROL_SIZE2 = "5'b00000" *) (* PF3_RBAR_NUM = "3'b001" *) (* PF3_REVISION_ID = "8'b00000000" *) 
(* PF3_SRIOV_BAR0_APERTURE_SIZE = "5'b00011" *) (* PF3_SRIOV_BAR0_CONTROL = "3'b100" *) (* PF3_SRIOV_BAR1_APERTURE_SIZE = "5'b00000" *) 
(* PF3_SRIOV_BAR1_CONTROL = "3'b000" *) (* PF3_SRIOV_BAR2_APERTURE_SIZE = "5'b00011" *) (* PF3_SRIOV_BAR2_CONTROL = "3'b100" *) 
(* PF3_SRIOV_BAR3_APERTURE_SIZE = "5'b00011" *) (* PF3_SRIOV_BAR3_CONTROL = "3'b000" *) (* PF3_SRIOV_BAR4_APERTURE_SIZE = "5'b00011" *) 
(* PF3_SRIOV_BAR4_CONTROL = "3'b100" *) (* PF3_SRIOV_BAR5_APERTURE_SIZE = "5'b00011" *) (* PF3_SRIOV_BAR5_CONTROL = "3'b000" *) 
(* PF3_SRIOV_CAP_INITIAL_VF = "16'b0000000000000000" *) (* PF3_SRIOV_CAP_NEXTPTR = "12'b000000000000" *) (* PF3_SRIOV_CAP_TOTAL_VF = "16'b0000000000000000" *) 
(* PF3_SRIOV_CAP_VER = "4'b0001" *) (* PF3_SRIOV_FIRST_VF_OFFSET = "16'b0000000000000000" *) (* PF3_SRIOV_FUNC_DEP_LINK = "16'b0000000000000000" *) 
(* PF3_SRIOV_SUPPORTED_PAGE_SIZE = "0" *) (* PF3_SRIOV_VF_DEVICE_ID = "16'b0000000000000000" *) (* PF3_SUBSYSTEM_ID = "16'b0000000000000000" *) 
(* PF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* PF3_TPHR_CAP_ENABLE = "FALSE" *) (* PF3_TPHR_CAP_INT_VEC_MODE = "TRUE" *) 
(* PF3_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* PF3_TPHR_CAP_ST_MODE_SEL = "3'b000" *) (* PF3_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) 
(* PF3_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* PF3_TPHR_CAP_VER = "4'b0001" *) (* PHY_LP_TXPRESET = "4" *) 
(* PIPE_PIPELINE_STAGES = "1" *) (* PIPE_SIM = "FALSE" *) (* PLL_TYPE = "2" *) 
(* PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3 = "FALSE" *) (* PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2 = "FALSE" *) (* PL_DISABLE_EI_INFER_IN_L0 = "FALSE" *) 
(* PL_DISABLE_GEN3_DC_BALANCE = "FALSE" *) (* PL_DISABLE_GEN3_LFSR_UPDATE_ON_SKP = "TRUE" *) (* PL_DISABLE_RETRAIN_ON_FRAMING_ERROR = "FALSE" *) 
(* PL_DISABLE_SCRAMBLING = "FALSE" *) (* PL_DISABLE_SYNC_HEADER_FRAMING_ERROR = "FALSE" *) (* PL_DISABLE_UPCONFIG_CAPABLE = "FALSE" *) 
(* PL_EQ_ADAPT_DISABLE_COEFF_CHECK = "FALSE" *) (* PL_EQ_ADAPT_DISABLE_PRESET_CHECK = "FALSE" *) (* PL_EQ_ADAPT_ITER_COUNT = "5'b00010" *) 
(* PL_EQ_ADAPT_REJECT_RETRY_COUNT = "2'b01" *) (* PL_EQ_BYPASS_PHASE23 = "FALSE" *) (* PL_EQ_DEFAULT_GEN3_RX_PRESET_HINT = "3'b011" *) 
(* PL_EQ_DEFAULT_GEN3_TX_PRESET = "4'b0100" *) (* PL_EQ_PHASE01_RX_ADAPT = "FALSE" *) (* PL_EQ_SHORT_ADAPT_PHASE = "FALSE" *) 
(* PL_INTERFACE = "FALSE" *) (* PL_LANE0_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE1_EQ_CONTROL = "16'b0011010000000000" *) 
(* PL_LANE2_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE3_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE4_EQ_CONTROL = "16'b0011010000000000" *) 
(* PL_LANE5_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE6_EQ_CONTROL = "16'b0011010000000000" *) (* PL_LANE7_EQ_CONTROL = "16'b0011010000000000" *) 
(* PL_LINK_CAP_MAX_LINK_SPEED = "2" *) (* PL_LINK_CAP_MAX_LINK_WIDTH = "8" *) (* PL_N_FTS_COMCLK_GEN1 = "255" *) 
(* PL_N_FTS_COMCLK_GEN2 = "255" *) (* PL_N_FTS_COMCLK_GEN3 = "255" *) (* PL_N_FTS_GEN1 = "255" *) 
(* PL_N_FTS_GEN2 = "255" *) (* PL_N_FTS_GEN3 = "255" *) (* PL_REPORT_ALL_PHY_ERRORS = "TRUE" *) 
(* PL_SIM_FAST_LINK_TRAINING = "TRUE" *) (* PL_UPSTREAM_FACING = "TRUE" *) (* PM_ASPML0S_TIMEOUT = "16'b0000010111011100" *) 
(* PM_ASPML1_ENTRY_DELAY = "20'b00000000101010111110" *) (* PM_ENABLE_L23_ENTRY = "FALSE" *) (* PM_ENABLE_SLOT_POWER_CAPTURE = "TRUE" *) 
(* PM_L1_REENTRY_DELAY = "25000" *) (* PM_PME_SERVICE_TIMEOUT_DELAY = "20'b00011000011010100000" *) (* PM_PME_TURNOFF_ACK_DELAY = "16'b0000000001100100" *) 
(* RCV_MSG_IF = "TRUE" *) (* REF_CLK_FREQ = "0" *) (* RX_DETECT = "0" *) 
(* SELECT_QUAD = "GTH_Quad_224" *) (* SHARED_LOGIC = "1" *) (* SIM_JTAG_IDCODE = "0" *) 
(* SIM_VERSION = "1.0" *) (* SPARE_BIT0 = "0" *) (* SPARE_BIT1 = "0" *) 
(* SPARE_BIT2 = "0" *) (* SPARE_BIT3 = "0" *) (* SPARE_BIT4 = "0" *) 
(* SPARE_BIT5 = "0" *) (* SPARE_BIT6 = "0" *) (* SPARE_BIT7 = "0" *) 
(* SPARE_BIT8 = "0" *) (* SPARE_BYTE0 = "8'b00000000" *) (* SPARE_BYTE1 = "8'b00000000" *) 
(* SPARE_BYTE2 = "8'b00000000" *) (* SPARE_BYTE3 = "8'b00000000" *) (* SPARE_WORD0 = "0" *) 
(* SPARE_WORD1 = "0" *) (* SPARE_WORD2 = "0" *) (* SPARE_WORD3 = "0" *) 
(* SRIOV_CAP_ENABLE = "FALSE" *) (* SYS_RESET_POLARITY = "0" *) (* TCQ = "100" *) 
(* TL_COMPL_TIMEOUT_REG0 = "24'b101111101011110000100000" *) (* TL_COMPL_TIMEOUT_REG1 = "28'b0010111110101111000010000000" *) (* TL_CREDITS_CD = "0" *) 
(* TL_CREDITS_CH = "0" *) (* TL_CREDITS_NPD = "40" *) (* TL_CREDITS_NPH = "32" *) 
(* TL_CREDITS_PD = "408" *) (* TL_CREDITS_PH = "32" *) (* TL_ENABLE_MESSAGE_RID_CHECK_ENABLE = "TRUE" *) 
(* TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) (* TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE = "FALSE" *) (* TL_LEGACY_MODE_ENABLE = "FALSE" *) 
(* TL_PF_ENABLE_REG = "0" *) (* TL_TX_MUX_STRICT_PRIORITY = "TRUE" *) (* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) 
(* TWO_LAYER_MODE_DLCMSM_ENABLE = "TRUE" *) (* TWO_LAYER_MODE_ENABLE = "FALSE" *) (* TWO_LAYER_MODE_WIDTH_256 = "TRUE" *) 
(* TX_FC_IF = "TRUE" *) (* USER_CLK_FREQ = "3" *) (* VF0_ARI_CAP_NEXTPTR = "0" *) 
(* VF0_CAPABILITY_POINTER = "128" *) (* VF0_MSIX_CAP_PBA_BIR = "0" *) (* VF0_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF0_MSIX_CAP_TABLE_BIR = "0" *) (* VF0_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF0_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF0_MSI_CAP_MULTIMSGCAP = "0" *) (* VF0_PM_CAP_ID = "8'b00000001" *) (* VF0_PM_CAP_NEXTPTR = "0" *) 
(* VF0_PM_CAP_VER_ID = "3'b011" *) (* VF0_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF0_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF0_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF0_TPHR_CAP_NEXTPTR = "0" *) (* VF0_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF0_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF0_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF0_TPHR_CAP_VER = "1" *) 
(* VF1_ARI_CAP_NEXTPTR = "0" *) (* VF1_MSIX_CAP_PBA_BIR = "0" *) (* VF1_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF1_MSIX_CAP_TABLE_BIR = "0" *) (* VF1_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF1_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF1_MSI_CAP_MULTIMSGCAP = "0" *) (* VF1_PM_CAP_ID = "8'b00000001" *) (* VF1_PM_CAP_NEXTPTR = "0" *) 
(* VF1_PM_CAP_VER_ID = "3'b011" *) (* VF1_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF1_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF1_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF1_TPHR_CAP_NEXTPTR = "0" *) (* VF1_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF1_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF1_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF1_TPHR_CAP_VER = "1" *) 
(* VF2_ARI_CAP_NEXTPTR = "0" *) (* VF2_MSIX_CAP_PBA_BIR = "0" *) (* VF2_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF2_MSIX_CAP_TABLE_BIR = "0" *) (* VF2_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF2_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF2_MSI_CAP_MULTIMSGCAP = "0" *) (* VF2_PM_CAP_ID = "8'b00000001" *) (* VF2_PM_CAP_NEXTPTR = "0" *) 
(* VF2_PM_CAP_VER_ID = "3'b011" *) (* VF2_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF2_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF2_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF2_TPHR_CAP_NEXTPTR = "0" *) (* VF2_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF2_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF2_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF2_TPHR_CAP_VER = "1" *) 
(* VF3_ARI_CAP_NEXTPTR = "0" *) (* VF3_MSIX_CAP_PBA_BIR = "0" *) (* VF3_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF3_MSIX_CAP_TABLE_BIR = "0" *) (* VF3_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF3_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF3_MSI_CAP_MULTIMSGCAP = "0" *) (* VF3_PM_CAP_ID = "8'b00000001" *) (* VF3_PM_CAP_NEXTPTR = "0" *) 
(* VF3_PM_CAP_VER_ID = "3'b011" *) (* VF3_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF3_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF3_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF3_TPHR_CAP_NEXTPTR = "0" *) (* VF3_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF3_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF3_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF3_TPHR_CAP_VER = "1" *) 
(* VF4_ARI_CAP_NEXTPTR = "0" *) (* VF4_MSIX_CAP_PBA_BIR = "0" *) (* VF4_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF4_MSIX_CAP_TABLE_BIR = "0" *) (* VF4_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF4_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF4_MSI_CAP_MULTIMSGCAP = "0" *) (* VF4_PM_CAP_ID = "8'b00000001" *) (* VF4_PM_CAP_NEXTPTR = "0" *) 
(* VF4_PM_CAP_VER_ID = "3'b011" *) (* VF4_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF4_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF4_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF4_TPHR_CAP_NEXTPTR = "0" *) (* VF4_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF4_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF4_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF4_TPHR_CAP_VER = "1" *) 
(* VF5_ARI_CAP_NEXTPTR = "0" *) (* VF5_MSIX_CAP_PBA_BIR = "0" *) (* VF5_MSIX_CAP_PBA_OFFSET = "0" *) 
(* VF5_MSIX_CAP_TABLE_BIR = "0" *) (* VF5_MSIX_CAP_TABLE_OFFSET = "0" *) (* VF5_MSIX_CAP_TABLE_SIZE = "0" *) 
(* VF5_MSI_CAP_MULTIMSGCAP = "0" *) (* VF5_PM_CAP_ID = "8'b00000001" *) (* VF5_PM_CAP_NEXTPTR = "0" *) 
(* VF5_PM_CAP_VER_ID = "3'b011" *) (* VF5_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF5_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF5_TPHR_CAP_INT_VEC_MODE = "FALSE" *) (* VF5_TPHR_CAP_NEXTPTR = "0" *) (* VF5_TPHR_CAP_ST_MODE_SEL = "0" *) 
(* VF5_TPHR_CAP_ST_TABLE_LOC = "0" *) (* VF5_TPHR_CAP_ST_TABLE_SIZE = "0" *) (* VF5_TPHR_CAP_VER = "1" *) 
(* VF6_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF6_MSIX_CAP_PBA_BIR = "0" *) (* VF6_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
(* VF6_MSIX_CAP_TABLE_BIR = "0" *) (* VF6_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) (* VF6_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
(* VF6_MSI_CAP_MULTIMSGCAP = "0" *) (* VF6_PM_CAP_ID = "8'b00000001" *) (* VF6_PM_CAP_NEXTPTR = "8'b00000000" *) 
(* VF6_PM_CAP_VER_ID = "3'b011" *) (* VF6_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF6_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF6_TPHR_CAP_INT_VEC_MODE = "TRUE" *) (* VF6_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* VF6_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
(* VF6_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF6_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* VF6_TPHR_CAP_VER = "4'b0001" *) 
(* VF7_ARI_CAP_NEXTPTR = "12'b000000000000" *) (* VF7_MSIX_CAP_PBA_BIR = "0" *) (* VF7_MSIX_CAP_PBA_OFFSET = "29'b00000000000000000000001010000" *) 
(* VF7_MSIX_CAP_TABLE_BIR = "0" *) (* VF7_MSIX_CAP_TABLE_OFFSET = "29'b00000000000000000000001000000" *) (* VF7_MSIX_CAP_TABLE_SIZE = "11'b00000000000" *) 
(* VF7_MSI_CAP_MULTIMSGCAP = "0" *) (* VF7_PM_CAP_ID = "8'b00000001" *) (* VF7_PM_CAP_NEXTPTR = "8'b00000000" *) 
(* VF7_PM_CAP_VER_ID = "3'b011" *) (* VF7_TPHR_CAP_DEV_SPECIFIC_MODE = "TRUE" *) (* VF7_TPHR_CAP_ENABLE = "FALSE" *) 
(* VF7_TPHR_CAP_INT_VEC_MODE = "TRUE" *) (* VF7_TPHR_CAP_NEXTPTR = "12'b000000000000" *) (* VF7_TPHR_CAP_ST_MODE_SEL = "3'b000" *) 
(* VF7_TPHR_CAP_ST_TABLE_LOC = "2'b00" *) (* VF7_TPHR_CAP_ST_TABLE_SIZE = "11'b00000000000" *) (* VF7_TPHR_CAP_VER = "4'b0001" *) 
(* en_msi_per_vec_masking = "FALSE" *) (* gen_x0y0_xdc = "1" *) (* gen_x0y1_xdc = "0" *) 
(* gen_x0y2_xdc = "0" *) (* gen_x0y3_xdc = "0" *) (* gen_x0y4_xdc = "0" *) 
(* gen_x0y5_xdc = "0" *) (* pcie_blk_locn = "0" *) (* silicon_revision = "Production" *) 
(* xlnx_ref_board = "0" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_core_top
   (pci_exp_txn,
    pci_exp_txp,
    pci_exp_rxn,
    pci_exp_rxp,
    user_clk,
    user_reset,
    user_lnk_up,
    s_axis_rq_tdata,
    s_axis_rq_tkeep,
    s_axis_rq_tlast,
    s_axis_rq_tready,
    s_axis_rq_tuser,
    s_axis_rq_tvalid,
    m_axis_rc_tdata,
    m_axis_rc_tkeep,
    m_axis_rc_tlast,
    m_axis_rc_tready,
    m_axis_rc_tuser,
    m_axis_rc_tvalid,
    m_axis_cq_tdata,
    m_axis_cq_tkeep,
    m_axis_cq_tlast,
    m_axis_cq_tready,
    m_axis_cq_tuser,
    m_axis_cq_tvalid,
    s_axis_cc_tdata,
    s_axis_cc_tkeep,
    s_axis_cc_tlast,
    s_axis_cc_tready,
    s_axis_cc_tuser,
    s_axis_cc_tvalid,
    pcie_rq_seq_num,
    pcie_rq_seq_num_vld,
    pcie_rq_tag,
    pcie_rq_tag_av,
    pcie_rq_tag_vld,
    pcie_tfc_nph_av,
    pcie_tfc_npd_av,
    pcie_cq_np_req,
    pcie_cq_np_req_count,
    cfg_phy_link_down,
    cfg_phy_link_status,
    cfg_negotiated_width,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    cfg_function_status,
    cfg_function_power_state,
    cfg_vf_status,
    cfg_vf_power_state,
    cfg_link_power_state,
    cfg_mgmt_addr,
    cfg_mgmt_write,
    cfg_mgmt_write_data,
    cfg_mgmt_byte_enable,
    cfg_mgmt_read,
    cfg_mgmt_read_data,
    cfg_mgmt_read_write_done,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_err_cor_out,
    cfg_err_nonfatal_out,
    cfg_err_fatal_out,
    cfg_local_error,
    cfg_ltr_enable,
    cfg_ltssm_state,
    cfg_rcb_status,
    cfg_dpa_substate_change,
    cfg_obff_enable,
    cfg_pl_status_change,
    cfg_tph_requester_enable,
    cfg_tph_st_mode,
    cfg_vf_tph_requester_enable,
    cfg_vf_tph_st_mode,
    cfg_msg_received,
    cfg_msg_received_data,
    cfg_msg_received_type,
    cfg_msg_transmit,
    cfg_msg_transmit_type,
    cfg_msg_transmit_data,
    cfg_msg_transmit_done,
    cfg_fc_ph,
    cfg_fc_pd,
    cfg_fc_nph,
    cfg_fc_npd,
    cfg_fc_cplh,
    cfg_fc_cpld,
    cfg_fc_sel,
    cfg_per_func_status_control,
    cfg_per_func_status_data,
    cfg_per_function_number,
    cfg_per_function_output_request,
    cfg_per_function_update_done,
    cfg_dsn,
    cfg_power_state_change_ack,
    cfg_power_state_change_interrupt,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_flr_in_process,
    cfg_flr_done,
    cfg_vf_flr_in_process,
    cfg_vf_flr_done,
    cfg_link_training_enable,
    cfg_ext_read_received,
    cfg_ext_write_received,
    cfg_ext_register_number,
    cfg_ext_function_number,
    cfg_ext_write_data,
    cfg_ext_write_byte_enable,
    cfg_ext_read_data,
    cfg_ext_read_data_valid,
    cfg_interrupt_int,
    cfg_interrupt_pending,
    cfg_interrupt_sent,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msi_mmenable,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_data,
    cfg_interrupt_msi_select,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msi_pending_status_data_enable,
    cfg_interrupt_msi_pending_status_function_num,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msix_enable,
    cfg_interrupt_msix_mask,
    cfg_interrupt_msix_vf_enable,
    cfg_interrupt_msix_vf_mask,
    cfg_interrupt_msix_data,
    cfg_interrupt_msix_address,
    cfg_interrupt_msix_int,
    cfg_interrupt_msix_sent,
    cfg_interrupt_msix_fail,
    cfg_interrupt_msi_attr,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msi_tph_type,
    cfg_interrupt_msi_tph_st_tag,
    cfg_interrupt_msi_function_number,
    cfg_hot_reset_out,
    cfg_config_space_enable,
    cfg_req_pm_transition_l23_ready,
    cfg_hot_reset_in,
    cfg_ds_port_number,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    cfg_subsys_vend_id,
    drp_rdy,
    drp_do,
    drp_clk,
    drp_en,
    drp_we,
    drp_addr,
    drp_di,
    user_tph_stt_address,
    user_tph_function_num,
    user_tph_stt_read_data,
    user_tph_stt_read_data_valid,
    user_tph_stt_read_enable,
    sys_clk,
    sys_clk_gt,
    sys_reset,
    common_commands_in,
    pipe_rx_0_sigs,
    pipe_rx_1_sigs,
    pipe_rx_2_sigs,
    pipe_rx_3_sigs,
    pipe_rx_4_sigs,
    pipe_rx_5_sigs,
    pipe_rx_6_sigs,
    pipe_rx_7_sigs,
    common_commands_out,
    pipe_tx_0_sigs,
    pipe_tx_1_sigs,
    pipe_tx_2_sigs,
    pipe_tx_3_sigs,
    pipe_tx_4_sigs,
    pipe_tx_5_sigs,
    pipe_tx_6_sigs,
    pipe_tx_7_sigs,
    int_qpll1lock_out,
    int_qpll1outrefclk_out,
    int_qpll1outclk_out,
    ext_qpll1refclk,
    ext_qpll1pd,
    ext_qpll1rate,
    ext_qpll1reset,
    ext_qpll1lock_out,
    ext_qpll1outclk_out,
    ext_qpll1outrefclk_out,
    ext_ch_gt_drpclk,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe,
    ext_ch_gt_drpdi,
    ext_ch_gt_drprdy,
    ext_ch_gt_drpdo,
    gt_pcieuserratedone,
    gt_loopback,
    gt_txprbsforceerr,
    gt_txinhibit,
    gt_txprbssel,
    gt_rxprbssel,
    gt_rxprbscntreset,
    gt_txelecidle,
    gt_txresetdone,
    gt_rxresetdone,
    gt_rxpmaresetdone,
    gt_txphaligndone,
    gt_txphinitdone,
    gt_txdlysresetdone,
    gt_rxphaligndone,
    gt_rxdlysresetdone,
    gt_rxsyncdone,
    gt_eyescandataerror,
    gt_rxprbserr,
    gt_dmonitorout,
    gt_rxcommadet,
    gt_phystatus,
    gt_rxvalid,
    gt_rxcdrlock,
    gt_pcierateidle,
    gt_pcieuserratestart,
    gt_gtpowergood,
    gt_cplllock,
    gt_rxoutclk,
    gt_rxrecclkout,
    gt_qpll1lock,
    gt_rxstatus,
    gt_rxbufstatus,
    gt_bufgtdiv,
    phy_txeq_ctrl,
    phy_txeq_preset,
    phy_rst_fsm,
    phy_txeq_fsm,
    phy_rxeq_fsm,
    phy_rst_idle,
    phy_rrst_n,
    phy_prst_n,
    conf_req_type,
    conf_req_reg_num,
    conf_req_data,
    conf_req_valid,
    conf_req_ready,
    conf_resp_rdata,
    conf_resp_valid,
    mcap_design_switch,
    mcap_eos_in,
    startup_cfgclk,
    startup_cfgmclk,
    startup_di,
    startup_eos,
    startup_preq,
    startup_do,
    startup_dts,
    startup_fcsbo,
    startup_fcsbts,
    startup_gsr,
    startup_gts,
    startup_keyclearb,
    startup_pack,
    startup_usrcclko,
    startup_usrcclkts,
    startup_usrdoneo,
    startup_usrdonets,
    cap_req,
    cap_gnt,
    cap_rel,
    pl_eq_reset_eieos_count,
    pl_gen2_upstream_prefer_deemph,
    pl_eq_in_progress,
    pl_eq_phase,
    pcie_perstn1_in,
    pcie_perstn0_out,
    pcie_perstn1_out);
  output [7:0]pci_exp_txn;
  output [7:0]pci_exp_txp;
  input [7:0]pci_exp_rxn;
  input [7:0]pci_exp_rxp;
  output user_clk;
  output user_reset;
  output user_lnk_up;
  input [127:0]s_axis_rq_tdata;
  input [3:0]s_axis_rq_tkeep;
  input s_axis_rq_tlast;
  output [3:0]s_axis_rq_tready;
  input [59:0]s_axis_rq_tuser;
  input s_axis_rq_tvalid;
  output [127:0]m_axis_rc_tdata;
  output [3:0]m_axis_rc_tkeep;
  output m_axis_rc_tlast;
  input m_axis_rc_tready;
  output [74:0]m_axis_rc_tuser;
  output m_axis_rc_tvalid;
  output [127:0]m_axis_cq_tdata;
  output [3:0]m_axis_cq_tkeep;
  output m_axis_cq_tlast;
  input m_axis_cq_tready;
  output [84:0]m_axis_cq_tuser;
  output m_axis_cq_tvalid;
  input [127:0]s_axis_cc_tdata;
  input [3:0]s_axis_cc_tkeep;
  input s_axis_cc_tlast;
  output [3:0]s_axis_cc_tready;
  input [32:0]s_axis_cc_tuser;
  input s_axis_cc_tvalid;
  output [3:0]pcie_rq_seq_num;
  output pcie_rq_seq_num_vld;
  output [5:0]pcie_rq_tag;
  output [1:0]pcie_rq_tag_av;
  output pcie_rq_tag_vld;
  output [1:0]pcie_tfc_nph_av;
  output [1:0]pcie_tfc_npd_av;
  input pcie_cq_np_req;
  output [5:0]pcie_cq_np_req_count;
  output cfg_phy_link_down;
  output [1:0]cfg_phy_link_status;
  output [3:0]cfg_negotiated_width;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [15:0]cfg_function_status;
  output [11:0]cfg_function_power_state;
  output [15:0]cfg_vf_status;
  output [23:0]cfg_vf_power_state;
  output [1:0]cfg_link_power_state;
  input [18:0]cfg_mgmt_addr;
  input cfg_mgmt_write;
  input [31:0]cfg_mgmt_write_data;
  input [3:0]cfg_mgmt_byte_enable;
  input cfg_mgmt_read;
  output [31:0]cfg_mgmt_read_data;
  output cfg_mgmt_read_write_done;
  input cfg_mgmt_type1_cfg_reg_access;
  output cfg_err_cor_out;
  output cfg_err_nonfatal_out;
  output cfg_err_fatal_out;
  output cfg_local_error;
  output cfg_ltr_enable;
  output [5:0]cfg_ltssm_state;
  output [3:0]cfg_rcb_status;
  output [3:0]cfg_dpa_substate_change;
  output [1:0]cfg_obff_enable;
  output cfg_pl_status_change;
  output [3:0]cfg_tph_requester_enable;
  output [11:0]cfg_tph_st_mode;
  output [7:0]cfg_vf_tph_requester_enable;
  output [23:0]cfg_vf_tph_st_mode;
  output cfg_msg_received;
  output [7:0]cfg_msg_received_data;
  output [4:0]cfg_msg_received_type;
  input cfg_msg_transmit;
  input [2:0]cfg_msg_transmit_type;
  input [31:0]cfg_msg_transmit_data;
  output cfg_msg_transmit_done;
  output [7:0]cfg_fc_ph;
  output [11:0]cfg_fc_pd;
  output [7:0]cfg_fc_nph;
  output [11:0]cfg_fc_npd;
  output [7:0]cfg_fc_cplh;
  output [11:0]cfg_fc_cpld;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_per_func_status_control;
  output [15:0]cfg_per_func_status_data;
  input [3:0]cfg_per_function_number;
  input cfg_per_function_output_request;
  output cfg_per_function_update_done;
  input [63:0]cfg_dsn;
  input cfg_power_state_change_ack;
  output cfg_power_state_change_interrupt;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  output [3:0]cfg_flr_in_process;
  input [3:0]cfg_flr_done;
  output [7:0]cfg_vf_flr_in_process;
  input [7:0]cfg_vf_flr_done;
  input cfg_link_training_enable;
  output cfg_ext_read_received;
  output cfg_ext_write_received;
  output [9:0]cfg_ext_register_number;
  output [7:0]cfg_ext_function_number;
  output [31:0]cfg_ext_write_data;
  output [3:0]cfg_ext_write_byte_enable;
  input [31:0]cfg_ext_read_data;
  input cfg_ext_read_data_valid;
  input [3:0]cfg_interrupt_int;
  input [3:0]cfg_interrupt_pending;
  output cfg_interrupt_sent;
  output [3:0]cfg_interrupt_msi_enable;
  output [7:0]cfg_interrupt_msi_vf_enable;
  output [11:0]cfg_interrupt_msi_mmenable;
  output cfg_interrupt_msi_mask_update;
  output [31:0]cfg_interrupt_msi_data;
  input [3:0]cfg_interrupt_msi_select;
  input [31:0]cfg_interrupt_msi_int;
  input [31:0]cfg_interrupt_msi_pending_status;
  input cfg_interrupt_msi_pending_status_data_enable;
  input [3:0]cfg_interrupt_msi_pending_status_function_num;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_msi_fail;
  output [3:0]cfg_interrupt_msix_enable;
  output [3:0]cfg_interrupt_msix_mask;
  output [7:0]cfg_interrupt_msix_vf_enable;
  output [7:0]cfg_interrupt_msix_vf_mask;
  input [31:0]cfg_interrupt_msix_data;
  input [63:0]cfg_interrupt_msix_address;
  input cfg_interrupt_msix_int;
  output cfg_interrupt_msix_sent;
  output cfg_interrupt_msix_fail;
  input [2:0]cfg_interrupt_msi_attr;
  input cfg_interrupt_msi_tph_present;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input [3:0]cfg_interrupt_msi_function_number;
  output cfg_hot_reset_out;
  input cfg_config_space_enable;
  input cfg_req_pm_transition_l23_ready;
  input cfg_hot_reset_in;
  input [7:0]cfg_ds_port_number;
  input [7:0]cfg_ds_bus_number;
  input [4:0]cfg_ds_device_number;
  input [2:0]cfg_ds_function_number;
  input [15:0]cfg_subsys_vend_id;
  output drp_rdy;
  output [15:0]drp_do;
  input drp_clk;
  input drp_en;
  input drp_we;
  input [9:0]drp_addr;
  input [15:0]drp_di;
  input [4:0]user_tph_stt_address;
  input [3:0]user_tph_function_num;
  output [31:0]user_tph_stt_read_data;
  output user_tph_stt_read_data_valid;
  input user_tph_stt_read_enable;
  input sys_clk;
  input sys_clk_gt;
  input sys_reset;
  input [25:0]common_commands_in;
  input [83:0]pipe_rx_0_sigs;
  input [83:0]pipe_rx_1_sigs;
  input [83:0]pipe_rx_2_sigs;
  input [83:0]pipe_rx_3_sigs;
  input [83:0]pipe_rx_4_sigs;
  input [83:0]pipe_rx_5_sigs;
  input [83:0]pipe_rx_6_sigs;
  input [83:0]pipe_rx_7_sigs;
  output [16:0]common_commands_out;
  output [69:0]pipe_tx_0_sigs;
  output [69:0]pipe_tx_1_sigs;
  output [69:0]pipe_tx_2_sigs;
  output [69:0]pipe_tx_3_sigs;
  output [69:0]pipe_tx_4_sigs;
  output [69:0]pipe_tx_5_sigs;
  output [69:0]pipe_tx_6_sigs;
  output [69:0]pipe_tx_7_sigs;
  output [1:0]int_qpll1lock_out;
  output [1:0]int_qpll1outrefclk_out;
  output [1:0]int_qpll1outclk_out;
  output [1:0]ext_qpll1refclk;
  output [1:0]ext_qpll1pd;
  output [5:0]ext_qpll1rate;
  output [1:0]ext_qpll1reset;
  input [1:0]ext_qpll1lock_out;
  input [1:0]ext_qpll1outclk_out;
  input [1:0]ext_qpll1outrefclk_out;
  output ext_ch_gt_drpclk;
  input [71:0]ext_ch_gt_drpaddr;
  input [7:0]ext_ch_gt_drpen;
  input [7:0]ext_ch_gt_drpwe;
  input [127:0]ext_ch_gt_drpdi;
  output [7:0]ext_ch_gt_drprdy;
  output [127:0]ext_ch_gt_drpdo;
  input [7:0]gt_pcieuserratedone;
  input [23:0]gt_loopback;
  input [7:0]gt_txprbsforceerr;
  input [7:0]gt_txinhibit;
  input [31:0]gt_txprbssel;
  input [31:0]gt_rxprbssel;
  input [7:0]gt_rxprbscntreset;
  output [7:0]gt_txelecidle;
  output [7:0]gt_txresetdone;
  output [7:0]gt_rxresetdone;
  output [7:0]gt_rxpmaresetdone;
  output [7:0]gt_txphaligndone;
  output [7:0]gt_txphinitdone;
  output [7:0]gt_txdlysresetdone;
  output [7:0]gt_rxphaligndone;
  output [7:0]gt_rxdlysresetdone;
  output [7:0]gt_rxsyncdone;
  output [7:0]gt_eyescandataerror;
  output [7:0]gt_rxprbserr;
  output [135:0]gt_dmonitorout;
  output [7:0]gt_rxcommadet;
  output [7:0]gt_phystatus;
  output [7:0]gt_rxvalid;
  output [7:0]gt_rxcdrlock;
  output [7:0]gt_pcierateidle;
  output [7:0]gt_pcieuserratestart;
  output [7:0]gt_gtpowergood;
  output [7:0]gt_cplllock;
  output [7:0]gt_rxoutclk;
  output [7:0]gt_rxrecclkout;
  output [1:0]gt_qpll1lock;
  output [23:0]gt_rxstatus;
  output [23:0]gt_rxbufstatus;
  output [8:0]gt_bufgtdiv;
  output [15:0]phy_txeq_ctrl;
  output [31:0]phy_txeq_preset;
  output [3:0]phy_rst_fsm;
  output [23:0]phy_txeq_fsm;
  output [23:0]phy_rxeq_fsm;
  output phy_rst_idle;
  output phy_rrst_n;
  output phy_prst_n;
  input [1:0]conf_req_type;
  input [3:0]conf_req_reg_num;
  input [31:0]conf_req_data;
  input conf_req_valid;
  output conf_req_ready;
  output [31:0]conf_resp_rdata;
  output conf_resp_valid;
  output mcap_design_switch;
  input mcap_eos_in;
  output startup_cfgclk;
  output startup_cfgmclk;
  output [3:0]startup_di;
  output startup_eos;
  output startup_preq;
  input [3:0]startup_do;
  input [3:0]startup_dts;
  input startup_fcsbo;
  input startup_fcsbts;
  input startup_gsr;
  input startup_gts;
  input startup_keyclearb;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrcclkts;
  input startup_usrdoneo;
  input startup_usrdonets;
  output cap_req;
  input cap_gnt;
  input cap_rel;
  input pl_eq_reset_eieos_count;
  input pl_gen2_upstream_prefer_deemph;
  output pl_eq_in_progress;
  output [1:0]pl_eq_phase;
  input pcie_perstn1_in;
  output pcie_perstn0_out;
  output pcie_perstn1_out;

  wire \<const0> ;
  wire TXEQ_DONE;
  wire [16:0]TXEQ_NEW_COEFF;
  wire adapt_done;
  wire cap_gnt;
  wire cap_rel;
  wire cap_req;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [3:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [7:0]cfg_ext_function_number;
  wire [31:0]cfg_ext_read_data;
  wire cfg_ext_read_data_valid;
  wire cfg_ext_read_received;
  wire [9:0]cfg_ext_register_number;
  wire [3:0]cfg_ext_write_byte_enable;
  wire [31:0]cfg_ext_write_data;
  wire cfg_ext_write_received;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [3:0]cfg_flr_done;
  wire [3:0]cfg_flr_in_process;
  wire [11:0]cfg_function_power_state;
  wire [15:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [3:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [3:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [11:0]cfg_interrupt_msi_mmenable;
  wire [31:0]cfg_interrupt_msi_pending_status;
  wire cfg_interrupt_msi_pending_status_data_enable;
  wire [3:0]cfg_interrupt_msi_pending_status_function_num;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [7:0]cfg_interrupt_msi_vf_enable;
  wire [63:0]cfg_interrupt_msix_address;
  wire [31:0]cfg_interrupt_msix_data;
  wire [3:0]cfg_interrupt_msix_enable;
  wire cfg_interrupt_msix_fail;
  wire cfg_interrupt_msix_int;
  wire [3:0]cfg_interrupt_msix_mask;
  wire cfg_interrupt_msix_sent;
  wire [7:0]cfg_interrupt_msix_vf_enable;
  wire [7:0]cfg_interrupt_msix_vf_mask;
  wire [3:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_local_error;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [3:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [3:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [3:0]cfg_tph_requester_enable;
  wire [11:0]cfg_tph_st_mode;
  wire [7:0]cfg_vf_flr_done;
  wire [7:0]cfg_vf_flr_in_process;
  wire [23:0]cfg_vf_power_state;
  wire [15:0]cfg_vf_status;
  wire [7:0]cfg_vf_tph_requester_enable;
  wire [23:0]cfg_vf_tph_st_mode;
  wire [31:0]conf_req_data;
  wire conf_req_ready;
  wire [3:0]conf_req_reg_num;
  wire [1:0]conf_req_type;
  wire conf_req_valid;
  wire [31:0]conf_resp_rdata;
  wire conf_resp_valid;
  wire core_clk;
  wire [9:0]drp_addr;
  wire drp_clk;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire [71:0]ext_ch_gt_drpaddr;
  wire ext_ch_gt_drpclk;
  wire [127:0]ext_ch_gt_drpdi;
  wire [7:0]ext_ch_gt_drpen;
  wire [7:0]ext_ch_gt_drpwe;
  wire [1:0]ext_qpll1lock_out;
  wire [1:0]ext_qpll1outclk_out;
  wire [1:0]ext_qpll1outrefclk_out;
  wire [8:0]gt_bufgtdiv;
  wire [7:0]gt_cplllock;
  wire [135:0]gt_dmonitorout;
  wire [7:0]gt_eyescandataerror;
  wire [7:0]gt_gtpowergood;
  wire [23:0]gt_loopback;
  wire [7:0]gt_pcierateidle;
  wire [7:0]gt_pcieuserratedone;
  wire [7:0]gt_pcieuserratestart;
  wire [7:0]gt_phystatus;
  wire [23:0]gt_rxbufstatus;
  wire [7:0]gt_rxcdrlock;
  wire [7:0]gt_rxcommadet;
  wire [7:0]gt_rxdlysresetdone;
  wire [7:0]gt_rxphaligndone;
  wire [7:0]gt_rxpmaresetdone;
  wire [7:0]gt_rxprbscntreset;
  wire [7:0]gt_rxprbserr;
  wire [31:0]gt_rxprbssel;
  wire [7:0]gt_rxresetdone;
  wire [23:0]gt_rxstatus;
  wire [7:0]gt_rxsyncdone;
  wire [7:0]gt_rxvalid;
  wire gt_top_i_n_684;
  wire gt_top_i_n_685;
  wire gt_top_i_n_686;
  wire gt_top_i_n_687;
  wire gt_top_i_n_688;
  wire gt_top_i_n_689;
  wire gt_top_i_n_690;
  wire gt_top_i_n_691;
  wire gt_top_i_n_692;
  wire gt_top_i_n_693;
  wire gt_top_i_n_694;
  wire gt_top_i_n_695;
  wire gt_top_i_n_696;
  wire gt_top_i_n_697;
  wire gt_top_i_n_698;
  wire gt_top_i_n_699;
  wire gt_top_i_n_700;
  wire gt_top_i_n_701;
  wire gt_top_i_n_702;
  wire gt_top_i_n_703;
  wire gt_top_i_n_704;
  wire gt_top_i_n_705;
  wire gt_top_i_n_706;
  wire gt_top_i_n_707;
  wire gt_top_i_n_708;
  wire gt_top_i_n_709;
  wire gt_top_i_n_710;
  wire gt_top_i_n_711;
  wire gt_top_i_n_712;
  wire gt_top_i_n_721;
  wire gt_top_i_n_722;
  wire gt_top_i_n_723;
  wire gt_top_i_n_724;
  wire gt_top_i_n_725;
  wire gt_top_i_n_726;
  wire gt_top_i_n_727;
  wire gt_top_i_n_728;
  wire gt_top_i_n_729;
  wire gt_top_i_n_730;
  wire gt_top_i_n_731;
  wire gt_top_i_n_732;
  wire gt_top_i_n_733;
  wire gt_top_i_n_734;
  wire gt_top_i_n_735;
  wire gt_top_i_n_736;
  wire gt_top_i_n_737;
  wire gt_top_i_n_738;
  wire gt_top_i_n_739;
  wire gt_top_i_n_740;
  wire gt_top_i_n_741;
  wire gt_top_i_n_742;
  wire gt_top_i_n_743;
  wire gt_top_i_n_744;
  wire gt_top_i_n_745;
  wire gt_top_i_n_746;
  wire gt_top_i_n_747;
  wire gt_top_i_n_748;
  wire gt_top_i_n_749;
  wire gt_top_i_n_750;
  wire gt_top_i_n_751;
  wire gt_top_i_n_752;
  wire gt_top_i_n_753;
  wire gt_top_i_n_754;
  wire gt_top_i_n_755;
  wire gt_top_i_n_756;
  wire gt_top_i_n_757;
  wire gt_top_i_n_758;
  wire gt_top_i_n_759;
  wire gt_top_i_n_760;
  wire gt_top_i_n_761;
  wire gt_top_i_n_762;
  wire gt_top_i_n_763;
  wire gt_top_i_n_764;
  wire gt_top_i_n_765;
  wire gt_top_i_n_766;
  wire gt_top_i_n_767;
  wire gt_top_i_n_768;
  wire gt_top_i_n_769;
  wire gt_top_i_n_770;
  wire gt_top_i_n_771;
  wire gt_top_i_n_772;
  wire gt_top_i_n_773;
  wire gt_top_i_n_774;
  wire gt_top_i_n_775;
  wire gt_top_i_n_776;
  wire gt_top_i_n_777;
  wire gt_top_i_n_778;
  wire gt_top_i_n_779;
  wire gt_top_i_n_780;
  wire gt_top_i_n_781;
  wire gt_top_i_n_782;
  wire gt_top_i_n_783;
  wire gt_top_i_n_784;
  wire gt_top_i_n_785;
  wire gt_top_i_n_786;
  wire gt_top_i_n_787;
  wire gt_top_i_n_788;
  wire gt_top_i_n_789;
  wire gt_top_i_n_790;
  wire gt_top_i_n_791;
  wire gt_top_i_n_792;
  wire gt_top_i_n_793;
  wire gt_top_i_n_794;
  wire gt_top_i_n_795;
  wire gt_top_i_n_796;
  wire gt_top_i_n_797;
  wire gt_top_i_n_798;
  wire gt_top_i_n_799;
  wire gt_top_i_n_800;
  wire gt_top_i_n_801;
  wire gt_top_i_n_802;
  wire gt_top_i_n_803;
  wire gt_top_i_n_804;
  wire gt_top_i_n_805;
  wire gt_top_i_n_806;
  wire gt_top_i_n_807;
  wire gt_top_i_n_808;
  wire gt_top_i_n_809;
  wire gt_top_i_n_810;
  wire gt_top_i_n_811;
  wire gt_top_i_n_812;
  wire gt_top_i_n_813;
  wire gt_top_i_n_814;
  wire gt_top_i_n_815;
  wire gt_top_i_n_816;
  wire gt_top_i_n_817;
  wire gt_top_i_n_818;
  wire gt_top_i_n_819;
  wire gt_top_i_n_820;
  wire gt_top_i_n_821;
  wire gt_top_i_n_822;
  wire gt_top_i_n_823;
  wire gt_top_i_n_824;
  wire gt_top_i_n_825;
  wire gt_top_i_n_826;
  wire gt_top_i_n_827;
  wire gt_top_i_n_828;
  wire gt_top_i_n_829;
  wire gt_top_i_n_830;
  wire gt_top_i_n_831;
  wire gt_top_i_n_832;
  wire [7:0]gt_txdlysresetdone;
  wire [7:0]gt_txelecidle;
  wire [7:0]gt_txinhibit;
  wire [7:0]gt_txphaligndone;
  wire [7:0]gt_txphinitdone;
  wire [7:0]gt_txprbsforceerr;
  wire [31:0]gt_txprbssel;
  wire [7:0]gt_txresetdone;
  wire [1:0]int_qpll1lock_out;
  wire [1:0]int_qpll1outclk_out;
  wire [1:0]int_qpll1outrefclk_out;
  wire lffs_sel;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mcap_clk;
  wire mcap_design_switch;
  wire p_0_in0;
  wire [7:0]pci_exp_rxn;
  wire [7:0]pci_exp_rxp;
  wire [7:0]pci_exp_txn;
  wire [7:0]pci_exp_txp;
  wire pcie3_uscale_top_inst_n_103;
  wire pcie3_uscale_top_inst_n_105;
  wire pcie3_uscale_top_inst_n_155;
  wire pcie3_uscale_top_inst_n_156;
  wire pcie3_uscale_top_inst_n_157;
  wire pcie3_uscale_top_inst_n_158;
  wire pcie3_uscale_top_inst_n_160;
  wire pcie3_uscale_top_inst_n_161;
  wire pcie3_uscale_top_inst_n_162;
  wire pcie3_uscale_top_inst_n_163;
  wire pcie3_uscale_top_inst_n_164;
  wire pcie3_uscale_top_inst_n_165;
  wire pcie3_uscale_top_inst_n_166;
  wire pcie3_uscale_top_inst_n_167;
  wire pcie3_uscale_top_inst_n_168;
  wire pcie3_uscale_top_inst_n_169;
  wire pcie3_uscale_top_inst_n_170;
  wire pcie3_uscale_top_inst_n_171;
  wire pcie3_uscale_top_inst_n_172;
  wire pcie3_uscale_top_inst_n_173;
  wire pcie3_uscale_top_inst_n_174;
  wire pcie3_uscale_top_inst_n_175;
  wire pcie3_uscale_top_inst_n_197;
  wire pcie3_uscale_top_inst_n_198;
  wire pcie3_uscale_top_inst_n_199;
  wire pcie3_uscale_top_inst_n_200;
  wire pcie3_uscale_top_inst_n_201;
  wire pcie3_uscale_top_inst_n_202;
  wire pcie3_uscale_top_inst_n_203;
  wire pcie3_uscale_top_inst_n_204;
  wire pcie3_uscale_top_inst_n_205;
  wire pcie3_uscale_top_inst_n_206;
  wire pcie3_uscale_top_inst_n_207;
  wire pcie3_uscale_top_inst_n_208;
  wire pcie3_uscale_top_inst_n_209;
  wire pcie3_uscale_top_inst_n_210;
  wire pcie3_uscale_top_inst_n_211;
  wire pcie3_uscale_top_inst_n_212;
  wire pcie3_uscale_top_inst_n_213;
  wire pcie3_uscale_top_inst_n_214;
  wire pcie3_uscale_top_inst_n_215;
  wire pcie3_uscale_top_inst_n_216;
  wire pcie3_uscale_top_inst_n_217;
  wire pcie3_uscale_top_inst_n_218;
  wire pcie3_uscale_top_inst_n_219;
  wire pcie3_uscale_top_inst_n_220;
  wire pcie3_uscale_top_inst_n_221;
  wire pcie3_uscale_top_inst_n_222;
  wire pcie3_uscale_top_inst_n_223;
  wire pcie3_uscale_top_inst_n_224;
  wire pcie3_uscale_top_inst_n_225;
  wire pcie3_uscale_top_inst_n_226;
  wire pcie3_uscale_top_inst_n_227;
  wire pcie3_uscale_top_inst_n_228;
  wire pcie3_uscale_top_inst_n_229;
  wire pcie3_uscale_top_inst_n_230;
  wire pcie3_uscale_top_inst_n_231;
  wire pcie3_uscale_top_inst_n_232;
  wire pcie3_uscale_top_inst_n_233;
  wire pcie3_uscale_top_inst_n_234;
  wire pcie3_uscale_top_inst_n_235;
  wire pcie3_uscale_top_inst_n_236;
  wire pcie3_uscale_top_inst_n_237;
  wire pcie3_uscale_top_inst_n_238;
  wire pcie3_uscale_top_inst_n_239;
  wire pcie3_uscale_top_inst_n_240;
  wire pcie3_uscale_top_inst_n_241;
  wire pcie3_uscale_top_inst_n_242;
  wire pcie3_uscale_top_inst_n_243;
  wire pcie3_uscale_top_inst_n_244;
  wire pcie3_uscale_top_inst_n_245;
  wire pcie3_uscale_top_inst_n_246;
  wire pcie3_uscale_top_inst_n_247;
  wire pcie3_uscale_top_inst_n_248;
  wire pcie3_uscale_top_inst_n_249;
  wire pcie3_uscale_top_inst_n_250;
  wire pcie3_uscale_top_inst_n_251;
  wire pcie3_uscale_top_inst_n_252;
  wire pcie3_uscale_top_inst_n_253;
  wire pcie3_uscale_top_inst_n_254;
  wire pcie3_uscale_top_inst_n_255;
  wire pcie3_uscale_top_inst_n_256;
  wire pcie3_uscale_top_inst_n_257;
  wire pcie3_uscale_top_inst_n_258;
  wire pcie3_uscale_top_inst_n_259;
  wire pcie3_uscale_top_inst_n_260;
  wire pcie3_uscale_top_inst_n_261;
  wire pcie3_uscale_top_inst_n_262;
  wire pcie3_uscale_top_inst_n_263;
  wire pcie3_uscale_top_inst_n_264;
  wire pcie3_uscale_top_inst_n_265;
  wire pcie3_uscale_top_inst_n_266;
  wire pcie3_uscale_top_inst_n_267;
  wire pcie3_uscale_top_inst_n_268;
  wire pcie3_uscale_top_inst_n_269;
  wire pcie3_uscale_top_inst_n_270;
  wire pcie3_uscale_top_inst_n_271;
  wire pcie3_uscale_top_inst_n_272;
  wire pcie3_uscale_top_inst_n_273;
  wire pcie3_uscale_top_inst_n_274;
  wire pcie3_uscale_top_inst_n_275;
  wire pcie3_uscale_top_inst_n_276;
  wire pcie3_uscale_top_inst_n_277;
  wire pcie3_uscale_top_inst_n_278;
  wire pcie3_uscale_top_inst_n_279;
  wire pcie3_uscale_top_inst_n_280;
  wire pcie3_uscale_top_inst_n_281;
  wire pcie3_uscale_top_inst_n_282;
  wire pcie3_uscale_top_inst_n_283;
  wire pcie3_uscale_top_inst_n_284;
  wire pcie3_uscale_top_inst_n_285;
  wire pcie3_uscale_top_inst_n_286;
  wire pcie3_uscale_top_inst_n_287;
  wire pcie3_uscale_top_inst_n_288;
  wire pcie3_uscale_top_inst_n_289;
  wire pcie3_uscale_top_inst_n_290;
  wire pcie3_uscale_top_inst_n_291;
  wire pcie3_uscale_top_inst_n_292;
  wire pcie3_uscale_top_inst_n_293;
  wire pcie3_uscale_top_inst_n_294;
  wire pcie3_uscale_top_inst_n_295;
  wire pcie3_uscale_top_inst_n_296;
  wire pcie3_uscale_top_inst_n_297;
  wire pcie3_uscale_top_inst_n_298;
  wire pcie3_uscale_top_inst_n_299;
  wire pcie3_uscale_top_inst_n_300;
  wire pcie3_uscale_top_inst_n_301;
  wire pcie3_uscale_top_inst_n_302;
  wire pcie3_uscale_top_inst_n_303;
  wire pcie3_uscale_top_inst_n_304;
  wire pcie3_uscale_top_inst_n_305;
  wire pcie3_uscale_top_inst_n_306;
  wire pcie3_uscale_top_inst_n_307;
  wire pcie3_uscale_top_inst_n_308;
  wire pcie3_uscale_top_inst_n_309;
  wire pcie3_uscale_top_inst_n_310;
  wire pcie3_uscale_top_inst_n_311;
  wire pcie3_uscale_top_inst_n_312;
  wire pcie3_uscale_top_inst_n_313;
  wire pcie3_uscale_top_inst_n_314;
  wire pcie3_uscale_top_inst_n_315;
  wire pcie3_uscale_top_inst_n_316;
  wire pcie3_uscale_top_inst_n_317;
  wire pcie3_uscale_top_inst_n_318;
  wire pcie3_uscale_top_inst_n_319;
  wire pcie3_uscale_top_inst_n_320;
  wire pcie3_uscale_top_inst_n_321;
  wire pcie3_uscale_top_inst_n_322;
  wire pcie3_uscale_top_inst_n_92;
  wire pcie3_uscale_top_inst_n_99;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire pcie_perstn0_out;
  wire pcie_perstn1_in;
  wire pcie_perstn1_out;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire [1:0]pcie_rq_tag_av;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire phy_prst_n;
  wire phy_rrst_n;
  wire [2:0]\^phy_rst_fsm ;
  wire phy_rst_idle;
  wire phy_rxcdrhold;
  wire [23:0]phy_rxeq_fsm;
  wire [15:0]phy_txeq_ctrl;
  wire [23:0]phy_txeq_fsm;
  wire [31:0]phy_txeq_preset;
  wire pipe_clk;
  wire [15:0]pipe_rx_char_is_k;
  wire [255:0]pipe_rx_data;
  wire [7:0]pipe_rx_data_valid;
  wire [7:0]pipe_rx_elec_idle;
  wire [1:0]pipe_rx_eqcontrol_q;
  wire [5:0]pipe_rx_eqlplffs_q;
  wire [3:0]pipe_rx_eqlptxpreset_q;
  wire [2:0]pipe_rx_eqpreset_q;
  wire [7:0]pipe_rx_polarity;
  wire [7:0]pipe_rx_start_block;
  wire [15:0]pipe_rx_syncheader;
  wire pipe_tx0_deemph;
  wire [2:0]pipe_tx0_margin;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx0_rate;
  wire pipe_tx0_rcvr_det;
  wire pipe_tx0_swing;
  wire [15:0]pipe_tx_char_is_k;
  wire [7:0]pipe_tx_compliance;
  wire [7:0]pipe_tx_data_valid;
  wire [5:0]pipe_tx_eqdeemph_q;
  wire [7:0]pipe_tx_start_block;
  wire [15:0]pipe_tx_syncheader;
  wire [255:0]pipe_txdata;
  wire pl_eq_in_progress;
  wire [1:0]pl_eq_phase;
  wire pl_eq_reset_eieos_count;
  wire pl_gen2_upstream_prefer_deemph;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sync_sc_ce;
  wire sync_sc_clr;
  wire sys_clk;
  wire sys_clk_gt;
  wire sys_reset;
  wire user_clk;
  wire user_lnk_up;
  wire user_reset;
  wire user_reset_int_reg_n_0;
  wire [3:0]user_tph_function_num;
  wire [4:0]user_tph_stt_address;
  wire [31:0]user_tph_stt_read_data;
  wire user_tph_stt_read_data_valid;
  wire user_tph_stt_read_enable;

  assign common_commands_out[16] = \<const0> ;
  assign common_commands_out[15] = \<const0> ;
  assign common_commands_out[14] = \<const0> ;
  assign common_commands_out[13] = \<const0> ;
  assign common_commands_out[12] = \<const0> ;
  assign common_commands_out[11] = \<const0> ;
  assign common_commands_out[10] = \<const0> ;
  assign common_commands_out[9] = \<const0> ;
  assign common_commands_out[8] = \<const0> ;
  assign common_commands_out[7] = \<const0> ;
  assign common_commands_out[6] = \<const0> ;
  assign common_commands_out[5] = \<const0> ;
  assign common_commands_out[4] = \<const0> ;
  assign common_commands_out[3] = \<const0> ;
  assign common_commands_out[2] = \<const0> ;
  assign common_commands_out[1] = \<const0> ;
  assign common_commands_out[0] = \<const0> ;
  assign ext_ch_gt_drpdo[127] = \<const0> ;
  assign ext_ch_gt_drpdo[126] = \<const0> ;
  assign ext_ch_gt_drpdo[125] = \<const0> ;
  assign ext_ch_gt_drpdo[124] = \<const0> ;
  assign ext_ch_gt_drpdo[123] = \<const0> ;
  assign ext_ch_gt_drpdo[122] = \<const0> ;
  assign ext_ch_gt_drpdo[121] = \<const0> ;
  assign ext_ch_gt_drpdo[120] = \<const0> ;
  assign ext_ch_gt_drpdo[119] = \<const0> ;
  assign ext_ch_gt_drpdo[118] = \<const0> ;
  assign ext_ch_gt_drpdo[117] = \<const0> ;
  assign ext_ch_gt_drpdo[116] = \<const0> ;
  assign ext_ch_gt_drpdo[115] = \<const0> ;
  assign ext_ch_gt_drpdo[114] = \<const0> ;
  assign ext_ch_gt_drpdo[113] = \<const0> ;
  assign ext_ch_gt_drpdo[112] = \<const0> ;
  assign ext_ch_gt_drpdo[111] = \<const0> ;
  assign ext_ch_gt_drpdo[110] = \<const0> ;
  assign ext_ch_gt_drpdo[109] = \<const0> ;
  assign ext_ch_gt_drpdo[108] = \<const0> ;
  assign ext_ch_gt_drpdo[107] = \<const0> ;
  assign ext_ch_gt_drpdo[106] = \<const0> ;
  assign ext_ch_gt_drpdo[105] = \<const0> ;
  assign ext_ch_gt_drpdo[104] = \<const0> ;
  assign ext_ch_gt_drpdo[103] = \<const0> ;
  assign ext_ch_gt_drpdo[102] = \<const0> ;
  assign ext_ch_gt_drpdo[101] = \<const0> ;
  assign ext_ch_gt_drpdo[100] = \<const0> ;
  assign ext_ch_gt_drpdo[99] = \<const0> ;
  assign ext_ch_gt_drpdo[98] = \<const0> ;
  assign ext_ch_gt_drpdo[97] = \<const0> ;
  assign ext_ch_gt_drpdo[96] = \<const0> ;
  assign ext_ch_gt_drpdo[95] = \<const0> ;
  assign ext_ch_gt_drpdo[94] = \<const0> ;
  assign ext_ch_gt_drpdo[93] = \<const0> ;
  assign ext_ch_gt_drpdo[92] = \<const0> ;
  assign ext_ch_gt_drpdo[91] = \<const0> ;
  assign ext_ch_gt_drpdo[90] = \<const0> ;
  assign ext_ch_gt_drpdo[89] = \<const0> ;
  assign ext_ch_gt_drpdo[88] = \<const0> ;
  assign ext_ch_gt_drpdo[87] = \<const0> ;
  assign ext_ch_gt_drpdo[86] = \<const0> ;
  assign ext_ch_gt_drpdo[85] = \<const0> ;
  assign ext_ch_gt_drpdo[84] = \<const0> ;
  assign ext_ch_gt_drpdo[83] = \<const0> ;
  assign ext_ch_gt_drpdo[82] = \<const0> ;
  assign ext_ch_gt_drpdo[81] = \<const0> ;
  assign ext_ch_gt_drpdo[80] = \<const0> ;
  assign ext_ch_gt_drpdo[79] = \<const0> ;
  assign ext_ch_gt_drpdo[78] = \<const0> ;
  assign ext_ch_gt_drpdo[77] = \<const0> ;
  assign ext_ch_gt_drpdo[76] = \<const0> ;
  assign ext_ch_gt_drpdo[75] = \<const0> ;
  assign ext_ch_gt_drpdo[74] = \<const0> ;
  assign ext_ch_gt_drpdo[73] = \<const0> ;
  assign ext_ch_gt_drpdo[72] = \<const0> ;
  assign ext_ch_gt_drpdo[71] = \<const0> ;
  assign ext_ch_gt_drpdo[70] = \<const0> ;
  assign ext_ch_gt_drpdo[69] = \<const0> ;
  assign ext_ch_gt_drpdo[68] = \<const0> ;
  assign ext_ch_gt_drpdo[67] = \<const0> ;
  assign ext_ch_gt_drpdo[66] = \<const0> ;
  assign ext_ch_gt_drpdo[65] = \<const0> ;
  assign ext_ch_gt_drpdo[64] = \<const0> ;
  assign ext_ch_gt_drpdo[63] = \<const0> ;
  assign ext_ch_gt_drpdo[62] = \<const0> ;
  assign ext_ch_gt_drpdo[61] = \<const0> ;
  assign ext_ch_gt_drpdo[60] = \<const0> ;
  assign ext_ch_gt_drpdo[59] = \<const0> ;
  assign ext_ch_gt_drpdo[58] = \<const0> ;
  assign ext_ch_gt_drpdo[57] = \<const0> ;
  assign ext_ch_gt_drpdo[56] = \<const0> ;
  assign ext_ch_gt_drpdo[55] = \<const0> ;
  assign ext_ch_gt_drpdo[54] = \<const0> ;
  assign ext_ch_gt_drpdo[53] = \<const0> ;
  assign ext_ch_gt_drpdo[52] = \<const0> ;
  assign ext_ch_gt_drpdo[51] = \<const0> ;
  assign ext_ch_gt_drpdo[50] = \<const0> ;
  assign ext_ch_gt_drpdo[49] = \<const0> ;
  assign ext_ch_gt_drpdo[48] = \<const0> ;
  assign ext_ch_gt_drpdo[47] = \<const0> ;
  assign ext_ch_gt_drpdo[46] = \<const0> ;
  assign ext_ch_gt_drpdo[45] = \<const0> ;
  assign ext_ch_gt_drpdo[44] = \<const0> ;
  assign ext_ch_gt_drpdo[43] = \<const0> ;
  assign ext_ch_gt_drpdo[42] = \<const0> ;
  assign ext_ch_gt_drpdo[41] = \<const0> ;
  assign ext_ch_gt_drpdo[40] = \<const0> ;
  assign ext_ch_gt_drpdo[39] = \<const0> ;
  assign ext_ch_gt_drpdo[38] = \<const0> ;
  assign ext_ch_gt_drpdo[37] = \<const0> ;
  assign ext_ch_gt_drpdo[36] = \<const0> ;
  assign ext_ch_gt_drpdo[35] = \<const0> ;
  assign ext_ch_gt_drpdo[34] = \<const0> ;
  assign ext_ch_gt_drpdo[33] = \<const0> ;
  assign ext_ch_gt_drpdo[32] = \<const0> ;
  assign ext_ch_gt_drpdo[31] = \<const0> ;
  assign ext_ch_gt_drpdo[30] = \<const0> ;
  assign ext_ch_gt_drpdo[29] = \<const0> ;
  assign ext_ch_gt_drpdo[28] = \<const0> ;
  assign ext_ch_gt_drpdo[27] = \<const0> ;
  assign ext_ch_gt_drpdo[26] = \<const0> ;
  assign ext_ch_gt_drpdo[25] = \<const0> ;
  assign ext_ch_gt_drpdo[24] = \<const0> ;
  assign ext_ch_gt_drpdo[23] = \<const0> ;
  assign ext_ch_gt_drpdo[22] = \<const0> ;
  assign ext_ch_gt_drpdo[21] = \<const0> ;
  assign ext_ch_gt_drpdo[20] = \<const0> ;
  assign ext_ch_gt_drpdo[19] = \<const0> ;
  assign ext_ch_gt_drpdo[18] = \<const0> ;
  assign ext_ch_gt_drpdo[17] = \<const0> ;
  assign ext_ch_gt_drpdo[16] = \<const0> ;
  assign ext_ch_gt_drpdo[15] = \<const0> ;
  assign ext_ch_gt_drpdo[14] = \<const0> ;
  assign ext_ch_gt_drpdo[13] = \<const0> ;
  assign ext_ch_gt_drpdo[12] = \<const0> ;
  assign ext_ch_gt_drpdo[11] = \<const0> ;
  assign ext_ch_gt_drpdo[10] = \<const0> ;
  assign ext_ch_gt_drpdo[9] = \<const0> ;
  assign ext_ch_gt_drpdo[8] = \<const0> ;
  assign ext_ch_gt_drpdo[7] = \<const0> ;
  assign ext_ch_gt_drpdo[6] = \<const0> ;
  assign ext_ch_gt_drpdo[5] = \<const0> ;
  assign ext_ch_gt_drpdo[4] = \<const0> ;
  assign ext_ch_gt_drpdo[3] = \<const0> ;
  assign ext_ch_gt_drpdo[2] = \<const0> ;
  assign ext_ch_gt_drpdo[1] = \<const0> ;
  assign ext_ch_gt_drpdo[0] = \<const0> ;
  assign ext_ch_gt_drprdy[7] = \<const0> ;
  assign ext_ch_gt_drprdy[6] = \<const0> ;
  assign ext_ch_gt_drprdy[5] = \<const0> ;
  assign ext_ch_gt_drprdy[4] = \<const0> ;
  assign ext_ch_gt_drprdy[3] = \<const0> ;
  assign ext_ch_gt_drprdy[2] = \<const0> ;
  assign ext_ch_gt_drprdy[1] = \<const0> ;
  assign ext_ch_gt_drprdy[0] = \<const0> ;
  assign ext_qpll1pd[1] = \<const0> ;
  assign ext_qpll1pd[0] = \<const0> ;
  assign ext_qpll1rate[5] = \<const0> ;
  assign ext_qpll1rate[4] = \<const0> ;
  assign ext_qpll1rate[3] = \<const0> ;
  assign ext_qpll1rate[2] = \<const0> ;
  assign ext_qpll1rate[1] = \<const0> ;
  assign ext_qpll1rate[0] = \<const0> ;
  assign ext_qpll1refclk[1] = \<const0> ;
  assign ext_qpll1refclk[0] = \<const0> ;
  assign ext_qpll1reset[1] = \<const0> ;
  assign ext_qpll1reset[0] = \<const0> ;
  assign gt_qpll1lock[1:0] = int_qpll1lock_out;
  assign gt_rxoutclk[7] = \<const0> ;
  assign gt_rxoutclk[6] = \<const0> ;
  assign gt_rxoutclk[5] = \<const0> ;
  assign gt_rxoutclk[4] = \<const0> ;
  assign gt_rxoutclk[3] = \<const0> ;
  assign gt_rxoutclk[2] = \<const0> ;
  assign gt_rxoutclk[1] = \<const0> ;
  assign gt_rxoutclk[0] = \<const0> ;
  assign gt_rxrecclkout[7] = \<const0> ;
  assign gt_rxrecclkout[6] = \<const0> ;
  assign gt_rxrecclkout[5] = \<const0> ;
  assign gt_rxrecclkout[4] = \<const0> ;
  assign gt_rxrecclkout[3] = \<const0> ;
  assign gt_rxrecclkout[2] = \<const0> ;
  assign gt_rxrecclkout[1] = \<const0> ;
  assign gt_rxrecclkout[0] = \<const0> ;
  assign phy_rst_fsm[3] = \<const0> ;
  assign phy_rst_fsm[2:0] = \^phy_rst_fsm [2:0];
  assign pipe_tx_0_sigs[69] = \<const0> ;
  assign pipe_tx_0_sigs[68] = \<const0> ;
  assign pipe_tx_0_sigs[67] = \<const0> ;
  assign pipe_tx_0_sigs[66] = \<const0> ;
  assign pipe_tx_0_sigs[65] = \<const0> ;
  assign pipe_tx_0_sigs[64] = \<const0> ;
  assign pipe_tx_0_sigs[63] = \<const0> ;
  assign pipe_tx_0_sigs[62] = \<const0> ;
  assign pipe_tx_0_sigs[61] = \<const0> ;
  assign pipe_tx_0_sigs[60] = \<const0> ;
  assign pipe_tx_0_sigs[59] = \<const0> ;
  assign pipe_tx_0_sigs[58] = \<const0> ;
  assign pipe_tx_0_sigs[57] = \<const0> ;
  assign pipe_tx_0_sigs[56] = \<const0> ;
  assign pipe_tx_0_sigs[55] = \<const0> ;
  assign pipe_tx_0_sigs[54] = \<const0> ;
  assign pipe_tx_0_sigs[53] = \<const0> ;
  assign pipe_tx_0_sigs[52] = \<const0> ;
  assign pipe_tx_0_sigs[51] = \<const0> ;
  assign pipe_tx_0_sigs[50] = \<const0> ;
  assign pipe_tx_0_sigs[49] = \<const0> ;
  assign pipe_tx_0_sigs[48] = \<const0> ;
  assign pipe_tx_0_sigs[47] = \<const0> ;
  assign pipe_tx_0_sigs[46] = \<const0> ;
  assign pipe_tx_0_sigs[45] = \<const0> ;
  assign pipe_tx_0_sigs[44] = \<const0> ;
  assign pipe_tx_0_sigs[43] = \<const0> ;
  assign pipe_tx_0_sigs[42] = \<const0> ;
  assign pipe_tx_0_sigs[41] = \<const0> ;
  assign pipe_tx_0_sigs[40] = \<const0> ;
  assign pipe_tx_0_sigs[39] = \<const0> ;
  assign pipe_tx_0_sigs[38] = \<const0> ;
  assign pipe_tx_0_sigs[37] = \<const0> ;
  assign pipe_tx_0_sigs[36] = \<const0> ;
  assign pipe_tx_0_sigs[35] = \<const0> ;
  assign pipe_tx_0_sigs[34] = \<const0> ;
  assign pipe_tx_0_sigs[33] = \<const0> ;
  assign pipe_tx_0_sigs[32] = \<const0> ;
  assign pipe_tx_0_sigs[31] = \<const0> ;
  assign pipe_tx_0_sigs[30] = \<const0> ;
  assign pipe_tx_0_sigs[29] = \<const0> ;
  assign pipe_tx_0_sigs[28] = \<const0> ;
  assign pipe_tx_0_sigs[27] = \<const0> ;
  assign pipe_tx_0_sigs[26] = \<const0> ;
  assign pipe_tx_0_sigs[25] = \<const0> ;
  assign pipe_tx_0_sigs[24] = \<const0> ;
  assign pipe_tx_0_sigs[23] = \<const0> ;
  assign pipe_tx_0_sigs[22] = \<const0> ;
  assign pipe_tx_0_sigs[21] = \<const0> ;
  assign pipe_tx_0_sigs[20] = \<const0> ;
  assign pipe_tx_0_sigs[19] = \<const0> ;
  assign pipe_tx_0_sigs[18] = \<const0> ;
  assign pipe_tx_0_sigs[17] = \<const0> ;
  assign pipe_tx_0_sigs[16] = \<const0> ;
  assign pipe_tx_0_sigs[15] = \<const0> ;
  assign pipe_tx_0_sigs[14] = \<const0> ;
  assign pipe_tx_0_sigs[13] = \<const0> ;
  assign pipe_tx_0_sigs[12] = \<const0> ;
  assign pipe_tx_0_sigs[11] = \<const0> ;
  assign pipe_tx_0_sigs[10] = \<const0> ;
  assign pipe_tx_0_sigs[9] = \<const0> ;
  assign pipe_tx_0_sigs[8] = \<const0> ;
  assign pipe_tx_0_sigs[7] = \<const0> ;
  assign pipe_tx_0_sigs[6] = \<const0> ;
  assign pipe_tx_0_sigs[5] = \<const0> ;
  assign pipe_tx_0_sigs[4] = \<const0> ;
  assign pipe_tx_0_sigs[3] = \<const0> ;
  assign pipe_tx_0_sigs[2] = \<const0> ;
  assign pipe_tx_0_sigs[1] = \<const0> ;
  assign pipe_tx_0_sigs[0] = \<const0> ;
  assign pipe_tx_1_sigs[69] = \<const0> ;
  assign pipe_tx_1_sigs[68] = \<const0> ;
  assign pipe_tx_1_sigs[67] = \<const0> ;
  assign pipe_tx_1_sigs[66] = \<const0> ;
  assign pipe_tx_1_sigs[65] = \<const0> ;
  assign pipe_tx_1_sigs[64] = \<const0> ;
  assign pipe_tx_1_sigs[63] = \<const0> ;
  assign pipe_tx_1_sigs[62] = \<const0> ;
  assign pipe_tx_1_sigs[61] = \<const0> ;
  assign pipe_tx_1_sigs[60] = \<const0> ;
  assign pipe_tx_1_sigs[59] = \<const0> ;
  assign pipe_tx_1_sigs[58] = \<const0> ;
  assign pipe_tx_1_sigs[57] = \<const0> ;
  assign pipe_tx_1_sigs[56] = \<const0> ;
  assign pipe_tx_1_sigs[55] = \<const0> ;
  assign pipe_tx_1_sigs[54] = \<const0> ;
  assign pipe_tx_1_sigs[53] = \<const0> ;
  assign pipe_tx_1_sigs[52] = \<const0> ;
  assign pipe_tx_1_sigs[51] = \<const0> ;
  assign pipe_tx_1_sigs[50] = \<const0> ;
  assign pipe_tx_1_sigs[49] = \<const0> ;
  assign pipe_tx_1_sigs[48] = \<const0> ;
  assign pipe_tx_1_sigs[47] = \<const0> ;
  assign pipe_tx_1_sigs[46] = \<const0> ;
  assign pipe_tx_1_sigs[45] = \<const0> ;
  assign pipe_tx_1_sigs[44] = \<const0> ;
  assign pipe_tx_1_sigs[43] = \<const0> ;
  assign pipe_tx_1_sigs[42] = \<const0> ;
  assign pipe_tx_1_sigs[41] = \<const0> ;
  assign pipe_tx_1_sigs[40] = \<const0> ;
  assign pipe_tx_1_sigs[39] = \<const0> ;
  assign pipe_tx_1_sigs[38] = \<const0> ;
  assign pipe_tx_1_sigs[37] = \<const0> ;
  assign pipe_tx_1_sigs[36] = \<const0> ;
  assign pipe_tx_1_sigs[35] = \<const0> ;
  assign pipe_tx_1_sigs[34] = \<const0> ;
  assign pipe_tx_1_sigs[33] = \<const0> ;
  assign pipe_tx_1_sigs[32] = \<const0> ;
  assign pipe_tx_1_sigs[31] = \<const0> ;
  assign pipe_tx_1_sigs[30] = \<const0> ;
  assign pipe_tx_1_sigs[29] = \<const0> ;
  assign pipe_tx_1_sigs[28] = \<const0> ;
  assign pipe_tx_1_sigs[27] = \<const0> ;
  assign pipe_tx_1_sigs[26] = \<const0> ;
  assign pipe_tx_1_sigs[25] = \<const0> ;
  assign pipe_tx_1_sigs[24] = \<const0> ;
  assign pipe_tx_1_sigs[23] = \<const0> ;
  assign pipe_tx_1_sigs[22] = \<const0> ;
  assign pipe_tx_1_sigs[21] = \<const0> ;
  assign pipe_tx_1_sigs[20] = \<const0> ;
  assign pipe_tx_1_sigs[19] = \<const0> ;
  assign pipe_tx_1_sigs[18] = \<const0> ;
  assign pipe_tx_1_sigs[17] = \<const0> ;
  assign pipe_tx_1_sigs[16] = \<const0> ;
  assign pipe_tx_1_sigs[15] = \<const0> ;
  assign pipe_tx_1_sigs[14] = \<const0> ;
  assign pipe_tx_1_sigs[13] = \<const0> ;
  assign pipe_tx_1_sigs[12] = \<const0> ;
  assign pipe_tx_1_sigs[11] = \<const0> ;
  assign pipe_tx_1_sigs[10] = \<const0> ;
  assign pipe_tx_1_sigs[9] = \<const0> ;
  assign pipe_tx_1_sigs[8] = \<const0> ;
  assign pipe_tx_1_sigs[7] = \<const0> ;
  assign pipe_tx_1_sigs[6] = \<const0> ;
  assign pipe_tx_1_sigs[5] = \<const0> ;
  assign pipe_tx_1_sigs[4] = \<const0> ;
  assign pipe_tx_1_sigs[3] = \<const0> ;
  assign pipe_tx_1_sigs[2] = \<const0> ;
  assign pipe_tx_1_sigs[1] = \<const0> ;
  assign pipe_tx_1_sigs[0] = \<const0> ;
  assign pipe_tx_2_sigs[69] = \<const0> ;
  assign pipe_tx_2_sigs[68] = \<const0> ;
  assign pipe_tx_2_sigs[67] = \<const0> ;
  assign pipe_tx_2_sigs[66] = \<const0> ;
  assign pipe_tx_2_sigs[65] = \<const0> ;
  assign pipe_tx_2_sigs[64] = \<const0> ;
  assign pipe_tx_2_sigs[63] = \<const0> ;
  assign pipe_tx_2_sigs[62] = \<const0> ;
  assign pipe_tx_2_sigs[61] = \<const0> ;
  assign pipe_tx_2_sigs[60] = \<const0> ;
  assign pipe_tx_2_sigs[59] = \<const0> ;
  assign pipe_tx_2_sigs[58] = \<const0> ;
  assign pipe_tx_2_sigs[57] = \<const0> ;
  assign pipe_tx_2_sigs[56] = \<const0> ;
  assign pipe_tx_2_sigs[55] = \<const0> ;
  assign pipe_tx_2_sigs[54] = \<const0> ;
  assign pipe_tx_2_sigs[53] = \<const0> ;
  assign pipe_tx_2_sigs[52] = \<const0> ;
  assign pipe_tx_2_sigs[51] = \<const0> ;
  assign pipe_tx_2_sigs[50] = \<const0> ;
  assign pipe_tx_2_sigs[49] = \<const0> ;
  assign pipe_tx_2_sigs[48] = \<const0> ;
  assign pipe_tx_2_sigs[47] = \<const0> ;
  assign pipe_tx_2_sigs[46] = \<const0> ;
  assign pipe_tx_2_sigs[45] = \<const0> ;
  assign pipe_tx_2_sigs[44] = \<const0> ;
  assign pipe_tx_2_sigs[43] = \<const0> ;
  assign pipe_tx_2_sigs[42] = \<const0> ;
  assign pipe_tx_2_sigs[41] = \<const0> ;
  assign pipe_tx_2_sigs[40] = \<const0> ;
  assign pipe_tx_2_sigs[39] = \<const0> ;
  assign pipe_tx_2_sigs[38] = \<const0> ;
  assign pipe_tx_2_sigs[37] = \<const0> ;
  assign pipe_tx_2_sigs[36] = \<const0> ;
  assign pipe_tx_2_sigs[35] = \<const0> ;
  assign pipe_tx_2_sigs[34] = \<const0> ;
  assign pipe_tx_2_sigs[33] = \<const0> ;
  assign pipe_tx_2_sigs[32] = \<const0> ;
  assign pipe_tx_2_sigs[31] = \<const0> ;
  assign pipe_tx_2_sigs[30] = \<const0> ;
  assign pipe_tx_2_sigs[29] = \<const0> ;
  assign pipe_tx_2_sigs[28] = \<const0> ;
  assign pipe_tx_2_sigs[27] = \<const0> ;
  assign pipe_tx_2_sigs[26] = \<const0> ;
  assign pipe_tx_2_sigs[25] = \<const0> ;
  assign pipe_tx_2_sigs[24] = \<const0> ;
  assign pipe_tx_2_sigs[23] = \<const0> ;
  assign pipe_tx_2_sigs[22] = \<const0> ;
  assign pipe_tx_2_sigs[21] = \<const0> ;
  assign pipe_tx_2_sigs[20] = \<const0> ;
  assign pipe_tx_2_sigs[19] = \<const0> ;
  assign pipe_tx_2_sigs[18] = \<const0> ;
  assign pipe_tx_2_sigs[17] = \<const0> ;
  assign pipe_tx_2_sigs[16] = \<const0> ;
  assign pipe_tx_2_sigs[15] = \<const0> ;
  assign pipe_tx_2_sigs[14] = \<const0> ;
  assign pipe_tx_2_sigs[13] = \<const0> ;
  assign pipe_tx_2_sigs[12] = \<const0> ;
  assign pipe_tx_2_sigs[11] = \<const0> ;
  assign pipe_tx_2_sigs[10] = \<const0> ;
  assign pipe_tx_2_sigs[9] = \<const0> ;
  assign pipe_tx_2_sigs[8] = \<const0> ;
  assign pipe_tx_2_sigs[7] = \<const0> ;
  assign pipe_tx_2_sigs[6] = \<const0> ;
  assign pipe_tx_2_sigs[5] = \<const0> ;
  assign pipe_tx_2_sigs[4] = \<const0> ;
  assign pipe_tx_2_sigs[3] = \<const0> ;
  assign pipe_tx_2_sigs[2] = \<const0> ;
  assign pipe_tx_2_sigs[1] = \<const0> ;
  assign pipe_tx_2_sigs[0] = \<const0> ;
  assign pipe_tx_3_sigs[69] = \<const0> ;
  assign pipe_tx_3_sigs[68] = \<const0> ;
  assign pipe_tx_3_sigs[67] = \<const0> ;
  assign pipe_tx_3_sigs[66] = \<const0> ;
  assign pipe_tx_3_sigs[65] = \<const0> ;
  assign pipe_tx_3_sigs[64] = \<const0> ;
  assign pipe_tx_3_sigs[63] = \<const0> ;
  assign pipe_tx_3_sigs[62] = \<const0> ;
  assign pipe_tx_3_sigs[61] = \<const0> ;
  assign pipe_tx_3_sigs[60] = \<const0> ;
  assign pipe_tx_3_sigs[59] = \<const0> ;
  assign pipe_tx_3_sigs[58] = \<const0> ;
  assign pipe_tx_3_sigs[57] = \<const0> ;
  assign pipe_tx_3_sigs[56] = \<const0> ;
  assign pipe_tx_3_sigs[55] = \<const0> ;
  assign pipe_tx_3_sigs[54] = \<const0> ;
  assign pipe_tx_3_sigs[53] = \<const0> ;
  assign pipe_tx_3_sigs[52] = \<const0> ;
  assign pipe_tx_3_sigs[51] = \<const0> ;
  assign pipe_tx_3_sigs[50] = \<const0> ;
  assign pipe_tx_3_sigs[49] = \<const0> ;
  assign pipe_tx_3_sigs[48] = \<const0> ;
  assign pipe_tx_3_sigs[47] = \<const0> ;
  assign pipe_tx_3_sigs[46] = \<const0> ;
  assign pipe_tx_3_sigs[45] = \<const0> ;
  assign pipe_tx_3_sigs[44] = \<const0> ;
  assign pipe_tx_3_sigs[43] = \<const0> ;
  assign pipe_tx_3_sigs[42] = \<const0> ;
  assign pipe_tx_3_sigs[41] = \<const0> ;
  assign pipe_tx_3_sigs[40] = \<const0> ;
  assign pipe_tx_3_sigs[39] = \<const0> ;
  assign pipe_tx_3_sigs[38] = \<const0> ;
  assign pipe_tx_3_sigs[37] = \<const0> ;
  assign pipe_tx_3_sigs[36] = \<const0> ;
  assign pipe_tx_3_sigs[35] = \<const0> ;
  assign pipe_tx_3_sigs[34] = \<const0> ;
  assign pipe_tx_3_sigs[33] = \<const0> ;
  assign pipe_tx_3_sigs[32] = \<const0> ;
  assign pipe_tx_3_sigs[31] = \<const0> ;
  assign pipe_tx_3_sigs[30] = \<const0> ;
  assign pipe_tx_3_sigs[29] = \<const0> ;
  assign pipe_tx_3_sigs[28] = \<const0> ;
  assign pipe_tx_3_sigs[27] = \<const0> ;
  assign pipe_tx_3_sigs[26] = \<const0> ;
  assign pipe_tx_3_sigs[25] = \<const0> ;
  assign pipe_tx_3_sigs[24] = \<const0> ;
  assign pipe_tx_3_sigs[23] = \<const0> ;
  assign pipe_tx_3_sigs[22] = \<const0> ;
  assign pipe_tx_3_sigs[21] = \<const0> ;
  assign pipe_tx_3_sigs[20] = \<const0> ;
  assign pipe_tx_3_sigs[19] = \<const0> ;
  assign pipe_tx_3_sigs[18] = \<const0> ;
  assign pipe_tx_3_sigs[17] = \<const0> ;
  assign pipe_tx_3_sigs[16] = \<const0> ;
  assign pipe_tx_3_sigs[15] = \<const0> ;
  assign pipe_tx_3_sigs[14] = \<const0> ;
  assign pipe_tx_3_sigs[13] = \<const0> ;
  assign pipe_tx_3_sigs[12] = \<const0> ;
  assign pipe_tx_3_sigs[11] = \<const0> ;
  assign pipe_tx_3_sigs[10] = \<const0> ;
  assign pipe_tx_3_sigs[9] = \<const0> ;
  assign pipe_tx_3_sigs[8] = \<const0> ;
  assign pipe_tx_3_sigs[7] = \<const0> ;
  assign pipe_tx_3_sigs[6] = \<const0> ;
  assign pipe_tx_3_sigs[5] = \<const0> ;
  assign pipe_tx_3_sigs[4] = \<const0> ;
  assign pipe_tx_3_sigs[3] = \<const0> ;
  assign pipe_tx_3_sigs[2] = \<const0> ;
  assign pipe_tx_3_sigs[1] = \<const0> ;
  assign pipe_tx_3_sigs[0] = \<const0> ;
  assign pipe_tx_4_sigs[69] = \<const0> ;
  assign pipe_tx_4_sigs[68] = \<const0> ;
  assign pipe_tx_4_sigs[67] = \<const0> ;
  assign pipe_tx_4_sigs[66] = \<const0> ;
  assign pipe_tx_4_sigs[65] = \<const0> ;
  assign pipe_tx_4_sigs[64] = \<const0> ;
  assign pipe_tx_4_sigs[63] = \<const0> ;
  assign pipe_tx_4_sigs[62] = \<const0> ;
  assign pipe_tx_4_sigs[61] = \<const0> ;
  assign pipe_tx_4_sigs[60] = \<const0> ;
  assign pipe_tx_4_sigs[59] = \<const0> ;
  assign pipe_tx_4_sigs[58] = \<const0> ;
  assign pipe_tx_4_sigs[57] = \<const0> ;
  assign pipe_tx_4_sigs[56] = \<const0> ;
  assign pipe_tx_4_sigs[55] = \<const0> ;
  assign pipe_tx_4_sigs[54] = \<const0> ;
  assign pipe_tx_4_sigs[53] = \<const0> ;
  assign pipe_tx_4_sigs[52] = \<const0> ;
  assign pipe_tx_4_sigs[51] = \<const0> ;
  assign pipe_tx_4_sigs[50] = \<const0> ;
  assign pipe_tx_4_sigs[49] = \<const0> ;
  assign pipe_tx_4_sigs[48] = \<const0> ;
  assign pipe_tx_4_sigs[47] = \<const0> ;
  assign pipe_tx_4_sigs[46] = \<const0> ;
  assign pipe_tx_4_sigs[45] = \<const0> ;
  assign pipe_tx_4_sigs[44] = \<const0> ;
  assign pipe_tx_4_sigs[43] = \<const0> ;
  assign pipe_tx_4_sigs[42] = \<const0> ;
  assign pipe_tx_4_sigs[41] = \<const0> ;
  assign pipe_tx_4_sigs[40] = \<const0> ;
  assign pipe_tx_4_sigs[39] = \<const0> ;
  assign pipe_tx_4_sigs[38] = \<const0> ;
  assign pipe_tx_4_sigs[37] = \<const0> ;
  assign pipe_tx_4_sigs[36] = \<const0> ;
  assign pipe_tx_4_sigs[35] = \<const0> ;
  assign pipe_tx_4_sigs[34] = \<const0> ;
  assign pipe_tx_4_sigs[33] = \<const0> ;
  assign pipe_tx_4_sigs[32] = \<const0> ;
  assign pipe_tx_4_sigs[31] = \<const0> ;
  assign pipe_tx_4_sigs[30] = \<const0> ;
  assign pipe_tx_4_sigs[29] = \<const0> ;
  assign pipe_tx_4_sigs[28] = \<const0> ;
  assign pipe_tx_4_sigs[27] = \<const0> ;
  assign pipe_tx_4_sigs[26] = \<const0> ;
  assign pipe_tx_4_sigs[25] = \<const0> ;
  assign pipe_tx_4_sigs[24] = \<const0> ;
  assign pipe_tx_4_sigs[23] = \<const0> ;
  assign pipe_tx_4_sigs[22] = \<const0> ;
  assign pipe_tx_4_sigs[21] = \<const0> ;
  assign pipe_tx_4_sigs[20] = \<const0> ;
  assign pipe_tx_4_sigs[19] = \<const0> ;
  assign pipe_tx_4_sigs[18] = \<const0> ;
  assign pipe_tx_4_sigs[17] = \<const0> ;
  assign pipe_tx_4_sigs[16] = \<const0> ;
  assign pipe_tx_4_sigs[15] = \<const0> ;
  assign pipe_tx_4_sigs[14] = \<const0> ;
  assign pipe_tx_4_sigs[13] = \<const0> ;
  assign pipe_tx_4_sigs[12] = \<const0> ;
  assign pipe_tx_4_sigs[11] = \<const0> ;
  assign pipe_tx_4_sigs[10] = \<const0> ;
  assign pipe_tx_4_sigs[9] = \<const0> ;
  assign pipe_tx_4_sigs[8] = \<const0> ;
  assign pipe_tx_4_sigs[7] = \<const0> ;
  assign pipe_tx_4_sigs[6] = \<const0> ;
  assign pipe_tx_4_sigs[5] = \<const0> ;
  assign pipe_tx_4_sigs[4] = \<const0> ;
  assign pipe_tx_4_sigs[3] = \<const0> ;
  assign pipe_tx_4_sigs[2] = \<const0> ;
  assign pipe_tx_4_sigs[1] = \<const0> ;
  assign pipe_tx_4_sigs[0] = \<const0> ;
  assign pipe_tx_5_sigs[69] = \<const0> ;
  assign pipe_tx_5_sigs[68] = \<const0> ;
  assign pipe_tx_5_sigs[67] = \<const0> ;
  assign pipe_tx_5_sigs[66] = \<const0> ;
  assign pipe_tx_5_sigs[65] = \<const0> ;
  assign pipe_tx_5_sigs[64] = \<const0> ;
  assign pipe_tx_5_sigs[63] = \<const0> ;
  assign pipe_tx_5_sigs[62] = \<const0> ;
  assign pipe_tx_5_sigs[61] = \<const0> ;
  assign pipe_tx_5_sigs[60] = \<const0> ;
  assign pipe_tx_5_sigs[59] = \<const0> ;
  assign pipe_tx_5_sigs[58] = \<const0> ;
  assign pipe_tx_5_sigs[57] = \<const0> ;
  assign pipe_tx_5_sigs[56] = \<const0> ;
  assign pipe_tx_5_sigs[55] = \<const0> ;
  assign pipe_tx_5_sigs[54] = \<const0> ;
  assign pipe_tx_5_sigs[53] = \<const0> ;
  assign pipe_tx_5_sigs[52] = \<const0> ;
  assign pipe_tx_5_sigs[51] = \<const0> ;
  assign pipe_tx_5_sigs[50] = \<const0> ;
  assign pipe_tx_5_sigs[49] = \<const0> ;
  assign pipe_tx_5_sigs[48] = \<const0> ;
  assign pipe_tx_5_sigs[47] = \<const0> ;
  assign pipe_tx_5_sigs[46] = \<const0> ;
  assign pipe_tx_5_sigs[45] = \<const0> ;
  assign pipe_tx_5_sigs[44] = \<const0> ;
  assign pipe_tx_5_sigs[43] = \<const0> ;
  assign pipe_tx_5_sigs[42] = \<const0> ;
  assign pipe_tx_5_sigs[41] = \<const0> ;
  assign pipe_tx_5_sigs[40] = \<const0> ;
  assign pipe_tx_5_sigs[39] = \<const0> ;
  assign pipe_tx_5_sigs[38] = \<const0> ;
  assign pipe_tx_5_sigs[37] = \<const0> ;
  assign pipe_tx_5_sigs[36] = \<const0> ;
  assign pipe_tx_5_sigs[35] = \<const0> ;
  assign pipe_tx_5_sigs[34] = \<const0> ;
  assign pipe_tx_5_sigs[33] = \<const0> ;
  assign pipe_tx_5_sigs[32] = \<const0> ;
  assign pipe_tx_5_sigs[31] = \<const0> ;
  assign pipe_tx_5_sigs[30] = \<const0> ;
  assign pipe_tx_5_sigs[29] = \<const0> ;
  assign pipe_tx_5_sigs[28] = \<const0> ;
  assign pipe_tx_5_sigs[27] = \<const0> ;
  assign pipe_tx_5_sigs[26] = \<const0> ;
  assign pipe_tx_5_sigs[25] = \<const0> ;
  assign pipe_tx_5_sigs[24] = \<const0> ;
  assign pipe_tx_5_sigs[23] = \<const0> ;
  assign pipe_tx_5_sigs[22] = \<const0> ;
  assign pipe_tx_5_sigs[21] = \<const0> ;
  assign pipe_tx_5_sigs[20] = \<const0> ;
  assign pipe_tx_5_sigs[19] = \<const0> ;
  assign pipe_tx_5_sigs[18] = \<const0> ;
  assign pipe_tx_5_sigs[17] = \<const0> ;
  assign pipe_tx_5_sigs[16] = \<const0> ;
  assign pipe_tx_5_sigs[15] = \<const0> ;
  assign pipe_tx_5_sigs[14] = \<const0> ;
  assign pipe_tx_5_sigs[13] = \<const0> ;
  assign pipe_tx_5_sigs[12] = \<const0> ;
  assign pipe_tx_5_sigs[11] = \<const0> ;
  assign pipe_tx_5_sigs[10] = \<const0> ;
  assign pipe_tx_5_sigs[9] = \<const0> ;
  assign pipe_tx_5_sigs[8] = \<const0> ;
  assign pipe_tx_5_sigs[7] = \<const0> ;
  assign pipe_tx_5_sigs[6] = \<const0> ;
  assign pipe_tx_5_sigs[5] = \<const0> ;
  assign pipe_tx_5_sigs[4] = \<const0> ;
  assign pipe_tx_5_sigs[3] = \<const0> ;
  assign pipe_tx_5_sigs[2] = \<const0> ;
  assign pipe_tx_5_sigs[1] = \<const0> ;
  assign pipe_tx_5_sigs[0] = \<const0> ;
  assign pipe_tx_6_sigs[69] = \<const0> ;
  assign pipe_tx_6_sigs[68] = \<const0> ;
  assign pipe_tx_6_sigs[67] = \<const0> ;
  assign pipe_tx_6_sigs[66] = \<const0> ;
  assign pipe_tx_6_sigs[65] = \<const0> ;
  assign pipe_tx_6_sigs[64] = \<const0> ;
  assign pipe_tx_6_sigs[63] = \<const0> ;
  assign pipe_tx_6_sigs[62] = \<const0> ;
  assign pipe_tx_6_sigs[61] = \<const0> ;
  assign pipe_tx_6_sigs[60] = \<const0> ;
  assign pipe_tx_6_sigs[59] = \<const0> ;
  assign pipe_tx_6_sigs[58] = \<const0> ;
  assign pipe_tx_6_sigs[57] = \<const0> ;
  assign pipe_tx_6_sigs[56] = \<const0> ;
  assign pipe_tx_6_sigs[55] = \<const0> ;
  assign pipe_tx_6_sigs[54] = \<const0> ;
  assign pipe_tx_6_sigs[53] = \<const0> ;
  assign pipe_tx_6_sigs[52] = \<const0> ;
  assign pipe_tx_6_sigs[51] = \<const0> ;
  assign pipe_tx_6_sigs[50] = \<const0> ;
  assign pipe_tx_6_sigs[49] = \<const0> ;
  assign pipe_tx_6_sigs[48] = \<const0> ;
  assign pipe_tx_6_sigs[47] = \<const0> ;
  assign pipe_tx_6_sigs[46] = \<const0> ;
  assign pipe_tx_6_sigs[45] = \<const0> ;
  assign pipe_tx_6_sigs[44] = \<const0> ;
  assign pipe_tx_6_sigs[43] = \<const0> ;
  assign pipe_tx_6_sigs[42] = \<const0> ;
  assign pipe_tx_6_sigs[41] = \<const0> ;
  assign pipe_tx_6_sigs[40] = \<const0> ;
  assign pipe_tx_6_sigs[39] = \<const0> ;
  assign pipe_tx_6_sigs[38] = \<const0> ;
  assign pipe_tx_6_sigs[37] = \<const0> ;
  assign pipe_tx_6_sigs[36] = \<const0> ;
  assign pipe_tx_6_sigs[35] = \<const0> ;
  assign pipe_tx_6_sigs[34] = \<const0> ;
  assign pipe_tx_6_sigs[33] = \<const0> ;
  assign pipe_tx_6_sigs[32] = \<const0> ;
  assign pipe_tx_6_sigs[31] = \<const0> ;
  assign pipe_tx_6_sigs[30] = \<const0> ;
  assign pipe_tx_6_sigs[29] = \<const0> ;
  assign pipe_tx_6_sigs[28] = \<const0> ;
  assign pipe_tx_6_sigs[27] = \<const0> ;
  assign pipe_tx_6_sigs[26] = \<const0> ;
  assign pipe_tx_6_sigs[25] = \<const0> ;
  assign pipe_tx_6_sigs[24] = \<const0> ;
  assign pipe_tx_6_sigs[23] = \<const0> ;
  assign pipe_tx_6_sigs[22] = \<const0> ;
  assign pipe_tx_6_sigs[21] = \<const0> ;
  assign pipe_tx_6_sigs[20] = \<const0> ;
  assign pipe_tx_6_sigs[19] = \<const0> ;
  assign pipe_tx_6_sigs[18] = \<const0> ;
  assign pipe_tx_6_sigs[17] = \<const0> ;
  assign pipe_tx_6_sigs[16] = \<const0> ;
  assign pipe_tx_6_sigs[15] = \<const0> ;
  assign pipe_tx_6_sigs[14] = \<const0> ;
  assign pipe_tx_6_sigs[13] = \<const0> ;
  assign pipe_tx_6_sigs[12] = \<const0> ;
  assign pipe_tx_6_sigs[11] = \<const0> ;
  assign pipe_tx_6_sigs[10] = \<const0> ;
  assign pipe_tx_6_sigs[9] = \<const0> ;
  assign pipe_tx_6_sigs[8] = \<const0> ;
  assign pipe_tx_6_sigs[7] = \<const0> ;
  assign pipe_tx_6_sigs[6] = \<const0> ;
  assign pipe_tx_6_sigs[5] = \<const0> ;
  assign pipe_tx_6_sigs[4] = \<const0> ;
  assign pipe_tx_6_sigs[3] = \<const0> ;
  assign pipe_tx_6_sigs[2] = \<const0> ;
  assign pipe_tx_6_sigs[1] = \<const0> ;
  assign pipe_tx_6_sigs[0] = \<const0> ;
  assign pipe_tx_7_sigs[69] = \<const0> ;
  assign pipe_tx_7_sigs[68] = \<const0> ;
  assign pipe_tx_7_sigs[67] = \<const0> ;
  assign pipe_tx_7_sigs[66] = \<const0> ;
  assign pipe_tx_7_sigs[65] = \<const0> ;
  assign pipe_tx_7_sigs[64] = \<const0> ;
  assign pipe_tx_7_sigs[63] = \<const0> ;
  assign pipe_tx_7_sigs[62] = \<const0> ;
  assign pipe_tx_7_sigs[61] = \<const0> ;
  assign pipe_tx_7_sigs[60] = \<const0> ;
  assign pipe_tx_7_sigs[59] = \<const0> ;
  assign pipe_tx_7_sigs[58] = \<const0> ;
  assign pipe_tx_7_sigs[57] = \<const0> ;
  assign pipe_tx_7_sigs[56] = \<const0> ;
  assign pipe_tx_7_sigs[55] = \<const0> ;
  assign pipe_tx_7_sigs[54] = \<const0> ;
  assign pipe_tx_7_sigs[53] = \<const0> ;
  assign pipe_tx_7_sigs[52] = \<const0> ;
  assign pipe_tx_7_sigs[51] = \<const0> ;
  assign pipe_tx_7_sigs[50] = \<const0> ;
  assign pipe_tx_7_sigs[49] = \<const0> ;
  assign pipe_tx_7_sigs[48] = \<const0> ;
  assign pipe_tx_7_sigs[47] = \<const0> ;
  assign pipe_tx_7_sigs[46] = \<const0> ;
  assign pipe_tx_7_sigs[45] = \<const0> ;
  assign pipe_tx_7_sigs[44] = \<const0> ;
  assign pipe_tx_7_sigs[43] = \<const0> ;
  assign pipe_tx_7_sigs[42] = \<const0> ;
  assign pipe_tx_7_sigs[41] = \<const0> ;
  assign pipe_tx_7_sigs[40] = \<const0> ;
  assign pipe_tx_7_sigs[39] = \<const0> ;
  assign pipe_tx_7_sigs[38] = \<const0> ;
  assign pipe_tx_7_sigs[37] = \<const0> ;
  assign pipe_tx_7_sigs[36] = \<const0> ;
  assign pipe_tx_7_sigs[35] = \<const0> ;
  assign pipe_tx_7_sigs[34] = \<const0> ;
  assign pipe_tx_7_sigs[33] = \<const0> ;
  assign pipe_tx_7_sigs[32] = \<const0> ;
  assign pipe_tx_7_sigs[31] = \<const0> ;
  assign pipe_tx_7_sigs[30] = \<const0> ;
  assign pipe_tx_7_sigs[29] = \<const0> ;
  assign pipe_tx_7_sigs[28] = \<const0> ;
  assign pipe_tx_7_sigs[27] = \<const0> ;
  assign pipe_tx_7_sigs[26] = \<const0> ;
  assign pipe_tx_7_sigs[25] = \<const0> ;
  assign pipe_tx_7_sigs[24] = \<const0> ;
  assign pipe_tx_7_sigs[23] = \<const0> ;
  assign pipe_tx_7_sigs[22] = \<const0> ;
  assign pipe_tx_7_sigs[21] = \<const0> ;
  assign pipe_tx_7_sigs[20] = \<const0> ;
  assign pipe_tx_7_sigs[19] = \<const0> ;
  assign pipe_tx_7_sigs[18] = \<const0> ;
  assign pipe_tx_7_sigs[17] = \<const0> ;
  assign pipe_tx_7_sigs[16] = \<const0> ;
  assign pipe_tx_7_sigs[15] = \<const0> ;
  assign pipe_tx_7_sigs[14] = \<const0> ;
  assign pipe_tx_7_sigs[13] = \<const0> ;
  assign pipe_tx_7_sigs[12] = \<const0> ;
  assign pipe_tx_7_sigs[11] = \<const0> ;
  assign pipe_tx_7_sigs[10] = \<const0> ;
  assign pipe_tx_7_sigs[9] = \<const0> ;
  assign pipe_tx_7_sigs[8] = \<const0> ;
  assign pipe_tx_7_sigs[7] = \<const0> ;
  assign pipe_tx_7_sigs[6] = \<const0> ;
  assign pipe_tx_7_sigs[5] = \<const0> ;
  assign pipe_tx_7_sigs[4] = \<const0> ;
  assign pipe_tx_7_sigs[3] = \<const0> ;
  assign pipe_tx_7_sigs[2] = \<const0> ;
  assign pipe_tx_7_sigs[1] = \<const0> ;
  assign pipe_tx_7_sigs[0] = \<const0> ;
  assign startup_cfgclk = \<const0> ;
  assign startup_cfgmclk = \<const0> ;
  assign startup_di[3] = \<const0> ;
  assign startup_di[2] = \<const0> ;
  assign startup_di[1] = \<const0> ;
  assign startup_di[0] = \<const0> ;
  assign startup_eos = \<const0> ;
  assign startup_preq = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT bufg_gt_sysclk
       (.CE(sync_sc_ce),
        .CEMASK(1'b0),
        .CLR(sync_sc_clr),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(sys_clk),
        .O(ext_ch_gt_drpclk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_wrapper gt_top_i
       (.CLK_CORECLK(core_clk),
        .CLK_PCLK(pipe_clk),
        .CLK_USERCLK(user_clk),
        .MCAPCLK(mcap_clk),
        .PCIEPERST0B(pcie_perstn0_out),
        .Q(pipe_tx0_rate),
        .TXEQ_DONE(TXEQ_DONE),
        .adapt_done(adapt_done),
        .\fsm_reg[1] (\^phy_rst_fsm ),
        .gt_bufgtdiv(gt_bufgtdiv),
        .gt_cplllock(gt_cplllock),
        .gt_dmonitorout(gt_dmonitorout),
        .gt_eyescandataerror(gt_eyescandataerror),
        .gt_gtpowergood(gt_gtpowergood),
        .gt_loopback(gt_loopback),
        .gt_pcierateidle(gt_pcierateidle),
        .gt_pcieuserratedone(gt_pcieuserratedone),
        .gt_pcieuserratestart(gt_pcieuserratestart),
        .gt_phystatus(gt_phystatus),
        .gt_rxbufstatus(gt_rxbufstatus),
        .gt_rxcdrlock(gt_rxcdrlock),
        .gt_rxcommadet(gt_rxcommadet),
        .gt_rxdlysresetdone(gt_rxdlysresetdone),
        .gt_rxphaligndone(gt_rxphaligndone),
        .gt_rxpmaresetdone(gt_rxpmaresetdone),
        .gt_rxprbscntreset(gt_rxprbscntreset),
        .gt_rxprbserr(gt_rxprbserr),
        .gt_rxresetdone(gt_rxresetdone),
        .gt_rxstatus(gt_rxstatus),
        .gt_rxsyncdone(gt_rxsyncdone),
        .gt_rxvalid(gt_rxvalid),
        .gt_txdlysresetdone(gt_txdlysresetdone),
        .gt_txelecidle(gt_txelecidle),
        .gt_txinhibit(gt_txinhibit),
        .gt_txphaligndone(gt_txphaligndone),
        .gt_txphinitdone(gt_txphinitdone),
        .gt_txprbsforceerr(gt_txprbsforceerr),
        .gt_txprbssel(gt_txprbssel),
        .gt_txresetdone(gt_txresetdone),
        .int_qpll1lock_out(int_qpll1lock_out),
        .int_qpll1outclk_out(int_qpll1outclk_out),
        .int_qpll1outrefclk_out(int_qpll1outrefclk_out),
        .lffs_sel(lffs_sel),
        .out(phy_prst_n),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .phy_rrst_n(phy_rrst_n),
        .phy_rst_idle(phy_rst_idle),
        .phy_rxeq_fsm(phy_rxeq_fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .phy_txeq_fsm(phy_txeq_fsm),
        .phy_txeq_preset(phy_txeq_preset),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ({pcie3_uscale_top_inst_n_161,pcie3_uscale_top_inst_n_162}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_0 (pipe_rx_eqcontrol_q),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_1 ({pcie3_uscale_top_inst_n_203,pcie3_uscale_top_inst_n_204}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_2 ({pcie3_uscale_top_inst_n_224,pcie3_uscale_top_inst_n_225}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_3 ({pcie3_uscale_top_inst_n_245,pcie3_uscale_top_inst_n_246}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_4 ({pcie3_uscale_top_inst_n_266,pcie3_uscale_top_inst_n_267}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_5 ({pcie3_uscale_top_inst_n_287,pcie3_uscale_top_inst_n_288}),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_6 ({pcie3_uscale_top_inst_n_308,pcie3_uscale_top_inst_n_309}),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (gt_top_i_n_684),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_0 (gt_top_i_n_688),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_1 (gt_top_i_n_692),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_2 (gt_top_i_n_696),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_3 (gt_top_i_n_700),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_4 (gt_top_i_n_704),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_5 (gt_top_i_n_708),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg_6 (gt_top_i_n_712),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (gt_top_i_n_685),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_0 (gt_top_i_n_689),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_1 (gt_top_i_n_693),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_2 (gt_top_i_n_697),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_3 (gt_top_i_n_701),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_4 (gt_top_i_n_705),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_5 (gt_top_i_n_709),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ({pcie3_uscale_top_inst_n_170,pcie3_uscale_top_inst_n_171,pcie3_uscale_top_inst_n_172,pcie3_uscale_top_inst_n_173,pcie3_uscale_top_inst_n_174,pcie3_uscale_top_inst_n_175}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_0 (pipe_rx_eqlplffs_q),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_1 ({pcie3_uscale_top_inst_n_212,pcie3_uscale_top_inst_n_213,pcie3_uscale_top_inst_n_214,pcie3_uscale_top_inst_n_215,pcie3_uscale_top_inst_n_216,pcie3_uscale_top_inst_n_217}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_2 ({pcie3_uscale_top_inst_n_233,pcie3_uscale_top_inst_n_234,pcie3_uscale_top_inst_n_235,pcie3_uscale_top_inst_n_236,pcie3_uscale_top_inst_n_237,pcie3_uscale_top_inst_n_238}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_3 ({pcie3_uscale_top_inst_n_254,pcie3_uscale_top_inst_n_255,pcie3_uscale_top_inst_n_256,pcie3_uscale_top_inst_n_257,pcie3_uscale_top_inst_n_258,pcie3_uscale_top_inst_n_259}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_4 ({pcie3_uscale_top_inst_n_275,pcie3_uscale_top_inst_n_276,pcie3_uscale_top_inst_n_277,pcie3_uscale_top_inst_n_278,pcie3_uscale_top_inst_n_279,pcie3_uscale_top_inst_n_280}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_5 ({pcie3_uscale_top_inst_n_296,pcie3_uscale_top_inst_n_297,pcie3_uscale_top_inst_n_298,pcie3_uscale_top_inst_n_299,pcie3_uscale_top_inst_n_300,pcie3_uscale_top_inst_n_301}),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_6 ({pcie3_uscale_top_inst_n_317,pcie3_uscale_top_inst_n_318,pcie3_uscale_top_inst_n_319,pcie3_uscale_top_inst_n_320,pcie3_uscale_top_inst_n_321,pcie3_uscale_top_inst_n_322}),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (gt_top_i_n_686),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_0 (gt_top_i_n_690),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_1 (gt_top_i_n_694),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_2 (gt_top_i_n_698),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_3 (gt_top_i_n_702),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_4 (gt_top_i_n_706),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_5 (gt_top_i_n_710),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ({pcie3_uscale_top_inst_n_166,pcie3_uscale_top_inst_n_167,pcie3_uscale_top_inst_n_168,pcie3_uscale_top_inst_n_169}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_0 (pipe_rx_eqlptxpreset_q),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_1 ({pcie3_uscale_top_inst_n_208,pcie3_uscale_top_inst_n_209,pcie3_uscale_top_inst_n_210,pcie3_uscale_top_inst_n_211}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_2 ({pcie3_uscale_top_inst_n_229,pcie3_uscale_top_inst_n_230,pcie3_uscale_top_inst_n_231,pcie3_uscale_top_inst_n_232}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_3 ({pcie3_uscale_top_inst_n_250,pcie3_uscale_top_inst_n_251,pcie3_uscale_top_inst_n_252,pcie3_uscale_top_inst_n_253}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_4 ({pcie3_uscale_top_inst_n_271,pcie3_uscale_top_inst_n_272,pcie3_uscale_top_inst_n_273,pcie3_uscale_top_inst_n_274}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_5 ({pcie3_uscale_top_inst_n_292,pcie3_uscale_top_inst_n_293,pcie3_uscale_top_inst_n_294,pcie3_uscale_top_inst_n_295}),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_6 ({pcie3_uscale_top_inst_n_313,pcie3_uscale_top_inst_n_314,pcie3_uscale_top_inst_n_315,pcie3_uscale_top_inst_n_316}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ({pcie3_uscale_top_inst_n_163,pcie3_uscale_top_inst_n_164,pcie3_uscale_top_inst_n_165}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_0 (pipe_rx_eqpreset_q),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_1 ({pcie3_uscale_top_inst_n_205,pcie3_uscale_top_inst_n_206,pcie3_uscale_top_inst_n_207}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_2 ({pcie3_uscale_top_inst_n_226,pcie3_uscale_top_inst_n_227,pcie3_uscale_top_inst_n_228}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_3 ({pcie3_uscale_top_inst_n_247,pcie3_uscale_top_inst_n_248,pcie3_uscale_top_inst_n_249}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_4 ({pcie3_uscale_top_inst_n_268,pcie3_uscale_top_inst_n_269,pcie3_uscale_top_inst_n_270}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_5 ({pcie3_uscale_top_inst_n_289,pcie3_uscale_top_inst_n_290,pcie3_uscale_top_inst_n_291}),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_6 ({pcie3_uscale_top_inst_n_310,pcie3_uscale_top_inst_n_311,pcie3_uscale_top_inst_n_312}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ({gt_top_i_n_721,gt_top_i_n_722,gt_top_i_n_723,gt_top_i_n_724,gt_top_i_n_725,gt_top_i_n_726,gt_top_i_n_727,gt_top_i_n_728,gt_top_i_n_729,gt_top_i_n_730,gt_top_i_n_731,gt_top_i_n_732,gt_top_i_n_733,gt_top_i_n_734,gt_top_i_n_735,gt_top_i_n_736}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ({gt_top_i_n_737,gt_top_i_n_738,gt_top_i_n_739,gt_top_i_n_740,gt_top_i_n_741,gt_top_i_n_742,gt_top_i_n_743,gt_top_i_n_744,gt_top_i_n_745,gt_top_i_n_746,gt_top_i_n_747,gt_top_i_n_748,gt_top_i_n_749,gt_top_i_n_750,gt_top_i_n_751,gt_top_i_n_752}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ({gt_top_i_n_753,gt_top_i_n_754,gt_top_i_n_755,gt_top_i_n_756,gt_top_i_n_757,gt_top_i_n_758,gt_top_i_n_759,gt_top_i_n_760,gt_top_i_n_761,gt_top_i_n_762,gt_top_i_n_763,gt_top_i_n_764,gt_top_i_n_765,gt_top_i_n_766,gt_top_i_n_767,gt_top_i_n_768}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ({gt_top_i_n_769,gt_top_i_n_770,gt_top_i_n_771,gt_top_i_n_772,gt_top_i_n_773,gt_top_i_n_774,gt_top_i_n_775,gt_top_i_n_776,gt_top_i_n_777,gt_top_i_n_778,gt_top_i_n_779,gt_top_i_n_780,gt_top_i_n_781,gt_top_i_n_782,gt_top_i_n_783,gt_top_i_n_784}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ({gt_top_i_n_785,gt_top_i_n_786,gt_top_i_n_787,gt_top_i_n_788,gt_top_i_n_789,gt_top_i_n_790,gt_top_i_n_791,gt_top_i_n_792,gt_top_i_n_793,gt_top_i_n_794,gt_top_i_n_795,gt_top_i_n_796,gt_top_i_n_797,gt_top_i_n_798,gt_top_i_n_799,gt_top_i_n_800}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ({gt_top_i_n_801,gt_top_i_n_802,gt_top_i_n_803,gt_top_i_n_804,gt_top_i_n_805,gt_top_i_n_806,gt_top_i_n_807,gt_top_i_n_808,gt_top_i_n_809,gt_top_i_n_810,gt_top_i_n_811,gt_top_i_n_812,gt_top_i_n_813,gt_top_i_n_814,gt_top_i_n_815,gt_top_i_n_816}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ({gt_top_i_n_817,gt_top_i_n_818,gt_top_i_n_819,gt_top_i_n_820,gt_top_i_n_821,gt_top_i_n_822,gt_top_i_n_823,gt_top_i_n_824,gt_top_i_n_825,gt_top_i_n_826,gt_top_i_n_827,gt_top_i_n_828,gt_top_i_n_829,gt_top_i_n_830,gt_top_i_n_831,gt_top_i_n_832}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_6 ({TXEQ_NEW_COEFF[16:6],TXEQ_NEW_COEFF[4:0]}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ({pcie3_uscale_top_inst_n_155,pcie3_uscale_top_inst_n_156,pcie3_uscale_top_inst_n_157,pcie3_uscale_top_inst_n_158,p_0_in0,pcie3_uscale_top_inst_n_160}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 (pipe_tx_eqdeemph_q),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ({pcie3_uscale_top_inst_n_197,pcie3_uscale_top_inst_n_198,pcie3_uscale_top_inst_n_199,pcie3_uscale_top_inst_n_200,pcie3_uscale_top_inst_n_201,pcie3_uscale_top_inst_n_202}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ({pcie3_uscale_top_inst_n_218,pcie3_uscale_top_inst_n_219,pcie3_uscale_top_inst_n_220,pcie3_uscale_top_inst_n_221,pcie3_uscale_top_inst_n_222,pcie3_uscale_top_inst_n_223}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ({pcie3_uscale_top_inst_n_239,pcie3_uscale_top_inst_n_240,pcie3_uscale_top_inst_n_241,pcie3_uscale_top_inst_n_242,pcie3_uscale_top_inst_n_243,pcie3_uscale_top_inst_n_244}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ({pcie3_uscale_top_inst_n_260,pcie3_uscale_top_inst_n_261,pcie3_uscale_top_inst_n_262,pcie3_uscale_top_inst_n_263,pcie3_uscale_top_inst_n_264,pcie3_uscale_top_inst_n_265}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ({pcie3_uscale_top_inst_n_281,pcie3_uscale_top_inst_n_282,pcie3_uscale_top_inst_n_283,pcie3_uscale_top_inst_n_284,pcie3_uscale_top_inst_n_285,pcie3_uscale_top_inst_n_286}),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ({pcie3_uscale_top_inst_n_302,pcie3_uscale_top_inst_n_303,pcie3_uscale_top_inst_n_304,pcie3_uscale_top_inst_n_305,pcie3_uscale_top_inst_n_306,pcie3_uscale_top_inst_n_307}),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (gt_top_i_n_687),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_0 (gt_top_i_n_691),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_1 (gt_top_i_n_695),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_2 (gt_top_i_n_699),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_3 (gt_top_i_n_703),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_4 (gt_top_i_n_707),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg_5 (gt_top_i_n_711),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (pipe_tx0_margin),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1] (pipe_tx0_powerdown),
        .rxcdrhold_in(phy_rxcdrhold),
        .rxctrl0_out({pipe_rx_syncheader[1:0],pipe_rx_start_block[0],pipe_rx_data_valid[0],pipe_rx_char_is_k[1:0],pipe_rx_syncheader[3:2],pipe_rx_start_block[1],pipe_rx_data_valid[1],pipe_rx_char_is_k[3:2],pipe_rx_syncheader[5:4],pipe_rx_start_block[2],pipe_rx_data_valid[2],pipe_rx_char_is_k[5:4],pipe_rx_syncheader[7:6],pipe_rx_start_block[3],pipe_rx_data_valid[3],pipe_rx_char_is_k[7:6],pipe_rx_syncheader[9:8],pipe_rx_start_block[4],pipe_rx_data_valid[4],pipe_rx_char_is_k[9:8],pipe_rx_syncheader[11:10],pipe_rx_start_block[5],pipe_rx_data_valid[5],pipe_rx_char_is_k[11:10],pipe_rx_syncheader[13:12],pipe_rx_start_block[6],pipe_rx_data_valid[6],pipe_rx_char_is_k[13:12],pipe_rx_syncheader[15:14],pipe_rx_start_block[7],pipe_rx_data_valid[7],pipe_rx_char_is_k[15:14]}),
        .rxdata_out({pipe_rx_data[31:0],pipe_rx_data[63:32],pipe_rx_data[95:64],pipe_rx_data[127:96],pipe_rx_data[159:128],pipe_rx_data[191:160],pipe_rx_data[223:192],pipe_rx_data[255:224]}),
        .rxelecidle_out({pipe_rx_elec_idle[0],pipe_rx_elec_idle[1],pipe_rx_elec_idle[2],pipe_rx_elec_idle[3],pipe_rx_elec_idle[4],pipe_rx_elec_idle[5],pipe_rx_elec_idle[6],pipe_rx_elec_idle[7]}),
        .rxpolarity_in({pipe_rx_polarity[0],pipe_rx_polarity[1],pipe_rx_polarity[2],pipe_rx_polarity[3],pipe_rx_polarity[4],pipe_rx_polarity[5],pipe_rx_polarity[6],pipe_rx_polarity[7]}),
        .sys_clk(ext_ch_gt_drpclk),
        .sys_clk_gt(sys_clk_gt),
        .txctrl0_in({pipe_tx_syncheader[1:0],pipe_tx_start_block[0],pipe_tx_data_valid[0],pipe_tx_syncheader[3:2],pipe_tx_start_block[1],pipe_tx_data_valid[1],pipe_tx_syncheader[5:4],pipe_tx_start_block[2],pipe_tx_data_valid[2],pipe_tx_syncheader[7:6],pipe_tx_start_block[3],pipe_tx_data_valid[3],pipe_tx_syncheader[9:8],pipe_tx_start_block[4],pipe_tx_data_valid[4],pipe_tx_syncheader[11:10],pipe_tx_start_block[5],pipe_tx_data_valid[5],pipe_tx_syncheader[13:12],pipe_tx_start_block[6],pipe_tx_data_valid[6],pipe_tx_syncheader[15:14],pipe_tx_start_block[7],pipe_tx_data_valid[7]}),
        .txctrl1_in({pipe_tx_compliance[0],pipe_tx_compliance[1],pipe_tx_compliance[2],pipe_tx_compliance[3],pipe_tx_compliance[4],pipe_tx_compliance[5],pipe_tx_compliance[6],pipe_tx_compliance[7]}),
        .txctrl2_in({pipe_tx_char_is_k[1:0],pipe_tx_char_is_k[3:2],pipe_tx_char_is_k[5:4],pipe_tx_char_is_k[7:6],pipe_tx_char_is_k[9:8],pipe_tx_char_is_k[11:10],pipe_tx_char_is_k[13:12],pipe_tx_char_is_k[15:14]}),
        .txdata_in({pipe_txdata[31:0],pipe_txdata[63:32],pipe_txdata[95:64],pipe_txdata[127:96],pipe_txdata[159:128],pipe_txdata[191:160],pipe_txdata[223:192],pipe_txdata[255:224]}),
        .txdeemph_in(pipe_tx0_deemph),
        .txdetectrx_in(pipe_tx0_rcvr_det),
        .txswing_in(pipe_tx0_swing));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_top pcie3_uscale_top_inst
       (.CLK(pipe_clk),
        .CORECLKMIREQUESTRAM(core_clk),
        .D({gt_top_i_n_721,gt_top_i_n_722,gt_top_i_n_723,gt_top_i_n_724,gt_top_i_n_725,gt_top_i_n_726,gt_top_i_n_727,gt_top_i_n_728,gt_top_i_n_729,gt_top_i_n_730,gt_top_i_n_731,gt_top_i_n_732,gt_top_i_n_733,gt_top_i_n_734,gt_top_i_n_735,gt_top_i_n_736}),
        .MCAPCLK(mcap_clk),
        .PCIEPERST0B(pcie_perstn0_out),
        .Q({pcie3_uscale_top_inst_n_155,pcie3_uscale_top_inst_n_156,pcie3_uscale_top_inst_n_157,pcie3_uscale_top_inst_n_158,p_0_in0,pcie3_uscale_top_inst_n_160}),
        .TXEQ_DONE(TXEQ_DONE),
        .TXEQ_DONE_reg(gt_top_i_n_687),
        .TXEQ_DONE_reg_0(gt_top_i_n_691),
        .TXEQ_DONE_reg_1(gt_top_i_n_695),
        .TXEQ_DONE_reg_2(gt_top_i_n_699),
        .TXEQ_DONE_reg_3(gt_top_i_n_703),
        .TXEQ_DONE_reg_4(gt_top_i_n_707),
        .TXEQ_DONE_reg_5(gt_top_i_n_711),
        .\TXEQ_NEW_COEFF_reg[16] ({gt_top_i_n_737,gt_top_i_n_738,gt_top_i_n_739,gt_top_i_n_740,gt_top_i_n_741,gt_top_i_n_742,gt_top_i_n_743,gt_top_i_n_744,gt_top_i_n_745,gt_top_i_n_746,gt_top_i_n_747,gt_top_i_n_748,gt_top_i_n_749,gt_top_i_n_750,gt_top_i_n_751,gt_top_i_n_752}),
        .\TXEQ_NEW_COEFF_reg[16]_0 ({gt_top_i_n_753,gt_top_i_n_754,gt_top_i_n_755,gt_top_i_n_756,gt_top_i_n_757,gt_top_i_n_758,gt_top_i_n_759,gt_top_i_n_760,gt_top_i_n_761,gt_top_i_n_762,gt_top_i_n_763,gt_top_i_n_764,gt_top_i_n_765,gt_top_i_n_766,gt_top_i_n_767,gt_top_i_n_768}),
        .\TXEQ_NEW_COEFF_reg[16]_1 ({gt_top_i_n_769,gt_top_i_n_770,gt_top_i_n_771,gt_top_i_n_772,gt_top_i_n_773,gt_top_i_n_774,gt_top_i_n_775,gt_top_i_n_776,gt_top_i_n_777,gt_top_i_n_778,gt_top_i_n_779,gt_top_i_n_780,gt_top_i_n_781,gt_top_i_n_782,gt_top_i_n_783,gt_top_i_n_784}),
        .\TXEQ_NEW_COEFF_reg[16]_2 ({gt_top_i_n_785,gt_top_i_n_786,gt_top_i_n_787,gt_top_i_n_788,gt_top_i_n_789,gt_top_i_n_790,gt_top_i_n_791,gt_top_i_n_792,gt_top_i_n_793,gt_top_i_n_794,gt_top_i_n_795,gt_top_i_n_796,gt_top_i_n_797,gt_top_i_n_798,gt_top_i_n_799,gt_top_i_n_800}),
        .\TXEQ_NEW_COEFF_reg[16]_3 ({gt_top_i_n_801,gt_top_i_n_802,gt_top_i_n_803,gt_top_i_n_804,gt_top_i_n_805,gt_top_i_n_806,gt_top_i_n_807,gt_top_i_n_808,gt_top_i_n_809,gt_top_i_n_810,gt_top_i_n_811,gt_top_i_n_812,gt_top_i_n_813,gt_top_i_n_814,gt_top_i_n_815,gt_top_i_n_816}),
        .\TXEQ_NEW_COEFF_reg[16]_4 ({gt_top_i_n_817,gt_top_i_n_818,gt_top_i_n_819,gt_top_i_n_820,gt_top_i_n_821,gt_top_i_n_822,gt_top_i_n_823,gt_top_i_n_824,gt_top_i_n_825,gt_top_i_n_826,gt_top_i_n_827,gt_top_i_n_828,gt_top_i_n_829,gt_top_i_n_830,gt_top_i_n_831,gt_top_i_n_832}),
        .\TXEQ_NEW_COEFF_reg[16]_5 ({TXEQ_NEW_COEFF[16:6],TXEQ_NEW_COEFF[4:0]}),
        .adapt_done(adapt_done),
        .adapt_done_reg(gt_top_i_n_685),
        .adapt_done_reg_0(gt_top_i_n_689),
        .adapt_done_reg_1(gt_top_i_n_693),
        .adapt_done_reg_2(gt_top_i_n_697),
        .adapt_done_reg_3(gt_top_i_n_701),
        .adapt_done_reg_4(gt_top_i_n_705),
        .adapt_done_reg_5(gt_top_i_n_709),
        .cap_gnt(cap_gnt),
        .cap_rel(cap_rel),
        .cap_req(cap_req),
        .cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_ext_function_number(cfg_ext_function_number),
        .cfg_ext_read_data(cfg_ext_read_data),
        .cfg_ext_read_data_valid(cfg_ext_read_data_valid),
        .cfg_ext_read_received(cfg_ext_read_received),
        .cfg_ext_register_number(cfg_ext_register_number),
        .cfg_ext_write_byte_enable(cfg_ext_write_byte_enable),
        .cfg_ext_write_data(cfg_ext_write_data),
        .cfg_ext_write_received(cfg_ext_write_received),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_pending_status_data_enable(cfg_interrupt_msi_pending_status_data_enable),
        .cfg_interrupt_msi_pending_status_function_num(cfg_interrupt_msi_pending_status_function_num),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_msix_address(cfg_interrupt_msix_address),
        .cfg_interrupt_msix_data(cfg_interrupt_msix_data),
        .cfg_interrupt_msix_enable(cfg_interrupt_msix_enable),
        .cfg_interrupt_msix_fail(cfg_interrupt_msix_fail),
        .cfg_interrupt_msix_int(cfg_interrupt_msix_int),
        .cfg_interrupt_msix_mask(cfg_interrupt_msix_mask),
        .cfg_interrupt_msix_sent(cfg_interrupt_msix_sent),
        .cfg_interrupt_msix_vf_enable(cfg_interrupt_msix_vf_enable),
        .cfg_interrupt_msix_vf_mask(cfg_interrupt_msix_vf_mask),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_local_error(cfg_local_error),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .conf_req_data(conf_req_data),
        .conf_req_ready(conf_req_ready),
        .conf_req_reg_num(conf_req_reg_num),
        .conf_req_type(conf_req_type),
        .conf_req_valid(conf_req_valid),
        .conf_resp_rdata(conf_resp_rdata),
        .conf_resp_valid(conf_resp_valid),
        .done_reg(gt_top_i_n_684),
        .done_reg_0(gt_top_i_n_688),
        .done_reg_1(gt_top_i_n_692),
        .done_reg_2(gt_top_i_n_696),
        .done_reg_3(gt_top_i_n_700),
        .done_reg_4(gt_top_i_n_704),
        .done_reg_5(gt_top_i_n_708),
        .done_reg_6(gt_top_i_n_712),
        .drp_addr(drp_addr),
        .drp_clk(drp_clk),
        .drp_di(drp_di),
        .drp_do(drp_do),
        .drp_en(drp_en),
        .drp_rdy(drp_rdy),
        .drp_we(drp_we),
        .gt_phystatus(gt_phystatus),
        .gt_rxstatus(gt_rxstatus),
        .gt_rxvalid(gt_rxvalid),
        .gt_txelecidle(gt_txelecidle),
        .idle_reg(user_clk),
        .lffs_sel(lffs_sel),
        .lffs_sel_reg(gt_top_i_n_686),
        .lffs_sel_reg_0(gt_top_i_n_690),
        .lffs_sel_reg_1(gt_top_i_n_694),
        .lffs_sel_reg_2(gt_top_i_n_698),
        .lffs_sel_reg_3(gt_top_i_n_702),
        .lffs_sel_reg_4(gt_top_i_n_706),
        .lffs_sel_reg_5(gt_top_i_n_710),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .mcap_design_switch(mcap_design_switch),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_perstn1_in(pcie_perstn1_in),
        .pcie_perstn1_out(pcie_perstn1_out),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_av(pcie_rq_tag_av),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .phy_rst_idle(phy_rst_idle),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .phy_txeq_preset(phy_txeq_preset),
        .pl_eq_in_progress(pl_eq_in_progress),
        .pl_eq_phase(pl_eq_phase),
        .pl_eq_reset_eieos_count(pl_eq_reset_eieos_count),
        .pl_gen2_upstream_prefer_deemph(pl_gen2_upstream_prefer_deemph),
        .reg_user_lnk_up_reg(pcie3_uscale_top_inst_n_103),
        .rxcdrhold_req_reg(pcie3_uscale_top_inst_n_92),
        .rxctrl0_out({pipe_rx_syncheader[1:0],pipe_rx_start_block[0],pipe_rx_data_valid[0],pipe_rx_char_is_k[1:0],pipe_rx_syncheader[3:2],pipe_rx_start_block[1],pipe_rx_data_valid[1],pipe_rx_char_is_k[3:2],pipe_rx_syncheader[5:4],pipe_rx_start_block[2],pipe_rx_data_valid[2],pipe_rx_char_is_k[5:4],pipe_rx_syncheader[7:6],pipe_rx_start_block[3],pipe_rx_data_valid[3],pipe_rx_char_is_k[7:6],pipe_rx_syncheader[9:8],pipe_rx_start_block[4],pipe_rx_data_valid[4],pipe_rx_char_is_k[9:8],pipe_rx_syncheader[11:10],pipe_rx_start_block[5],pipe_rx_data_valid[5],pipe_rx_char_is_k[11:10],pipe_rx_syncheader[13:12],pipe_rx_start_block[6],pipe_rx_data_valid[6],pipe_rx_char_is_k[13:12],pipe_rx_syncheader[15:14],pipe_rx_start_block[7],pipe_rx_data_valid[7],pipe_rx_char_is_k[15:14]}),
        .rxdata_out({pipe_rx_data[31:0],pipe_rx_data[63:32],pipe_rx_data[95:64],pipe_rx_data[127:96],pipe_rx_data[159:128],pipe_rx_data[191:160],pipe_rx_data[223:192],pipe_rx_data[255:224]}),
        .rxelecidle_out({pipe_rx_elec_idle[0],pipe_rx_elec_idle[1],pipe_rx_elec_idle[2],pipe_rx_elec_idle[3],pipe_rx_elec_idle[4],pipe_rx_elec_idle[5],pipe_rx_elec_idle[6],pipe_rx_elec_idle[7]}),
        .rxpolarity_in({pipe_rx_polarity[0],pipe_rx_polarity[1],pipe_rx_polarity[2],pipe_rx_polarity[3],pipe_rx_polarity[4],pipe_rx_polarity[5],pipe_rx_polarity[6],pipe_rx_polarity[7]}),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .\sync_reg[0] ({pcie3_uscale_top_inst_n_161,pcie3_uscale_top_inst_n_162}),
        .\sync_reg[0]_0 ({pcie3_uscale_top_inst_n_163,pcie3_uscale_top_inst_n_164,pcie3_uscale_top_inst_n_165}),
        .\sync_reg[0]_1 ({pcie3_uscale_top_inst_n_166,pcie3_uscale_top_inst_n_167,pcie3_uscale_top_inst_n_168,pcie3_uscale_top_inst_n_169}),
        .\sync_reg[0]_10 ({pcie3_uscale_top_inst_n_205,pcie3_uscale_top_inst_n_206,pcie3_uscale_top_inst_n_207}),
        .\sync_reg[0]_11 ({pcie3_uscale_top_inst_n_208,pcie3_uscale_top_inst_n_209,pcie3_uscale_top_inst_n_210,pcie3_uscale_top_inst_n_211}),
        .\sync_reg[0]_12 ({pcie3_uscale_top_inst_n_212,pcie3_uscale_top_inst_n_213,pcie3_uscale_top_inst_n_214,pcie3_uscale_top_inst_n_215,pcie3_uscale_top_inst_n_216,pcie3_uscale_top_inst_n_217}),
        .\sync_reg[0]_13 ({pcie3_uscale_top_inst_n_218,pcie3_uscale_top_inst_n_219,pcie3_uscale_top_inst_n_220,pcie3_uscale_top_inst_n_221,pcie3_uscale_top_inst_n_222,pcie3_uscale_top_inst_n_223}),
        .\sync_reg[0]_14 ({pcie3_uscale_top_inst_n_224,pcie3_uscale_top_inst_n_225}),
        .\sync_reg[0]_15 ({pcie3_uscale_top_inst_n_226,pcie3_uscale_top_inst_n_227,pcie3_uscale_top_inst_n_228}),
        .\sync_reg[0]_16 ({pcie3_uscale_top_inst_n_229,pcie3_uscale_top_inst_n_230,pcie3_uscale_top_inst_n_231,pcie3_uscale_top_inst_n_232}),
        .\sync_reg[0]_17 ({pcie3_uscale_top_inst_n_233,pcie3_uscale_top_inst_n_234,pcie3_uscale_top_inst_n_235,pcie3_uscale_top_inst_n_236,pcie3_uscale_top_inst_n_237,pcie3_uscale_top_inst_n_238}),
        .\sync_reg[0]_18 ({pcie3_uscale_top_inst_n_239,pcie3_uscale_top_inst_n_240,pcie3_uscale_top_inst_n_241,pcie3_uscale_top_inst_n_242,pcie3_uscale_top_inst_n_243,pcie3_uscale_top_inst_n_244}),
        .\sync_reg[0]_19 ({pcie3_uscale_top_inst_n_245,pcie3_uscale_top_inst_n_246}),
        .\sync_reg[0]_2 ({pcie3_uscale_top_inst_n_170,pcie3_uscale_top_inst_n_171,pcie3_uscale_top_inst_n_172,pcie3_uscale_top_inst_n_173,pcie3_uscale_top_inst_n_174,pcie3_uscale_top_inst_n_175}),
        .\sync_reg[0]_20 ({pcie3_uscale_top_inst_n_247,pcie3_uscale_top_inst_n_248,pcie3_uscale_top_inst_n_249}),
        .\sync_reg[0]_21 ({pcie3_uscale_top_inst_n_250,pcie3_uscale_top_inst_n_251,pcie3_uscale_top_inst_n_252,pcie3_uscale_top_inst_n_253}),
        .\sync_reg[0]_22 ({pcie3_uscale_top_inst_n_254,pcie3_uscale_top_inst_n_255,pcie3_uscale_top_inst_n_256,pcie3_uscale_top_inst_n_257,pcie3_uscale_top_inst_n_258,pcie3_uscale_top_inst_n_259}),
        .\sync_reg[0]_23 ({pcie3_uscale_top_inst_n_260,pcie3_uscale_top_inst_n_261,pcie3_uscale_top_inst_n_262,pcie3_uscale_top_inst_n_263,pcie3_uscale_top_inst_n_264,pcie3_uscale_top_inst_n_265}),
        .\sync_reg[0]_24 ({pcie3_uscale_top_inst_n_266,pcie3_uscale_top_inst_n_267}),
        .\sync_reg[0]_25 ({pcie3_uscale_top_inst_n_268,pcie3_uscale_top_inst_n_269,pcie3_uscale_top_inst_n_270}),
        .\sync_reg[0]_26 ({pcie3_uscale_top_inst_n_271,pcie3_uscale_top_inst_n_272,pcie3_uscale_top_inst_n_273,pcie3_uscale_top_inst_n_274}),
        .\sync_reg[0]_27 ({pcie3_uscale_top_inst_n_275,pcie3_uscale_top_inst_n_276,pcie3_uscale_top_inst_n_277,pcie3_uscale_top_inst_n_278,pcie3_uscale_top_inst_n_279,pcie3_uscale_top_inst_n_280}),
        .\sync_reg[0]_28 ({pcie3_uscale_top_inst_n_281,pcie3_uscale_top_inst_n_282,pcie3_uscale_top_inst_n_283,pcie3_uscale_top_inst_n_284,pcie3_uscale_top_inst_n_285,pcie3_uscale_top_inst_n_286}),
        .\sync_reg[0]_29 ({pcie3_uscale_top_inst_n_287,pcie3_uscale_top_inst_n_288}),
        .\sync_reg[0]_3 (pipe_tx_eqdeemph_q),
        .\sync_reg[0]_30 ({pcie3_uscale_top_inst_n_289,pcie3_uscale_top_inst_n_290,pcie3_uscale_top_inst_n_291}),
        .\sync_reg[0]_31 ({pcie3_uscale_top_inst_n_292,pcie3_uscale_top_inst_n_293,pcie3_uscale_top_inst_n_294,pcie3_uscale_top_inst_n_295}),
        .\sync_reg[0]_32 ({pcie3_uscale_top_inst_n_296,pcie3_uscale_top_inst_n_297,pcie3_uscale_top_inst_n_298,pcie3_uscale_top_inst_n_299,pcie3_uscale_top_inst_n_300,pcie3_uscale_top_inst_n_301}),
        .\sync_reg[0]_33 ({pcie3_uscale_top_inst_n_302,pcie3_uscale_top_inst_n_303,pcie3_uscale_top_inst_n_304,pcie3_uscale_top_inst_n_305,pcie3_uscale_top_inst_n_306,pcie3_uscale_top_inst_n_307}),
        .\sync_reg[0]_34 ({pcie3_uscale_top_inst_n_308,pcie3_uscale_top_inst_n_309}),
        .\sync_reg[0]_35 ({pcie3_uscale_top_inst_n_310,pcie3_uscale_top_inst_n_311,pcie3_uscale_top_inst_n_312}),
        .\sync_reg[0]_36 ({pcie3_uscale_top_inst_n_313,pcie3_uscale_top_inst_n_314,pcie3_uscale_top_inst_n_315,pcie3_uscale_top_inst_n_316}),
        .\sync_reg[0]_37 ({pcie3_uscale_top_inst_n_317,pcie3_uscale_top_inst_n_318,pcie3_uscale_top_inst_n_319,pcie3_uscale_top_inst_n_320,pcie3_uscale_top_inst_n_321,pcie3_uscale_top_inst_n_322}),
        .\sync_reg[0]_38 (pipe_tx0_rate),
        .\sync_reg[0]_39 (pipe_tx0_margin),
        .\sync_reg[0]_4 (pipe_rx_eqcontrol_q),
        .\sync_reg[0]_40 (pipe_tx0_powerdown),
        .\sync_reg[0]_5 (pipe_rx_eqpreset_q),
        .\sync_reg[0]_6 (pipe_rx_eqlptxpreset_q),
        .\sync_reg[0]_7 (pipe_rx_eqlplffs_q),
        .\sync_reg[0]_8 ({pcie3_uscale_top_inst_n_197,pcie3_uscale_top_inst_n_198,pcie3_uscale_top_inst_n_199,pcie3_uscale_top_inst_n_200,pcie3_uscale_top_inst_n_201,pcie3_uscale_top_inst_n_202}),
        .\sync_reg[0]_9 ({pcie3_uscale_top_inst_n_203,pcie3_uscale_top_inst_n_204}),
        .sys_reset(sys_reset),
        .txctrl0_in({pipe_tx_syncheader[1:0],pipe_tx_start_block[0],pipe_tx_data_valid[0],pipe_tx_syncheader[3:2],pipe_tx_start_block[1],pipe_tx_data_valid[1],pipe_tx_syncheader[5:4],pipe_tx_start_block[2],pipe_tx_data_valid[2],pipe_tx_syncheader[7:6],pipe_tx_start_block[3],pipe_tx_data_valid[3],pipe_tx_syncheader[9:8],pipe_tx_start_block[4],pipe_tx_data_valid[4],pipe_tx_syncheader[11:10],pipe_tx_start_block[5],pipe_tx_data_valid[5],pipe_tx_syncheader[13:12],pipe_tx_start_block[6],pipe_tx_data_valid[6],pipe_tx_syncheader[15:14],pipe_tx_start_block[7],pipe_tx_data_valid[7]}),
        .txctrl1_in({pipe_tx_compliance[0],pipe_tx_compliance[1],pipe_tx_compliance[2],pipe_tx_compliance[3],pipe_tx_compliance[4],pipe_tx_compliance[5],pipe_tx_compliance[6],pipe_tx_compliance[7]}),
        .txctrl2_in({pipe_tx_char_is_k[1:0],pipe_tx_char_is_k[3:2],pipe_tx_char_is_k[5:4],pipe_tx_char_is_k[7:6],pipe_tx_char_is_k[9:8],pipe_tx_char_is_k[11:10],pipe_tx_char_is_k[13:12],pipe_tx_char_is_k[15:14]}),
        .txdata_in({pipe_txdata[31:0],pipe_txdata[63:32],pipe_txdata[95:64],pipe_txdata[127:96],pipe_txdata[159:128],pipe_txdata[191:160],pipe_txdata[223:192],pipe_txdata[255:224]}),
        .txdeemph_in(pipe_tx0_deemph),
        .txdetectrx_in(pipe_tx0_rcvr_det),
        .txswing_in(pipe_tx0_swing),
        .user_reset_int_reg(pcie3_uscale_top_inst_n_99),
        .user_reset_int_reg_0(pcie3_uscale_top_inst_n_105),
        .user_reset_int_reg_1(user_reset_int_reg_n_0),
        .user_tph_function_num(user_tph_function_num),
        .user_tph_stt_address(user_tph_stt_address),
        .user_tph_stt_read_data(user_tph_stt_read_data),
        .user_tph_stt_read_data_valid(user_tph_stt_read_data_valid),
        .user_tph_stt_read_enable(user_tph_stt_read_enable));
  FDRE reg_user_lnk_up_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(pcie3_uscale_top_inst_n_103),
        .Q(user_lnk_up),
        .R(1'b0));
  FDPE reg_user_reset_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(user_reset_int_reg_n_0),
        .PRE(pcie3_uscale_top_inst_n_105),
        .Q(user_reset));
  pcie3_ultrascale_0_pcie3_ultrascale_0_rxcdrhold rxcdrhold_i
       (.idle_reg(user_clk),
        .pipe_clk(pipe_clk),
        .reg_cfg_tph_stt_read_data_valid_o_reg(pcie3_uscale_top_inst_n_92),
        .rxcdrhold_in(phy_rxcdrhold),
        .rxelecidle_out(pipe_rx_elec_idle[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT_SYNC sync_sys_clk
       (.CE(1'b1),
        .CESYNC(sync_sc_ce),
        .CLK(sys_clk),
        .CLR(1'b0),
        .CLRSYNC(sync_sc_clr));
  FDPE user_reset_int_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(pcie3_uscale_top_inst_n_99),
        .PRE(pcie3_uscale_top_inst_n_105),
        .Q(user_reset_int_reg_n_0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pcie3_uscale_top" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_top
   (user_tph_stt_read_data,
    user_tph_stt_read_data_valid,
    rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    txdetectrx_in,
    txdeemph_in,
    txswing_in,
    rxcdrhold_req_reg,
    cfg_ltssm_state,
    user_reset_int_reg,
    cfg_phy_link_status,
    cfg_phy_link_down,
    reg_user_lnk_up_reg,
    PCIEPERST0B,
    user_reset_int_reg_0,
    cfg_hot_reset_out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    \sync_reg[0]_4 ,
    \sync_reg[0]_5 ,
    \sync_reg[0]_6 ,
    \sync_reg[0]_7 ,
    \sync_reg[0]_8 ,
    \sync_reg[0]_9 ,
    \sync_reg[0]_10 ,
    \sync_reg[0]_11 ,
    \sync_reg[0]_12 ,
    \sync_reg[0]_13 ,
    \sync_reg[0]_14 ,
    \sync_reg[0]_15 ,
    \sync_reg[0]_16 ,
    \sync_reg[0]_17 ,
    \sync_reg[0]_18 ,
    \sync_reg[0]_19 ,
    \sync_reg[0]_20 ,
    \sync_reg[0]_21 ,
    \sync_reg[0]_22 ,
    \sync_reg[0]_23 ,
    \sync_reg[0]_24 ,
    \sync_reg[0]_25 ,
    \sync_reg[0]_26 ,
    \sync_reg[0]_27 ,
    \sync_reg[0]_28 ,
    \sync_reg[0]_29 ,
    \sync_reg[0]_30 ,
    \sync_reg[0]_31 ,
    \sync_reg[0]_32 ,
    \sync_reg[0]_33 ,
    \sync_reg[0]_34 ,
    \sync_reg[0]_35 ,
    \sync_reg[0]_36 ,
    \sync_reg[0]_37 ,
    txctrl2_in,
    txdata_in,
    \sync_reg[0]_38 ,
    \sync_reg[0]_39 ,
    \sync_reg[0]_40 ,
    cfg_err_cor_out,
    cfg_err_fatal_out,
    cfg_err_nonfatal_out,
    cfg_ext_read_received,
    cfg_ext_write_received,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msix_fail,
    cfg_interrupt_msix_sent,
    cfg_interrupt_sent,
    cfg_local_error,
    cfg_ltr_enable,
    cfg_mgmt_read_write_done,
    cfg_msg_received,
    cfg_msg_transmit_done,
    cfg_per_function_update_done,
    cfg_pl_status_change,
    cfg_power_state_change_interrupt,
    mcap_design_switch,
    cap_req,
    conf_req_ready,
    conf_resp_valid,
    drp_rdy,
    m_axis_cq_tlast,
    m_axis_cq_tvalid,
    m_axis_rc_tlast,
    m_axis_rc_tvalid,
    pcie_perstn1_out,
    pcie_rq_seq_num_vld,
    pcie_rq_tag_vld,
    pl_eq_in_progress,
    cfg_fc_cpld,
    cfg_fc_npd,
    cfg_fc_pd,
    cfg_function_power_state,
    cfg_interrupt_msi_mmenable,
    cfg_tph_st_mode,
    cfg_function_status,
    cfg_per_func_status_data,
    cfg_vf_status,
    drp_do,
    cfg_link_power_state,
    cfg_obff_enable,
    pcie_rq_tag_av,
    pcie_tfc_npd_av,
    pcie_tfc_nph_av,
    pl_eq_phase,
    cfg_vf_power_state,
    cfg_vf_tph_st_mode,
    m_axis_cq_tdata,
    m_axis_rc_tdata,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    cfg_ext_write_data,
    cfg_interrupt_msi_data,
    cfg_mgmt_read_data,
    conf_resp_rdata,
    cfg_dpa_substate_change,
    cfg_ext_write_byte_enable,
    cfg_flr_in_process,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msix_enable,
    cfg_interrupt_msix_mask,
    cfg_negotiated_width,
    cfg_rcb_status,
    cfg_tph_requester_enable,
    pcie_rq_seq_num,
    s_axis_cc_tready,
    s_axis_rq_tready,
    cfg_msg_received_type,
    pcie_cq_np_req_count,
    pcie_rq_tag,
    m_axis_rc_tuser,
    cfg_ext_function_number,
    cfg_fc_cplh,
    cfg_fc_nph,
    cfg_fc_ph,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msix_vf_enable,
    cfg_interrupt_msix_vf_mask,
    cfg_msg_received_data,
    cfg_vf_flr_in_process,
    cfg_vf_tph_requester_enable,
    m_axis_cq_tkeep,
    m_axis_rc_tkeep,
    m_axis_cq_tuser,
    cfg_ext_register_number,
    idle_reg,
    user_tph_stt_read_enable,
    gt_rxvalid,
    CLK,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    done_reg_0,
    adapt_done_reg_0,
    lffs_sel_reg_0,
    TXEQ_DONE_reg_0,
    done_reg_1,
    adapt_done_reg_1,
    lffs_sel_reg_1,
    TXEQ_DONE_reg_1,
    done_reg_2,
    adapt_done_reg_2,
    lffs_sel_reg_2,
    TXEQ_DONE_reg_2,
    done_reg_3,
    adapt_done_reg_3,
    lffs_sel_reg_3,
    TXEQ_DONE_reg_3,
    done_reg_4,
    adapt_done_reg_4,
    lffs_sel_reg_4,
    TXEQ_DONE_reg_4,
    done_reg_5,
    adapt_done_reg_5,
    lffs_sel_reg_5,
    TXEQ_DONE_reg_5,
    done_reg_6,
    adapt_done,
    lffs_sel,
    TXEQ_DONE,
    user_reset_int_reg_1,
    cap_rel,
    cap_gnt,
    phy_rst_idle,
    rxdata_out,
    gt_rxstatus,
    D,
    \TXEQ_NEW_COEFF_reg[16] ,
    \TXEQ_NEW_COEFF_reg[16]_0 ,
    \TXEQ_NEW_COEFF_reg[16]_1 ,
    \TXEQ_NEW_COEFF_reg[16]_2 ,
    \TXEQ_NEW_COEFF_reg[16]_3 ,
    \TXEQ_NEW_COEFF_reg[16]_4 ,
    \TXEQ_NEW_COEFF_reg[16]_5 ,
    user_tph_function_num,
    user_tph_stt_address,
    CORECLKMIREQUESTRAM,
    cfg_config_space_enable,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_ext_read_data_valid,
    cfg_hot_reset_in,
    cfg_interrupt_msi_pending_status_data_enable,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msix_int,
    cfg_link_training_enable,
    cfg_mgmt_read,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_mgmt_write,
    cfg_msg_transmit,
    cfg_per_function_output_request,
    cfg_power_state_change_ack,
    cfg_req_pm_transition_l23_ready,
    conf_req_valid,
    drp_clk,
    drp_en,
    drp_we,
    MCAPCLK,
    sys_reset,
    pcie_perstn1_in,
    pcie_cq_np_req,
    pl_eq_reset_eieos_count,
    pl_gen2_upstream_prefer_deemph,
    s_axis_cc_tlast,
    s_axis_cc_tvalid,
    s_axis_rq_tlast,
    s_axis_rq_tvalid,
    cfg_subsys_vend_id,
    drp_di,
    cfg_mgmt_addr,
    cfg_interrupt_msi_tph_type,
    conf_req_type,
    m_axis_cq_tready,
    m_axis_rc_tready,
    s_axis_cc_tdata,
    s_axis_rq_tdata,
    cfg_ds_function_number,
    cfg_fc_sel,
    cfg_interrupt_msi_attr,
    cfg_msg_transmit_type,
    cfg_per_func_status_control,
    cfg_ext_read_data,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msix_data,
    cfg_mgmt_write_data,
    cfg_msg_transmit_data,
    conf_req_data,
    s_axis_cc_tuser,
    cfg_flr_done,
    cfg_interrupt_int,
    cfg_interrupt_msi_function_number,
    cfg_interrupt_msi_pending_status_function_num,
    cfg_interrupt_msi_select,
    cfg_interrupt_pending,
    cfg_mgmt_byte_enable,
    cfg_per_function_number,
    conf_req_reg_num,
    cfg_ds_device_number,
    s_axis_rq_tuser,
    cfg_dsn,
    cfg_interrupt_msix_address,
    cfg_ds_bus_number,
    cfg_ds_port_number,
    cfg_vf_flr_done,
    s_axis_cc_tkeep,
    s_axis_rq_tkeep,
    cfg_interrupt_msi_tph_st_tag,
    drp_addr);
  output [31:0]user_tph_stt_read_data;
  output user_tph_stt_read_data_valid;
  output [7:0]rxpolarity_in;
  output [7:0]txctrl1_in;
  output [7:0]gt_txelecidle;
  output [31:0]txctrl0_in;
  output [0:0]txdetectrx_in;
  output [0:0]txdeemph_in;
  output [0:0]txswing_in;
  output rxcdrhold_req_reg;
  output [5:0]cfg_ltssm_state;
  output user_reset_int_reg;
  output [1:0]cfg_phy_link_status;
  output cfg_phy_link_down;
  output reg_user_lnk_up_reg;
  output PCIEPERST0B;
  output user_reset_int_reg_0;
  output cfg_hot_reset_out;
  output [15:0]phy_txeq_ctrl;
  output [31:0]phy_txeq_preset;
  output [5:0]Q;
  output [1:0]\sync_reg[0] ;
  output [2:0]\sync_reg[0]_0 ;
  output [3:0]\sync_reg[0]_1 ;
  output [5:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]\sync_reg[0]_4 ;
  output [2:0]\sync_reg[0]_5 ;
  output [3:0]\sync_reg[0]_6 ;
  output [5:0]\sync_reg[0]_7 ;
  output [5:0]\sync_reg[0]_8 ;
  output [1:0]\sync_reg[0]_9 ;
  output [2:0]\sync_reg[0]_10 ;
  output [3:0]\sync_reg[0]_11 ;
  output [5:0]\sync_reg[0]_12 ;
  output [5:0]\sync_reg[0]_13 ;
  output [1:0]\sync_reg[0]_14 ;
  output [2:0]\sync_reg[0]_15 ;
  output [3:0]\sync_reg[0]_16 ;
  output [5:0]\sync_reg[0]_17 ;
  output [5:0]\sync_reg[0]_18 ;
  output [1:0]\sync_reg[0]_19 ;
  output [2:0]\sync_reg[0]_20 ;
  output [3:0]\sync_reg[0]_21 ;
  output [5:0]\sync_reg[0]_22 ;
  output [5:0]\sync_reg[0]_23 ;
  output [1:0]\sync_reg[0]_24 ;
  output [2:0]\sync_reg[0]_25 ;
  output [3:0]\sync_reg[0]_26 ;
  output [5:0]\sync_reg[0]_27 ;
  output [5:0]\sync_reg[0]_28 ;
  output [1:0]\sync_reg[0]_29 ;
  output [2:0]\sync_reg[0]_30 ;
  output [3:0]\sync_reg[0]_31 ;
  output [5:0]\sync_reg[0]_32 ;
  output [5:0]\sync_reg[0]_33 ;
  output [1:0]\sync_reg[0]_34 ;
  output [2:0]\sync_reg[0]_35 ;
  output [3:0]\sync_reg[0]_36 ;
  output [5:0]\sync_reg[0]_37 ;
  output [15:0]txctrl2_in;
  output [255:0]txdata_in;
  output [1:0]\sync_reg[0]_38 ;
  output [2:0]\sync_reg[0]_39 ;
  output [1:0]\sync_reg[0]_40 ;
  output cfg_err_cor_out;
  output cfg_err_fatal_out;
  output cfg_err_nonfatal_out;
  output cfg_ext_read_received;
  output cfg_ext_write_received;
  output cfg_interrupt_msi_fail;
  output cfg_interrupt_msi_mask_update;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_msix_fail;
  output cfg_interrupt_msix_sent;
  output cfg_interrupt_sent;
  output cfg_local_error;
  output cfg_ltr_enable;
  output cfg_mgmt_read_write_done;
  output cfg_msg_received;
  output cfg_msg_transmit_done;
  output cfg_per_function_update_done;
  output cfg_pl_status_change;
  output cfg_power_state_change_interrupt;
  output mcap_design_switch;
  output cap_req;
  output conf_req_ready;
  output conf_resp_valid;
  output drp_rdy;
  output m_axis_cq_tlast;
  output m_axis_cq_tvalid;
  output m_axis_rc_tlast;
  output m_axis_rc_tvalid;
  output pcie_perstn1_out;
  output pcie_rq_seq_num_vld;
  output pcie_rq_tag_vld;
  output pl_eq_in_progress;
  output [11:0]cfg_fc_cpld;
  output [11:0]cfg_fc_npd;
  output [11:0]cfg_fc_pd;
  output [11:0]cfg_function_power_state;
  output [11:0]cfg_interrupt_msi_mmenable;
  output [11:0]cfg_tph_st_mode;
  output [15:0]cfg_function_status;
  output [15:0]cfg_per_func_status_data;
  output [15:0]cfg_vf_status;
  output [15:0]drp_do;
  output [1:0]cfg_link_power_state;
  output [1:0]cfg_obff_enable;
  output [1:0]pcie_rq_tag_av;
  output [1:0]pcie_tfc_npd_av;
  output [1:0]pcie_tfc_nph_av;
  output [1:0]pl_eq_phase;
  output [23:0]cfg_vf_power_state;
  output [23:0]cfg_vf_tph_st_mode;
  output [127:0]m_axis_cq_tdata;
  output [127:0]m_axis_rc_tdata;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [31:0]cfg_ext_write_data;
  output [31:0]cfg_interrupt_msi_data;
  output [31:0]cfg_mgmt_read_data;
  output [31:0]conf_resp_rdata;
  output [3:0]cfg_dpa_substate_change;
  output [3:0]cfg_ext_write_byte_enable;
  output [3:0]cfg_flr_in_process;
  output [3:0]cfg_interrupt_msi_enable;
  output [3:0]cfg_interrupt_msix_enable;
  output [3:0]cfg_interrupt_msix_mask;
  output [3:0]cfg_negotiated_width;
  output [3:0]cfg_rcb_status;
  output [3:0]cfg_tph_requester_enable;
  output [3:0]pcie_rq_seq_num;
  output [3:0]s_axis_cc_tready;
  output [3:0]s_axis_rq_tready;
  output [4:0]cfg_msg_received_type;
  output [5:0]pcie_cq_np_req_count;
  output [5:0]pcie_rq_tag;
  output [74:0]m_axis_rc_tuser;
  output [7:0]cfg_ext_function_number;
  output [7:0]cfg_fc_cplh;
  output [7:0]cfg_fc_nph;
  output [7:0]cfg_fc_ph;
  output [7:0]cfg_interrupt_msi_vf_enable;
  output [7:0]cfg_interrupt_msix_vf_enable;
  output [7:0]cfg_interrupt_msix_vf_mask;
  output [7:0]cfg_msg_received_data;
  output [7:0]cfg_vf_flr_in_process;
  output [7:0]cfg_vf_tph_requester_enable;
  output [3:0]m_axis_cq_tkeep;
  output [3:0]m_axis_rc_tkeep;
  output [84:0]m_axis_cq_tuser;
  output [9:0]cfg_ext_register_number;
  input idle_reg;
  input user_tph_stt_read_enable;
  input [7:0]gt_rxvalid;
  input CLK;
  input [47:0]rxctrl0_out;
  input [7:0]gt_phystatus;
  input [7:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input done_reg_0;
  input adapt_done_reg_0;
  input lffs_sel_reg_0;
  input TXEQ_DONE_reg_0;
  input done_reg_1;
  input adapt_done_reg_1;
  input lffs_sel_reg_1;
  input TXEQ_DONE_reg_1;
  input done_reg_2;
  input adapt_done_reg_2;
  input lffs_sel_reg_2;
  input TXEQ_DONE_reg_2;
  input done_reg_3;
  input adapt_done_reg_3;
  input lffs_sel_reg_3;
  input TXEQ_DONE_reg_3;
  input done_reg_4;
  input adapt_done_reg_4;
  input lffs_sel_reg_4;
  input TXEQ_DONE_reg_4;
  input done_reg_5;
  input adapt_done_reg_5;
  input lffs_sel_reg_5;
  input TXEQ_DONE_reg_5;
  input done_reg_6;
  input adapt_done;
  input lffs_sel;
  input TXEQ_DONE;
  input user_reset_int_reg_1;
  input cap_rel;
  input cap_gnt;
  input phy_rst_idle;
  input [255:0]rxdata_out;
  input [23:0]gt_rxstatus;
  input [15:0]D;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_0 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_1 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_2 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_3 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_4 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_5 ;
  input [3:0]user_tph_function_num;
  input [4:0]user_tph_stt_address;
  input CORECLKMIREQUESTRAM;
  input cfg_config_space_enable;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  input cfg_ext_read_data_valid;
  input cfg_hot_reset_in;
  input cfg_interrupt_msi_pending_status_data_enable;
  input cfg_interrupt_msi_tph_present;
  input cfg_interrupt_msix_int;
  input cfg_link_training_enable;
  input cfg_mgmt_read;
  input cfg_mgmt_type1_cfg_reg_access;
  input cfg_mgmt_write;
  input cfg_msg_transmit;
  input cfg_per_function_output_request;
  input cfg_power_state_change_ack;
  input cfg_req_pm_transition_l23_ready;
  input conf_req_valid;
  input drp_clk;
  input drp_en;
  input drp_we;
  input MCAPCLK;
  input sys_reset;
  input pcie_perstn1_in;
  input pcie_cq_np_req;
  input pl_eq_reset_eieos_count;
  input pl_gen2_upstream_prefer_deemph;
  input s_axis_cc_tlast;
  input s_axis_cc_tvalid;
  input s_axis_rq_tlast;
  input s_axis_rq_tvalid;
  input [15:0]cfg_subsys_vend_id;
  input [15:0]drp_di;
  input [18:0]cfg_mgmt_addr;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [1:0]conf_req_type;
  input m_axis_cq_tready;
  input m_axis_rc_tready;
  input [127:0]s_axis_cc_tdata;
  input [127:0]s_axis_rq_tdata;
  input [2:0]cfg_ds_function_number;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_interrupt_msi_attr;
  input [2:0]cfg_msg_transmit_type;
  input [2:0]cfg_per_func_status_control;
  input [31:0]cfg_ext_read_data;
  input [31:0]cfg_interrupt_msi_int;
  input [31:0]cfg_interrupt_msi_pending_status;
  input [31:0]cfg_interrupt_msix_data;
  input [31:0]cfg_mgmt_write_data;
  input [31:0]cfg_msg_transmit_data;
  input [31:0]conf_req_data;
  input [32:0]s_axis_cc_tuser;
  input [3:0]cfg_flr_done;
  input [3:0]cfg_interrupt_int;
  input [3:0]cfg_interrupt_msi_function_number;
  input [3:0]cfg_interrupt_msi_pending_status_function_num;
  input [3:0]cfg_interrupt_msi_select;
  input [3:0]cfg_interrupt_pending;
  input [3:0]cfg_mgmt_byte_enable;
  input [3:0]cfg_per_function_number;
  input [3:0]conf_req_reg_num;
  input [4:0]cfg_ds_device_number;
  input [59:0]s_axis_rq_tuser;
  input [63:0]cfg_dsn;
  input [63:0]cfg_interrupt_msix_address;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_ds_port_number;
  input [7:0]cfg_vf_flr_done;
  input [3:0]s_axis_cc_tkeep;
  input [3:0]s_axis_rq_tkeep;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input [9:0]drp_addr;

  wire CLK;
  wire CORECLKMIREQUESTRAM;
  wire [15:0]D;
  wire MCAPCLK;
  wire PCIEPERST0B;
  wire [5:0]Q;
  wire TXEQ_DONE;
  wire TXEQ_DONE_reg;
  wire TXEQ_DONE_reg_0;
  wire TXEQ_DONE_reg_1;
  wire TXEQ_DONE_reg_2;
  wire TXEQ_DONE_reg_3;
  wire TXEQ_DONE_reg_4;
  wire TXEQ_DONE_reg_5;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_0 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_1 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_2 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_3 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_4 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_5 ;
  wire adapt_done;
  wire adapt_done_reg;
  wire adapt_done_reg_0;
  wire adapt_done_reg_1;
  wire adapt_done_reg_2;
  wire adapt_done_reg_3;
  wire adapt_done_reg_4;
  wire adapt_done_reg_5;
  wire cap_gnt;
  wire cap_rel;
  wire cap_req;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [3:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [7:0]cfg_ext_function_number;
  wire [31:0]cfg_ext_read_data;
  wire cfg_ext_read_data_valid;
  wire cfg_ext_read_received;
  wire [9:0]cfg_ext_register_number;
  wire [3:0]cfg_ext_write_byte_enable;
  wire [31:0]cfg_ext_write_data;
  wire cfg_ext_write_received;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [3:0]cfg_flr_done;
  wire [3:0]cfg_flr_in_process;
  wire [11:0]cfg_function_power_state;
  wire [15:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [3:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [3:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [11:0]cfg_interrupt_msi_mmenable;
  wire [31:0]cfg_interrupt_msi_pending_status;
  wire cfg_interrupt_msi_pending_status_data_enable;
  wire [3:0]cfg_interrupt_msi_pending_status_function_num;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [7:0]cfg_interrupt_msi_vf_enable;
  wire [63:0]cfg_interrupt_msix_address;
  wire [31:0]cfg_interrupt_msix_data;
  wire [3:0]cfg_interrupt_msix_enable;
  wire cfg_interrupt_msix_fail;
  wire cfg_interrupt_msix_int;
  wire [3:0]cfg_interrupt_msix_mask;
  wire cfg_interrupt_msix_sent;
  wire [7:0]cfg_interrupt_msix_vf_enable;
  wire [7:0]cfg_interrupt_msix_vf_mask;
  wire [3:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_local_error;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [3:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [3:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [3:0]cfg_tph_function_num;
  wire [3:0]cfg_tph_requester_enable;
  wire [11:0]cfg_tph_st_mode;
  wire [4:0]cfg_tph_stt_address;
  wire [31:0]cfg_tph_stt_read_data;
  wire cfg_tph_stt_read_data_valid;
  wire cfg_tph_stt_read_enable;
  wire [3:0]cfg_tph_stt_write_byte_valid;
  wire [31:0]cfg_tph_stt_write_data;
  wire cfg_tph_stt_write_enable;
  wire [7:0]cfg_vf_flr_done;
  wire [7:0]cfg_vf_flr_in_process;
  wire [23:0]cfg_vf_power_state;
  wire [15:0]cfg_vf_status;
  wire [7:0]cfg_vf_tph_requester_enable;
  wire [23:0]cfg_vf_tph_st_mode;
  wire [31:0]conf_req_data;
  wire conf_req_ready;
  wire [3:0]conf_req_reg_num;
  wire [1:0]conf_req_type;
  wire conf_req_valid;
  wire [31:0]conf_resp_rdata;
  wire conf_resp_valid;
  wire done_reg;
  wire done_reg_0;
  wire done_reg_1;
  wire done_reg_2;
  wire done_reg_3;
  wire done_reg_4;
  wire done_reg_5;
  wire done_reg_6;
  wire [9:0]drp_addr;
  wire drp_clk;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire [7:0]gt_phystatus;
  wire [23:0]gt_rxstatus;
  wire [7:0]gt_rxvalid;
  wire [7:0]gt_txelecidle;
  wire idle_reg;
  wire init_ctrl_inst_n_1;
  wire init_ctrl_inst_n_2;
  wire init_ctrl_inst_n_3;
  wire init_ctrl_inst_n_4;
  wire lffs_sel;
  wire lffs_sel_reg;
  wire lffs_sel_reg_0;
  wire lffs_sel_reg_1;
  wire lffs_sel_reg_2;
  wire lffs_sel_reg_3;
  wire lffs_sel_reg_4;
  wire lffs_sel_reg_5;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mcap_design_switch;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire pcie_perstn1_in;
  wire pcie_perstn1_out;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire [1:0]pcie_rq_tag_av;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire phy_rst_idle;
  wire [15:0]phy_txeq_ctrl;
  wire [31:0]phy_txeq_preset;
  wire pipe_reset_n;
  wire [1:0]pipe_rx0_char_is_k;
  wire [31:0]pipe_rx0_data;
  wire pipe_rx0_data_valid;
  wire pipe_rx0_elec_idle;
  wire [1:0]pipe_rx0_eqcontrol;
  wire pipe_rx0_eqdone;
  wire pipe_rx0_eqlp_adaptdone;
  wire [5:0]pipe_rx0_eqlp_lffs;
  wire pipe_rx0_eqlp_lffs_sel;
  wire [2:2]pipe_rx0_eqlp_new_txcoef_forpreset;
  wire [3:0]pipe_rx0_eqlp_txpreset;
  wire [2:0]pipe_rx0_eqpreset;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_start_block;
  wire [2:0]pipe_rx0_status;
  wire [1:0]pipe_rx0_syncheader;
  wire pipe_rx0_valid;
  wire [1:0]pipe_rx1_char_is_k;
  wire [31:0]pipe_rx1_data;
  wire pipe_rx1_data_valid;
  wire pipe_rx1_elec_idle;
  wire [1:0]pipe_rx1_eqcontrol;
  wire pipe_rx1_eqdone;
  wire pipe_rx1_eqlp_adaptdone;
  wire [5:0]pipe_rx1_eqlp_lffs;
  wire pipe_rx1_eqlp_lffs_sel;
  wire [3:0]pipe_rx1_eqlp_txpreset;
  wire [2:0]pipe_rx1_eqpreset;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_start_block;
  wire [2:0]pipe_rx1_status;
  wire [1:0]pipe_rx1_syncheader;
  wire pipe_rx1_valid;
  wire [1:0]pipe_rx2_char_is_k;
  wire [31:0]pipe_rx2_data;
  wire pipe_rx2_data_valid;
  wire pipe_rx2_elec_idle;
  wire [1:0]pipe_rx2_eqcontrol;
  wire pipe_rx2_eqdone;
  wire pipe_rx2_eqlp_adaptdone;
  wire [5:0]pipe_rx2_eqlp_lffs;
  wire pipe_rx2_eqlp_lffs_sel;
  wire [3:0]pipe_rx2_eqlp_txpreset;
  wire [2:0]pipe_rx2_eqpreset;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_start_block;
  wire [2:0]pipe_rx2_status;
  wire [1:0]pipe_rx2_syncheader;
  wire pipe_rx2_valid;
  wire [1:0]pipe_rx3_char_is_k;
  wire [31:0]pipe_rx3_data;
  wire pipe_rx3_data_valid;
  wire pipe_rx3_elec_idle;
  wire [1:0]pipe_rx3_eqcontrol;
  wire pipe_rx3_eqdone;
  wire pipe_rx3_eqlp_adaptdone;
  wire [5:0]pipe_rx3_eqlp_lffs;
  wire pipe_rx3_eqlp_lffs_sel;
  wire [3:0]pipe_rx3_eqlp_txpreset;
  wire [2:0]pipe_rx3_eqpreset;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_start_block;
  wire [2:0]pipe_rx3_status;
  wire [1:0]pipe_rx3_syncheader;
  wire pipe_rx3_valid;
  wire [1:0]pipe_rx4_char_is_k;
  wire [31:0]pipe_rx4_data;
  wire pipe_rx4_data_valid;
  wire pipe_rx4_elec_idle;
  wire [1:0]pipe_rx4_eqcontrol;
  wire pipe_rx4_eqdone;
  wire pipe_rx4_eqlp_adaptdone;
  wire [5:0]pipe_rx4_eqlp_lffs;
  wire pipe_rx4_eqlp_lffs_sel;
  wire [3:0]pipe_rx4_eqlp_txpreset;
  wire [2:0]pipe_rx4_eqpreset;
  wire pipe_rx4_phy_status;
  wire pipe_rx4_polarity;
  wire pipe_rx4_start_block;
  wire [2:0]pipe_rx4_status;
  wire [1:0]pipe_rx4_syncheader;
  wire pipe_rx4_valid;
  wire [1:0]pipe_rx5_char_is_k;
  wire [31:0]pipe_rx5_data;
  wire pipe_rx5_data_valid;
  wire pipe_rx5_elec_idle;
  wire [1:0]pipe_rx5_eqcontrol;
  wire pipe_rx5_eqdone;
  wire pipe_rx5_eqlp_adaptdone;
  wire [5:0]pipe_rx5_eqlp_lffs;
  wire pipe_rx5_eqlp_lffs_sel;
  wire [3:0]pipe_rx5_eqlp_txpreset;
  wire [2:0]pipe_rx5_eqpreset;
  wire pipe_rx5_phy_status;
  wire pipe_rx5_polarity;
  wire pipe_rx5_start_block;
  wire [2:0]pipe_rx5_status;
  wire [1:0]pipe_rx5_syncheader;
  wire pipe_rx5_valid;
  wire [1:0]pipe_rx6_char_is_k;
  wire [31:0]pipe_rx6_data;
  wire pipe_rx6_data_valid;
  wire pipe_rx6_elec_idle;
  wire [1:0]pipe_rx6_eqcontrol;
  wire pipe_rx6_eqdone;
  wire pipe_rx6_eqlp_adaptdone;
  wire [5:0]pipe_rx6_eqlp_lffs;
  wire pipe_rx6_eqlp_lffs_sel;
  wire [3:0]pipe_rx6_eqlp_txpreset;
  wire [2:0]pipe_rx6_eqpreset;
  wire pipe_rx6_phy_status;
  wire pipe_rx6_polarity;
  wire pipe_rx6_start_block;
  wire [2:0]pipe_rx6_status;
  wire [1:0]pipe_rx6_syncheader;
  wire pipe_rx6_valid;
  wire [1:0]pipe_rx7_char_is_k;
  wire [31:0]pipe_rx7_data;
  wire pipe_rx7_data_valid;
  wire pipe_rx7_elec_idle;
  wire [1:0]pipe_rx7_eqcontrol;
  wire pipe_rx7_eqdone;
  wire pipe_rx7_eqlp_adaptdone;
  wire [5:0]pipe_rx7_eqlp_lffs;
  wire pipe_rx7_eqlp_lffs_sel;
  wire [3:0]pipe_rx7_eqlp_txpreset;
  wire [2:0]pipe_rx7_eqpreset;
  wire pipe_rx7_phy_status;
  wire pipe_rx7_polarity;
  wire pipe_rx7_start_block;
  wire [2:0]pipe_rx7_status;
  wire [1:0]pipe_rx7_syncheader;
  wire pipe_rx7_valid;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [31:0]pipe_tx0_data;
  wire pipe_tx0_data_valid;
  wire pipe_tx0_deemph;
  wire pipe_tx0_elec_idle;
  wire [16:0]pipe_tx0_eqcoeff;
  wire [1:0]pipe_tx0_eqcontrol;
  wire [5:0]pipe_tx0_eqdeemph;
  wire pipe_tx0_eqdone;
  wire [3:0]pipe_tx0_eqpreset;
  wire [2:0]pipe_tx0_margin;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx0_rate;
  wire pipe_tx0_rcvr_det;
  wire pipe_tx0_start_block;
  wire pipe_tx0_swing;
  wire [1:0]pipe_tx0_syncheader;
  wire [1:0]pipe_tx1_char_is_k;
  wire pipe_tx1_compliance;
  wire [31:0]pipe_tx1_data;
  wire pipe_tx1_data_valid;
  wire pipe_tx1_elec_idle;
  wire [16:0]pipe_tx1_eqcoeff;
  wire [1:0]pipe_tx1_eqcontrol;
  wire [5:0]pipe_tx1_eqdeemph;
  wire pipe_tx1_eqdone;
  wire [3:0]pipe_tx1_eqpreset;
  wire pipe_tx1_start_block;
  wire [1:0]pipe_tx1_syncheader;
  wire [1:0]pipe_tx2_char_is_k;
  wire pipe_tx2_compliance;
  wire [31:0]pipe_tx2_data;
  wire pipe_tx2_data_valid;
  wire pipe_tx2_elec_idle;
  wire [16:0]pipe_tx2_eqcoeff;
  wire [1:0]pipe_tx2_eqcontrol;
  wire [5:0]pipe_tx2_eqdeemph;
  wire pipe_tx2_eqdone;
  wire [3:0]pipe_tx2_eqpreset;
  wire pipe_tx2_start_block;
  wire [1:0]pipe_tx2_syncheader;
  wire [1:0]pipe_tx3_char_is_k;
  wire pipe_tx3_compliance;
  wire [31:0]pipe_tx3_data;
  wire pipe_tx3_data_valid;
  wire pipe_tx3_elec_idle;
  wire [16:0]pipe_tx3_eqcoeff;
  wire [1:0]pipe_tx3_eqcontrol;
  wire [5:0]pipe_tx3_eqdeemph;
  wire pipe_tx3_eqdone;
  wire [3:0]pipe_tx3_eqpreset;
  wire pipe_tx3_start_block;
  wire [1:0]pipe_tx3_syncheader;
  wire [1:0]pipe_tx4_char_is_k;
  wire pipe_tx4_compliance;
  wire [31:0]pipe_tx4_data;
  wire pipe_tx4_data_valid;
  wire pipe_tx4_elec_idle;
  wire [16:0]pipe_tx4_eqcoeff;
  wire [1:0]pipe_tx4_eqcontrol;
  wire [5:0]pipe_tx4_eqdeemph;
  wire pipe_tx4_eqdone;
  wire [3:0]pipe_tx4_eqpreset;
  wire pipe_tx4_start_block;
  wire [1:0]pipe_tx4_syncheader;
  wire [1:0]pipe_tx5_char_is_k;
  wire pipe_tx5_compliance;
  wire [31:0]pipe_tx5_data;
  wire pipe_tx5_data_valid;
  wire pipe_tx5_elec_idle;
  wire [16:0]pipe_tx5_eqcoeff;
  wire [1:0]pipe_tx5_eqcontrol;
  wire [5:0]pipe_tx5_eqdeemph;
  wire pipe_tx5_eqdone;
  wire [3:0]pipe_tx5_eqpreset;
  wire pipe_tx5_start_block;
  wire [1:0]pipe_tx5_syncheader;
  wire [1:0]pipe_tx6_char_is_k;
  wire pipe_tx6_compliance;
  wire [31:0]pipe_tx6_data;
  wire pipe_tx6_data_valid;
  wire pipe_tx6_elec_idle;
  wire [16:0]pipe_tx6_eqcoeff;
  wire [1:0]pipe_tx6_eqcontrol;
  wire [5:0]pipe_tx6_eqdeemph;
  wire pipe_tx6_eqdone;
  wire [3:0]pipe_tx6_eqpreset;
  wire pipe_tx6_start_block;
  wire [1:0]pipe_tx6_syncheader;
  wire [1:0]pipe_tx7_char_is_k;
  wire pipe_tx7_compliance;
  wire [31:0]pipe_tx7_data;
  wire pipe_tx7_data_valid;
  wire pipe_tx7_elec_idle;
  wire [16:0]pipe_tx7_eqcoeff;
  wire [1:0]pipe_tx7_eqcontrol;
  wire [5:0]pipe_tx7_eqdeemph;
  wire pipe_tx7_eqdone;
  wire [3:0]pipe_tx7_eqpreset;
  wire pipe_tx7_start_block;
  wire [1:0]pipe_tx7_syncheader;
  wire [5:3]pipe_tx_eqfs;
  wire [3:2]pipe_tx_eqlf;
  wire pl_eq_in_progress;
  wire [1:0]pl_eq_phase;
  wire pl_eq_reset_eieos_count;
  wire pl_gen2_upstream_prefer_deemph;
  wire reg_user_lnk_up_reg;
  wire rxcdrhold_req_reg;
  wire [47:0]rxctrl0_out;
  wire [255:0]rxdata_out;
  wire [7:0]rxelecidle_out;
  wire [7:0]rxpolarity_in;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire [1:0]\sync_reg[0] ;
  wire [2:0]\sync_reg[0]_0 ;
  wire [3:0]\sync_reg[0]_1 ;
  wire [2:0]\sync_reg[0]_10 ;
  wire [3:0]\sync_reg[0]_11 ;
  wire [5:0]\sync_reg[0]_12 ;
  wire [5:0]\sync_reg[0]_13 ;
  wire [1:0]\sync_reg[0]_14 ;
  wire [2:0]\sync_reg[0]_15 ;
  wire [3:0]\sync_reg[0]_16 ;
  wire [5:0]\sync_reg[0]_17 ;
  wire [5:0]\sync_reg[0]_18 ;
  wire [1:0]\sync_reg[0]_19 ;
  wire [5:0]\sync_reg[0]_2 ;
  wire [2:0]\sync_reg[0]_20 ;
  wire [3:0]\sync_reg[0]_21 ;
  wire [5:0]\sync_reg[0]_22 ;
  wire [5:0]\sync_reg[0]_23 ;
  wire [1:0]\sync_reg[0]_24 ;
  wire [2:0]\sync_reg[0]_25 ;
  wire [3:0]\sync_reg[0]_26 ;
  wire [5:0]\sync_reg[0]_27 ;
  wire [5:0]\sync_reg[0]_28 ;
  wire [1:0]\sync_reg[0]_29 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [2:0]\sync_reg[0]_30 ;
  wire [3:0]\sync_reg[0]_31 ;
  wire [5:0]\sync_reg[0]_32 ;
  wire [5:0]\sync_reg[0]_33 ;
  wire [1:0]\sync_reg[0]_34 ;
  wire [2:0]\sync_reg[0]_35 ;
  wire [3:0]\sync_reg[0]_36 ;
  wire [5:0]\sync_reg[0]_37 ;
  wire [1:0]\sync_reg[0]_38 ;
  wire [2:0]\sync_reg[0]_39 ;
  wire [1:0]\sync_reg[0]_4 ;
  wire [1:0]\sync_reg[0]_40 ;
  wire [2:0]\sync_reg[0]_5 ;
  wire [3:0]\sync_reg[0]_6 ;
  wire [5:0]\sync_reg[0]_7 ;
  wire [5:0]\sync_reg[0]_8 ;
  wire [1:0]\sync_reg[0]_9 ;
  wire sys_reset;
  wire [31:0]txctrl0_in;
  wire [7:0]txctrl1_in;
  wire [15:0]txctrl2_in;
  wire [255:0]txdata_in;
  wire [0:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [0:0]txswing_in;
  wire user_reset_int_reg;
  wire user_reset_int_reg_0;
  wire user_reset_int_reg_1;
  wire [3:0]user_tph_function_num;
  wire [4:0]user_tph_stt_address;
  wire [31:0]user_tph_stt_read_data;
  wire user_tph_stt_read_data_valid;
  wire user_tph_stt_read_enable;

  pcie3_ultrascale_0_pcie3_ultrascale_0_init_ctrl init_ctrl_inst
       (.MGMTSTICKYRESETN(init_ctrl_inst_n_4),
        .Q({init_ctrl_inst_n_1,init_ctrl_inst_n_2}),
        .RESETN(pipe_reset_n),
        .SR(init_ctrl_inst_n_3),
        .idle_reg(idle_reg),
        .phy_rst_idle(phy_rst_idle));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_wrapper pcie3_uscale_wrapper_inst
       (.ADDRARDADDR({cfg_tph_function_num,cfg_tph_stt_address}),
        .CFGTPHSTTREADDATA(cfg_tph_stt_read_data),
        .CFGTPHSTTREADDATAVALID(cfg_tph_stt_read_data_valid),
        .CFGTPHSTTREADENABLE(cfg_tph_stt_read_enable),
        .CFGTPHSTTWRITEBYTEVALID(cfg_tph_stt_write_byte_valid),
        .CFGTPHSTTWRITEDATA(cfg_tph_stt_write_data),
        .CFGTPHSTTWRITEENABLE(cfg_tph_stt_write_enable),
        .CLK(CLK),
        .CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MCAPCLK(MCAPCLK),
        .MGMTSTICKYRESETN(init_ctrl_inst_n_4),
        .PCIEPERST0B(PCIEPERST0B),
        .PIPERX0DATAVALID(pipe_rx0_data_valid),
        .PIPERX0ELECIDLE(pipe_rx0_elec_idle),
        .PIPERX0EQCONTROL(pipe_rx0_eqcontrol),
        .PIPERX0EQDONE(pipe_rx0_eqdone),
        .PIPERX0EQLPADAPTDONE(pipe_rx0_eqlp_adaptdone),
        .PIPERX0EQLPLFFS(pipe_rx0_eqlp_lffs),
        .PIPERX0EQLPLFFSSEL(pipe_rx0_eqlp_lffs_sel),
        .PIPERX0EQLPTXPRESET(pipe_rx0_eqlp_txpreset),
        .PIPERX0EQPRESET(pipe_rx0_eqpreset),
        .PIPERX0PHYSTATUS(pipe_rx0_phy_status),
        .PIPERX0POLARITY(pipe_rx0_polarity),
        .PIPERX0STARTBLOCK(pipe_rx0_start_block),
        .PIPERX0VALID(pipe_rx0_valid),
        .PIPERX1DATAVALID(pipe_rx1_data_valid),
        .PIPERX1ELECIDLE(pipe_rx1_elec_idle),
        .PIPERX1EQCONTROL(pipe_rx1_eqcontrol),
        .PIPERX1EQDONE(pipe_rx1_eqdone),
        .PIPERX1EQLPADAPTDONE(pipe_rx1_eqlp_adaptdone),
        .PIPERX1EQLPLFFS(pipe_rx1_eqlp_lffs),
        .PIPERX1EQLPLFFSSEL(pipe_rx1_eqlp_lffs_sel),
        .PIPERX1EQLPTXPRESET(pipe_rx1_eqlp_txpreset),
        .PIPERX1EQPRESET(pipe_rx1_eqpreset),
        .PIPERX1PHYSTATUS(pipe_rx1_phy_status),
        .PIPERX1POLARITY(pipe_rx1_polarity),
        .PIPERX1STARTBLOCK(pipe_rx1_start_block),
        .PIPERX1VALID(pipe_rx1_valid),
        .PIPERX2DATAVALID(pipe_rx2_data_valid),
        .PIPERX2ELECIDLE(pipe_rx2_elec_idle),
        .PIPERX2EQCONTROL(pipe_rx2_eqcontrol),
        .PIPERX2EQDONE(pipe_rx2_eqdone),
        .PIPERX2EQLPADAPTDONE(pipe_rx2_eqlp_adaptdone),
        .PIPERX2EQLPLFFS(pipe_rx2_eqlp_lffs),
        .PIPERX2EQLPLFFSSEL(pipe_rx2_eqlp_lffs_sel),
        .PIPERX2EQLPTXPRESET(pipe_rx2_eqlp_txpreset),
        .PIPERX2EQPRESET(pipe_rx2_eqpreset),
        .PIPERX2PHYSTATUS(pipe_rx2_phy_status),
        .PIPERX2POLARITY(pipe_rx2_polarity),
        .PIPERX2STARTBLOCK(pipe_rx2_start_block),
        .PIPERX2VALID(pipe_rx2_valid),
        .PIPERX3DATAVALID(pipe_rx3_data_valid),
        .PIPERX3ELECIDLE(pipe_rx3_elec_idle),
        .PIPERX3EQCONTROL(pipe_rx3_eqcontrol),
        .PIPERX3EQDONE(pipe_rx3_eqdone),
        .PIPERX3EQLPADAPTDONE(pipe_rx3_eqlp_adaptdone),
        .PIPERX3EQLPLFFS(pipe_rx3_eqlp_lffs),
        .PIPERX3EQLPLFFSSEL(pipe_rx3_eqlp_lffs_sel),
        .PIPERX3EQLPTXPRESET(pipe_rx3_eqlp_txpreset),
        .PIPERX3EQPRESET(pipe_rx3_eqpreset),
        .PIPERX3PHYSTATUS(pipe_rx3_phy_status),
        .PIPERX3POLARITY(pipe_rx3_polarity),
        .PIPERX3STARTBLOCK(pipe_rx3_start_block),
        .PIPERX3VALID(pipe_rx3_valid),
        .PIPERX4DATAVALID(pipe_rx4_data_valid),
        .PIPERX4ELECIDLE(pipe_rx4_elec_idle),
        .PIPERX4EQCONTROL(pipe_rx4_eqcontrol),
        .PIPERX4EQDONE(pipe_rx4_eqdone),
        .PIPERX4EQLPADAPTDONE(pipe_rx4_eqlp_adaptdone),
        .PIPERX4EQLPLFFS(pipe_rx4_eqlp_lffs),
        .PIPERX4EQLPLFFSSEL(pipe_rx4_eqlp_lffs_sel),
        .PIPERX4EQLPTXPRESET(pipe_rx4_eqlp_txpreset),
        .PIPERX4EQPRESET(pipe_rx4_eqpreset),
        .PIPERX4PHYSTATUS(pipe_rx4_phy_status),
        .PIPERX4POLARITY(pipe_rx4_polarity),
        .PIPERX4STARTBLOCK(pipe_rx4_start_block),
        .PIPERX4VALID(pipe_rx4_valid),
        .PIPERX5DATAVALID(pipe_rx5_data_valid),
        .PIPERX5ELECIDLE(pipe_rx5_elec_idle),
        .PIPERX5EQCONTROL(pipe_rx5_eqcontrol),
        .PIPERX5EQDONE(pipe_rx5_eqdone),
        .PIPERX5EQLPADAPTDONE(pipe_rx5_eqlp_adaptdone),
        .PIPERX5EQLPLFFS(pipe_rx5_eqlp_lffs),
        .PIPERX5EQLPLFFSSEL(pipe_rx5_eqlp_lffs_sel),
        .PIPERX5EQLPTXPRESET(pipe_rx5_eqlp_txpreset),
        .PIPERX5EQPRESET(pipe_rx5_eqpreset),
        .PIPERX5PHYSTATUS(pipe_rx5_phy_status),
        .PIPERX5POLARITY(pipe_rx5_polarity),
        .PIPERX5STARTBLOCK(pipe_rx5_start_block),
        .PIPERX5VALID(pipe_rx5_valid),
        .PIPERX6DATAVALID(pipe_rx6_data_valid),
        .PIPERX6ELECIDLE(pipe_rx6_elec_idle),
        .PIPERX6EQCONTROL(pipe_rx6_eqcontrol),
        .PIPERX6EQDONE(pipe_rx6_eqdone),
        .PIPERX6EQLPADAPTDONE(pipe_rx6_eqlp_adaptdone),
        .PIPERX6EQLPLFFS(pipe_rx6_eqlp_lffs),
        .PIPERX6EQLPLFFSSEL(pipe_rx6_eqlp_lffs_sel),
        .PIPERX6EQLPTXPRESET(pipe_rx6_eqlp_txpreset),
        .PIPERX6EQPRESET(pipe_rx6_eqpreset),
        .PIPERX6PHYSTATUS(pipe_rx6_phy_status),
        .PIPERX6POLARITY(pipe_rx6_polarity),
        .PIPERX6STARTBLOCK(pipe_rx6_start_block),
        .PIPERX6VALID(pipe_rx6_valid),
        .PIPERX7DATAVALID(pipe_rx7_data_valid),
        .PIPERX7ELECIDLE(pipe_rx7_elec_idle),
        .PIPERX7EQCONTROL(pipe_rx7_eqcontrol),
        .PIPERX7EQDONE(pipe_rx7_eqdone),
        .PIPERX7EQLPADAPTDONE(pipe_rx7_eqlp_adaptdone),
        .PIPERX7EQLPLFFS(pipe_rx7_eqlp_lffs),
        .PIPERX7EQLPLFFSSEL(pipe_rx7_eqlp_lffs_sel),
        .PIPERX7EQLPNEWTXCOEFFORPRESET(pipe_rx0_eqlp_new_txcoef_forpreset),
        .PIPERX7EQLPTXPRESET(pipe_rx7_eqlp_txpreset),
        .PIPERX7EQPRESET(pipe_rx7_eqpreset),
        .PIPERX7PHYSTATUS(pipe_rx7_phy_status),
        .PIPERX7POLARITY(pipe_rx7_polarity),
        .PIPERX7STARTBLOCK(pipe_rx7_start_block),
        .PIPERX7VALID(pipe_rx7_valid),
        .PIPETX0CHARISK(pipe_tx0_char_is_k),
        .PIPETX0COMPLIANCE(pipe_tx0_compliance),
        .PIPETX0DATA(pipe_tx0_data),
        .PIPETX0DATAVALID(pipe_tx0_data_valid),
        .PIPETX0DEEMPH(pipe_tx0_deemph),
        .PIPETX0ELECIDLE(pipe_tx0_elec_idle),
        .PIPETX0EQCONTROL(pipe_tx0_eqcontrol),
        .PIPETX0EQDEEMPH(pipe_tx0_eqdeemph),
        .PIPETX0EQDONE(pipe_tx0_eqdone),
        .PIPETX0EQPRESET(pipe_tx0_eqpreset),
        .PIPETX0MARGIN(pipe_tx0_margin),
        .PIPETX0POWERDOWN(pipe_tx0_powerdown),
        .PIPETX0RATE(pipe_tx0_rate),
        .PIPETX0RCVRDET(pipe_tx0_rcvr_det),
        .PIPETX0STARTBLOCK(pipe_tx0_start_block),
        .PIPETX0SWING(pipe_tx0_swing),
        .PIPETX0SYNCHEADER(pipe_tx0_syncheader),
        .PIPETX1CHARISK(pipe_tx1_char_is_k),
        .PIPETX1COMPLIANCE(pipe_tx1_compliance),
        .PIPETX1DATA(pipe_tx1_data),
        .PIPETX1DATAVALID(pipe_tx1_data_valid),
        .PIPETX1ELECIDLE(pipe_tx1_elec_idle),
        .PIPETX1EQCONTROL(pipe_tx1_eqcontrol),
        .PIPETX1EQDEEMPH(pipe_tx1_eqdeemph),
        .PIPETX1EQDONE(pipe_tx1_eqdone),
        .PIPETX1EQPRESET(pipe_tx1_eqpreset),
        .PIPETX1STARTBLOCK(pipe_tx1_start_block),
        .PIPETX1SYNCHEADER(pipe_tx1_syncheader),
        .PIPETX2CHARISK(pipe_tx2_char_is_k),
        .PIPETX2COMPLIANCE(pipe_tx2_compliance),
        .PIPETX2DATA(pipe_tx2_data),
        .PIPETX2DATAVALID(pipe_tx2_data_valid),
        .PIPETX2ELECIDLE(pipe_tx2_elec_idle),
        .PIPETX2EQCONTROL(pipe_tx2_eqcontrol),
        .PIPETX2EQDEEMPH(pipe_tx2_eqdeemph),
        .PIPETX2EQDONE(pipe_tx2_eqdone),
        .PIPETX2EQPRESET(pipe_tx2_eqpreset),
        .PIPETX2STARTBLOCK(pipe_tx2_start_block),
        .PIPETX2SYNCHEADER(pipe_tx2_syncheader),
        .PIPETX3CHARISK(pipe_tx3_char_is_k),
        .PIPETX3COMPLIANCE(pipe_tx3_compliance),
        .PIPETX3DATA(pipe_tx3_data),
        .PIPETX3DATAVALID(pipe_tx3_data_valid),
        .PIPETX3ELECIDLE(pipe_tx3_elec_idle),
        .PIPETX3EQCONTROL(pipe_tx3_eqcontrol),
        .PIPETX3EQDEEMPH(pipe_tx3_eqdeemph),
        .PIPETX3EQDONE(pipe_tx3_eqdone),
        .PIPETX3EQPRESET(pipe_tx3_eqpreset),
        .PIPETX3STARTBLOCK(pipe_tx3_start_block),
        .PIPETX3SYNCHEADER(pipe_tx3_syncheader),
        .PIPETX4CHARISK(pipe_tx4_char_is_k),
        .PIPETX4COMPLIANCE(pipe_tx4_compliance),
        .PIPETX4DATA(pipe_tx4_data),
        .PIPETX4DATAVALID(pipe_tx4_data_valid),
        .PIPETX4ELECIDLE(pipe_tx4_elec_idle),
        .PIPETX4EQCONTROL(pipe_tx4_eqcontrol),
        .PIPETX4EQDEEMPH(pipe_tx4_eqdeemph),
        .PIPETX4EQDONE(pipe_tx4_eqdone),
        .PIPETX4EQPRESET(pipe_tx4_eqpreset),
        .PIPETX4STARTBLOCK(pipe_tx4_start_block),
        .PIPETX4SYNCHEADER(pipe_tx4_syncheader),
        .PIPETX5CHARISK(pipe_tx5_char_is_k),
        .PIPETX5COMPLIANCE(pipe_tx5_compliance),
        .PIPETX5DATA(pipe_tx5_data),
        .PIPETX5DATAVALID(pipe_tx5_data_valid),
        .PIPETX5ELECIDLE(pipe_tx5_elec_idle),
        .PIPETX5EQCONTROL(pipe_tx5_eqcontrol),
        .PIPETX5EQDEEMPH(pipe_tx5_eqdeemph),
        .PIPETX5EQDONE(pipe_tx5_eqdone),
        .PIPETX5EQPRESET(pipe_tx5_eqpreset),
        .PIPETX5STARTBLOCK(pipe_tx5_start_block),
        .PIPETX5SYNCHEADER(pipe_tx5_syncheader),
        .PIPETX6CHARISK(pipe_tx6_char_is_k),
        .PIPETX6COMPLIANCE(pipe_tx6_compliance),
        .PIPETX6DATA(pipe_tx6_data),
        .PIPETX6DATAVALID(pipe_tx6_data_valid),
        .PIPETX6ELECIDLE(pipe_tx6_elec_idle),
        .PIPETX6EQCONTROL(pipe_tx6_eqcontrol),
        .PIPETX6EQDEEMPH(pipe_tx6_eqdeemph),
        .PIPETX6EQDONE(pipe_tx6_eqdone),
        .PIPETX6EQPRESET(pipe_tx6_eqpreset),
        .PIPETX6STARTBLOCK(pipe_tx6_start_block),
        .PIPETX6SYNCHEADER(pipe_tx6_syncheader),
        .PIPETX7CHARISK(pipe_tx7_char_is_k),
        .PIPETX7COMPLIANCE(pipe_tx7_compliance),
        .PIPETX7DATA(pipe_tx7_data),
        .PIPETX7DATAVALID(pipe_tx7_data_valid),
        .PIPETX7ELECIDLE(pipe_tx7_elec_idle),
        .PIPETX7EQCONTROL(pipe_tx7_eqcontrol),
        .PIPETX7EQDEEMPH(pipe_tx7_eqdeemph),
        .PIPETX7EQDONE(pipe_tx7_eqdone),
        .PIPETX7EQPRESET(pipe_tx7_eqpreset),
        .PIPETX7STARTBLOCK(pipe_tx7_start_block),
        .PIPETX7SYNCHEADER(pipe_tx7_syncheader),
        .Q({pipe_tx0_eqcoeff[16:6],pipe_tx0_eqcoeff[4:0]}),
        .RESETN(pipe_reset_n),
        .cap_gnt(cap_gnt),
        .cap_rel(cap_rel),
        .cap_req(cap_req),
        .cfg_config_space_enable(cfg_config_space_enable),
        .cfg_current_speed(cfg_current_speed),
        .cfg_dpa_substate_change(cfg_dpa_substate_change),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_ds_port_number(cfg_ds_port_number),
        .cfg_dsn(cfg_dsn),
        .cfg_err_cor_in(cfg_err_cor_in),
        .cfg_err_cor_out(cfg_err_cor_out),
        .cfg_err_fatal_out(cfg_err_fatal_out),
        .cfg_err_nonfatal_out(cfg_err_nonfatal_out),
        .cfg_err_uncor_in(cfg_err_uncor_in),
        .cfg_ext_function_number(cfg_ext_function_number),
        .cfg_ext_read_data(cfg_ext_read_data),
        .cfg_ext_read_data_valid(cfg_ext_read_data_valid),
        .cfg_ext_read_received(cfg_ext_read_received),
        .cfg_ext_register_number(cfg_ext_register_number),
        .cfg_ext_write_byte_enable(cfg_ext_write_byte_enable),
        .cfg_ext_write_data(cfg_ext_write_data),
        .cfg_ext_write_received(cfg_ext_write_received),
        .cfg_fc_cpld(cfg_fc_cpld),
        .cfg_fc_cplh(cfg_fc_cplh),
        .cfg_fc_npd(cfg_fc_npd),
        .cfg_fc_nph(cfg_fc_nph),
        .cfg_fc_pd(cfg_fc_pd),
        .cfg_fc_ph(cfg_fc_ph),
        .cfg_fc_sel(cfg_fc_sel),
        .cfg_flr_done(cfg_flr_done),
        .cfg_flr_in_process(cfg_flr_in_process),
        .cfg_function_power_state(cfg_function_power_state),
        .cfg_function_status(cfg_function_status),
        .cfg_hot_reset_in(cfg_hot_reset_in),
        .cfg_hot_reset_out(cfg_hot_reset_out),
        .cfg_interrupt_int(cfg_interrupt_int),
        .cfg_interrupt_msi_attr(cfg_interrupt_msi_attr),
        .cfg_interrupt_msi_data(cfg_interrupt_msi_data),
        .cfg_interrupt_msi_enable(cfg_interrupt_msi_enable),
        .cfg_interrupt_msi_fail(cfg_interrupt_msi_fail),
        .cfg_interrupt_msi_function_number(cfg_interrupt_msi_function_number),
        .cfg_interrupt_msi_int(cfg_interrupt_msi_int),
        .cfg_interrupt_msi_mask_update(cfg_interrupt_msi_mask_update),
        .cfg_interrupt_msi_mmenable(cfg_interrupt_msi_mmenable),
        .cfg_interrupt_msi_pending_status(cfg_interrupt_msi_pending_status),
        .cfg_interrupt_msi_pending_status_data_enable(cfg_interrupt_msi_pending_status_data_enable),
        .cfg_interrupt_msi_pending_status_function_num(cfg_interrupt_msi_pending_status_function_num),
        .cfg_interrupt_msi_select(cfg_interrupt_msi_select),
        .cfg_interrupt_msi_sent(cfg_interrupt_msi_sent),
        .cfg_interrupt_msi_tph_present(cfg_interrupt_msi_tph_present),
        .cfg_interrupt_msi_tph_st_tag(cfg_interrupt_msi_tph_st_tag),
        .cfg_interrupt_msi_tph_type(cfg_interrupt_msi_tph_type),
        .cfg_interrupt_msi_vf_enable(cfg_interrupt_msi_vf_enable),
        .cfg_interrupt_msix_address(cfg_interrupt_msix_address),
        .cfg_interrupt_msix_data(cfg_interrupt_msix_data),
        .cfg_interrupt_msix_enable(cfg_interrupt_msix_enable),
        .cfg_interrupt_msix_fail(cfg_interrupt_msix_fail),
        .cfg_interrupt_msix_int(cfg_interrupt_msix_int),
        .cfg_interrupt_msix_mask(cfg_interrupt_msix_mask),
        .cfg_interrupt_msix_sent(cfg_interrupt_msix_sent),
        .cfg_interrupt_msix_vf_enable(cfg_interrupt_msix_vf_enable),
        .cfg_interrupt_msix_vf_mask(cfg_interrupt_msix_vf_mask),
        .cfg_interrupt_pending(cfg_interrupt_pending),
        .cfg_interrupt_sent(cfg_interrupt_sent),
        .cfg_link_power_state(cfg_link_power_state),
        .cfg_link_training_enable(cfg_link_training_enable),
        .cfg_local_error(cfg_local_error),
        .cfg_ltr_enable(cfg_ltr_enable),
        .cfg_ltssm_state(cfg_ltssm_state),
        .cfg_max_payload(cfg_max_payload),
        .cfg_max_read_req(cfg_max_read_req),
        .cfg_mgmt_addr(cfg_mgmt_addr),
        .cfg_mgmt_byte_enable(cfg_mgmt_byte_enable),
        .cfg_mgmt_read(cfg_mgmt_read),
        .cfg_mgmt_read_data(cfg_mgmt_read_data),
        .cfg_mgmt_read_write_done(cfg_mgmt_read_write_done),
        .cfg_mgmt_type1_cfg_reg_access(cfg_mgmt_type1_cfg_reg_access),
        .cfg_mgmt_write(cfg_mgmt_write),
        .cfg_mgmt_write_data(cfg_mgmt_write_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_data(cfg_msg_received_data),
        .cfg_msg_received_type(cfg_msg_received_type),
        .cfg_msg_transmit(cfg_msg_transmit),
        .cfg_msg_transmit_data(cfg_msg_transmit_data),
        .cfg_msg_transmit_done(cfg_msg_transmit_done),
        .cfg_msg_transmit_type(cfg_msg_transmit_type),
        .cfg_negotiated_width(cfg_negotiated_width),
        .cfg_obff_enable(cfg_obff_enable),
        .cfg_per_func_status_control(cfg_per_func_status_control),
        .cfg_per_func_status_data(cfg_per_func_status_data),
        .cfg_per_function_number(cfg_per_function_number),
        .cfg_per_function_output_request(cfg_per_function_output_request),
        .cfg_per_function_update_done(cfg_per_function_update_done),
        .cfg_phy_link_down(cfg_phy_link_down),
        .cfg_phy_link_status(cfg_phy_link_status),
        .cfg_pl_status_change(cfg_pl_status_change),
        .cfg_power_state_change_ack(cfg_power_state_change_ack),
        .cfg_power_state_change_interrupt(cfg_power_state_change_interrupt),
        .cfg_rcb_status(cfg_rcb_status),
        .cfg_req_pm_transition_l23_ready(cfg_req_pm_transition_l23_ready),
        .cfg_subsys_vend_id(cfg_subsys_vend_id),
        .cfg_tph_requester_enable(cfg_tph_requester_enable),
        .cfg_tph_st_mode(cfg_tph_st_mode),
        .cfg_vf_flr_done(cfg_vf_flr_done),
        .cfg_vf_flr_in_process(cfg_vf_flr_in_process),
        .cfg_vf_power_state(cfg_vf_power_state),
        .cfg_vf_status(cfg_vf_status),
        .cfg_vf_tph_requester_enable(cfg_vf_tph_requester_enable),
        .cfg_vf_tph_st_mode(cfg_vf_tph_st_mode),
        .conf_req_data(conf_req_data),
        .conf_req_ready(conf_req_ready),
        .conf_req_reg_num(conf_req_reg_num),
        .conf_req_type(conf_req_type),
        .conf_req_valid(conf_req_valid),
        .conf_resp_rdata(conf_resp_rdata),
        .conf_resp_valid(conf_resp_valid),
        .drp_addr(drp_addr),
        .drp_clk(drp_clk),
        .drp_di(drp_di),
        .drp_do(drp_do),
        .drp_en(drp_en),
        .drp_rdy(drp_rdy),
        .drp_we(drp_we),
        .idle_reg(idle_reg),
        .m_axis_cq_tdata(m_axis_cq_tdata),
        .m_axis_cq_tkeep(m_axis_cq_tkeep),
        .m_axis_cq_tlast(m_axis_cq_tlast),
        .m_axis_cq_tready(m_axis_cq_tready),
        .m_axis_cq_tuser(m_axis_cq_tuser),
        .m_axis_cq_tvalid(m_axis_cq_tvalid),
        .m_axis_rc_tdata(m_axis_rc_tdata),
        .m_axis_rc_tkeep(m_axis_rc_tkeep),
        .m_axis_rc_tlast(m_axis_rc_tlast),
        .m_axis_rc_tready(m_axis_rc_tready),
        .m_axis_rc_tuser(m_axis_rc_tuser),
        .m_axis_rc_tvalid(m_axis_rc_tvalid),
        .mcap_design_switch(mcap_design_switch),
        .pcie_cq_np_req(pcie_cq_np_req),
        .pcie_cq_np_req_count(pcie_cq_np_req_count),
        .pcie_perstn1_in(pcie_perstn1_in),
        .pcie_perstn1_out(pcie_perstn1_out),
        .pcie_rq_seq_num(pcie_rq_seq_num),
        .pcie_rq_seq_num_vld(pcie_rq_seq_num_vld),
        .pcie_rq_tag(pcie_rq_tag),
        .pcie_rq_tag_av(pcie_rq_tag_av),
        .pcie_rq_tag_vld(pcie_rq_tag_vld),
        .pcie_tfc_npd_av(pcie_tfc_npd_av),
        .pcie_tfc_nph_av(pcie_tfc_nph_av),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] (pipe_rx0_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (pipe_rx1_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (pipe_rx2_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (pipe_rx3_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 (pipe_rx4_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 (pipe_rx5_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 (pipe_rx6_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_6 (pipe_rx7_char_is_k),
        .\pipe_stages_1.pipe_rx_data_q_reg[31] (pipe_rx0_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_0 (pipe_rx1_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_1 (pipe_rx2_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_2 (pipe_rx3_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_3 (pipe_rx4_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_4 (pipe_rx5_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_5 (pipe_rx6_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[31]_6 (pipe_rx7_data),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] (pipe_rx0_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (pipe_rx1_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (pipe_rx2_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_2 (pipe_rx3_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_3 (pipe_rx4_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_4 (pipe_rx5_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_5 (pipe_rx6_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_6 (pipe_rx7_status),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1] (pipe_rx0_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_0 (pipe_rx1_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_1 (pipe_rx2_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_2 (pipe_rx3_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_3 (pipe_rx4_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_4 (pipe_rx5_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_5 (pipe_rx6_syncheader),
        .\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_6 (pipe_rx7_syncheader),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ({pipe_tx1_eqcoeff[16:6],pipe_tx1_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ({pipe_tx2_eqcoeff[16:6],pipe_tx2_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ({pipe_tx3_eqcoeff[16:6],pipe_tx3_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ({pipe_tx4_eqcoeff[16:6],pipe_tx4_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ({pipe_tx5_eqcoeff[16:6],pipe_tx5_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ({pipe_tx6_eqcoeff[16:6],pipe_tx6_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ({pipe_tx7_eqcoeff[16:6],pipe_tx7_eqcoeff[4:0]}),
        .\pipe_stages_1.pipe_tx_eqfs_q_reg[5] ({pipe_tx_eqfs[5],pipe_tx_eqfs[3]}),
        .\pipe_stages_1.pipe_tx_eqlf_q_reg[3] (pipe_tx_eqlf),
        .pl_eq_in_progress(pl_eq_in_progress),
        .pl_eq_phase(pl_eq_phase),
        .pl_eq_reset_eieos_count(pl_eq_reset_eieos_count),
        .pl_gen2_upstream_prefer_deemph(pl_gen2_upstream_prefer_deemph),
        .reg_user_lnk_up_reg(reg_user_lnk_up_reg),
        .rxcdrhold_req_reg(rxcdrhold_req_reg),
        .s_axis_cc_tdata(s_axis_cc_tdata),
        .s_axis_cc_tkeep(s_axis_cc_tkeep),
        .s_axis_cc_tlast(s_axis_cc_tlast),
        .s_axis_cc_tready(s_axis_cc_tready),
        .s_axis_cc_tuser(s_axis_cc_tuser),
        .s_axis_cc_tvalid(s_axis_cc_tvalid),
        .s_axis_rq_tdata(s_axis_rq_tdata),
        .s_axis_rq_tkeep(s_axis_rq_tkeep),
        .s_axis_rq_tlast(s_axis_rq_tlast),
        .s_axis_rq_tready(s_axis_rq_tready),
        .s_axis_rq_tuser(s_axis_rq_tuser),
        .s_axis_rq_tvalid(s_axis_rq_tvalid),
        .sys_reset(sys_reset),
        .user_reset_int_reg(user_reset_int_reg),
        .user_reset_int_reg_0(user_reset_int_reg_0),
        .user_reset_int_reg_1(user_reset_int_reg_1));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_pipeline pipe_pipeline_inst
       (.CLK(CLK),
        .D(pipe_tx0_eqcontrol),
        .PIPERX7EQLPNEWTXCOEFFORPRESET(pipe_rx0_eqlp_new_txcoef_forpreset),
        .Q(Q),
        .SR(init_ctrl_inst_n_3),
        .TXEQ_DONE(TXEQ_DONE),
        .TXEQ_DONE_reg(TXEQ_DONE_reg),
        .TXEQ_DONE_reg_0(TXEQ_DONE_reg_0),
        .TXEQ_DONE_reg_1(TXEQ_DONE_reg_1),
        .TXEQ_DONE_reg_2(TXEQ_DONE_reg_2),
        .TXEQ_DONE_reg_3(TXEQ_DONE_reg_3),
        .TXEQ_DONE_reg_4(TXEQ_DONE_reg_4),
        .TXEQ_DONE_reg_5(TXEQ_DONE_reg_5),
        .\TXEQ_NEW_COEFF_reg[16] (D),
        .\TXEQ_NEW_COEFF_reg[16]_0 (\TXEQ_NEW_COEFF_reg[16] ),
        .\TXEQ_NEW_COEFF_reg[16]_1 (\TXEQ_NEW_COEFF_reg[16]_0 ),
        .\TXEQ_NEW_COEFF_reg[16]_2 (\TXEQ_NEW_COEFF_reg[16]_1 ),
        .\TXEQ_NEW_COEFF_reg[16]_3 (\TXEQ_NEW_COEFF_reg[16]_2 ),
        .\TXEQ_NEW_COEFF_reg[16]_4 (\TXEQ_NEW_COEFF_reg[16]_3 ),
        .\TXEQ_NEW_COEFF_reg[16]_5 (\TXEQ_NEW_COEFF_reg[16]_4 ),
        .\TXEQ_NEW_COEFF_reg[16]_6 (\TXEQ_NEW_COEFF_reg[16]_5 ),
        .adapt_done(adapt_done),
        .adapt_done_reg(adapt_done_reg),
        .adapt_done_reg_0(adapt_done_reg_0),
        .adapt_done_reg_1(adapt_done_reg_1),
        .adapt_done_reg_2(adapt_done_reg_2),
        .adapt_done_reg_3(adapt_done_reg_3),
        .adapt_done_reg_4(adapt_done_reg_4),
        .adapt_done_reg_5(adapt_done_reg_5),
        .done_reg(done_reg),
        .done_reg_0(done_reg_0),
        .done_reg_1(done_reg_1),
        .done_reg_2(done_reg_2),
        .done_reg_3(done_reg_3),
        .done_reg_4(done_reg_4),
        .done_reg_5(done_reg_5),
        .done_reg_6(done_reg_6),
        .gt_phystatus(gt_phystatus),
        .gt_rxstatus(gt_rxstatus),
        .gt_rxvalid(gt_rxvalid),
        .gt_txelecidle(gt_txelecidle),
        .lffs_sel(lffs_sel),
        .lffs_sel_reg(lffs_sel_reg),
        .lffs_sel_reg_0(lffs_sel_reg_0),
        .lffs_sel_reg_1(lffs_sel_reg_1),
        .lffs_sel_reg_2(lffs_sel_reg_2),
        .lffs_sel_reg_3(lffs_sel_reg_3),
        .lffs_sel_reg_4(lffs_sel_reg_4),
        .lffs_sel_reg_5(lffs_sel_reg_5),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .phy_txeq_preset(phy_txeq_preset),
        .pipe_rx0_data_valid(pipe_rx0_data_valid),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_eqdone(pipe_rx0_eqdone),
        .pipe_rx0_eqlp_adaptdone(pipe_rx0_eqlp_adaptdone),
        .pipe_rx0_eqlp_lffs_sel(pipe_rx0_eqlp_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_start_block(pipe_rx0_start_block),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx1_data_valid(pipe_rx1_data_valid),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle),
        .pipe_rx1_eqdone(pipe_rx1_eqdone),
        .pipe_rx1_eqlp_adaptdone(pipe_rx1_eqlp_adaptdone),
        .pipe_rx1_eqlp_lffs_sel(pipe_rx1_eqlp_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rx1_start_block(pipe_rx1_start_block),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_rx2_data_valid(pipe_rx2_data_valid),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle),
        .pipe_rx2_eqdone(pipe_rx2_eqdone),
        .pipe_rx2_eqlp_adaptdone(pipe_rx2_eqlp_adaptdone),
        .pipe_rx2_eqlp_lffs_sel(pipe_rx2_eqlp_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rx2_start_block(pipe_rx2_start_block),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_rx3_data_valid(pipe_rx3_data_valid),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle),
        .pipe_rx3_eqdone(pipe_rx3_eqdone),
        .pipe_rx3_eqlp_adaptdone(pipe_rx3_eqlp_adaptdone),
        .pipe_rx3_eqlp_lffs_sel(pipe_rx3_eqlp_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rx3_start_block(pipe_rx3_start_block),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_rx4_data_valid(pipe_rx4_data_valid),
        .pipe_rx4_elec_idle(pipe_rx4_elec_idle),
        .pipe_rx4_eqdone(pipe_rx4_eqdone),
        .pipe_rx4_eqlp_adaptdone(pipe_rx4_eqlp_adaptdone),
        .pipe_rx4_eqlp_lffs_sel(pipe_rx4_eqlp_lffs_sel),
        .pipe_rx4_phy_status(pipe_rx4_phy_status),
        .pipe_rx4_polarity(pipe_rx4_polarity),
        .pipe_rx4_start_block(pipe_rx4_start_block),
        .pipe_rx4_valid(pipe_rx4_valid),
        .pipe_rx5_data_valid(pipe_rx5_data_valid),
        .pipe_rx5_elec_idle(pipe_rx5_elec_idle),
        .pipe_rx5_eqdone(pipe_rx5_eqdone),
        .pipe_rx5_eqlp_adaptdone(pipe_rx5_eqlp_adaptdone),
        .pipe_rx5_eqlp_lffs_sel(pipe_rx5_eqlp_lffs_sel),
        .pipe_rx5_phy_status(pipe_rx5_phy_status),
        .pipe_rx5_polarity(pipe_rx5_polarity),
        .pipe_rx5_start_block(pipe_rx5_start_block),
        .pipe_rx5_valid(pipe_rx5_valid),
        .pipe_rx6_data_valid(pipe_rx6_data_valid),
        .pipe_rx6_elec_idle(pipe_rx6_elec_idle),
        .pipe_rx6_eqdone(pipe_rx6_eqdone),
        .pipe_rx6_eqlp_adaptdone(pipe_rx6_eqlp_adaptdone),
        .pipe_rx6_eqlp_lffs_sel(pipe_rx6_eqlp_lffs_sel),
        .pipe_rx6_phy_status(pipe_rx6_phy_status),
        .pipe_rx6_polarity(pipe_rx6_polarity),
        .pipe_rx6_start_block(pipe_rx6_start_block),
        .pipe_rx6_valid(pipe_rx6_valid),
        .pipe_rx7_data_valid(pipe_rx7_data_valid),
        .pipe_rx7_elec_idle(pipe_rx7_elec_idle),
        .pipe_rx7_eqdone(pipe_rx7_eqdone),
        .pipe_rx7_eqlp_adaptdone(pipe_rx7_eqlp_adaptdone),
        .pipe_rx7_eqlp_lffs_sel(pipe_rx7_eqlp_lffs_sel),
        .pipe_rx7_phy_status(pipe_rx7_phy_status),
        .pipe_rx7_polarity(pipe_rx7_polarity),
        .pipe_rx7_start_block(pipe_rx7_start_block),
        .pipe_rx7_valid(pipe_rx7_valid),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_data_valid(pipe_tx0_data_valid),
        .pipe_tx0_deemph(pipe_tx0_deemph),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_eqdone(pipe_tx0_eqdone),
        .pipe_tx0_rcvr_det(pipe_tx0_rcvr_det),
        .pipe_tx0_start_block(pipe_tx0_start_block),
        .pipe_tx0_swing(pipe_tx0_swing),
        .pipe_tx1_compliance(pipe_tx1_compliance),
        .pipe_tx1_data_valid(pipe_tx1_data_valid),
        .pipe_tx1_elec_idle(pipe_tx1_elec_idle),
        .pipe_tx1_eqdone(pipe_tx1_eqdone),
        .pipe_tx1_start_block(pipe_tx1_start_block),
        .pipe_tx2_compliance(pipe_tx2_compliance),
        .pipe_tx2_data_valid(pipe_tx2_data_valid),
        .pipe_tx2_elec_idle(pipe_tx2_elec_idle),
        .pipe_tx2_eqdone(pipe_tx2_eqdone),
        .pipe_tx2_start_block(pipe_tx2_start_block),
        .pipe_tx3_compliance(pipe_tx3_compliance),
        .pipe_tx3_data_valid(pipe_tx3_data_valid),
        .pipe_tx3_elec_idle(pipe_tx3_elec_idle),
        .pipe_tx3_eqdone(pipe_tx3_eqdone),
        .pipe_tx3_start_block(pipe_tx3_start_block),
        .pipe_tx4_compliance(pipe_tx4_compliance),
        .pipe_tx4_data_valid(pipe_tx4_data_valid),
        .pipe_tx4_elec_idle(pipe_tx4_elec_idle),
        .pipe_tx4_eqdone(pipe_tx4_eqdone),
        .pipe_tx4_start_block(pipe_tx4_start_block),
        .pipe_tx5_compliance(pipe_tx5_compliance),
        .pipe_tx5_data_valid(pipe_tx5_data_valid),
        .pipe_tx5_elec_idle(pipe_tx5_elec_idle),
        .pipe_tx5_eqdone(pipe_tx5_eqdone),
        .pipe_tx5_start_block(pipe_tx5_start_block),
        .pipe_tx6_compliance(pipe_tx6_compliance),
        .pipe_tx6_data_valid(pipe_tx6_data_valid),
        .pipe_tx6_elec_idle(pipe_tx6_elec_idle),
        .pipe_tx6_eqdone(pipe_tx6_eqdone),
        .pipe_tx6_start_block(pipe_tx6_start_block),
        .pipe_tx7_compliance(pipe_tx7_compliance),
        .pipe_tx7_data_valid(pipe_tx7_data_valid),
        .pipe_tx7_elec_idle(pipe_tx7_elec_idle),
        .pipe_tx7_eqdone(pipe_tx7_eqdone),
        .pipe_tx7_start_block(pipe_tx7_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(pipe_tx1_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(pipe_tx2_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(pipe_tx3_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_10(pipe_tx4_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_11(pipe_tx5_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_12(pipe_tx6_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_13(pipe_tx7_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_14(pipe_tx0_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_15(pipe_rx0_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_16(pipe_rx0_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_17(pipe_rx0_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_18(pipe_rx0_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_19(pipe_tx1_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(pipe_tx4_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_20(pipe_rx1_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_21(pipe_rx1_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_22(pipe_rx1_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_23(pipe_rx1_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_24(pipe_tx2_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_25(pipe_rx2_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_26(pipe_rx2_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_27(pipe_rx2_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_28(pipe_rx2_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_29(pipe_tx3_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(pipe_tx5_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_30(pipe_rx3_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_31(pipe_rx3_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_32(pipe_rx3_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_33(pipe_rx3_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_34(pipe_tx4_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_35(pipe_rx4_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_36(pipe_rx4_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_37(pipe_rx4_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_38(pipe_rx4_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_39(pipe_tx5_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(pipe_tx6_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_40(pipe_rx5_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_41(pipe_rx5_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_42(pipe_rx5_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_43(pipe_rx5_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_44(pipe_tx6_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_45(pipe_rx6_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_46(pipe_rx6_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_47(pipe_rx6_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_48(pipe_rx6_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_49(pipe_tx7_eqdeemph),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(pipe_tx7_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_50(pipe_rx7_eqcontrol),
        .reg_cfg_tph_stt_read_data_valid_o_reg_51(pipe_rx7_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_52(pipe_rx7_eqlp_txpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_53(pipe_rx7_eqlp_lffs),
        .reg_cfg_tph_stt_read_data_valid_o_reg_54(pipe_tx7_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_55(pipe_tx6_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_56(pipe_tx5_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_57(pipe_tx4_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_58(pipe_tx3_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_59(pipe_tx2_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(pipe_tx0_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_60(pipe_tx1_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_61(pipe_tx0_char_is_k),
        .reg_cfg_tph_stt_read_data_valid_o_reg_62(pipe_tx7_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_63(pipe_tx6_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_64(pipe_tx5_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_65(pipe_tx4_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_66(pipe_tx3_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_67(pipe_tx2_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_68(pipe_tx1_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_69(pipe_tx0_data),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(pipe_tx1_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_70(pipe_tx7_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_71(pipe_tx6_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_72(pipe_tx5_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_73(pipe_tx4_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_74(pipe_tx3_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_75(pipe_tx2_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_76(pipe_tx1_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_77(pipe_tx0_syncheader),
        .reg_cfg_tph_stt_read_data_valid_o_reg_78(pipe_tx0_rate),
        .reg_cfg_tph_stt_read_data_valid_o_reg_79(pipe_tx0_margin),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(pipe_tx2_eqpreset),
        .reg_cfg_tph_stt_read_data_valid_o_reg_80(pipe_tx0_powerdown),
        .reg_cfg_tph_stt_read_data_valid_o_reg_9(pipe_tx3_eqpreset),
        .reg_cfg_tph_stt_read_enable_i_reg(pipe_rx1_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_0(pipe_rx1_data),
        .reg_cfg_tph_stt_read_enable_i_reg_1(pipe_rx1_status),
        .reg_cfg_tph_stt_read_enable_i_reg_10(pipe_rx3_data),
        .reg_cfg_tph_stt_read_enable_i_reg_11(pipe_rx3_status),
        .reg_cfg_tph_stt_read_enable_i_reg_12(pipe_rx3_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_13({pipe_tx3_eqcoeff[16:6],pipe_tx3_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_14(pipe_rx4_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_15(pipe_rx4_data),
        .reg_cfg_tph_stt_read_enable_i_reg_16(pipe_rx4_status),
        .reg_cfg_tph_stt_read_enable_i_reg_17(pipe_rx4_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_18({pipe_tx4_eqcoeff[16:6],pipe_tx4_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_19(pipe_rx5_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_2(pipe_rx1_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_20(pipe_rx5_data),
        .reg_cfg_tph_stt_read_enable_i_reg_21(pipe_rx5_status),
        .reg_cfg_tph_stt_read_enable_i_reg_22(pipe_rx5_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_23({pipe_tx5_eqcoeff[16:6],pipe_tx5_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_24(pipe_rx6_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_25(pipe_rx6_data),
        .reg_cfg_tph_stt_read_enable_i_reg_26(pipe_rx6_status),
        .reg_cfg_tph_stt_read_enable_i_reg_27(pipe_rx6_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_28({pipe_tx6_eqcoeff[16:6],pipe_tx6_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_29(pipe_rx7_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_3({pipe_tx1_eqcoeff[16:6],pipe_tx1_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_30(pipe_rx7_data),
        .reg_cfg_tph_stt_read_enable_i_reg_31(pipe_rx7_status),
        .reg_cfg_tph_stt_read_enable_i_reg_32(pipe_rx7_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_33({pipe_tx7_eqcoeff[16:6],pipe_tx7_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_34({pipe_tx_eqfs[5],pipe_tx_eqfs[3]}),
        .reg_cfg_tph_stt_read_enable_i_reg_35(pipe_tx_eqlf),
        .reg_cfg_tph_stt_read_enable_i_reg_36(pipe_rx0_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_37(pipe_rx0_data),
        .reg_cfg_tph_stt_read_enable_i_reg_38(pipe_rx0_status),
        .reg_cfg_tph_stt_read_enable_i_reg_39(pipe_rx0_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_4(pipe_rx2_char_is_k),
        .reg_cfg_tph_stt_read_enable_i_reg_40({pipe_tx0_eqcoeff[16:6],pipe_tx0_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_5(pipe_rx2_data),
        .reg_cfg_tph_stt_read_enable_i_reg_6(pipe_rx2_status),
        .reg_cfg_tph_stt_read_enable_i_reg_7(pipe_rx2_syncheader),
        .reg_cfg_tph_stt_read_enable_i_reg_8({pipe_tx2_eqcoeff[16:6],pipe_tx2_eqcoeff[4:0]}),
        .reg_cfg_tph_stt_read_enable_i_reg_9(pipe_rx3_char_is_k),
        .rxctrl0_out(rxctrl0_out),
        .rxdata_out(rxdata_out),
        .rxelecidle_out(rxelecidle_out),
        .rxpolarity_in(rxpolarity_in),
        .\sync_reg[0] (\sync_reg[0] ),
        .\sync_reg[0]_0 (\sync_reg[0]_0 ),
        .\sync_reg[0]_1 (\sync_reg[0]_1 ),
        .\sync_reg[0]_10 (\sync_reg[0]_10 ),
        .\sync_reg[0]_11 (\sync_reg[0]_11 ),
        .\sync_reg[0]_12 (\sync_reg[0]_12 ),
        .\sync_reg[0]_13 (\sync_reg[0]_13 ),
        .\sync_reg[0]_14 (\sync_reg[0]_14 ),
        .\sync_reg[0]_15 (\sync_reg[0]_15 ),
        .\sync_reg[0]_16 (\sync_reg[0]_16 ),
        .\sync_reg[0]_17 (\sync_reg[0]_17 ),
        .\sync_reg[0]_18 (\sync_reg[0]_18 ),
        .\sync_reg[0]_19 (\sync_reg[0]_19 ),
        .\sync_reg[0]_2 (\sync_reg[0]_2 ),
        .\sync_reg[0]_20 (\sync_reg[0]_20 ),
        .\sync_reg[0]_21 (\sync_reg[0]_21 ),
        .\sync_reg[0]_22 (\sync_reg[0]_22 ),
        .\sync_reg[0]_23 (\sync_reg[0]_23 ),
        .\sync_reg[0]_24 (\sync_reg[0]_24 ),
        .\sync_reg[0]_25 (\sync_reg[0]_25 ),
        .\sync_reg[0]_26 (\sync_reg[0]_26 ),
        .\sync_reg[0]_27 (\sync_reg[0]_27 ),
        .\sync_reg[0]_28 (\sync_reg[0]_28 ),
        .\sync_reg[0]_29 (\sync_reg[0]_29 ),
        .\sync_reg[0]_3 (\sync_reg[0]_3 ),
        .\sync_reg[0]_30 (\sync_reg[0]_30 ),
        .\sync_reg[0]_31 (\sync_reg[0]_31 ),
        .\sync_reg[0]_32 (\sync_reg[0]_32 ),
        .\sync_reg[0]_33 (\sync_reg[0]_33 ),
        .\sync_reg[0]_34 (\sync_reg[0]_34 ),
        .\sync_reg[0]_35 (\sync_reg[0]_35 ),
        .\sync_reg[0]_36 (\sync_reg[0]_36 ),
        .\sync_reg[0]_37 (\sync_reg[0]_37 ),
        .\sync_reg[0]_38 (\sync_reg[0]_38 ),
        .\sync_reg[0]_39 (\sync_reg[0]_39 ),
        .\sync_reg[0]_4 (\sync_reg[0]_4 ),
        .\sync_reg[0]_40 (\sync_reg[0]_40 ),
        .\sync_reg[0]_5 (\sync_reg[0]_5 ),
        .\sync_reg[0]_6 (\sync_reg[0]_6 ),
        .\sync_reg[0]_7 (\sync_reg[0]_7 ),
        .\sync_reg[0]_8 (\sync_reg[0]_8 ),
        .\sync_reg[0]_9 (\sync_reg[0]_9 ),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txswing_in(txswing_in));
  pcie3_ultrascale_0_pcie3_ultrascale_0_tph_tbl tph_tbl_inst
       (.ADDRARDADDR({cfg_tph_function_num,cfg_tph_stt_address}),
        .CFGTPHSTTREADDATA(cfg_tph_stt_read_data),
        .CFGTPHSTTWRITEBYTEVALID(cfg_tph_stt_write_byte_valid),
        .CFGTPHSTTWRITEDATA(cfg_tph_stt_write_data),
        .D(cfg_tph_stt_read_enable),
        .Q({init_ctrl_inst_n_1,init_ctrl_inst_n_2}),
        .SR(init_ctrl_inst_n_3),
        .cfg_tph_stt_read_data_valid(cfg_tph_stt_read_data_valid),
        .cfg_tph_stt_write_enable(cfg_tph_stt_write_enable),
        .idle_reg(idle_reg),
        .user_tph_function_num(user_tph_function_num),
        .user_tph_stt_address(user_tph_stt_address),
        .user_tph_stt_read_data(user_tph_stt_read_data),
        .user_tph_stt_read_data_valid(user_tph_stt_read_data_valid),
        .user_tph_stt_read_enable(user_tph_stt_read_enable));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pcie3_uscale_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pcie3_uscale_wrapper
   (rxcdrhold_req_reg,
    cfg_ltssm_state,
    user_reset_int_reg,
    cfg_phy_link_status,
    cfg_phy_link_down,
    reg_user_lnk_up_reg,
    PCIEPERST0B,
    user_reset_int_reg_0,
    cfg_hot_reset_out,
    cfg_err_cor_out,
    cfg_err_fatal_out,
    cfg_err_nonfatal_out,
    cfg_ext_read_received,
    cfg_ext_write_received,
    cfg_interrupt_msi_fail,
    cfg_interrupt_msi_mask_update,
    cfg_interrupt_msi_sent,
    cfg_interrupt_msix_fail,
    cfg_interrupt_msix_sent,
    cfg_interrupt_sent,
    cfg_local_error,
    cfg_ltr_enable,
    cfg_mgmt_read_write_done,
    cfg_msg_received,
    cfg_msg_transmit_done,
    cfg_per_function_update_done,
    cfg_pl_status_change,
    cfg_power_state_change_interrupt,
    CFGTPHSTTREADENABLE,
    CFGTPHSTTWRITEENABLE,
    mcap_design_switch,
    cap_req,
    conf_req_ready,
    conf_resp_valid,
    drp_rdy,
    m_axis_cq_tlast,
    m_axis_cq_tvalid,
    m_axis_rc_tlast,
    m_axis_rc_tvalid,
    pcie_perstn1_out,
    pcie_rq_seq_num_vld,
    pcie_rq_tag_vld,
    PIPERX0POLARITY,
    PIPERX1POLARITY,
    PIPERX2POLARITY,
    PIPERX3POLARITY,
    PIPERX4POLARITY,
    PIPERX5POLARITY,
    PIPERX6POLARITY,
    PIPERX7POLARITY,
    PIPETX0COMPLIANCE,
    PIPETX0DATAVALID,
    PIPETX0DEEMPH,
    PIPETX0ELECIDLE,
    PIPETX0RCVRDET,
    PIPETX0STARTBLOCK,
    PIPETX0SWING,
    PIPETX1COMPLIANCE,
    PIPETX1DATAVALID,
    PIPETX1ELECIDLE,
    PIPETX1STARTBLOCK,
    PIPETX2COMPLIANCE,
    PIPETX2DATAVALID,
    PIPETX2ELECIDLE,
    PIPETX2STARTBLOCK,
    PIPETX3COMPLIANCE,
    PIPETX3DATAVALID,
    PIPETX3ELECIDLE,
    PIPETX3STARTBLOCK,
    PIPETX4COMPLIANCE,
    PIPETX4DATAVALID,
    PIPETX4ELECIDLE,
    PIPETX4STARTBLOCK,
    PIPETX5COMPLIANCE,
    PIPETX5DATAVALID,
    PIPETX5ELECIDLE,
    PIPETX5STARTBLOCK,
    PIPETX6COMPLIANCE,
    PIPETX6DATAVALID,
    PIPETX6ELECIDLE,
    PIPETX6STARTBLOCK,
    PIPETX7COMPLIANCE,
    PIPETX7DATAVALID,
    PIPETX7ELECIDLE,
    PIPETX7STARTBLOCK,
    pl_eq_in_progress,
    cfg_fc_cpld,
    cfg_fc_npd,
    cfg_fc_pd,
    cfg_function_power_state,
    cfg_interrupt_msi_mmenable,
    cfg_tph_st_mode,
    cfg_function_status,
    cfg_per_func_status_data,
    cfg_vf_status,
    drp_do,
    cfg_link_power_state,
    cfg_obff_enable,
    pcie_rq_tag_av,
    pcie_tfc_npd_av,
    pcie_tfc_nph_av,
    PIPERX0EQCONTROL,
    PIPERX1EQCONTROL,
    PIPERX2EQCONTROL,
    PIPERX3EQCONTROL,
    PIPERX4EQCONTROL,
    PIPERX5EQCONTROL,
    PIPERX6EQCONTROL,
    PIPERX7EQCONTROL,
    PIPETX0CHARISK,
    PIPETX0EQCONTROL,
    PIPETX0POWERDOWN,
    PIPETX0RATE,
    PIPETX0SYNCHEADER,
    PIPETX1CHARISK,
    PIPETX1EQCONTROL,
    PIPETX1SYNCHEADER,
    PIPETX2CHARISK,
    PIPETX2EQCONTROL,
    PIPETX2SYNCHEADER,
    PIPETX3CHARISK,
    PIPETX3EQCONTROL,
    PIPETX3SYNCHEADER,
    PIPETX4CHARISK,
    PIPETX4EQCONTROL,
    PIPETX4SYNCHEADER,
    PIPETX5CHARISK,
    PIPETX5EQCONTROL,
    PIPETX5SYNCHEADER,
    PIPETX6CHARISK,
    PIPETX6EQCONTROL,
    PIPETX6SYNCHEADER,
    PIPETX7CHARISK,
    PIPETX7EQCONTROL,
    PIPETX7SYNCHEADER,
    pl_eq_phase,
    cfg_vf_power_state,
    cfg_vf_tph_st_mode,
    m_axis_cq_tdata,
    m_axis_rc_tdata,
    cfg_current_speed,
    cfg_max_payload,
    cfg_max_read_req,
    PIPERX0EQPRESET,
    PIPERX1EQPRESET,
    PIPERX2EQPRESET,
    PIPERX3EQPRESET,
    PIPERX4EQPRESET,
    PIPERX5EQPRESET,
    PIPERX6EQPRESET,
    PIPERX7EQPRESET,
    PIPETX0MARGIN,
    cfg_ext_write_data,
    cfg_interrupt_msi_data,
    cfg_mgmt_read_data,
    CFGTPHSTTWRITEDATA,
    conf_resp_rdata,
    PIPETX0DATA,
    PIPETX1DATA,
    PIPETX2DATA,
    PIPETX3DATA,
    PIPETX4DATA,
    PIPETX5DATA,
    PIPETX6DATA,
    PIPETX7DATA,
    cfg_dpa_substate_change,
    cfg_ext_write_byte_enable,
    cfg_flr_in_process,
    cfg_interrupt_msi_enable,
    cfg_interrupt_msix_enable,
    cfg_interrupt_msix_mask,
    cfg_negotiated_width,
    cfg_rcb_status,
    ADDRARDADDR,
    cfg_tph_requester_enable,
    CFGTPHSTTWRITEBYTEVALID,
    pcie_rq_seq_num,
    PIPERX0EQLPTXPRESET,
    PIPERX1EQLPTXPRESET,
    PIPERX2EQLPTXPRESET,
    PIPERX3EQLPTXPRESET,
    PIPERX4EQLPTXPRESET,
    PIPERX5EQLPTXPRESET,
    PIPERX6EQLPTXPRESET,
    PIPERX7EQLPTXPRESET,
    PIPETX0EQPRESET,
    PIPETX1EQPRESET,
    PIPETX2EQPRESET,
    PIPETX3EQPRESET,
    PIPETX4EQPRESET,
    PIPETX5EQPRESET,
    PIPETX6EQPRESET,
    PIPETX7EQPRESET,
    s_axis_cc_tready,
    s_axis_rq_tready,
    cfg_msg_received_type,
    pcie_cq_np_req_count,
    pcie_rq_tag,
    PIPERX0EQLPLFFS,
    PIPERX1EQLPLFFS,
    PIPERX2EQLPLFFS,
    PIPERX3EQLPLFFS,
    PIPERX4EQLPLFFS,
    PIPERX5EQLPLFFS,
    PIPERX6EQLPLFFS,
    PIPERX7EQLPLFFS,
    PIPETX0EQDEEMPH,
    PIPETX1EQDEEMPH,
    PIPETX2EQDEEMPH,
    PIPETX3EQDEEMPH,
    PIPETX4EQDEEMPH,
    PIPETX5EQDEEMPH,
    PIPETX6EQDEEMPH,
    PIPETX7EQDEEMPH,
    m_axis_rc_tuser,
    cfg_ext_function_number,
    cfg_fc_cplh,
    cfg_fc_nph,
    cfg_fc_ph,
    cfg_interrupt_msi_vf_enable,
    cfg_interrupt_msix_vf_enable,
    cfg_interrupt_msix_vf_mask,
    cfg_msg_received_data,
    cfg_vf_flr_in_process,
    cfg_vf_tph_requester_enable,
    m_axis_cq_tkeep,
    m_axis_rc_tkeep,
    m_axis_cq_tuser,
    cfg_ext_register_number,
    user_reset_int_reg_1,
    cap_rel,
    cap_gnt,
    CORECLKMIREQUESTRAM,
    cfg_config_space_enable,
    cfg_err_cor_in,
    cfg_err_uncor_in,
    cfg_ext_read_data_valid,
    cfg_hot_reset_in,
    cfg_interrupt_msi_pending_status_data_enable,
    cfg_interrupt_msi_tph_present,
    cfg_interrupt_msix_int,
    cfg_link_training_enable,
    cfg_mgmt_read,
    cfg_mgmt_type1_cfg_reg_access,
    cfg_mgmt_write,
    cfg_msg_transmit,
    cfg_per_function_output_request,
    cfg_power_state_change_ack,
    cfg_req_pm_transition_l23_ready,
    CFGTPHSTTREADDATAVALID,
    conf_req_valid,
    drp_clk,
    drp_en,
    drp_we,
    MCAPCLK,
    sys_reset,
    pcie_perstn1_in,
    MGMTSTICKYRESETN,
    pcie_cq_np_req,
    CLK,
    RESETN,
    PIPERX0DATAVALID,
    PIPERX0ELECIDLE,
    PIPERX0EQDONE,
    PIPERX0EQLPADAPTDONE,
    PIPERX0EQLPLFFSSEL,
    PIPERX0PHYSTATUS,
    PIPERX0STARTBLOCK,
    PIPERX0VALID,
    PIPERX1DATAVALID,
    PIPERX1ELECIDLE,
    PIPERX1EQDONE,
    PIPERX1EQLPADAPTDONE,
    PIPERX1EQLPLFFSSEL,
    PIPERX1PHYSTATUS,
    PIPERX1STARTBLOCK,
    PIPERX1VALID,
    PIPERX2DATAVALID,
    PIPERX2ELECIDLE,
    PIPERX2EQDONE,
    PIPERX2EQLPADAPTDONE,
    PIPERX2EQLPLFFSSEL,
    PIPERX2PHYSTATUS,
    PIPERX2STARTBLOCK,
    PIPERX2VALID,
    PIPERX3DATAVALID,
    PIPERX3ELECIDLE,
    PIPERX3EQDONE,
    PIPERX3EQLPADAPTDONE,
    PIPERX3EQLPLFFSSEL,
    PIPERX3PHYSTATUS,
    PIPERX3STARTBLOCK,
    PIPERX3VALID,
    PIPERX4DATAVALID,
    PIPERX4ELECIDLE,
    PIPERX4EQDONE,
    PIPERX4EQLPADAPTDONE,
    PIPERX4EQLPLFFSSEL,
    PIPERX4PHYSTATUS,
    PIPERX4STARTBLOCK,
    PIPERX4VALID,
    PIPERX5DATAVALID,
    PIPERX5ELECIDLE,
    PIPERX5EQDONE,
    PIPERX5EQLPADAPTDONE,
    PIPERX5EQLPLFFSSEL,
    PIPERX5PHYSTATUS,
    PIPERX5STARTBLOCK,
    PIPERX5VALID,
    PIPERX6DATAVALID,
    PIPERX6ELECIDLE,
    PIPERX6EQDONE,
    PIPERX6EQLPADAPTDONE,
    PIPERX6EQLPLFFSSEL,
    PIPERX6PHYSTATUS,
    PIPERX6STARTBLOCK,
    PIPERX6VALID,
    PIPERX7DATAVALID,
    PIPERX7ELECIDLE,
    PIPERX7EQDONE,
    PIPERX7EQLPADAPTDONE,
    PIPERX7EQLPLFFSSEL,
    PIPERX7PHYSTATUS,
    PIPERX7STARTBLOCK,
    PIPERX7VALID,
    PIPETX0EQDONE,
    PIPETX1EQDONE,
    PIPETX2EQDONE,
    PIPETX3EQDONE,
    PIPETX4EQDONE,
    PIPETX5EQDONE,
    PIPETX6EQDONE,
    PIPETX7EQDONE,
    pl_eq_reset_eieos_count,
    pl_gen2_upstream_prefer_deemph,
    s_axis_cc_tlast,
    s_axis_cc_tvalid,
    s_axis_rq_tlast,
    s_axis_rq_tvalid,
    idle_reg,
    cfg_subsys_vend_id,
    drp_di,
    PIPERX7EQLPNEWTXCOEFFORPRESET,
    Q,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ,
    cfg_mgmt_addr,
    cfg_interrupt_msi_tph_type,
    conf_req_type,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1] ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_3 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_4 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_5 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_6 ,
    \pipe_stages_1.pipe_rx_syncheader_q_reg[1]_6 ,
    m_axis_cq_tready,
    m_axis_rc_tready,
    s_axis_cc_tdata,
    s_axis_rq_tdata,
    cfg_ds_function_number,
    cfg_fc_sel,
    cfg_interrupt_msi_attr,
    cfg_msg_transmit_type,
    cfg_per_func_status_control,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_2 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_3 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_4 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_5 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_6 ,
    cfg_ext_read_data,
    cfg_interrupt_msi_int,
    cfg_interrupt_msi_pending_status,
    cfg_interrupt_msix_data,
    cfg_mgmt_write_data,
    cfg_msg_transmit_data,
    CFGTPHSTTREADDATA,
    conf_req_data,
    \pipe_stages_1.pipe_rx_data_q_reg[31] ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_1 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_3 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_4 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_5 ,
    \pipe_stages_1.pipe_rx_data_q_reg[31]_6 ,
    s_axis_cc_tuser,
    cfg_flr_done,
    cfg_interrupt_int,
    cfg_interrupt_msi_function_number,
    cfg_interrupt_msi_pending_status_function_num,
    cfg_interrupt_msi_select,
    cfg_interrupt_pending,
    cfg_mgmt_byte_enable,
    cfg_per_function_number,
    conf_req_reg_num,
    cfg_ds_device_number,
    s_axis_rq_tuser,
    \pipe_stages_1.pipe_tx_eqfs_q_reg[5] ,
    \pipe_stages_1.pipe_tx_eqlf_q_reg[3] ,
    cfg_dsn,
    cfg_interrupt_msix_address,
    cfg_ds_bus_number,
    cfg_ds_port_number,
    cfg_vf_flr_done,
    s_axis_cc_tkeep,
    s_axis_rq_tkeep,
    cfg_interrupt_msi_tph_st_tag,
    drp_addr);
  output rxcdrhold_req_reg;
  output [5:0]cfg_ltssm_state;
  output user_reset_int_reg;
  output [1:0]cfg_phy_link_status;
  output cfg_phy_link_down;
  output reg_user_lnk_up_reg;
  output PCIEPERST0B;
  output user_reset_int_reg_0;
  output cfg_hot_reset_out;
  output cfg_err_cor_out;
  output cfg_err_fatal_out;
  output cfg_err_nonfatal_out;
  output cfg_ext_read_received;
  output cfg_ext_write_received;
  output cfg_interrupt_msi_fail;
  output cfg_interrupt_msi_mask_update;
  output cfg_interrupt_msi_sent;
  output cfg_interrupt_msix_fail;
  output cfg_interrupt_msix_sent;
  output cfg_interrupt_sent;
  output cfg_local_error;
  output cfg_ltr_enable;
  output cfg_mgmt_read_write_done;
  output cfg_msg_received;
  output cfg_msg_transmit_done;
  output cfg_per_function_update_done;
  output cfg_pl_status_change;
  output cfg_power_state_change_interrupt;
  output CFGTPHSTTREADENABLE;
  output CFGTPHSTTWRITEENABLE;
  output mcap_design_switch;
  output cap_req;
  output conf_req_ready;
  output conf_resp_valid;
  output drp_rdy;
  output m_axis_cq_tlast;
  output m_axis_cq_tvalid;
  output m_axis_rc_tlast;
  output m_axis_rc_tvalid;
  output pcie_perstn1_out;
  output pcie_rq_seq_num_vld;
  output pcie_rq_tag_vld;
  output PIPERX0POLARITY;
  output PIPERX1POLARITY;
  output PIPERX2POLARITY;
  output PIPERX3POLARITY;
  output PIPERX4POLARITY;
  output PIPERX5POLARITY;
  output PIPERX6POLARITY;
  output PIPERX7POLARITY;
  output PIPETX0COMPLIANCE;
  output PIPETX0DATAVALID;
  output PIPETX0DEEMPH;
  output PIPETX0ELECIDLE;
  output PIPETX0RCVRDET;
  output PIPETX0STARTBLOCK;
  output PIPETX0SWING;
  output PIPETX1COMPLIANCE;
  output PIPETX1DATAVALID;
  output PIPETX1ELECIDLE;
  output PIPETX1STARTBLOCK;
  output PIPETX2COMPLIANCE;
  output PIPETX2DATAVALID;
  output PIPETX2ELECIDLE;
  output PIPETX2STARTBLOCK;
  output PIPETX3COMPLIANCE;
  output PIPETX3DATAVALID;
  output PIPETX3ELECIDLE;
  output PIPETX3STARTBLOCK;
  output PIPETX4COMPLIANCE;
  output PIPETX4DATAVALID;
  output PIPETX4ELECIDLE;
  output PIPETX4STARTBLOCK;
  output PIPETX5COMPLIANCE;
  output PIPETX5DATAVALID;
  output PIPETX5ELECIDLE;
  output PIPETX5STARTBLOCK;
  output PIPETX6COMPLIANCE;
  output PIPETX6DATAVALID;
  output PIPETX6ELECIDLE;
  output PIPETX6STARTBLOCK;
  output PIPETX7COMPLIANCE;
  output PIPETX7DATAVALID;
  output PIPETX7ELECIDLE;
  output PIPETX7STARTBLOCK;
  output pl_eq_in_progress;
  output [11:0]cfg_fc_cpld;
  output [11:0]cfg_fc_npd;
  output [11:0]cfg_fc_pd;
  output [11:0]cfg_function_power_state;
  output [11:0]cfg_interrupt_msi_mmenable;
  output [11:0]cfg_tph_st_mode;
  output [15:0]cfg_function_status;
  output [15:0]cfg_per_func_status_data;
  output [15:0]cfg_vf_status;
  output [15:0]drp_do;
  output [1:0]cfg_link_power_state;
  output [1:0]cfg_obff_enable;
  output [1:0]pcie_rq_tag_av;
  output [1:0]pcie_tfc_npd_av;
  output [1:0]pcie_tfc_nph_av;
  output [1:0]PIPERX0EQCONTROL;
  output [1:0]PIPERX1EQCONTROL;
  output [1:0]PIPERX2EQCONTROL;
  output [1:0]PIPERX3EQCONTROL;
  output [1:0]PIPERX4EQCONTROL;
  output [1:0]PIPERX5EQCONTROL;
  output [1:0]PIPERX6EQCONTROL;
  output [1:0]PIPERX7EQCONTROL;
  output [1:0]PIPETX0CHARISK;
  output [1:0]PIPETX0EQCONTROL;
  output [1:0]PIPETX0POWERDOWN;
  output [1:0]PIPETX0RATE;
  output [1:0]PIPETX0SYNCHEADER;
  output [1:0]PIPETX1CHARISK;
  output [1:0]PIPETX1EQCONTROL;
  output [1:0]PIPETX1SYNCHEADER;
  output [1:0]PIPETX2CHARISK;
  output [1:0]PIPETX2EQCONTROL;
  output [1:0]PIPETX2SYNCHEADER;
  output [1:0]PIPETX3CHARISK;
  output [1:0]PIPETX3EQCONTROL;
  output [1:0]PIPETX3SYNCHEADER;
  output [1:0]PIPETX4CHARISK;
  output [1:0]PIPETX4EQCONTROL;
  output [1:0]PIPETX4SYNCHEADER;
  output [1:0]PIPETX5CHARISK;
  output [1:0]PIPETX5EQCONTROL;
  output [1:0]PIPETX5SYNCHEADER;
  output [1:0]PIPETX6CHARISK;
  output [1:0]PIPETX6EQCONTROL;
  output [1:0]PIPETX6SYNCHEADER;
  output [1:0]PIPETX7CHARISK;
  output [1:0]PIPETX7EQCONTROL;
  output [1:0]PIPETX7SYNCHEADER;
  output [1:0]pl_eq_phase;
  output [23:0]cfg_vf_power_state;
  output [23:0]cfg_vf_tph_st_mode;
  output [127:0]m_axis_cq_tdata;
  output [127:0]m_axis_rc_tdata;
  output [2:0]cfg_current_speed;
  output [2:0]cfg_max_payload;
  output [2:0]cfg_max_read_req;
  output [2:0]PIPERX0EQPRESET;
  output [2:0]PIPERX1EQPRESET;
  output [2:0]PIPERX2EQPRESET;
  output [2:0]PIPERX3EQPRESET;
  output [2:0]PIPERX4EQPRESET;
  output [2:0]PIPERX5EQPRESET;
  output [2:0]PIPERX6EQPRESET;
  output [2:0]PIPERX7EQPRESET;
  output [2:0]PIPETX0MARGIN;
  output [31:0]cfg_ext_write_data;
  output [31:0]cfg_interrupt_msi_data;
  output [31:0]cfg_mgmt_read_data;
  output [31:0]CFGTPHSTTWRITEDATA;
  output [31:0]conf_resp_rdata;
  output [31:0]PIPETX0DATA;
  output [31:0]PIPETX1DATA;
  output [31:0]PIPETX2DATA;
  output [31:0]PIPETX3DATA;
  output [31:0]PIPETX4DATA;
  output [31:0]PIPETX5DATA;
  output [31:0]PIPETX6DATA;
  output [31:0]PIPETX7DATA;
  output [3:0]cfg_dpa_substate_change;
  output [3:0]cfg_ext_write_byte_enable;
  output [3:0]cfg_flr_in_process;
  output [3:0]cfg_interrupt_msi_enable;
  output [3:0]cfg_interrupt_msix_enable;
  output [3:0]cfg_interrupt_msix_mask;
  output [3:0]cfg_negotiated_width;
  output [3:0]cfg_rcb_status;
  output [8:0]ADDRARDADDR;
  output [3:0]cfg_tph_requester_enable;
  output [3:0]CFGTPHSTTWRITEBYTEVALID;
  output [3:0]pcie_rq_seq_num;
  output [3:0]PIPERX0EQLPTXPRESET;
  output [3:0]PIPERX1EQLPTXPRESET;
  output [3:0]PIPERX2EQLPTXPRESET;
  output [3:0]PIPERX3EQLPTXPRESET;
  output [3:0]PIPERX4EQLPTXPRESET;
  output [3:0]PIPERX5EQLPTXPRESET;
  output [3:0]PIPERX6EQLPTXPRESET;
  output [3:0]PIPERX7EQLPTXPRESET;
  output [3:0]PIPETX0EQPRESET;
  output [3:0]PIPETX1EQPRESET;
  output [3:0]PIPETX2EQPRESET;
  output [3:0]PIPETX3EQPRESET;
  output [3:0]PIPETX4EQPRESET;
  output [3:0]PIPETX5EQPRESET;
  output [3:0]PIPETX6EQPRESET;
  output [3:0]PIPETX7EQPRESET;
  output [3:0]s_axis_cc_tready;
  output [3:0]s_axis_rq_tready;
  output [4:0]cfg_msg_received_type;
  output [5:0]pcie_cq_np_req_count;
  output [5:0]pcie_rq_tag;
  output [5:0]PIPERX0EQLPLFFS;
  output [5:0]PIPERX1EQLPLFFS;
  output [5:0]PIPERX2EQLPLFFS;
  output [5:0]PIPERX3EQLPLFFS;
  output [5:0]PIPERX4EQLPLFFS;
  output [5:0]PIPERX5EQLPLFFS;
  output [5:0]PIPERX6EQLPLFFS;
  output [5:0]PIPERX7EQLPLFFS;
  output [5:0]PIPETX0EQDEEMPH;
  output [5:0]PIPETX1EQDEEMPH;
  output [5:0]PIPETX2EQDEEMPH;
  output [5:0]PIPETX3EQDEEMPH;
  output [5:0]PIPETX4EQDEEMPH;
  output [5:0]PIPETX5EQDEEMPH;
  output [5:0]PIPETX6EQDEEMPH;
  output [5:0]PIPETX7EQDEEMPH;
  output [74:0]m_axis_rc_tuser;
  output [7:0]cfg_ext_function_number;
  output [7:0]cfg_fc_cplh;
  output [7:0]cfg_fc_nph;
  output [7:0]cfg_fc_ph;
  output [7:0]cfg_interrupt_msi_vf_enable;
  output [7:0]cfg_interrupt_msix_vf_enable;
  output [7:0]cfg_interrupt_msix_vf_mask;
  output [7:0]cfg_msg_received_data;
  output [7:0]cfg_vf_flr_in_process;
  output [7:0]cfg_vf_tph_requester_enable;
  output [3:0]m_axis_cq_tkeep;
  output [3:0]m_axis_rc_tkeep;
  output [84:0]m_axis_cq_tuser;
  output [9:0]cfg_ext_register_number;
  input user_reset_int_reg_1;
  input cap_rel;
  input cap_gnt;
  input CORECLKMIREQUESTRAM;
  input cfg_config_space_enable;
  input cfg_err_cor_in;
  input cfg_err_uncor_in;
  input cfg_ext_read_data_valid;
  input cfg_hot_reset_in;
  input cfg_interrupt_msi_pending_status_data_enable;
  input cfg_interrupt_msi_tph_present;
  input cfg_interrupt_msix_int;
  input cfg_link_training_enable;
  input cfg_mgmt_read;
  input cfg_mgmt_type1_cfg_reg_access;
  input cfg_mgmt_write;
  input cfg_msg_transmit;
  input cfg_per_function_output_request;
  input cfg_power_state_change_ack;
  input cfg_req_pm_transition_l23_ready;
  input CFGTPHSTTREADDATAVALID;
  input conf_req_valid;
  input drp_clk;
  input drp_en;
  input drp_we;
  input MCAPCLK;
  input sys_reset;
  input pcie_perstn1_in;
  input MGMTSTICKYRESETN;
  input pcie_cq_np_req;
  input CLK;
  input RESETN;
  input PIPERX0DATAVALID;
  input PIPERX0ELECIDLE;
  input PIPERX0EQDONE;
  input PIPERX0EQLPADAPTDONE;
  input PIPERX0EQLPLFFSSEL;
  input PIPERX0PHYSTATUS;
  input PIPERX0STARTBLOCK;
  input PIPERX0VALID;
  input PIPERX1DATAVALID;
  input PIPERX1ELECIDLE;
  input PIPERX1EQDONE;
  input PIPERX1EQLPADAPTDONE;
  input PIPERX1EQLPLFFSSEL;
  input PIPERX1PHYSTATUS;
  input PIPERX1STARTBLOCK;
  input PIPERX1VALID;
  input PIPERX2DATAVALID;
  input PIPERX2ELECIDLE;
  input PIPERX2EQDONE;
  input PIPERX2EQLPADAPTDONE;
  input PIPERX2EQLPLFFSSEL;
  input PIPERX2PHYSTATUS;
  input PIPERX2STARTBLOCK;
  input PIPERX2VALID;
  input PIPERX3DATAVALID;
  input PIPERX3ELECIDLE;
  input PIPERX3EQDONE;
  input PIPERX3EQLPADAPTDONE;
  input PIPERX3EQLPLFFSSEL;
  input PIPERX3PHYSTATUS;
  input PIPERX3STARTBLOCK;
  input PIPERX3VALID;
  input PIPERX4DATAVALID;
  input PIPERX4ELECIDLE;
  input PIPERX4EQDONE;
  input PIPERX4EQLPADAPTDONE;
  input PIPERX4EQLPLFFSSEL;
  input PIPERX4PHYSTATUS;
  input PIPERX4STARTBLOCK;
  input PIPERX4VALID;
  input PIPERX5DATAVALID;
  input PIPERX5ELECIDLE;
  input PIPERX5EQDONE;
  input PIPERX5EQLPADAPTDONE;
  input PIPERX5EQLPLFFSSEL;
  input PIPERX5PHYSTATUS;
  input PIPERX5STARTBLOCK;
  input PIPERX5VALID;
  input PIPERX6DATAVALID;
  input PIPERX6ELECIDLE;
  input PIPERX6EQDONE;
  input PIPERX6EQLPADAPTDONE;
  input PIPERX6EQLPLFFSSEL;
  input PIPERX6PHYSTATUS;
  input PIPERX6STARTBLOCK;
  input PIPERX6VALID;
  input PIPERX7DATAVALID;
  input PIPERX7ELECIDLE;
  input PIPERX7EQDONE;
  input PIPERX7EQLPADAPTDONE;
  input PIPERX7EQLPLFFSSEL;
  input PIPERX7PHYSTATUS;
  input PIPERX7STARTBLOCK;
  input PIPERX7VALID;
  input PIPETX0EQDONE;
  input PIPETX1EQDONE;
  input PIPETX2EQDONE;
  input PIPETX3EQDONE;
  input PIPETX4EQDONE;
  input PIPETX5EQDONE;
  input PIPETX6EQDONE;
  input PIPETX7EQDONE;
  input pl_eq_reset_eieos_count;
  input pl_gen2_upstream_prefer_deemph;
  input s_axis_cc_tlast;
  input s_axis_cc_tvalid;
  input s_axis_rq_tlast;
  input s_axis_rq_tvalid;
  input idle_reg;
  input [15:0]cfg_subsys_vend_id;
  input [15:0]drp_di;
  input [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  input [15:0]Q;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ;
  input [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ;
  input [18:0]cfg_mgmt_addr;
  input [1:0]cfg_interrupt_msi_tph_type;
  input [1:0]conf_req_type;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1] ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_1 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_2 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_3 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_4 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_5 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_6 ;
  input [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_6 ;
  input m_axis_cq_tready;
  input m_axis_rc_tready;
  input [127:0]s_axis_cc_tdata;
  input [127:0]s_axis_rq_tdata;
  input [2:0]cfg_ds_function_number;
  input [2:0]cfg_fc_sel;
  input [2:0]cfg_interrupt_msi_attr;
  input [2:0]cfg_msg_transmit_type;
  input [2:0]cfg_per_func_status_control;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ;
  input [31:0]cfg_ext_read_data;
  input [31:0]cfg_interrupt_msi_int;
  input [31:0]cfg_interrupt_msi_pending_status;
  input [31:0]cfg_interrupt_msix_data;
  input [31:0]cfg_mgmt_write_data;
  input [31:0]cfg_msg_transmit_data;
  input [31:0]CFGTPHSTTREADDATA;
  input [31:0]conf_req_data;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31] ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_0 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_1 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_2 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_3 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_4 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_5 ;
  input [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_6 ;
  input [32:0]s_axis_cc_tuser;
  input [3:0]cfg_flr_done;
  input [3:0]cfg_interrupt_int;
  input [3:0]cfg_interrupt_msi_function_number;
  input [3:0]cfg_interrupt_msi_pending_status_function_num;
  input [3:0]cfg_interrupt_msi_select;
  input [3:0]cfg_interrupt_pending;
  input [3:0]cfg_mgmt_byte_enable;
  input [3:0]cfg_per_function_number;
  input [3:0]conf_req_reg_num;
  input [4:0]cfg_ds_device_number;
  input [59:0]s_axis_rq_tuser;
  input [1:0]\pipe_stages_1.pipe_tx_eqfs_q_reg[5] ;
  input [1:0]\pipe_stages_1.pipe_tx_eqlf_q_reg[3] ;
  input [63:0]cfg_dsn;
  input [63:0]cfg_interrupt_msix_address;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_ds_port_number;
  input [7:0]cfg_vf_flr_done;
  input [3:0]s_axis_cc_tkeep;
  input [3:0]s_axis_rq_tkeep;
  input [8:0]cfg_interrupt_msi_tph_st_tag;
  input [9:0]drp_addr;

  wire [8:0]ADDRARDADDR;
  wire [31:0]CFGTPHSTTREADDATA;
  wire CFGTPHSTTREADDATAVALID;
  wire CFGTPHSTTREADENABLE;
  wire [3:0]CFGTPHSTTWRITEBYTEVALID;
  wire [31:0]CFGTPHSTTWRITEDATA;
  wire CFGTPHSTTWRITEENABLE;
  wire CLK;
  wire CORECLKMIREQUESTRAM;
  wire MCAPCLK;
  wire MGMTSTICKYRESETN;
  wire [9:0]MICOMPLETIONRAMREADADDRESSAL;
  wire [9:0]MICOMPLETIONRAMREADADDRESSAU;
  wire [9:0]MICOMPLETIONRAMREADADDRESSBL;
  wire [9:0]MICOMPLETIONRAMREADADDRESSBU;
  wire [143:0]MICOMPLETIONRAMREADDATA;
  wire [3:0]MICOMPLETIONRAMREADENABLEL;
  wire [3:0]MICOMPLETIONRAMREADENABLEU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAL;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSAU;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSBL;
  wire [9:0]MICOMPLETIONRAMWRITEADDRESSBU;
  wire [71:0]MICOMPLETIONRAMWRITEDATAL;
  wire [71:0]MICOMPLETIONRAMWRITEDATAU;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEL;
  wire [3:0]MICOMPLETIONRAMWRITEENABLEU;
  wire [8:0]MIREPLAYRAMADDRESS;
  wire [143:0]MIREPLAYRAMREADDATA;
  wire [1:0]MIREPLAYRAMREADENABLE;
  wire [143:0]MIREPLAYRAMWRITEDATA;
  wire [1:0]MIREPLAYRAMWRITEENABLE;
  wire [8:0]MIREQUESTRAMREADADDRESSA;
  wire [8:0]MIREQUESTRAMREADADDRESSB;
  wire [143:0]MIREQUESTRAMREADDATA;
  wire [3:0]MIREQUESTRAMREADENABLE;
  wire [8:0]MIREQUESTRAMWRITEADDRESSA;
  wire [8:0]MIREQUESTRAMWRITEADDRESSB;
  wire [143:0]MIREQUESTRAMWRITEDATA;
  wire [3:0]MIREQUESTRAMWRITEENABLE;
  wire PCIEPERST0B;
  wire PCIE_3_1_inst_i_1_n_0;
  wire PCIE_3_1_inst_n_1000;
  wire PCIE_3_1_inst_n_1001;
  wire PCIE_3_1_inst_n_1002;
  wire PCIE_3_1_inst_n_1003;
  wire PCIE_3_1_inst_n_1004;
  wire PCIE_3_1_inst_n_1005;
  wire PCIE_3_1_inst_n_1006;
  wire PCIE_3_1_inst_n_1007;
  wire PCIE_3_1_inst_n_1008;
  wire PCIE_3_1_inst_n_1009;
  wire PCIE_3_1_inst_n_101;
  wire PCIE_3_1_inst_n_1010;
  wire PCIE_3_1_inst_n_1011;
  wire PCIE_3_1_inst_n_1012;
  wire PCIE_3_1_inst_n_1013;
  wire PCIE_3_1_inst_n_1014;
  wire PCIE_3_1_inst_n_1015;
  wire PCIE_3_1_inst_n_1016;
  wire PCIE_3_1_inst_n_1017;
  wire PCIE_3_1_inst_n_1018;
  wire PCIE_3_1_inst_n_1019;
  wire PCIE_3_1_inst_n_102;
  wire PCIE_3_1_inst_n_1020;
  wire PCIE_3_1_inst_n_1021;
  wire PCIE_3_1_inst_n_1022;
  wire PCIE_3_1_inst_n_1023;
  wire PCIE_3_1_inst_n_1024;
  wire PCIE_3_1_inst_n_1025;
  wire PCIE_3_1_inst_n_1026;
  wire PCIE_3_1_inst_n_1027;
  wire PCIE_3_1_inst_n_1028;
  wire PCIE_3_1_inst_n_1029;
  wire PCIE_3_1_inst_n_1030;
  wire PCIE_3_1_inst_n_1031;
  wire PCIE_3_1_inst_n_1032;
  wire PCIE_3_1_inst_n_1033;
  wire PCIE_3_1_inst_n_1034;
  wire PCIE_3_1_inst_n_1035;
  wire PCIE_3_1_inst_n_1036;
  wire PCIE_3_1_inst_n_1037;
  wire PCIE_3_1_inst_n_1038;
  wire PCIE_3_1_inst_n_1039;
  wire PCIE_3_1_inst_n_104;
  wire PCIE_3_1_inst_n_1040;
  wire PCIE_3_1_inst_n_1041;
  wire PCIE_3_1_inst_n_1042;
  wire PCIE_3_1_inst_n_1043;
  wire PCIE_3_1_inst_n_1044;
  wire PCIE_3_1_inst_n_1045;
  wire PCIE_3_1_inst_n_1046;
  wire PCIE_3_1_inst_n_1047;
  wire PCIE_3_1_inst_n_1048;
  wire PCIE_3_1_inst_n_1049;
  wire PCIE_3_1_inst_n_1050;
  wire PCIE_3_1_inst_n_1051;
  wire PCIE_3_1_inst_n_1052;
  wire PCIE_3_1_inst_n_1053;
  wire PCIE_3_1_inst_n_1054;
  wire PCIE_3_1_inst_n_1055;
  wire PCIE_3_1_inst_n_1056;
  wire PCIE_3_1_inst_n_1057;
  wire PCIE_3_1_inst_n_1058;
  wire PCIE_3_1_inst_n_1059;
  wire PCIE_3_1_inst_n_1060;
  wire PCIE_3_1_inst_n_1061;
  wire PCIE_3_1_inst_n_1062;
  wire PCIE_3_1_inst_n_1063;
  wire PCIE_3_1_inst_n_1064;
  wire PCIE_3_1_inst_n_1065;
  wire PCIE_3_1_inst_n_1066;
  wire PCIE_3_1_inst_n_1067;
  wire PCIE_3_1_inst_n_1068;
  wire PCIE_3_1_inst_n_1069;
  wire PCIE_3_1_inst_n_107;
  wire PCIE_3_1_inst_n_1070;
  wire PCIE_3_1_inst_n_1071;
  wire PCIE_3_1_inst_n_1072;
  wire PCIE_3_1_inst_n_1073;
  wire PCIE_3_1_inst_n_1074;
  wire PCIE_3_1_inst_n_1075;
  wire PCIE_3_1_inst_n_1076;
  wire PCIE_3_1_inst_n_1077;
  wire PCIE_3_1_inst_n_1078;
  wire PCIE_3_1_inst_n_1079;
  wire PCIE_3_1_inst_n_1080;
  wire PCIE_3_1_inst_n_1081;
  wire PCIE_3_1_inst_n_1082;
  wire PCIE_3_1_inst_n_1083;
  wire PCIE_3_1_inst_n_1084;
  wire PCIE_3_1_inst_n_1085;
  wire PCIE_3_1_inst_n_1086;
  wire PCIE_3_1_inst_n_1087;
  wire PCIE_3_1_inst_n_1088;
  wire PCIE_3_1_inst_n_1089;
  wire PCIE_3_1_inst_n_109;
  wire PCIE_3_1_inst_n_1090;
  wire PCIE_3_1_inst_n_1091;
  wire PCIE_3_1_inst_n_1092;
  wire PCIE_3_1_inst_n_1093;
  wire PCIE_3_1_inst_n_1094;
  wire PCIE_3_1_inst_n_1095;
  wire PCIE_3_1_inst_n_1096;
  wire PCIE_3_1_inst_n_1097;
  wire PCIE_3_1_inst_n_1098;
  wire PCIE_3_1_inst_n_1099;
  wire PCIE_3_1_inst_n_110;
  wire PCIE_3_1_inst_n_1100;
  wire PCIE_3_1_inst_n_1101;
  wire PCIE_3_1_inst_n_1102;
  wire PCIE_3_1_inst_n_1103;
  wire PCIE_3_1_inst_n_1104;
  wire PCIE_3_1_inst_n_1105;
  wire PCIE_3_1_inst_n_1106;
  wire PCIE_3_1_inst_n_1107;
  wire PCIE_3_1_inst_n_1108;
  wire PCIE_3_1_inst_n_1109;
  wire PCIE_3_1_inst_n_1110;
  wire PCIE_3_1_inst_n_1111;
  wire PCIE_3_1_inst_n_1112;
  wire PCIE_3_1_inst_n_1113;
  wire PCIE_3_1_inst_n_1114;
  wire PCIE_3_1_inst_n_1115;
  wire PCIE_3_1_inst_n_1116;
  wire PCIE_3_1_inst_n_1117;
  wire PCIE_3_1_inst_n_1118;
  wire PCIE_3_1_inst_n_1119;
  wire PCIE_3_1_inst_n_112;
  wire PCIE_3_1_inst_n_1120;
  wire PCIE_3_1_inst_n_1121;
  wire PCIE_3_1_inst_n_1122;
  wire PCIE_3_1_inst_n_1123;
  wire PCIE_3_1_inst_n_1124;
  wire PCIE_3_1_inst_n_1125;
  wire PCIE_3_1_inst_n_115;
  wire PCIE_3_1_inst_n_117;
  wire PCIE_3_1_inst_n_118;
  wire PCIE_3_1_inst_n_120;
  wire PCIE_3_1_inst_n_1254;
  wire PCIE_3_1_inst_n_1255;
  wire PCIE_3_1_inst_n_1256;
  wire PCIE_3_1_inst_n_1257;
  wire PCIE_3_1_inst_n_1258;
  wire PCIE_3_1_inst_n_1259;
  wire PCIE_3_1_inst_n_1260;
  wire PCIE_3_1_inst_n_1261;
  wire PCIE_3_1_inst_n_1262;
  wire PCIE_3_1_inst_n_1263;
  wire PCIE_3_1_inst_n_1264;
  wire PCIE_3_1_inst_n_1265;
  wire PCIE_3_1_inst_n_1266;
  wire PCIE_3_1_inst_n_1267;
  wire PCIE_3_1_inst_n_1268;
  wire PCIE_3_1_inst_n_1269;
  wire PCIE_3_1_inst_n_1270;
  wire PCIE_3_1_inst_n_1271;
  wire PCIE_3_1_inst_n_1272;
  wire PCIE_3_1_inst_n_1273;
  wire PCIE_3_1_inst_n_1274;
  wire PCIE_3_1_inst_n_1275;
  wire PCIE_3_1_inst_n_1276;
  wire PCIE_3_1_inst_n_1277;
  wire PCIE_3_1_inst_n_1278;
  wire PCIE_3_1_inst_n_1279;
  wire PCIE_3_1_inst_n_1280;
  wire PCIE_3_1_inst_n_1281;
  wire PCIE_3_1_inst_n_1282;
  wire PCIE_3_1_inst_n_1283;
  wire PCIE_3_1_inst_n_1284;
  wire PCIE_3_1_inst_n_1285;
  wire PCIE_3_1_inst_n_1286;
  wire PCIE_3_1_inst_n_1287;
  wire PCIE_3_1_inst_n_1288;
  wire PCIE_3_1_inst_n_1289;
  wire PCIE_3_1_inst_n_1290;
  wire PCIE_3_1_inst_n_1291;
  wire PCIE_3_1_inst_n_1292;
  wire PCIE_3_1_inst_n_1293;
  wire PCIE_3_1_inst_n_1294;
  wire PCIE_3_1_inst_n_1295;
  wire PCIE_3_1_inst_n_1296;
  wire PCIE_3_1_inst_n_1297;
  wire PCIE_3_1_inst_n_1298;
  wire PCIE_3_1_inst_n_1299;
  wire PCIE_3_1_inst_n_1300;
  wire PCIE_3_1_inst_n_1301;
  wire PCIE_3_1_inst_n_1302;
  wire PCIE_3_1_inst_n_1303;
  wire PCIE_3_1_inst_n_1304;
  wire PCIE_3_1_inst_n_1305;
  wire PCIE_3_1_inst_n_1306;
  wire PCIE_3_1_inst_n_1307;
  wire PCIE_3_1_inst_n_1308;
  wire PCIE_3_1_inst_n_1309;
  wire PCIE_3_1_inst_n_1310;
  wire PCIE_3_1_inst_n_1311;
  wire PCIE_3_1_inst_n_1312;
  wire PCIE_3_1_inst_n_1313;
  wire PCIE_3_1_inst_n_1314;
  wire PCIE_3_1_inst_n_1315;
  wire PCIE_3_1_inst_n_1316;
  wire PCIE_3_1_inst_n_1317;
  wire PCIE_3_1_inst_n_1318;
  wire PCIE_3_1_inst_n_1319;
  wire PCIE_3_1_inst_n_1320;
  wire PCIE_3_1_inst_n_1321;
  wire PCIE_3_1_inst_n_1322;
  wire PCIE_3_1_inst_n_1323;
  wire PCIE_3_1_inst_n_1324;
  wire PCIE_3_1_inst_n_1325;
  wire PCIE_3_1_inst_n_1326;
  wire PCIE_3_1_inst_n_1327;
  wire PCIE_3_1_inst_n_1328;
  wire PCIE_3_1_inst_n_1329;
  wire PCIE_3_1_inst_n_1330;
  wire PCIE_3_1_inst_n_1331;
  wire PCIE_3_1_inst_n_1332;
  wire PCIE_3_1_inst_n_1333;
  wire PCIE_3_1_inst_n_1334;
  wire PCIE_3_1_inst_n_1335;
  wire PCIE_3_1_inst_n_1336;
  wire PCIE_3_1_inst_n_1337;
  wire PCIE_3_1_inst_n_1338;
  wire PCIE_3_1_inst_n_1339;
  wire PCIE_3_1_inst_n_1340;
  wire PCIE_3_1_inst_n_1341;
  wire PCIE_3_1_inst_n_1342;
  wire PCIE_3_1_inst_n_1343;
  wire PCIE_3_1_inst_n_1344;
  wire PCIE_3_1_inst_n_1345;
  wire PCIE_3_1_inst_n_1346;
  wire PCIE_3_1_inst_n_1347;
  wire PCIE_3_1_inst_n_1348;
  wire PCIE_3_1_inst_n_1349;
  wire PCIE_3_1_inst_n_1350;
  wire PCIE_3_1_inst_n_1351;
  wire PCIE_3_1_inst_n_1352;
  wire PCIE_3_1_inst_n_1353;
  wire PCIE_3_1_inst_n_1354;
  wire PCIE_3_1_inst_n_1355;
  wire PCIE_3_1_inst_n_1356;
  wire PCIE_3_1_inst_n_1357;
  wire PCIE_3_1_inst_n_1358;
  wire PCIE_3_1_inst_n_1359;
  wire PCIE_3_1_inst_n_1360;
  wire PCIE_3_1_inst_n_1361;
  wire PCIE_3_1_inst_n_1362;
  wire PCIE_3_1_inst_n_1363;
  wire PCIE_3_1_inst_n_1364;
  wire PCIE_3_1_inst_n_1365;
  wire PCIE_3_1_inst_n_1366;
  wire PCIE_3_1_inst_n_1367;
  wire PCIE_3_1_inst_n_1368;
  wire PCIE_3_1_inst_n_1369;
  wire PCIE_3_1_inst_n_1370;
  wire PCIE_3_1_inst_n_1371;
  wire PCIE_3_1_inst_n_1372;
  wire PCIE_3_1_inst_n_1373;
  wire PCIE_3_1_inst_n_1374;
  wire PCIE_3_1_inst_n_1375;
  wire PCIE_3_1_inst_n_1376;
  wire PCIE_3_1_inst_n_1377;
  wire PCIE_3_1_inst_n_1378;
  wire PCIE_3_1_inst_n_1379;
  wire PCIE_3_1_inst_n_1380;
  wire PCIE_3_1_inst_n_1381;
  wire PCIE_3_1_inst_n_1546;
  wire PCIE_3_1_inst_n_1547;
  wire PCIE_3_1_inst_n_1548;
  wire PCIE_3_1_inst_n_1549;
  wire PCIE_3_1_inst_n_1550;
  wire PCIE_3_1_inst_n_1551;
  wire PCIE_3_1_inst_n_1552;
  wire PCIE_3_1_inst_n_1553;
  wire PCIE_3_1_inst_n_1554;
  wire PCIE_3_1_inst_n_1555;
  wire PCIE_3_1_inst_n_1556;
  wire PCIE_3_1_inst_n_1557;
  wire PCIE_3_1_inst_n_1558;
  wire PCIE_3_1_inst_n_1559;
  wire PCIE_3_1_inst_n_1560;
  wire PCIE_3_1_inst_n_1561;
  wire PCIE_3_1_inst_n_1562;
  wire PCIE_3_1_inst_n_1563;
  wire PCIE_3_1_inst_n_1564;
  wire PCIE_3_1_inst_n_1565;
  wire PCIE_3_1_inst_n_1566;
  wire PCIE_3_1_inst_n_1727;
  wire PCIE_3_1_inst_n_1728;
  wire PCIE_3_1_inst_n_1729;
  wire PCIE_3_1_inst_n_1730;
  wire PCIE_3_1_inst_n_1731;
  wire PCIE_3_1_inst_n_1732;
  wire PCIE_3_1_inst_n_1733;
  wire PCIE_3_1_inst_n_1734;
  wire PCIE_3_1_inst_n_1735;
  wire PCIE_3_1_inst_n_1736;
  wire PCIE_3_1_inst_n_1737;
  wire PCIE_3_1_inst_n_1738;
  wire PCIE_3_1_inst_n_1739;
  wire PCIE_3_1_inst_n_1740;
  wire PCIE_3_1_inst_n_1741;
  wire PCIE_3_1_inst_n_1742;
  wire PCIE_3_1_inst_n_1743;
  wire PCIE_3_1_inst_n_1744;
  wire PCIE_3_1_inst_n_1745;
  wire PCIE_3_1_inst_n_1746;
  wire PCIE_3_1_inst_n_1747;
  wire PCIE_3_1_inst_n_1748;
  wire PCIE_3_1_inst_n_1749;
  wire PCIE_3_1_inst_n_1750;
  wire PCIE_3_1_inst_n_1751;
  wire PCIE_3_1_inst_n_1752;
  wire PCIE_3_1_inst_n_1753;
  wire PCIE_3_1_inst_n_1754;
  wire PCIE_3_1_inst_n_1755;
  wire PCIE_3_1_inst_n_1756;
  wire PCIE_3_1_inst_n_1757;
  wire PCIE_3_1_inst_n_1758;
  wire PCIE_3_1_inst_n_2015;
  wire PCIE_3_1_inst_n_2016;
  wire PCIE_3_1_inst_n_2017;
  wire PCIE_3_1_inst_n_2018;
  wire PCIE_3_1_inst_n_2019;
  wire PCIE_3_1_inst_n_2020;
  wire PCIE_3_1_inst_n_2021;
  wire PCIE_3_1_inst_n_2022;
  wire PCIE_3_1_inst_n_2023;
  wire PCIE_3_1_inst_n_2024;
  wire PCIE_3_1_inst_n_2025;
  wire PCIE_3_1_inst_n_2026;
  wire PCIE_3_1_inst_n_2027;
  wire PCIE_3_1_inst_n_2028;
  wire PCIE_3_1_inst_n_2029;
  wire PCIE_3_1_inst_n_2030;
  wire PCIE_3_1_inst_n_2031;
  wire PCIE_3_1_inst_n_2032;
  wire PCIE_3_1_inst_n_2033;
  wire PCIE_3_1_inst_n_2034;
  wire PCIE_3_1_inst_n_2035;
  wire PCIE_3_1_inst_n_2036;
  wire PCIE_3_1_inst_n_2037;
  wire PCIE_3_1_inst_n_2038;
  wire PCIE_3_1_inst_n_2039;
  wire PCIE_3_1_inst_n_2040;
  wire PCIE_3_1_inst_n_2041;
  wire PCIE_3_1_inst_n_2042;
  wire PCIE_3_1_inst_n_2043;
  wire PCIE_3_1_inst_n_2044;
  wire PCIE_3_1_inst_n_2045;
  wire PCIE_3_1_inst_n_2046;
  wire PCIE_3_1_inst_n_2091;
  wire PCIE_3_1_inst_n_2092;
  wire PCIE_3_1_inst_n_2093;
  wire PCIE_3_1_inst_n_2094;
  wire PCIE_3_1_inst_n_2095;
  wire PCIE_3_1_inst_n_2096;
  wire PCIE_3_1_inst_n_2097;
  wire PCIE_3_1_inst_n_2098;
  wire PCIE_3_1_inst_n_24;
  wire PCIE_3_1_inst_n_2622;
  wire PCIE_3_1_inst_n_2623;
  wire PCIE_3_1_inst_n_2624;
  wire PCIE_3_1_inst_n_2625;
  wire PCIE_3_1_inst_n_2626;
  wire PCIE_3_1_inst_n_2627;
  wire PCIE_3_1_inst_n_2628;
  wire PCIE_3_1_inst_n_2629;
  wire PCIE_3_1_inst_n_2630;
  wire PCIE_3_1_inst_n_2631;
  wire PCIE_3_1_inst_n_2632;
  wire PCIE_3_1_inst_n_2633;
  wire PCIE_3_1_inst_n_2634;
  wire PCIE_3_1_inst_n_2635;
  wire PCIE_3_1_inst_n_2636;
  wire PCIE_3_1_inst_n_2637;
  wire PCIE_3_1_inst_n_2638;
  wire PCIE_3_1_inst_n_2639;
  wire PCIE_3_1_inst_n_2640;
  wire PCIE_3_1_inst_n_2641;
  wire PCIE_3_1_inst_n_2642;
  wire PCIE_3_1_inst_n_2643;
  wire PCIE_3_1_inst_n_2644;
  wire PCIE_3_1_inst_n_2645;
  wire PCIE_3_1_inst_n_2646;
  wire PCIE_3_1_inst_n_2647;
  wire PCIE_3_1_inst_n_2648;
  wire PCIE_3_1_inst_n_2649;
  wire PCIE_3_1_inst_n_2654;
  wire PCIE_3_1_inst_n_2655;
  wire PCIE_3_1_inst_n_2656;
  wire PCIE_3_1_inst_n_2657;
  wire PCIE_3_1_inst_n_28;
  wire PCIE_3_1_inst_n_29;
  wire PCIE_3_1_inst_n_30;
  wire PCIE_3_1_inst_n_31;
  wire PCIE_3_1_inst_n_32;
  wire PCIE_3_1_inst_n_33;
  wire PCIE_3_1_inst_n_34;
  wire PCIE_3_1_inst_n_35;
  wire PCIE_3_1_inst_n_36;
  wire PCIE_3_1_inst_n_37;
  wire PCIE_3_1_inst_n_39;
  wire PCIE_3_1_inst_n_40;
  wire PCIE_3_1_inst_n_530;
  wire PCIE_3_1_inst_n_531;
  wire PCIE_3_1_inst_n_532;
  wire PCIE_3_1_inst_n_533;
  wire PCIE_3_1_inst_n_534;
  wire PCIE_3_1_inst_n_535;
  wire PCIE_3_1_inst_n_536;
  wire PCIE_3_1_inst_n_537;
  wire PCIE_3_1_inst_n_538;
  wire PCIE_3_1_inst_n_539;
  wire PCIE_3_1_inst_n_540;
  wire PCIE_3_1_inst_n_541;
  wire PCIE_3_1_inst_n_542;
  wire PCIE_3_1_inst_n_543;
  wire PCIE_3_1_inst_n_544;
  wire PCIE_3_1_inst_n_545;
  wire PCIE_3_1_inst_n_562;
  wire PCIE_3_1_inst_n_563;
  wire PCIE_3_1_inst_n_564;
  wire PCIE_3_1_inst_n_565;
  wire PCIE_3_1_inst_n_566;
  wire PCIE_3_1_inst_n_567;
  wire PCIE_3_1_inst_n_568;
  wire PCIE_3_1_inst_n_569;
  wire PCIE_3_1_inst_n_570;
  wire PCIE_3_1_inst_n_571;
  wire PCIE_3_1_inst_n_572;
  wire PCIE_3_1_inst_n_573;
  wire PCIE_3_1_inst_n_574;
  wire PCIE_3_1_inst_n_575;
  wire PCIE_3_1_inst_n_576;
  wire PCIE_3_1_inst_n_577;
  wire PCIE_3_1_inst_n_578;
  wire PCIE_3_1_inst_n_579;
  wire PCIE_3_1_inst_n_628;
  wire PCIE_3_1_inst_n_629;
  wire PCIE_3_1_inst_n_638;
  wire PCIE_3_1_inst_n_639;
  wire PCIE_3_1_inst_n_648;
  wire PCIE_3_1_inst_n_649;
  wire PCIE_3_1_inst_n_658;
  wire PCIE_3_1_inst_n_659;
  wire PCIE_3_1_inst_n_668;
  wire PCIE_3_1_inst_n_669;
  wire PCIE_3_1_inst_n_67;
  wire PCIE_3_1_inst_n_678;
  wire PCIE_3_1_inst_n_679;
  wire PCIE_3_1_inst_n_688;
  wire PCIE_3_1_inst_n_689;
  wire PCIE_3_1_inst_n_69;
  wire PCIE_3_1_inst_n_70;
  wire PCIE_3_1_inst_n_72;
  wire PCIE_3_1_inst_n_742;
  wire PCIE_3_1_inst_n_743;
  wire PCIE_3_1_inst_n_744;
  wire PCIE_3_1_inst_n_745;
  wire PCIE_3_1_inst_n_746;
  wire PCIE_3_1_inst_n_747;
  wire PCIE_3_1_inst_n_748;
  wire PCIE_3_1_inst_n_749;
  wire PCIE_3_1_inst_n_75;
  wire PCIE_3_1_inst_n_750;
  wire PCIE_3_1_inst_n_751;
  wire PCIE_3_1_inst_n_752;
  wire PCIE_3_1_inst_n_753;
  wire PCIE_3_1_inst_n_754;
  wire PCIE_3_1_inst_n_755;
  wire PCIE_3_1_inst_n_756;
  wire PCIE_3_1_inst_n_757;
  wire PCIE_3_1_inst_n_758;
  wire PCIE_3_1_inst_n_759;
  wire PCIE_3_1_inst_n_760;
  wire PCIE_3_1_inst_n_761;
  wire PCIE_3_1_inst_n_762;
  wire PCIE_3_1_inst_n_763;
  wire PCIE_3_1_inst_n_764;
  wire PCIE_3_1_inst_n_765;
  wire PCIE_3_1_inst_n_766;
  wire PCIE_3_1_inst_n_767;
  wire PCIE_3_1_inst_n_768;
  wire PCIE_3_1_inst_n_769;
  wire PCIE_3_1_inst_n_77;
  wire PCIE_3_1_inst_n_770;
  wire PCIE_3_1_inst_n_771;
  wire PCIE_3_1_inst_n_772;
  wire PCIE_3_1_inst_n_773;
  wire PCIE_3_1_inst_n_774;
  wire PCIE_3_1_inst_n_775;
  wire PCIE_3_1_inst_n_776;
  wire PCIE_3_1_inst_n_777;
  wire PCIE_3_1_inst_n_778;
  wire PCIE_3_1_inst_n_779;
  wire PCIE_3_1_inst_n_78;
  wire PCIE_3_1_inst_n_780;
  wire PCIE_3_1_inst_n_781;
  wire PCIE_3_1_inst_n_782;
  wire PCIE_3_1_inst_n_783;
  wire PCIE_3_1_inst_n_784;
  wire PCIE_3_1_inst_n_785;
  wire PCIE_3_1_inst_n_786;
  wire PCIE_3_1_inst_n_787;
  wire PCIE_3_1_inst_n_788;
  wire PCIE_3_1_inst_n_789;
  wire PCIE_3_1_inst_n_790;
  wire PCIE_3_1_inst_n_791;
  wire PCIE_3_1_inst_n_792;
  wire PCIE_3_1_inst_n_793;
  wire PCIE_3_1_inst_n_794;
  wire PCIE_3_1_inst_n_795;
  wire PCIE_3_1_inst_n_796;
  wire PCIE_3_1_inst_n_797;
  wire PCIE_3_1_inst_n_798;
  wire PCIE_3_1_inst_n_799;
  wire PCIE_3_1_inst_n_80;
  wire PCIE_3_1_inst_n_800;
  wire PCIE_3_1_inst_n_801;
  wire PCIE_3_1_inst_n_802;
  wire PCIE_3_1_inst_n_803;
  wire PCIE_3_1_inst_n_804;
  wire PCIE_3_1_inst_n_805;
  wire PCIE_3_1_inst_n_806;
  wire PCIE_3_1_inst_n_807;
  wire PCIE_3_1_inst_n_808;
  wire PCIE_3_1_inst_n_809;
  wire PCIE_3_1_inst_n_810;
  wire PCIE_3_1_inst_n_811;
  wire PCIE_3_1_inst_n_812;
  wire PCIE_3_1_inst_n_813;
  wire PCIE_3_1_inst_n_814;
  wire PCIE_3_1_inst_n_815;
  wire PCIE_3_1_inst_n_816;
  wire PCIE_3_1_inst_n_817;
  wire PCIE_3_1_inst_n_818;
  wire PCIE_3_1_inst_n_819;
  wire PCIE_3_1_inst_n_820;
  wire PCIE_3_1_inst_n_821;
  wire PCIE_3_1_inst_n_822;
  wire PCIE_3_1_inst_n_823;
  wire PCIE_3_1_inst_n_824;
  wire PCIE_3_1_inst_n_825;
  wire PCIE_3_1_inst_n_826;
  wire PCIE_3_1_inst_n_827;
  wire PCIE_3_1_inst_n_828;
  wire PCIE_3_1_inst_n_829;
  wire PCIE_3_1_inst_n_83;
  wire PCIE_3_1_inst_n_830;
  wire PCIE_3_1_inst_n_831;
  wire PCIE_3_1_inst_n_832;
  wire PCIE_3_1_inst_n_833;
  wire PCIE_3_1_inst_n_834;
  wire PCIE_3_1_inst_n_835;
  wire PCIE_3_1_inst_n_836;
  wire PCIE_3_1_inst_n_837;
  wire PCIE_3_1_inst_n_838;
  wire PCIE_3_1_inst_n_839;
  wire PCIE_3_1_inst_n_840;
  wire PCIE_3_1_inst_n_841;
  wire PCIE_3_1_inst_n_842;
  wire PCIE_3_1_inst_n_843;
  wire PCIE_3_1_inst_n_844;
  wire PCIE_3_1_inst_n_845;
  wire PCIE_3_1_inst_n_846;
  wire PCIE_3_1_inst_n_847;
  wire PCIE_3_1_inst_n_848;
  wire PCIE_3_1_inst_n_849;
  wire PCIE_3_1_inst_n_85;
  wire PCIE_3_1_inst_n_850;
  wire PCIE_3_1_inst_n_851;
  wire PCIE_3_1_inst_n_852;
  wire PCIE_3_1_inst_n_853;
  wire PCIE_3_1_inst_n_854;
  wire PCIE_3_1_inst_n_855;
  wire PCIE_3_1_inst_n_856;
  wire PCIE_3_1_inst_n_857;
  wire PCIE_3_1_inst_n_858;
  wire PCIE_3_1_inst_n_859;
  wire PCIE_3_1_inst_n_86;
  wire PCIE_3_1_inst_n_860;
  wire PCIE_3_1_inst_n_861;
  wire PCIE_3_1_inst_n_862;
  wire PCIE_3_1_inst_n_863;
  wire PCIE_3_1_inst_n_864;
  wire PCIE_3_1_inst_n_865;
  wire PCIE_3_1_inst_n_866;
  wire PCIE_3_1_inst_n_867;
  wire PCIE_3_1_inst_n_868;
  wire PCIE_3_1_inst_n_869;
  wire PCIE_3_1_inst_n_870;
  wire PCIE_3_1_inst_n_871;
  wire PCIE_3_1_inst_n_872;
  wire PCIE_3_1_inst_n_873;
  wire PCIE_3_1_inst_n_874;
  wire PCIE_3_1_inst_n_875;
  wire PCIE_3_1_inst_n_876;
  wire PCIE_3_1_inst_n_877;
  wire PCIE_3_1_inst_n_878;
  wire PCIE_3_1_inst_n_879;
  wire PCIE_3_1_inst_n_88;
  wire PCIE_3_1_inst_n_880;
  wire PCIE_3_1_inst_n_881;
  wire PCIE_3_1_inst_n_882;
  wire PCIE_3_1_inst_n_883;
  wire PCIE_3_1_inst_n_884;
  wire PCIE_3_1_inst_n_885;
  wire PCIE_3_1_inst_n_886;
  wire PCIE_3_1_inst_n_887;
  wire PCIE_3_1_inst_n_888;
  wire PCIE_3_1_inst_n_889;
  wire PCIE_3_1_inst_n_890;
  wire PCIE_3_1_inst_n_891;
  wire PCIE_3_1_inst_n_892;
  wire PCIE_3_1_inst_n_893;
  wire PCIE_3_1_inst_n_894;
  wire PCIE_3_1_inst_n_895;
  wire PCIE_3_1_inst_n_896;
  wire PCIE_3_1_inst_n_897;
  wire PCIE_3_1_inst_n_898;
  wire PCIE_3_1_inst_n_899;
  wire PCIE_3_1_inst_n_900;
  wire PCIE_3_1_inst_n_901;
  wire PCIE_3_1_inst_n_902;
  wire PCIE_3_1_inst_n_903;
  wire PCIE_3_1_inst_n_904;
  wire PCIE_3_1_inst_n_905;
  wire PCIE_3_1_inst_n_906;
  wire PCIE_3_1_inst_n_907;
  wire PCIE_3_1_inst_n_908;
  wire PCIE_3_1_inst_n_909;
  wire PCIE_3_1_inst_n_91;
  wire PCIE_3_1_inst_n_910;
  wire PCIE_3_1_inst_n_911;
  wire PCIE_3_1_inst_n_912;
  wire PCIE_3_1_inst_n_913;
  wire PCIE_3_1_inst_n_914;
  wire PCIE_3_1_inst_n_915;
  wire PCIE_3_1_inst_n_916;
  wire PCIE_3_1_inst_n_917;
  wire PCIE_3_1_inst_n_918;
  wire PCIE_3_1_inst_n_919;
  wire PCIE_3_1_inst_n_920;
  wire PCIE_3_1_inst_n_921;
  wire PCIE_3_1_inst_n_922;
  wire PCIE_3_1_inst_n_923;
  wire PCIE_3_1_inst_n_924;
  wire PCIE_3_1_inst_n_925;
  wire PCIE_3_1_inst_n_926;
  wire PCIE_3_1_inst_n_927;
  wire PCIE_3_1_inst_n_928;
  wire PCIE_3_1_inst_n_929;
  wire PCIE_3_1_inst_n_93;
  wire PCIE_3_1_inst_n_930;
  wire PCIE_3_1_inst_n_931;
  wire PCIE_3_1_inst_n_932;
  wire PCIE_3_1_inst_n_933;
  wire PCIE_3_1_inst_n_934;
  wire PCIE_3_1_inst_n_935;
  wire PCIE_3_1_inst_n_936;
  wire PCIE_3_1_inst_n_937;
  wire PCIE_3_1_inst_n_938;
  wire PCIE_3_1_inst_n_939;
  wire PCIE_3_1_inst_n_94;
  wire PCIE_3_1_inst_n_940;
  wire PCIE_3_1_inst_n_941;
  wire PCIE_3_1_inst_n_942;
  wire PCIE_3_1_inst_n_943;
  wire PCIE_3_1_inst_n_944;
  wire PCIE_3_1_inst_n_945;
  wire PCIE_3_1_inst_n_946;
  wire PCIE_3_1_inst_n_947;
  wire PCIE_3_1_inst_n_948;
  wire PCIE_3_1_inst_n_949;
  wire PCIE_3_1_inst_n_950;
  wire PCIE_3_1_inst_n_951;
  wire PCIE_3_1_inst_n_952;
  wire PCIE_3_1_inst_n_953;
  wire PCIE_3_1_inst_n_954;
  wire PCIE_3_1_inst_n_955;
  wire PCIE_3_1_inst_n_956;
  wire PCIE_3_1_inst_n_957;
  wire PCIE_3_1_inst_n_958;
  wire PCIE_3_1_inst_n_959;
  wire PCIE_3_1_inst_n_96;
  wire PCIE_3_1_inst_n_960;
  wire PCIE_3_1_inst_n_961;
  wire PCIE_3_1_inst_n_962;
  wire PCIE_3_1_inst_n_963;
  wire PCIE_3_1_inst_n_964;
  wire PCIE_3_1_inst_n_965;
  wire PCIE_3_1_inst_n_966;
  wire PCIE_3_1_inst_n_967;
  wire PCIE_3_1_inst_n_968;
  wire PCIE_3_1_inst_n_969;
  wire PCIE_3_1_inst_n_970;
  wire PCIE_3_1_inst_n_971;
  wire PCIE_3_1_inst_n_972;
  wire PCIE_3_1_inst_n_973;
  wire PCIE_3_1_inst_n_974;
  wire PCIE_3_1_inst_n_975;
  wire PCIE_3_1_inst_n_976;
  wire PCIE_3_1_inst_n_977;
  wire PCIE_3_1_inst_n_978;
  wire PCIE_3_1_inst_n_979;
  wire PCIE_3_1_inst_n_980;
  wire PCIE_3_1_inst_n_981;
  wire PCIE_3_1_inst_n_982;
  wire PCIE_3_1_inst_n_983;
  wire PCIE_3_1_inst_n_984;
  wire PCIE_3_1_inst_n_985;
  wire PCIE_3_1_inst_n_986;
  wire PCIE_3_1_inst_n_987;
  wire PCIE_3_1_inst_n_988;
  wire PCIE_3_1_inst_n_989;
  wire PCIE_3_1_inst_n_99;
  wire PCIE_3_1_inst_n_990;
  wire PCIE_3_1_inst_n_991;
  wire PCIE_3_1_inst_n_992;
  wire PCIE_3_1_inst_n_993;
  wire PCIE_3_1_inst_n_994;
  wire PCIE_3_1_inst_n_995;
  wire PCIE_3_1_inst_n_996;
  wire PCIE_3_1_inst_n_997;
  wire PCIE_3_1_inst_n_998;
  wire PCIE_3_1_inst_n_999;
  wire PIPERX0DATAVALID;
  wire PIPERX0ELECIDLE;
  wire [1:0]PIPERX0EQCONTROL;
  wire PIPERX0EQDONE;
  wire PIPERX0EQLPADAPTDONE;
  wire [5:0]PIPERX0EQLPLFFS;
  wire PIPERX0EQLPLFFSSEL;
  wire [3:0]PIPERX0EQLPTXPRESET;
  wire [2:0]PIPERX0EQPRESET;
  wire PIPERX0PHYSTATUS;
  wire PIPERX0POLARITY;
  wire PIPERX0STARTBLOCK;
  wire PIPERX0VALID;
  wire PIPERX1DATAVALID;
  wire PIPERX1ELECIDLE;
  wire [1:0]PIPERX1EQCONTROL;
  wire PIPERX1EQDONE;
  wire PIPERX1EQLPADAPTDONE;
  wire [5:0]PIPERX1EQLPLFFS;
  wire PIPERX1EQLPLFFSSEL;
  wire [3:0]PIPERX1EQLPTXPRESET;
  wire [2:0]PIPERX1EQPRESET;
  wire PIPERX1PHYSTATUS;
  wire PIPERX1POLARITY;
  wire PIPERX1STARTBLOCK;
  wire PIPERX1VALID;
  wire PIPERX2DATAVALID;
  wire PIPERX2ELECIDLE;
  wire [1:0]PIPERX2EQCONTROL;
  wire PIPERX2EQDONE;
  wire PIPERX2EQLPADAPTDONE;
  wire [5:0]PIPERX2EQLPLFFS;
  wire PIPERX2EQLPLFFSSEL;
  wire [3:0]PIPERX2EQLPTXPRESET;
  wire [2:0]PIPERX2EQPRESET;
  wire PIPERX2PHYSTATUS;
  wire PIPERX2POLARITY;
  wire PIPERX2STARTBLOCK;
  wire PIPERX2VALID;
  wire PIPERX3DATAVALID;
  wire PIPERX3ELECIDLE;
  wire [1:0]PIPERX3EQCONTROL;
  wire PIPERX3EQDONE;
  wire PIPERX3EQLPADAPTDONE;
  wire [5:0]PIPERX3EQLPLFFS;
  wire PIPERX3EQLPLFFSSEL;
  wire [3:0]PIPERX3EQLPTXPRESET;
  wire [2:0]PIPERX3EQPRESET;
  wire PIPERX3PHYSTATUS;
  wire PIPERX3POLARITY;
  wire PIPERX3STARTBLOCK;
  wire PIPERX3VALID;
  wire PIPERX4DATAVALID;
  wire PIPERX4ELECIDLE;
  wire [1:0]PIPERX4EQCONTROL;
  wire PIPERX4EQDONE;
  wire PIPERX4EQLPADAPTDONE;
  wire [5:0]PIPERX4EQLPLFFS;
  wire PIPERX4EQLPLFFSSEL;
  wire [3:0]PIPERX4EQLPTXPRESET;
  wire [2:0]PIPERX4EQPRESET;
  wire PIPERX4PHYSTATUS;
  wire PIPERX4POLARITY;
  wire PIPERX4STARTBLOCK;
  wire PIPERX4VALID;
  wire PIPERX5DATAVALID;
  wire PIPERX5ELECIDLE;
  wire [1:0]PIPERX5EQCONTROL;
  wire PIPERX5EQDONE;
  wire PIPERX5EQLPADAPTDONE;
  wire [5:0]PIPERX5EQLPLFFS;
  wire PIPERX5EQLPLFFSSEL;
  wire [3:0]PIPERX5EQLPTXPRESET;
  wire [2:0]PIPERX5EQPRESET;
  wire PIPERX5PHYSTATUS;
  wire PIPERX5POLARITY;
  wire PIPERX5STARTBLOCK;
  wire PIPERX5VALID;
  wire PIPERX6DATAVALID;
  wire PIPERX6ELECIDLE;
  wire [1:0]PIPERX6EQCONTROL;
  wire PIPERX6EQDONE;
  wire PIPERX6EQLPADAPTDONE;
  wire [5:0]PIPERX6EQLPLFFS;
  wire PIPERX6EQLPLFFSSEL;
  wire [3:0]PIPERX6EQLPTXPRESET;
  wire [2:0]PIPERX6EQPRESET;
  wire PIPERX6PHYSTATUS;
  wire PIPERX6POLARITY;
  wire PIPERX6STARTBLOCK;
  wire PIPERX6VALID;
  wire PIPERX7DATAVALID;
  wire PIPERX7ELECIDLE;
  wire [1:0]PIPERX7EQCONTROL;
  wire PIPERX7EQDONE;
  wire PIPERX7EQLPADAPTDONE;
  wire [5:0]PIPERX7EQLPLFFS;
  wire PIPERX7EQLPLFFSSEL;
  wire [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  wire [3:0]PIPERX7EQLPTXPRESET;
  wire [2:0]PIPERX7EQPRESET;
  wire PIPERX7PHYSTATUS;
  wire PIPERX7POLARITY;
  wire PIPERX7STARTBLOCK;
  wire PIPERX7VALID;
  wire [1:0]PIPETX0CHARISK;
  wire PIPETX0COMPLIANCE;
  wire [31:0]PIPETX0DATA;
  wire PIPETX0DATAVALID;
  wire PIPETX0DEEMPH;
  wire PIPETX0ELECIDLE;
  wire [1:0]PIPETX0EQCONTROL;
  wire [5:0]PIPETX0EQDEEMPH;
  wire PIPETX0EQDONE;
  wire [3:0]PIPETX0EQPRESET;
  wire [2:0]PIPETX0MARGIN;
  wire [1:0]PIPETX0POWERDOWN;
  wire [1:0]PIPETX0RATE;
  wire PIPETX0RCVRDET;
  wire PIPETX0STARTBLOCK;
  wire PIPETX0SWING;
  wire [1:0]PIPETX0SYNCHEADER;
  wire [1:0]PIPETX1CHARISK;
  wire PIPETX1COMPLIANCE;
  wire [31:0]PIPETX1DATA;
  wire PIPETX1DATAVALID;
  wire PIPETX1ELECIDLE;
  wire [1:0]PIPETX1EQCONTROL;
  wire [5:0]PIPETX1EQDEEMPH;
  wire PIPETX1EQDONE;
  wire [3:0]PIPETX1EQPRESET;
  wire PIPETX1STARTBLOCK;
  wire [1:0]PIPETX1SYNCHEADER;
  wire [1:0]PIPETX2CHARISK;
  wire PIPETX2COMPLIANCE;
  wire [31:0]PIPETX2DATA;
  wire PIPETX2DATAVALID;
  wire PIPETX2ELECIDLE;
  wire [1:0]PIPETX2EQCONTROL;
  wire [5:0]PIPETX2EQDEEMPH;
  wire PIPETX2EQDONE;
  wire [3:0]PIPETX2EQPRESET;
  wire PIPETX2STARTBLOCK;
  wire [1:0]PIPETX2SYNCHEADER;
  wire [1:0]PIPETX3CHARISK;
  wire PIPETX3COMPLIANCE;
  wire [31:0]PIPETX3DATA;
  wire PIPETX3DATAVALID;
  wire PIPETX3ELECIDLE;
  wire [1:0]PIPETX3EQCONTROL;
  wire [5:0]PIPETX3EQDEEMPH;
  wire PIPETX3EQDONE;
  wire [3:0]PIPETX3EQPRESET;
  wire PIPETX3STARTBLOCK;
  wire [1:0]PIPETX3SYNCHEADER;
  wire [1:0]PIPETX4CHARISK;
  wire PIPETX4COMPLIANCE;
  wire [31:0]PIPETX4DATA;
  wire PIPETX4DATAVALID;
  wire PIPETX4ELECIDLE;
  wire [1:0]PIPETX4EQCONTROL;
  wire [5:0]PIPETX4EQDEEMPH;
  wire PIPETX4EQDONE;
  wire [3:0]PIPETX4EQPRESET;
  wire PIPETX4STARTBLOCK;
  wire [1:0]PIPETX4SYNCHEADER;
  wire [1:0]PIPETX5CHARISK;
  wire PIPETX5COMPLIANCE;
  wire [31:0]PIPETX5DATA;
  wire PIPETX5DATAVALID;
  wire PIPETX5ELECIDLE;
  wire [1:0]PIPETX5EQCONTROL;
  wire [5:0]PIPETX5EQDEEMPH;
  wire PIPETX5EQDONE;
  wire [3:0]PIPETX5EQPRESET;
  wire PIPETX5STARTBLOCK;
  wire [1:0]PIPETX5SYNCHEADER;
  wire [1:0]PIPETX6CHARISK;
  wire PIPETX6COMPLIANCE;
  wire [31:0]PIPETX6DATA;
  wire PIPETX6DATAVALID;
  wire PIPETX6ELECIDLE;
  wire [1:0]PIPETX6EQCONTROL;
  wire [5:0]PIPETX6EQDEEMPH;
  wire PIPETX6EQDONE;
  wire [3:0]PIPETX6EQPRESET;
  wire PIPETX6STARTBLOCK;
  wire [1:0]PIPETX6SYNCHEADER;
  wire [1:0]PIPETX7CHARISK;
  wire PIPETX7COMPLIANCE;
  wire [31:0]PIPETX7DATA;
  wire PIPETX7DATAVALID;
  wire PIPETX7ELECIDLE;
  wire [1:0]PIPETX7EQCONTROL;
  wire [5:0]PIPETX7EQDEEMPH;
  wire PIPETX7EQDONE;
  wire [3:0]PIPETX7EQPRESET;
  wire PIPETX7STARTBLOCK;
  wire [1:0]PIPETX7SYNCHEADER;
  wire [15:0]Q;
  wire RESETN;
  wire cap_gnt;
  wire cap_rel;
  wire cap_req;
  wire cfg_config_space_enable;
  wire [2:0]cfg_current_speed;
  wire [3:0]cfg_dpa_substate_change;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [7:0]cfg_ds_port_number;
  wire [63:0]cfg_dsn;
  wire cfg_err_cor_in;
  wire cfg_err_cor_out;
  wire cfg_err_fatal_out;
  wire cfg_err_nonfatal_out;
  wire cfg_err_uncor_in;
  wire [7:0]cfg_ext_function_number;
  wire [31:0]cfg_ext_read_data;
  wire cfg_ext_read_data_valid;
  wire cfg_ext_read_received;
  wire [9:0]cfg_ext_register_number;
  wire [3:0]cfg_ext_write_byte_enable;
  wire [31:0]cfg_ext_write_data;
  wire cfg_ext_write_received;
  wire [11:0]cfg_fc_cpld;
  wire [7:0]cfg_fc_cplh;
  wire [11:0]cfg_fc_npd;
  wire [7:0]cfg_fc_nph;
  wire [11:0]cfg_fc_pd;
  wire [7:0]cfg_fc_ph;
  wire [2:0]cfg_fc_sel;
  wire [3:0]cfg_flr_done;
  wire [3:0]cfg_flr_in_process;
  wire [11:0]cfg_function_power_state;
  wire [15:0]cfg_function_status;
  wire cfg_hot_reset_in;
  wire cfg_hot_reset_out;
  wire [3:0]cfg_interrupt_int;
  wire [2:0]cfg_interrupt_msi_attr;
  wire [31:0]cfg_interrupt_msi_data;
  wire [3:0]cfg_interrupt_msi_enable;
  wire cfg_interrupt_msi_fail;
  wire [3:0]cfg_interrupt_msi_function_number;
  wire [31:0]cfg_interrupt_msi_int;
  wire cfg_interrupt_msi_mask_update;
  wire [11:0]cfg_interrupt_msi_mmenable;
  wire [31:0]cfg_interrupt_msi_pending_status;
  wire cfg_interrupt_msi_pending_status_data_enable;
  wire [3:0]cfg_interrupt_msi_pending_status_function_num;
  wire [3:0]cfg_interrupt_msi_select;
  wire cfg_interrupt_msi_sent;
  wire cfg_interrupt_msi_tph_present;
  wire [8:0]cfg_interrupt_msi_tph_st_tag;
  wire [1:0]cfg_interrupt_msi_tph_type;
  wire [7:0]cfg_interrupt_msi_vf_enable;
  wire [63:0]cfg_interrupt_msix_address;
  wire [31:0]cfg_interrupt_msix_data;
  wire [3:0]cfg_interrupt_msix_enable;
  wire cfg_interrupt_msix_fail;
  wire cfg_interrupt_msix_int;
  wire [3:0]cfg_interrupt_msix_mask;
  wire cfg_interrupt_msix_sent;
  wire [7:0]cfg_interrupt_msix_vf_enable;
  wire [7:0]cfg_interrupt_msix_vf_mask;
  wire [3:0]cfg_interrupt_pending;
  wire cfg_interrupt_sent;
  wire [1:0]cfg_link_power_state;
  wire cfg_link_training_enable;
  wire cfg_local_error;
  wire cfg_ltr_enable;
  wire [5:0]cfg_ltssm_state;
  wire [2:0]cfg_max_payload;
  wire [2:0]cfg_max_read_req;
  wire [18:0]cfg_mgmt_addr;
  wire [3:0]cfg_mgmt_byte_enable;
  wire cfg_mgmt_read;
  wire [31:0]cfg_mgmt_read_data;
  wire cfg_mgmt_read_write_done;
  wire cfg_mgmt_type1_cfg_reg_access;
  wire cfg_mgmt_write;
  wire [31:0]cfg_mgmt_write_data;
  wire cfg_msg_received;
  wire [7:0]cfg_msg_received_data;
  wire [4:0]cfg_msg_received_type;
  wire cfg_msg_transmit;
  wire [31:0]cfg_msg_transmit_data;
  wire cfg_msg_transmit_done;
  wire [2:0]cfg_msg_transmit_type;
  wire [3:0]cfg_negotiated_width;
  wire [1:0]cfg_obff_enable;
  wire [2:0]cfg_per_func_status_control;
  wire [15:0]cfg_per_func_status_data;
  wire [3:0]cfg_per_function_number;
  wire cfg_per_function_output_request;
  wire cfg_per_function_update_done;
  wire cfg_phy_link_down;
  wire [1:0]cfg_phy_link_status;
  wire cfg_pl_status_change;
  wire cfg_power_state_change_ack;
  wire cfg_power_state_change_interrupt;
  wire [3:0]cfg_rcb_status;
  wire cfg_req_pm_transition_l23_ready;
  wire [15:0]cfg_subsys_vend_id;
  wire [3:0]cfg_tph_requester_enable;
  wire [11:0]cfg_tph_st_mode;
  wire [7:0]cfg_vf_flr_done;
  wire [7:0]cfg_vf_flr_in_process;
  wire [23:0]cfg_vf_power_state;
  wire [15:0]cfg_vf_status;
  wire [7:0]cfg_vf_tph_requester_enable;
  wire [23:0]cfg_vf_tph_st_mode;
  wire [31:0]conf_req_data;
  wire conf_req_ready;
  wire [3:0]conf_req_reg_num;
  wire [1:0]conf_req_type;
  wire conf_req_valid;
  wire [31:0]conf_resp_rdata;
  wire conf_resp_valid;
  wire [9:0]drp_addr;
  wire drp_clk;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire idle_reg;
  wire [127:0]m_axis_cq_tdata;
  wire [3:0]m_axis_cq_tkeep;
  wire m_axis_cq_tlast;
  wire m_axis_cq_tready;
  wire [84:0]m_axis_cq_tuser;
  wire m_axis_cq_tvalid;
  wire [127:0]m_axis_rc_tdata;
  wire [3:0]m_axis_rc_tkeep;
  wire m_axis_rc_tlast;
  wire m_axis_rc_tready;
  wire [74:0]m_axis_rc_tuser;
  wire m_axis_rc_tvalid;
  wire mcap_design_switch;
  wire pcie_cq_np_req;
  wire [5:0]pcie_cq_np_req_count;
  wire pcie_perstn1_in;
  wire pcie_perstn1_out;
  wire [3:0]pcie_rq_seq_num;
  wire pcie_rq_seq_num_vld;
  wire [5:0]pcie_rq_tag;
  wire [1:0]pcie_rq_tag_av;
  wire pcie_rq_tag_vld;
  wire [1:0]pcie_tfc_npd_av;
  wire [1:0]pcie_tfc_nph_av;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_6 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31] ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_0 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_1 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_2 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_3 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_4 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_5 ;
  wire [31:0]\pipe_stages_1.pipe_rx_data_q_reg[31]_6 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_5 ;
  wire [1:0]\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_6 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ;
  wire [1:0]\pipe_stages_1.pipe_tx_eqfs_q_reg[5] ;
  wire [1:0]\pipe_stages_1.pipe_tx_eqlf_q_reg[3] ;
  wire pipe_tx0_reset;
  wire [1:0]pipe_tx1_powerdown;
  wire [1:0]pipe_tx2_powerdown;
  wire [1:0]pipe_tx3_powerdown;
  wire [1:0]pipe_tx4_powerdown;
  wire [1:0]pipe_tx5_powerdown;
  wire [1:0]pipe_tx6_powerdown;
  wire [1:0]pipe_tx7_powerdown;
  wire pl_eq_in_progress;
  wire [1:0]pl_eq_phase;
  wire pl_eq_reset_eieos_count;
  wire pl_gen2_upstream_prefer_deemph;
  wire reg_user_lnk_up_reg;
  wire rxcdrhold_req_reg;
  wire [127:0]s_axis_cc_tdata;
  wire [3:0]s_axis_cc_tkeep;
  wire s_axis_cc_tlast;
  wire [3:0]s_axis_cc_tready;
  wire [32:0]s_axis_cc_tuser;
  wire s_axis_cc_tvalid;
  wire [127:0]s_axis_rq_tdata;
  wire [3:0]s_axis_rq_tkeep;
  wire s_axis_rq_tlast;
  wire [3:0]s_axis_rq_tready;
  wire [59:0]s_axis_rq_tuser;
  wire s_axis_rq_tvalid;
  wire sys_reset;
  wire user_reset_int_reg;
  wire user_reset_int_reg_0;
  wire user_reset_int_reg_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  PCIE_3_1 #(
    .ARI_CAP_ENABLE("FALSE"),
    .AXISTEN_IF_CC_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_CC_PARITY_CHK("FALSE"),
    .AXISTEN_IF_CQ_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_ENABLE_CLIENT_TAG("TRUE"),
    .AXISTEN_IF_ENABLE_MSG_ROUTE(18'h00000),
    .AXISTEN_IF_ENABLE_RX_MSG_INTFC("FALSE"),
    .AXISTEN_IF_RC_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_RC_STRADDLE("FALSE"),
    .AXISTEN_IF_RQ_ALIGNMENT_MODE("FALSE"),
    .AXISTEN_IF_RQ_PARITY_CHK("FALSE"),
    .AXISTEN_IF_WIDTH(2'h1),
    .CRM_CORE_CLK_FREQ_500("FALSE"),
    .CRM_USER_CLK_FREQ(2'h2),
    .DEBUG_CFG_LOCAL_MGMT_REG_ACCESS_OVERRIDE("FALSE"),
    .DEBUG_PL_DISABLE_EI_INFER_IN_L0("FALSE"),
    .DEBUG_TL_DISABLE_RX_TLP_ORDER_CHECKS("FALSE"),
    .DNSTREAM_LINK_NUM(8'h00),
    .LL_ACK_TIMEOUT(9'h000),
    .LL_ACK_TIMEOUT_EN("FALSE"),
    .LL_ACK_TIMEOUT_FUNC(0),
    .LL_CPL_FC_UPDATE_TIMER(16'h0000),
    .LL_CPL_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_FC_UPDATE_TIMER(16'h0000),
    .LL_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_NP_FC_UPDATE_TIMER(16'h0000),
    .LL_NP_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_P_FC_UPDATE_TIMER(16'h0000),
    .LL_P_FC_UPDATE_TIMER_OVERRIDE("FALSE"),
    .LL_REPLAY_TIMEOUT(9'h000),
    .LL_REPLAY_TIMEOUT_EN("FALSE"),
    .LL_REPLAY_TIMEOUT_FUNC(0),
    .LTR_TX_MESSAGE_MINIMUM_INTERVAL(10'h0FA),
    .LTR_TX_MESSAGE_ON_FUNC_POWER_STATE_CHANGE("FALSE"),
    .LTR_TX_MESSAGE_ON_LTR_ENABLE("FALSE"),
    .MCAP_CAP_NEXTPTR(12'h000),
    .MCAP_CONFIGURE_OVERRIDE("FALSE"),
    .MCAP_ENABLE("FALSE"),
    .MCAP_EOS_DESIGN_SWITCH("FALSE"),
    .MCAP_FPGA_BITSTREAM_VERSION(32'h00000000),
    .MCAP_GATE_IO_ENABLE_DESIGN_SWITCH("FALSE"),
    .MCAP_GATE_MEM_ENABLE_DESIGN_SWITCH("FALSE"),
    .MCAP_INPUT_GATE_DESIGN_SWITCH("FALSE"),
    .MCAP_INTERRUPT_ON_MCAP_EOS("FALSE"),
    .MCAP_INTERRUPT_ON_MCAP_ERROR("FALSE"),
    .MCAP_VSEC_ID(16'h0001),
    .MCAP_VSEC_LEN(12'h02C),
    .MCAP_VSEC_REV(4'h0),
    .PF0_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF0_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF0_AER_CAP_NEXTPTR(12'h150),
    .PF0_ARI_CAP_NEXTPTR(12'h000),
    .PF0_ARI_CAP_NEXT_FUNC(8'h00),
    .PF0_ARI_CAP_VER(4'h1),
    .PF0_BAR0_APERTURE_SIZE(6'h0D),
    .PF0_BAR0_CONTROL(3'h4),
    .PF0_BAR1_APERTURE_SIZE(6'h00),
    .PF0_BAR1_CONTROL(3'h0),
    .PF0_BAR2_APERTURE_SIZE(5'h0D),
    .PF0_BAR2_CONTROL(3'h4),
    .PF0_BAR3_APERTURE_SIZE(5'h00),
    .PF0_BAR3_CONTROL(3'h0),
    .PF0_BAR4_APERTURE_SIZE(5'h0D),
    .PF0_BAR4_CONTROL(3'h4),
    .PF0_BAR5_APERTURE_SIZE(5'h00),
    .PF0_BAR5_CONTROL(3'h0),
    .PF0_BIST_REGISTER(8'h00),
    .PF0_CAPABILITY_POINTER(8'h80),
    .PF0_CLASS_CODE(24'h058000),
    .PF0_DEVICE_ID(16'h0510),
    .PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_ARI_FORWARD_ENABLE("FALSE"),
    .PF0_DEV_CAP2_CPL_TIMEOUT_DISABLE("TRUE"),
    .PF0_DEV_CAP2_LTR_SUPPORT("FALSE"),
    .PF0_DEV_CAP2_OBFF_SUPPORT(2'h0),
    .PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT("FALSE"),
    .PF0_DEV_CAP_ENDPOINT_L0S_LATENCY(0),
    .PF0_DEV_CAP_ENDPOINT_L1_LATENCY(0),
    .PF0_DEV_CAP_EXT_TAG_SUPPORTED("FALSE"),
    .PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE("FALSE"),
    .PF0_DEV_CAP_MAX_PAYLOAD_SIZE(3'h2),
    .PF0_DPA_CAP_NEXTPTR(12'h000),
    .PF0_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF0_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF0_DPA_CAP_VER(4'h1),
    .PF0_DSN_CAP_NEXTPTR(12'h000),
    .PF0_EXPANSION_ROM_APERTURE_SIZE(5'h00),
    .PF0_EXPANSION_ROM_ENABLE("FALSE"),
    .PF0_INTERRUPT_LINE(8'h00),
    .PF0_INTERRUPT_PIN(3'h1),
    .PF0_LINK_CAP_ASPM_SUPPORT(0),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN3(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN1(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN2(7),
    .PF0_LINK_CAP_L0S_EXIT_LATENCY_GEN3(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN3(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN1(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN2(7),
    .PF0_LINK_CAP_L1_EXIT_LATENCY_GEN3(7),
    .PF0_LINK_STATUS_SLOT_CLOCK_CONFIG("TRUE"),
    .PF0_LTR_CAP_MAX_NOSNOOP_LAT(10'h000),
    .PF0_LTR_CAP_MAX_SNOOP_LAT(10'h000),
    .PF0_LTR_CAP_NEXTPTR(12'h000),
    .PF0_LTR_CAP_VER(4'h1),
    .PF0_MSIX_CAP_NEXTPTR(8'h00),
    .PF0_MSIX_CAP_PBA_BIR(0),
    .PF0_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .PF0_MSIX_CAP_TABLE_BIR(0),
    .PF0_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .PF0_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF0_MSI_CAP_MULTIMSGCAP(0),
    .PF0_MSI_CAP_NEXTPTR(8'hC0),
    .PF0_MSI_CAP_PERVECMASKCAP("FALSE"),
    .PF0_PB_CAP_DATA_REG_D0(32'h00000000),
    .PF0_PB_CAP_DATA_REG_D0_SUSTAINED(32'h00000000),
    .PF0_PB_CAP_DATA_REG_D1(32'h00000000),
    .PF0_PB_CAP_DATA_REG_D3HOT(32'h00000000),
    .PF0_PB_CAP_NEXTPTR(12'h000),
    .PF0_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF0_PB_CAP_VER(4'h1),
    .PF0_PM_CAP_ID(8'h01),
    .PF0_PM_CAP_NEXTPTR(8'h90),
    .PF0_PM_CAP_PMESUPPORT_D0("FALSE"),
    .PF0_PM_CAP_PMESUPPORT_D1("FALSE"),
    .PF0_PM_CAP_PMESUPPORT_D3HOT("FALSE"),
    .PF0_PM_CAP_SUPP_D1_STATE("FALSE"),
    .PF0_PM_CAP_VER_ID(3'h3),
    .PF0_PM_CSR_NOSOFTRESET("TRUE"),
    .PF0_RBAR_CAP_ENABLE("FALSE"),
    .PF0_RBAR_CAP_NEXTPTR(12'h000),
    .PF0_RBAR_CAP_SIZE0(20'h00000),
    .PF0_RBAR_CAP_SIZE1(20'h00000),
    .PF0_RBAR_CAP_SIZE2(20'h00000),
    .PF0_RBAR_CAP_VER(4'h1),
    .PF0_RBAR_CONTROL_INDEX0(3'h0),
    .PF0_RBAR_CONTROL_INDEX1(3'h0),
    .PF0_RBAR_CONTROL_INDEX2(3'h0),
    .PF0_RBAR_CONTROL_SIZE0(5'h00),
    .PF0_RBAR_CONTROL_SIZE1(5'h00),
    .PF0_RBAR_CONTROL_SIZE2(5'h00),
    .PF0_RBAR_NUM(3'h1),
    .PF0_REVISION_ID(8'h05),
    .PF0_SECONDARY_PCIE_CAP_NEXTPTR(12'h000),
    .PF0_SRIOV_BAR0_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR0_CONTROL(3'h0),
    .PF0_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR1_CONTROL(3'h0),
    .PF0_SRIOV_BAR2_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR2_CONTROL(3'h0),
    .PF0_SRIOV_BAR3_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR3_CONTROL(3'h0),
    .PF0_SRIOV_BAR4_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR4_CONTROL(3'h0),
    .PF0_SRIOV_BAR5_APERTURE_SIZE(5'h00),
    .PF0_SRIOV_BAR5_CONTROL(3'h0),
    .PF0_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF0_SRIOV_CAP_NEXTPTR(12'h000),
    .PF0_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF0_SRIOV_CAP_VER(4'h0),
    .PF0_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF0_SRIOV_FUNC_DEP_LINK(16'h0000),
    .PF0_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000553),
    .PF0_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF0_SUBSYSTEM_ID(16'h2060),
    .PF0_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF0_TPHR_CAP_ENABLE("FALSE"),
    .PF0_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .PF0_TPHR_CAP_NEXTPTR(12'h000),
    .PF0_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF0_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF0_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF0_TPHR_CAP_VER(4'h1),
    .PF0_VC_CAP_ENABLE("FALSE"),
    .PF0_VC_CAP_NEXTPTR(12'h000),
    .PF0_VC_CAP_VER(4'h1),
    .PF1_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF1_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF1_AER_CAP_NEXTPTR(12'h000),
    .PF1_ARI_CAP_NEXTPTR(12'h000),
    .PF1_ARI_CAP_NEXT_FUNC(8'h00),
    .PF1_BAR0_APERTURE_SIZE(6'h00),
    .PF1_BAR0_CONTROL(3'h0),
    .PF1_BAR1_APERTURE_SIZE(6'h00),
    .PF1_BAR1_CONTROL(3'h0),
    .PF1_BAR2_APERTURE_SIZE(5'h00),
    .PF1_BAR2_CONTROL(3'h0),
    .PF1_BAR3_APERTURE_SIZE(5'h00),
    .PF1_BAR3_CONTROL(3'h0),
    .PF1_BAR4_APERTURE_SIZE(5'h00),
    .PF1_BAR4_CONTROL(3'h0),
    .PF1_BAR5_APERTURE_SIZE(5'h00),
    .PF1_BAR5_CONTROL(3'h0),
    .PF1_BIST_REGISTER(8'h00),
    .PF1_CAPABILITY_POINTER(8'h80),
    .PF1_CLASS_CODE(24'h058000),
    .PF1_DEVICE_ID(16'h8011),
    .PF1_DEV_CAP_MAX_PAYLOAD_SIZE(3'h2),
    .PF1_DPA_CAP_NEXTPTR(12'h000),
    .PF1_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF1_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF1_DPA_CAP_VER(4'h1),
    .PF1_DSN_CAP_NEXTPTR(12'h000),
    .PF1_EXPANSION_ROM_APERTURE_SIZE(5'h00),
    .PF1_EXPANSION_ROM_ENABLE("FALSE"),
    .PF1_INTERRUPT_LINE(8'h00),
    .PF1_INTERRUPT_PIN(3'h0),
    .PF1_MSIX_CAP_NEXTPTR(8'h00),
    .PF1_MSIX_CAP_PBA_BIR(0),
    .PF1_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .PF1_MSIX_CAP_TABLE_BIR(0),
    .PF1_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .PF1_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF1_MSI_CAP_MULTIMSGCAP(0),
    .PF1_MSI_CAP_NEXTPTR(8'h00),
    .PF1_MSI_CAP_PERVECMASKCAP("FALSE"),
    .PF1_PB_CAP_DATA_REG_D0(32'h00000000),
    .PF1_PB_CAP_DATA_REG_D0_SUSTAINED(32'h00000000),
    .PF1_PB_CAP_DATA_REG_D1(32'h00000000),
    .PF1_PB_CAP_DATA_REG_D3HOT(32'h00000000),
    .PF1_PB_CAP_NEXTPTR(12'h000),
    .PF1_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF1_PB_CAP_VER(4'h1),
    .PF1_PM_CAP_ID(8'h01),
    .PF1_PM_CAP_NEXTPTR(8'h00),
    .PF1_PM_CAP_VER_ID(3'h3),
    .PF1_RBAR_CAP_ENABLE("FALSE"),
    .PF1_RBAR_CAP_NEXTPTR(12'h000),
    .PF1_RBAR_CAP_SIZE0(20'h00000),
    .PF1_RBAR_CAP_SIZE1(20'h00000),
    .PF1_RBAR_CAP_SIZE2(20'h00000),
    .PF1_RBAR_CAP_VER(4'h1),
    .PF1_RBAR_CONTROL_INDEX0(3'h0),
    .PF1_RBAR_CONTROL_INDEX1(3'h0),
    .PF1_RBAR_CONTROL_INDEX2(3'h0),
    .PF1_RBAR_CONTROL_SIZE0(5'h00),
    .PF1_RBAR_CONTROL_SIZE1(5'h00),
    .PF1_RBAR_CONTROL_SIZE2(5'h00),
    .PF1_RBAR_NUM(3'h1),
    .PF1_REVISION_ID(8'h00),
    .PF1_SRIOV_BAR0_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR0_CONTROL(3'h0),
    .PF1_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR1_CONTROL(3'h0),
    .PF1_SRIOV_BAR2_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR2_CONTROL(3'h0),
    .PF1_SRIOV_BAR3_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR3_CONTROL(3'h0),
    .PF1_SRIOV_BAR4_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR4_CONTROL(3'h0),
    .PF1_SRIOV_BAR5_APERTURE_SIZE(5'h00),
    .PF1_SRIOV_BAR5_CONTROL(3'h0),
    .PF1_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF1_SRIOV_CAP_NEXTPTR(12'h000),
    .PF1_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF1_SRIOV_CAP_VER(4'h0),
    .PF1_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF1_SRIOV_FUNC_DEP_LINK(16'h0001),
    .PF1_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000553),
    .PF1_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF1_SUBSYSTEM_ID(16'h0007),
    .PF1_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF1_TPHR_CAP_ENABLE("FALSE"),
    .PF1_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .PF1_TPHR_CAP_NEXTPTR(12'h000),
    .PF1_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF1_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF1_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF1_TPHR_CAP_VER(4'h1),
    .PF2_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF2_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF2_AER_CAP_NEXTPTR(12'h000),
    .PF2_ARI_CAP_NEXTPTR(12'h000),
    .PF2_ARI_CAP_NEXT_FUNC(8'h00),
    .PF2_BAR0_APERTURE_SIZE(6'h03),
    .PF2_BAR0_CONTROL(3'h4),
    .PF2_BAR1_APERTURE_SIZE(6'h00),
    .PF2_BAR1_CONTROL(3'h0),
    .PF2_BAR2_APERTURE_SIZE(5'h03),
    .PF2_BAR2_CONTROL(3'h4),
    .PF2_BAR3_APERTURE_SIZE(5'h03),
    .PF2_BAR3_CONTROL(3'h0),
    .PF2_BAR4_APERTURE_SIZE(5'h03),
    .PF2_BAR4_CONTROL(3'h4),
    .PF2_BAR5_APERTURE_SIZE(5'h03),
    .PF2_BAR5_CONTROL(3'h0),
    .PF2_BIST_REGISTER(8'h00),
    .PF2_CAPABILITY_POINTER(8'h50),
    .PF2_CLASS_CODE(24'h000000),
    .PF2_DEVICE_ID(16'h0000),
    .PF2_DEV_CAP_MAX_PAYLOAD_SIZE(3'h3),
    .PF2_DPA_CAP_NEXTPTR(12'h000),
    .PF2_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF2_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF2_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF2_DPA_CAP_VER(4'h1),
    .PF2_DSN_CAP_NEXTPTR(12'h10C),
    .PF2_EXPANSION_ROM_APERTURE_SIZE(5'h03),
    .PF2_EXPANSION_ROM_ENABLE("FALSE"),
    .PF2_INTERRUPT_LINE(8'h00),
    .PF2_INTERRUPT_PIN(3'h1),
    .PF2_MSIX_CAP_NEXTPTR(8'h00),
    .PF2_MSIX_CAP_PBA_BIR(0),
    .PF2_MSIX_CAP_PBA_OFFSET(29'h00000050),
    .PF2_MSIX_CAP_TABLE_BIR(0),
    .PF2_MSIX_CAP_TABLE_OFFSET(29'h00000040),
    .PF2_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF2_MSI_CAP_MULTIMSGCAP(0),
    .PF2_MSI_CAP_NEXTPTR(8'h00),
    .PF2_MSI_CAP_PERVECMASKCAP("FALSE"),
    .PF2_PB_CAP_DATA_REG_D0(32'h00000000),
    .PF2_PB_CAP_DATA_REG_D0_SUSTAINED(32'h00000000),
    .PF2_PB_CAP_DATA_REG_D1(32'h00000000),
    .PF2_PB_CAP_DATA_REG_D3HOT(32'h00000000),
    .PF2_PB_CAP_NEXTPTR(12'h000),
    .PF2_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF2_PB_CAP_VER(4'h1),
    .PF2_PM_CAP_ID(8'h01),
    .PF2_PM_CAP_NEXTPTR(8'h00),
    .PF2_PM_CAP_VER_ID(3'h3),
    .PF2_RBAR_CAP_ENABLE("FALSE"),
    .PF2_RBAR_CAP_NEXTPTR(12'h000),
    .PF2_RBAR_CAP_SIZE0(20'h00000),
    .PF2_RBAR_CAP_SIZE1(20'h00000),
    .PF2_RBAR_CAP_SIZE2(20'h00000),
    .PF2_RBAR_CAP_VER(4'h1),
    .PF2_RBAR_CONTROL_INDEX0(3'h0),
    .PF2_RBAR_CONTROL_INDEX1(3'h0),
    .PF2_RBAR_CONTROL_INDEX2(3'h0),
    .PF2_RBAR_CONTROL_SIZE0(5'h00),
    .PF2_RBAR_CONTROL_SIZE1(5'h00),
    .PF2_RBAR_CONTROL_SIZE2(5'h00),
    .PF2_RBAR_NUM(3'h1),
    .PF2_REVISION_ID(8'h00),
    .PF2_SRIOV_BAR0_APERTURE_SIZE(5'h03),
    .PF2_SRIOV_BAR0_CONTROL(3'h4),
    .PF2_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF2_SRIOV_BAR1_CONTROL(3'h0),
    .PF2_SRIOV_BAR2_APERTURE_SIZE(5'h03),
    .PF2_SRIOV_BAR2_CONTROL(3'h4),
    .PF2_SRIOV_BAR3_APERTURE_SIZE(5'h03),
    .PF2_SRIOV_BAR3_CONTROL(3'h0),
    .PF2_SRIOV_BAR4_APERTURE_SIZE(5'h03),
    .PF2_SRIOV_BAR4_CONTROL(3'h4),
    .PF2_SRIOV_BAR5_APERTURE_SIZE(5'h03),
    .PF2_SRIOV_BAR5_CONTROL(3'h0),
    .PF2_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF2_SRIOV_CAP_NEXTPTR(12'h000),
    .PF2_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF2_SRIOV_CAP_VER(4'h1),
    .PF2_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF2_SRIOV_FUNC_DEP_LINK(16'h0000),
    .PF2_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000000),
    .PF2_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF2_SUBSYSTEM_ID(16'h0000),
    .PF2_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF2_TPHR_CAP_ENABLE("FALSE"),
    .PF2_TPHR_CAP_INT_VEC_MODE("TRUE"),
    .PF2_TPHR_CAP_NEXTPTR(12'h000),
    .PF2_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF2_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF2_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF2_TPHR_CAP_VER(4'h1),
    .PF3_AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .PF3_AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .PF3_AER_CAP_NEXTPTR(12'h000),
    .PF3_ARI_CAP_NEXTPTR(12'h000),
    .PF3_ARI_CAP_NEXT_FUNC(8'h00),
    .PF3_BAR0_APERTURE_SIZE(6'h03),
    .PF3_BAR0_CONTROL(3'h4),
    .PF3_BAR1_APERTURE_SIZE(6'h00),
    .PF3_BAR1_CONTROL(3'h0),
    .PF3_BAR2_APERTURE_SIZE(5'h03),
    .PF3_BAR2_CONTROL(3'h4),
    .PF3_BAR3_APERTURE_SIZE(5'h03),
    .PF3_BAR3_CONTROL(3'h0),
    .PF3_BAR4_APERTURE_SIZE(5'h03),
    .PF3_BAR4_CONTROL(3'h4),
    .PF3_BAR5_APERTURE_SIZE(5'h03),
    .PF3_BAR5_CONTROL(3'h0),
    .PF3_BIST_REGISTER(8'h00),
    .PF3_CAPABILITY_POINTER(8'h50),
    .PF3_CLASS_CODE(24'h000000),
    .PF3_DEVICE_ID(16'h0000),
    .PF3_DEV_CAP_MAX_PAYLOAD_SIZE(3'h3),
    .PF3_DPA_CAP_NEXTPTR(12'h000),
    .PF3_DPA_CAP_SUB_STATE_CONTROL(5'h00),
    .PF3_DPA_CAP_SUB_STATE_CONTROL_EN("TRUE"),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION0(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION1(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION2(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION3(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION4(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION5(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION6(8'h00),
    .PF3_DPA_CAP_SUB_STATE_POWER_ALLOCATION7(8'h00),
    .PF3_DPA_CAP_VER(4'h1),
    .PF3_DSN_CAP_NEXTPTR(12'h10C),
    .PF3_EXPANSION_ROM_APERTURE_SIZE(5'h03),
    .PF3_EXPANSION_ROM_ENABLE("FALSE"),
    .PF3_INTERRUPT_LINE(8'h00),
    .PF3_INTERRUPT_PIN(3'h1),
    .PF3_MSIX_CAP_NEXTPTR(8'h00),
    .PF3_MSIX_CAP_PBA_BIR(0),
    .PF3_MSIX_CAP_PBA_OFFSET(29'h00000050),
    .PF3_MSIX_CAP_TABLE_BIR(0),
    .PF3_MSIX_CAP_TABLE_OFFSET(29'h00000040),
    .PF3_MSIX_CAP_TABLE_SIZE(11'h000),
    .PF3_MSI_CAP_MULTIMSGCAP(0),
    .PF3_MSI_CAP_NEXTPTR(8'h00),
    .PF3_MSI_CAP_PERVECMASKCAP("FALSE"),
    .PF3_PB_CAP_DATA_REG_D0(32'h00000000),
    .PF3_PB_CAP_DATA_REG_D0_SUSTAINED(32'h00000000),
    .PF3_PB_CAP_DATA_REG_D1(32'h00000000),
    .PF3_PB_CAP_DATA_REG_D3HOT(32'h00000000),
    .PF3_PB_CAP_NEXTPTR(12'h000),
    .PF3_PB_CAP_SYSTEM_ALLOCATED("FALSE"),
    .PF3_PB_CAP_VER(4'h1),
    .PF3_PM_CAP_ID(8'h01),
    .PF3_PM_CAP_NEXTPTR(8'h00),
    .PF3_PM_CAP_VER_ID(3'h3),
    .PF3_RBAR_CAP_ENABLE("FALSE"),
    .PF3_RBAR_CAP_NEXTPTR(12'h000),
    .PF3_RBAR_CAP_SIZE0(20'h00000),
    .PF3_RBAR_CAP_SIZE1(20'h00000),
    .PF3_RBAR_CAP_SIZE2(20'h00000),
    .PF3_RBAR_CAP_VER(4'h1),
    .PF3_RBAR_CONTROL_INDEX0(3'h0),
    .PF3_RBAR_CONTROL_INDEX1(3'h0),
    .PF3_RBAR_CONTROL_INDEX2(3'h0),
    .PF3_RBAR_CONTROL_SIZE0(5'h00),
    .PF3_RBAR_CONTROL_SIZE1(5'h00),
    .PF3_RBAR_CONTROL_SIZE2(5'h00),
    .PF3_RBAR_NUM(3'h1),
    .PF3_REVISION_ID(8'h00),
    .PF3_SRIOV_BAR0_APERTURE_SIZE(5'h03),
    .PF3_SRIOV_BAR0_CONTROL(3'h4),
    .PF3_SRIOV_BAR1_APERTURE_SIZE(5'h00),
    .PF3_SRIOV_BAR1_CONTROL(3'h0),
    .PF3_SRIOV_BAR2_APERTURE_SIZE(5'h03),
    .PF3_SRIOV_BAR2_CONTROL(3'h4),
    .PF3_SRIOV_BAR3_APERTURE_SIZE(5'h03),
    .PF3_SRIOV_BAR3_CONTROL(3'h0),
    .PF3_SRIOV_BAR4_APERTURE_SIZE(5'h03),
    .PF3_SRIOV_BAR4_CONTROL(3'h4),
    .PF3_SRIOV_BAR5_APERTURE_SIZE(5'h03),
    .PF3_SRIOV_BAR5_CONTROL(3'h0),
    .PF3_SRIOV_CAP_INITIAL_VF(16'h0000),
    .PF3_SRIOV_CAP_NEXTPTR(12'h000),
    .PF3_SRIOV_CAP_TOTAL_VF(16'h0000),
    .PF3_SRIOV_CAP_VER(4'h1),
    .PF3_SRIOV_FIRST_VF_OFFSET(16'h0000),
    .PF3_SRIOV_FUNC_DEP_LINK(16'h0000),
    .PF3_SRIOV_SUPPORTED_PAGE_SIZE(32'h00000000),
    .PF3_SRIOV_VF_DEVICE_ID(16'h0000),
    .PF3_SUBSYSTEM_ID(16'h0000),
    .PF3_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .PF3_TPHR_CAP_ENABLE("FALSE"),
    .PF3_TPHR_CAP_INT_VEC_MODE("TRUE"),
    .PF3_TPHR_CAP_NEXTPTR(12'h000),
    .PF3_TPHR_CAP_ST_MODE_SEL(3'h0),
    .PF3_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .PF3_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .PF3_TPHR_CAP_VER(4'h1),
    .PL_DISABLE_AUTO_EQ_SPEED_CHANGE_TO_GEN3("FALSE"),
    .PL_DISABLE_AUTO_SPEED_CHANGE_TO_GEN2("FALSE"),
    .PL_DISABLE_EI_INFER_IN_L0("FALSE"),
    .PL_DISABLE_GEN3_DC_BALANCE("FALSE"),
    .PL_DISABLE_GEN3_LFSR_UPDATE_ON_SKP("TRUE"),
    .PL_DISABLE_RETRAIN_ON_FRAMING_ERROR("FALSE"),
    .PL_DISABLE_SCRAMBLING("FALSE"),
    .PL_DISABLE_SYNC_HEADER_FRAMING_ERROR("FALSE"),
    .PL_DISABLE_UPCONFIG_CAPABLE("FALSE"),
    .PL_EQ_ADAPT_DISABLE_COEFF_CHECK("FALSE"),
    .PL_EQ_ADAPT_DISABLE_PRESET_CHECK("FALSE"),
    .PL_EQ_ADAPT_ITER_COUNT(5'h02),
    .PL_EQ_ADAPT_REJECT_RETRY_COUNT(2'h1),
    .PL_EQ_BYPASS_PHASE23("FALSE"),
    .PL_EQ_DEFAULT_GEN3_RX_PRESET_HINT(3'h3),
    .PL_EQ_DEFAULT_GEN3_TX_PRESET(4'h4),
    .PL_EQ_PHASE01_RX_ADAPT("FALSE"),
    .PL_EQ_SHORT_ADAPT_PHASE("FALSE"),
    .PL_LANE0_EQ_CONTROL(16'h3400),
    .PL_LANE1_EQ_CONTROL(16'h3400),
    .PL_LANE2_EQ_CONTROL(16'h3400),
    .PL_LANE3_EQ_CONTROL(16'h3400),
    .PL_LANE4_EQ_CONTROL(16'h3400),
    .PL_LANE5_EQ_CONTROL(16'h3400),
    .PL_LANE6_EQ_CONTROL(16'h3400),
    .PL_LANE7_EQ_CONTROL(16'h3400),
    .PL_LINK_CAP_MAX_LINK_SPEED(3'h2),
    .PL_LINK_CAP_MAX_LINK_WIDTH(4'h8),
    .PL_N_FTS_COMCLK_GEN1(255),
    .PL_N_FTS_COMCLK_GEN2(255),
    .PL_N_FTS_COMCLK_GEN3(255),
    .PL_N_FTS_GEN1(255),
    .PL_N_FTS_GEN2(255),
    .PL_N_FTS_GEN3(255),
    .PL_REPORT_ALL_PHY_ERRORS("TRUE"),
    .PL_SIM_FAST_LINK_TRAINING("TRUE"),
    .PL_UPSTREAM_FACING("TRUE"),
    .PM_ASPML0S_TIMEOUT(16'h05DC),
    .PM_ASPML1_ENTRY_DELAY(20'h00ABE),
    .PM_ENABLE_L23_ENTRY("FALSE"),
    .PM_ENABLE_SLOT_POWER_CAPTURE("TRUE"),
    .PM_L1_REENTRY_DELAY(32'h000061A8),
    .PM_PME_SERVICE_TIMEOUT_DELAY(20'h186A0),
    .PM_PME_TURNOFF_ACK_DELAY(16'h0064),
    .SIM_JTAG_IDCODE(32'h00000000),
    .SIM_VERSION("1.0"),
    .SPARE_BIT0(0),
    .SPARE_BIT1(0),
    .SPARE_BIT2(0),
    .SPARE_BIT3(0),
    .SPARE_BIT4(0),
    .SPARE_BIT5(0),
    .SPARE_BIT6(0),
    .SPARE_BIT7(0),
    .SPARE_BIT8(0),
    .SPARE_BYTE0(8'h00),
    .SPARE_BYTE1(8'h00),
    .SPARE_BYTE2(8'h00),
    .SPARE_BYTE3(8'h00),
    .SPARE_WORD0(32'h00000000),
    .SPARE_WORD1(32'h00000000),
    .SPARE_WORD2(32'h00000000),
    .SPARE_WORD3(32'h00000000),
    .SRIOV_CAP_ENABLE("FALSE"),
    .TL_COMPLETION_RAM_SIZE_16K("TRUE"),
    .TL_COMPL_TIMEOUT_REG0(24'hBEBC20),
    .TL_COMPL_TIMEOUT_REG1(28'h2FAF080),
    .TL_CREDITS_CD(12'h000),
    .TL_CREDITS_CH(8'h00),
    .TL_CREDITS_NPD(12'h028),
    .TL_CREDITS_NPH(8'h20),
    .TL_CREDITS_PD(12'h198),
    .TL_CREDITS_PH(8'h20),
    .TL_ENABLE_MESSAGE_RID_CHECK_ENABLE("TRUE"),
    .TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE("FALSE"),
    .TL_LEGACY_CFG_EXTEND_INTERFACE_ENABLE("FALSE"),
    .TL_LEGACY_MODE_ENABLE("FALSE"),
    .TL_PF_ENABLE_REG(2'h0),
    .TL_TX_MUX_STRICT_PRIORITY("TRUE"),
    .TWO_LAYER_MODE_DLCMSM_ENABLE("TRUE"),
    .TWO_LAYER_MODE_ENABLE("FALSE"),
    .TWO_LAYER_MODE_WIDTH_256("TRUE"),
    .VF0_ARI_CAP_NEXTPTR(12'h000),
    .VF0_CAPABILITY_POINTER(8'h80),
    .VF0_MSIX_CAP_PBA_BIR(0),
    .VF0_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF0_MSIX_CAP_TABLE_BIR(0),
    .VF0_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF0_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF0_MSI_CAP_MULTIMSGCAP(0),
    .VF0_PM_CAP_ID(8'h01),
    .VF0_PM_CAP_NEXTPTR(8'h00),
    .VF0_PM_CAP_VER_ID(3'h3),
    .VF0_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF0_TPHR_CAP_ENABLE("FALSE"),
    .VF0_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF0_TPHR_CAP_NEXTPTR(12'h000),
    .VF0_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF0_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF0_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF0_TPHR_CAP_VER(4'h1),
    .VF1_ARI_CAP_NEXTPTR(12'h000),
    .VF1_MSIX_CAP_PBA_BIR(0),
    .VF1_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF1_MSIX_CAP_TABLE_BIR(0),
    .VF1_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF1_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF1_MSI_CAP_MULTIMSGCAP(0),
    .VF1_PM_CAP_ID(8'h01),
    .VF1_PM_CAP_NEXTPTR(8'h00),
    .VF1_PM_CAP_VER_ID(3'h3),
    .VF1_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF1_TPHR_CAP_ENABLE("FALSE"),
    .VF1_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF1_TPHR_CAP_NEXTPTR(12'h000),
    .VF1_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF1_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF1_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF1_TPHR_CAP_VER(4'h1),
    .VF2_ARI_CAP_NEXTPTR(12'h000),
    .VF2_MSIX_CAP_PBA_BIR(0),
    .VF2_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF2_MSIX_CAP_TABLE_BIR(0),
    .VF2_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF2_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF2_MSI_CAP_MULTIMSGCAP(0),
    .VF2_PM_CAP_ID(8'h01),
    .VF2_PM_CAP_NEXTPTR(8'h00),
    .VF2_PM_CAP_VER_ID(3'h3),
    .VF2_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF2_TPHR_CAP_ENABLE("FALSE"),
    .VF2_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF2_TPHR_CAP_NEXTPTR(12'h000),
    .VF2_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF2_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF2_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF2_TPHR_CAP_VER(4'h1),
    .VF3_ARI_CAP_NEXTPTR(12'h000),
    .VF3_MSIX_CAP_PBA_BIR(0),
    .VF3_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF3_MSIX_CAP_TABLE_BIR(0),
    .VF3_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF3_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF3_MSI_CAP_MULTIMSGCAP(0),
    .VF3_PM_CAP_ID(8'h01),
    .VF3_PM_CAP_NEXTPTR(8'h00),
    .VF3_PM_CAP_VER_ID(3'h3),
    .VF3_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF3_TPHR_CAP_ENABLE("FALSE"),
    .VF3_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF3_TPHR_CAP_NEXTPTR(12'h000),
    .VF3_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF3_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF3_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF3_TPHR_CAP_VER(4'h1),
    .VF4_ARI_CAP_NEXTPTR(12'h000),
    .VF4_MSIX_CAP_PBA_BIR(0),
    .VF4_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF4_MSIX_CAP_TABLE_BIR(0),
    .VF4_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF4_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF4_MSI_CAP_MULTIMSGCAP(0),
    .VF4_PM_CAP_ID(8'h01),
    .VF4_PM_CAP_NEXTPTR(8'h00),
    .VF4_PM_CAP_VER_ID(3'h3),
    .VF4_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF4_TPHR_CAP_ENABLE("FALSE"),
    .VF4_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF4_TPHR_CAP_NEXTPTR(12'h000),
    .VF4_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF4_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF4_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF4_TPHR_CAP_VER(4'h1),
    .VF5_ARI_CAP_NEXTPTR(12'h000),
    .VF5_MSIX_CAP_PBA_BIR(0),
    .VF5_MSIX_CAP_PBA_OFFSET(29'h00000000),
    .VF5_MSIX_CAP_TABLE_BIR(0),
    .VF5_MSIX_CAP_TABLE_OFFSET(29'h00000000),
    .VF5_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF5_MSI_CAP_MULTIMSGCAP(0),
    .VF5_PM_CAP_ID(8'h01),
    .VF5_PM_CAP_NEXTPTR(8'h00),
    .VF5_PM_CAP_VER_ID(3'h3),
    .VF5_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF5_TPHR_CAP_ENABLE("FALSE"),
    .VF5_TPHR_CAP_INT_VEC_MODE("FALSE"),
    .VF5_TPHR_CAP_NEXTPTR(12'h000),
    .VF5_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF5_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF5_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF5_TPHR_CAP_VER(4'h1),
    .VF6_ARI_CAP_NEXTPTR(12'h000),
    .VF6_MSIX_CAP_PBA_BIR(0),
    .VF6_MSIX_CAP_PBA_OFFSET(29'h00000050),
    .VF6_MSIX_CAP_TABLE_BIR(0),
    .VF6_MSIX_CAP_TABLE_OFFSET(29'h00000040),
    .VF6_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF6_MSI_CAP_MULTIMSGCAP(0),
    .VF6_PM_CAP_ID(8'h01),
    .VF6_PM_CAP_NEXTPTR(8'h00),
    .VF6_PM_CAP_VER_ID(3'h3),
    .VF6_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF6_TPHR_CAP_ENABLE("FALSE"),
    .VF6_TPHR_CAP_INT_VEC_MODE("TRUE"),
    .VF6_TPHR_CAP_NEXTPTR(12'h000),
    .VF6_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF6_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF6_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF6_TPHR_CAP_VER(4'h1),
    .VF7_ARI_CAP_NEXTPTR(12'h000),
    .VF7_MSIX_CAP_PBA_BIR(0),
    .VF7_MSIX_CAP_PBA_OFFSET(29'h00000050),
    .VF7_MSIX_CAP_TABLE_BIR(0),
    .VF7_MSIX_CAP_TABLE_OFFSET(29'h00000040),
    .VF7_MSIX_CAP_TABLE_SIZE(11'h000),
    .VF7_MSI_CAP_MULTIMSGCAP(0),
    .VF7_PM_CAP_ID(8'h01),
    .VF7_PM_CAP_NEXTPTR(8'h00),
    .VF7_PM_CAP_VER_ID(3'h3),
    .VF7_TPHR_CAP_DEV_SPECIFIC_MODE("TRUE"),
    .VF7_TPHR_CAP_ENABLE("FALSE"),
    .VF7_TPHR_CAP_INT_VEC_MODE("TRUE"),
    .VF7_TPHR_CAP_NEXTPTR(12'h000),
    .VF7_TPHR_CAP_ST_MODE_SEL(3'h0),
    .VF7_TPHR_CAP_ST_TABLE_LOC(2'h0),
    .VF7_TPHR_CAP_ST_TABLE_SIZE(11'h000),
    .VF7_TPHR_CAP_VER(4'h1)) 
    PCIE_3_1_inst
       (.CFGCONFIGSPACEENABLE(cfg_config_space_enable),
        .CFGCURRENTSPEED(cfg_current_speed),
        .CFGDEVID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CFGDPASUBSTATECHANGE(cfg_dpa_substate_change),
        .CFGDSBUSNUMBER(cfg_ds_bus_number),
        .CFGDSDEVICENUMBER(cfg_ds_device_number),
        .CFGDSFUNCTIONNUMBER(cfg_ds_function_number),
        .CFGDSN(cfg_dsn),
        .CFGDSPORTNUMBER(cfg_ds_port_number),
        .CFGERRCORIN(cfg_err_cor_in),
        .CFGERRCOROUT(cfg_err_cor_out),
        .CFGERRFATALOUT(cfg_err_fatal_out),
        .CFGERRNONFATALOUT(cfg_err_nonfatal_out),
        .CFGERRUNCORIN(cfg_err_uncor_in),
        .CFGEXTFUNCTIONNUMBER(cfg_ext_function_number),
        .CFGEXTREADDATA(cfg_ext_read_data),
        .CFGEXTREADDATAVALID(cfg_ext_read_data_valid),
        .CFGEXTREADRECEIVED(cfg_ext_read_received),
        .CFGEXTREGISTERNUMBER(cfg_ext_register_number),
        .CFGEXTWRITEBYTEENABLE(cfg_ext_write_byte_enable),
        .CFGEXTWRITEDATA(cfg_ext_write_data),
        .CFGEXTWRITERECEIVED(cfg_ext_write_received),
        .CFGFCCPLD(cfg_fc_cpld),
        .CFGFCCPLH(cfg_fc_cplh),
        .CFGFCNPD(cfg_fc_npd),
        .CFGFCNPH(cfg_fc_nph),
        .CFGFCPD(cfg_fc_pd),
        .CFGFCPH(cfg_fc_ph),
        .CFGFCSEL(cfg_fc_sel),
        .CFGFLRDONE(cfg_flr_done),
        .CFGFLRINPROCESS(cfg_flr_in_process),
        .CFGFUNCTIONPOWERSTATE(cfg_function_power_state),
        .CFGFUNCTIONSTATUS(cfg_function_status),
        .CFGHOTRESETIN(cfg_hot_reset_in),
        .CFGHOTRESETOUT(cfg_hot_reset_out),
        .CFGINTERRUPTINT(cfg_interrupt_int),
        .CFGINTERRUPTMSIATTR(cfg_interrupt_msi_attr),
        .CFGINTERRUPTMSIDATA(cfg_interrupt_msi_data),
        .CFGINTERRUPTMSIENABLE(cfg_interrupt_msi_enable),
        .CFGINTERRUPTMSIFAIL(cfg_interrupt_msi_fail),
        .CFGINTERRUPTMSIFUNCTIONNUMBER(cfg_interrupt_msi_function_number),
        .CFGINTERRUPTMSIINT(cfg_interrupt_msi_int),
        .CFGINTERRUPTMSIMASKUPDATE(cfg_interrupt_msi_mask_update),
        .CFGINTERRUPTMSIMMENABLE(cfg_interrupt_msi_mmenable),
        .CFGINTERRUPTMSIPENDINGSTATUS(cfg_interrupt_msi_pending_status),
        .CFGINTERRUPTMSIPENDINGSTATUSDATAENABLE(cfg_interrupt_msi_pending_status_data_enable),
        .CFGINTERRUPTMSIPENDINGSTATUSFUNCTIONNUM(cfg_interrupt_msi_pending_status_function_num),
        .CFGINTERRUPTMSISELECT(cfg_interrupt_msi_select),
        .CFGINTERRUPTMSISENT(cfg_interrupt_msi_sent),
        .CFGINTERRUPTMSITPHPRESENT(cfg_interrupt_msi_tph_present),
        .CFGINTERRUPTMSITPHSTTAG(cfg_interrupt_msi_tph_st_tag),
        .CFGINTERRUPTMSITPHTYPE(cfg_interrupt_msi_tph_type),
        .CFGINTERRUPTMSIVFENABLE(cfg_interrupt_msi_vf_enable),
        .CFGINTERRUPTMSIXADDRESS(cfg_interrupt_msix_address),
        .CFGINTERRUPTMSIXDATA(cfg_interrupt_msix_data),
        .CFGINTERRUPTMSIXENABLE(cfg_interrupt_msix_enable),
        .CFGINTERRUPTMSIXFAIL(cfg_interrupt_msix_fail),
        .CFGINTERRUPTMSIXINT(cfg_interrupt_msix_int),
        .CFGINTERRUPTMSIXMASK(cfg_interrupt_msix_mask),
        .CFGINTERRUPTMSIXSENT(cfg_interrupt_msix_sent),
        .CFGINTERRUPTMSIXVFENABLE(cfg_interrupt_msix_vf_enable),
        .CFGINTERRUPTMSIXVFMASK(cfg_interrupt_msix_vf_mask),
        .CFGINTERRUPTPENDING(cfg_interrupt_pending),
        .CFGINTERRUPTSENT(cfg_interrupt_sent),
        .CFGLINKPOWERSTATE(cfg_link_power_state),
        .CFGLINKTRAININGENABLE(cfg_link_training_enable),
        .CFGLOCALERROR(cfg_local_error),
        .CFGLTRENABLE(cfg_ltr_enable),
        .CFGLTSSMSTATE(cfg_ltssm_state),
        .CFGMAXPAYLOAD(cfg_max_payload),
        .CFGMAXREADREQ(cfg_max_read_req),
        .CFGMGMTADDR(cfg_mgmt_addr),
        .CFGMGMTBYTEENABLE(cfg_mgmt_byte_enable),
        .CFGMGMTREAD(cfg_mgmt_read),
        .CFGMGMTREADDATA(cfg_mgmt_read_data),
        .CFGMGMTREADWRITEDONE(cfg_mgmt_read_write_done),
        .CFGMGMTTYPE1CFGREGACCESS(cfg_mgmt_type1_cfg_reg_access),
        .CFGMGMTWRITE(cfg_mgmt_write),
        .CFGMGMTWRITEDATA(cfg_mgmt_write_data),
        .CFGMSGRECEIVED(cfg_msg_received),
        .CFGMSGRECEIVEDDATA(cfg_msg_received_data),
        .CFGMSGRECEIVEDTYPE(cfg_msg_received_type),
        .CFGMSGTRANSMIT(cfg_msg_transmit),
        .CFGMSGTRANSMITDATA(cfg_msg_transmit_data),
        .CFGMSGTRANSMITDONE(cfg_msg_transmit_done),
        .CFGMSGTRANSMITTYPE(cfg_msg_transmit_type),
        .CFGNEGOTIATEDWIDTH(cfg_negotiated_width),
        .CFGOBFFENABLE(cfg_obff_enable),
        .CFGPERFUNCSTATUSCONTROL(cfg_per_func_status_control),
        .CFGPERFUNCSTATUSDATA(cfg_per_func_status_data),
        .CFGPERFUNCTIONNUMBER(cfg_per_function_number),
        .CFGPERFUNCTIONOUTPUTREQUEST(cfg_per_function_output_request),
        .CFGPERFUNCTIONUPDATEDONE(cfg_per_function_update_done),
        .CFGPHYLINKDOWN(cfg_phy_link_down),
        .CFGPHYLINKSTATUS(cfg_phy_link_status),
        .CFGPLSTATUSCHANGE(cfg_pl_status_change),
        .CFGPOWERSTATECHANGEACK(cfg_power_state_change_ack),
        .CFGPOWERSTATECHANGEINTERRUPT(cfg_power_state_change_interrupt),
        .CFGRCBSTATUS(cfg_rcb_status),
        .CFGREQPMTRANSITIONL23READY(cfg_req_pm_transition_l23_ready),
        .CFGREVID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .CFGSUBSYSID({1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGSUBSYSVENDID(cfg_subsys_vend_id),
        .CFGTPHFUNCTIONNUM(ADDRARDADDR[8:5]),
        .CFGTPHREQUESTERENABLE(cfg_tph_requester_enable),
        .CFGTPHSTMODE(cfg_tph_st_mode),
        .CFGTPHSTTADDRESS(ADDRARDADDR[4:0]),
        .CFGTPHSTTREADDATA(CFGTPHSTTREADDATA),
        .CFGTPHSTTREADDATAVALID(CFGTPHSTTREADDATAVALID),
        .CFGTPHSTTREADENABLE(CFGTPHSTTREADENABLE),
        .CFGTPHSTTWRITEBYTEVALID(CFGTPHSTTWRITEBYTEVALID),
        .CFGTPHSTTWRITEDATA(CFGTPHSTTWRITEDATA),
        .CFGTPHSTTWRITEENABLE(CFGTPHSTTWRITEENABLE),
        .CFGVENDID({1'b0,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CFGVFFLRDONE(cfg_vf_flr_done),
        .CFGVFFLRINPROCESS(cfg_vf_flr_in_process),
        .CFGVFPOWERSTATE(cfg_vf_power_state),
        .CFGVFSTATUS(cfg_vf_status),
        .CFGVFTPHREQUESTERENABLE(cfg_vf_tph_requester_enable),
        .CFGVFTPHSTMODE(cfg_vf_tph_st_mode),
        .CONFMCAPDESIGNSWITCH(mcap_design_switch),
        .CONFMCAPEOS(PCIE_3_1_inst_n_24),
        .CONFMCAPINUSEBYPCIE(cap_req),
        .CONFMCAPREQUESTBYCONF(PCIE_3_1_inst_i_1_n_0),
        .CONFREQDATA(conf_req_data),
        .CONFREQREADY(conf_req_ready),
        .CONFREQREGNUM(conf_req_reg_num),
        .CONFREQTYPE(conf_req_type),
        .CONFREQVALID(conf_req_valid),
        .CONFRESPRDATA(conf_resp_rdata),
        .CONFRESPVALID(conf_resp_valid),
        .CORECLK(CORECLKMIREQUESTRAM),
        .CORECLKMICOMPLETIONRAML(CORECLKMIREQUESTRAM),
        .CORECLKMICOMPLETIONRAMU(CORECLKMIREQUESTRAM),
        .CORECLKMIREPLAYRAM(CORECLKMIREQUESTRAM),
        .CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .DBGCFGLOCALMGMTREGOVERRIDE(1'b0),
        .DBGDATAOUT({PCIE_3_1_inst_n_530,PCIE_3_1_inst_n_531,PCIE_3_1_inst_n_532,PCIE_3_1_inst_n_533,PCIE_3_1_inst_n_534,PCIE_3_1_inst_n_535,PCIE_3_1_inst_n_536,PCIE_3_1_inst_n_537,PCIE_3_1_inst_n_538,PCIE_3_1_inst_n_539,PCIE_3_1_inst_n_540,PCIE_3_1_inst_n_541,PCIE_3_1_inst_n_542,PCIE_3_1_inst_n_543,PCIE_3_1_inst_n_544,PCIE_3_1_inst_n_545}),
        .DBGDATASEL({1'b0,1'b0,1'b0,1'b0}),
        .DBGMCAPCSB(PCIE_3_1_inst_n_28),
        .DBGMCAPDATA({PCIE_3_1_inst_n_1727,PCIE_3_1_inst_n_1728,PCIE_3_1_inst_n_1729,PCIE_3_1_inst_n_1730,PCIE_3_1_inst_n_1731,PCIE_3_1_inst_n_1732,PCIE_3_1_inst_n_1733,PCIE_3_1_inst_n_1734,PCIE_3_1_inst_n_1735,PCIE_3_1_inst_n_1736,PCIE_3_1_inst_n_1737,PCIE_3_1_inst_n_1738,PCIE_3_1_inst_n_1739,PCIE_3_1_inst_n_1740,PCIE_3_1_inst_n_1741,PCIE_3_1_inst_n_1742,PCIE_3_1_inst_n_1743,PCIE_3_1_inst_n_1744,PCIE_3_1_inst_n_1745,PCIE_3_1_inst_n_1746,PCIE_3_1_inst_n_1747,PCIE_3_1_inst_n_1748,PCIE_3_1_inst_n_1749,PCIE_3_1_inst_n_1750,PCIE_3_1_inst_n_1751,PCIE_3_1_inst_n_1752,PCIE_3_1_inst_n_1753,PCIE_3_1_inst_n_1754,PCIE_3_1_inst_n_1755,PCIE_3_1_inst_n_1756,PCIE_3_1_inst_n_1757,PCIE_3_1_inst_n_1758}),
        .DBGMCAPEOS(PCIE_3_1_inst_n_29),
        .DBGMCAPERROR(PCIE_3_1_inst_n_30),
        .DBGMCAPMODE(PCIE_3_1_inst_n_31),
        .DBGMCAPRDATAVALID(PCIE_3_1_inst_n_32),
        .DBGMCAPRDWRB(PCIE_3_1_inst_n_33),
        .DBGMCAPRESET(PCIE_3_1_inst_n_34),
        .DBGPLDATABLOCKRECEIVEDAFTEREDS(PCIE_3_1_inst_n_35),
        .DBGPLGEN3FRAMINGERRORDETECTED(PCIE_3_1_inst_n_36),
        .DBGPLGEN3SYNCHEADERERRORDETECTED(PCIE_3_1_inst_n_37),
        .DBGPLINFERREDRXELECTRICALIDLE({PCIE_3_1_inst_n_2622,PCIE_3_1_inst_n_2623,PCIE_3_1_inst_n_2624,PCIE_3_1_inst_n_2625,PCIE_3_1_inst_n_2626,PCIE_3_1_inst_n_2627,PCIE_3_1_inst_n_2628,PCIE_3_1_inst_n_2629}),
        .DRPADDR(drp_addr),
        .DRPCLK(drp_clk),
        .DRPDI(drp_di),
        .DRPDO(drp_do),
        .DRPEN(drp_en),
        .DRPRDY(drp_rdy),
        .DRPWE(drp_we),
        .LL2LMMASTERTLPSENT0(PCIE_3_1_inst_n_39),
        .LL2LMMASTERTLPSENT1(PCIE_3_1_inst_n_40),
        .LL2LMMASTERTLPSENTTLPID0({PCIE_3_1_inst_n_2091,PCIE_3_1_inst_n_2092,PCIE_3_1_inst_n_2093,PCIE_3_1_inst_n_2094}),
        .LL2LMMASTERTLPSENTTLPID1({PCIE_3_1_inst_n_2095,PCIE_3_1_inst_n_2096,PCIE_3_1_inst_n_2097,PCIE_3_1_inst_n_2098}),
        .LL2LMMAXISRXTDATA({PCIE_3_1_inst_n_742,PCIE_3_1_inst_n_743,PCIE_3_1_inst_n_744,PCIE_3_1_inst_n_745,PCIE_3_1_inst_n_746,PCIE_3_1_inst_n_747,PCIE_3_1_inst_n_748,PCIE_3_1_inst_n_749,PCIE_3_1_inst_n_750,PCIE_3_1_inst_n_751,PCIE_3_1_inst_n_752,PCIE_3_1_inst_n_753,PCIE_3_1_inst_n_754,PCIE_3_1_inst_n_755,PCIE_3_1_inst_n_756,PCIE_3_1_inst_n_757,PCIE_3_1_inst_n_758,PCIE_3_1_inst_n_759,PCIE_3_1_inst_n_760,PCIE_3_1_inst_n_761,PCIE_3_1_inst_n_762,PCIE_3_1_inst_n_763,PCIE_3_1_inst_n_764,PCIE_3_1_inst_n_765,PCIE_3_1_inst_n_766,PCIE_3_1_inst_n_767,PCIE_3_1_inst_n_768,PCIE_3_1_inst_n_769,PCIE_3_1_inst_n_770,PCIE_3_1_inst_n_771,PCIE_3_1_inst_n_772,PCIE_3_1_inst_n_773,PCIE_3_1_inst_n_774,PCIE_3_1_inst_n_775,PCIE_3_1_inst_n_776,PCIE_3_1_inst_n_777,PCIE_3_1_inst_n_778,PCIE_3_1_inst_n_779,PCIE_3_1_inst_n_780,PCIE_3_1_inst_n_781,PCIE_3_1_inst_n_782,PCIE_3_1_inst_n_783,PCIE_3_1_inst_n_784,PCIE_3_1_inst_n_785,PCIE_3_1_inst_n_786,PCIE_3_1_inst_n_787,PCIE_3_1_inst_n_788,PCIE_3_1_inst_n_789,PCIE_3_1_inst_n_790,PCIE_3_1_inst_n_791,PCIE_3_1_inst_n_792,PCIE_3_1_inst_n_793,PCIE_3_1_inst_n_794,PCIE_3_1_inst_n_795,PCIE_3_1_inst_n_796,PCIE_3_1_inst_n_797,PCIE_3_1_inst_n_798,PCIE_3_1_inst_n_799,PCIE_3_1_inst_n_800,PCIE_3_1_inst_n_801,PCIE_3_1_inst_n_802,PCIE_3_1_inst_n_803,PCIE_3_1_inst_n_804,PCIE_3_1_inst_n_805,PCIE_3_1_inst_n_806,PCIE_3_1_inst_n_807,PCIE_3_1_inst_n_808,PCIE_3_1_inst_n_809,PCIE_3_1_inst_n_810,PCIE_3_1_inst_n_811,PCIE_3_1_inst_n_812,PCIE_3_1_inst_n_813,PCIE_3_1_inst_n_814,PCIE_3_1_inst_n_815,PCIE_3_1_inst_n_816,PCIE_3_1_inst_n_817,PCIE_3_1_inst_n_818,PCIE_3_1_inst_n_819,PCIE_3_1_inst_n_820,PCIE_3_1_inst_n_821,PCIE_3_1_inst_n_822,PCIE_3_1_inst_n_823,PCIE_3_1_inst_n_824,PCIE_3_1_inst_n_825,PCIE_3_1_inst_n_826,PCIE_3_1_inst_n_827,PCIE_3_1_inst_n_828,PCIE_3_1_inst_n_829,PCIE_3_1_inst_n_830,PCIE_3_1_inst_n_831,PCIE_3_1_inst_n_832,PCIE_3_1_inst_n_833,PCIE_3_1_inst_n_834,PCIE_3_1_inst_n_835,PCIE_3_1_inst_n_836,PCIE_3_1_inst_n_837,PCIE_3_1_inst_n_838,PCIE_3_1_inst_n_839,PCIE_3_1_inst_n_840,PCIE_3_1_inst_n_841,PCIE_3_1_inst_n_842,PCIE_3_1_inst_n_843,PCIE_3_1_inst_n_844,PCIE_3_1_inst_n_845,PCIE_3_1_inst_n_846,PCIE_3_1_inst_n_847,PCIE_3_1_inst_n_848,PCIE_3_1_inst_n_849,PCIE_3_1_inst_n_850,PCIE_3_1_inst_n_851,PCIE_3_1_inst_n_852,PCIE_3_1_inst_n_853,PCIE_3_1_inst_n_854,PCIE_3_1_inst_n_855,PCIE_3_1_inst_n_856,PCIE_3_1_inst_n_857,PCIE_3_1_inst_n_858,PCIE_3_1_inst_n_859,PCIE_3_1_inst_n_860,PCIE_3_1_inst_n_861,PCIE_3_1_inst_n_862,PCIE_3_1_inst_n_863,PCIE_3_1_inst_n_864,PCIE_3_1_inst_n_865,PCIE_3_1_inst_n_866,PCIE_3_1_inst_n_867,PCIE_3_1_inst_n_868,PCIE_3_1_inst_n_869,PCIE_3_1_inst_n_870,PCIE_3_1_inst_n_871,PCIE_3_1_inst_n_872,PCIE_3_1_inst_n_873,PCIE_3_1_inst_n_874,PCIE_3_1_inst_n_875,PCIE_3_1_inst_n_876,PCIE_3_1_inst_n_877,PCIE_3_1_inst_n_878,PCIE_3_1_inst_n_879,PCIE_3_1_inst_n_880,PCIE_3_1_inst_n_881,PCIE_3_1_inst_n_882,PCIE_3_1_inst_n_883,PCIE_3_1_inst_n_884,PCIE_3_1_inst_n_885,PCIE_3_1_inst_n_886,PCIE_3_1_inst_n_887,PCIE_3_1_inst_n_888,PCIE_3_1_inst_n_889,PCIE_3_1_inst_n_890,PCIE_3_1_inst_n_891,PCIE_3_1_inst_n_892,PCIE_3_1_inst_n_893,PCIE_3_1_inst_n_894,PCIE_3_1_inst_n_895,PCIE_3_1_inst_n_896,PCIE_3_1_inst_n_897,PCIE_3_1_inst_n_898,PCIE_3_1_inst_n_899,PCIE_3_1_inst_n_900,PCIE_3_1_inst_n_901,PCIE_3_1_inst_n_902,PCIE_3_1_inst_n_903,PCIE_3_1_inst_n_904,PCIE_3_1_inst_n_905,PCIE_3_1_inst_n_906,PCIE_3_1_inst_n_907,PCIE_3_1_inst_n_908,PCIE_3_1_inst_n_909,PCIE_3_1_inst_n_910,PCIE_3_1_inst_n_911,PCIE_3_1_inst_n_912,PCIE_3_1_inst_n_913,PCIE_3_1_inst_n_914,PCIE_3_1_inst_n_915,PCIE_3_1_inst_n_916,PCIE_3_1_inst_n_917,PCIE_3_1_inst_n_918,PCIE_3_1_inst_n_919,PCIE_3_1_inst_n_920,PCIE_3_1_inst_n_921,PCIE_3_1_inst_n_922,PCIE_3_1_inst_n_923,PCIE_3_1_inst_n_924,PCIE_3_1_inst_n_925,PCIE_3_1_inst_n_926,PCIE_3_1_inst_n_927,PCIE_3_1_inst_n_928,PCIE_3_1_inst_n_929,PCIE_3_1_inst_n_930,PCIE_3_1_inst_n_931,PCIE_3_1_inst_n_932,PCIE_3_1_inst_n_933,PCIE_3_1_inst_n_934,PCIE_3_1_inst_n_935,PCIE_3_1_inst_n_936,PCIE_3_1_inst_n_937,PCIE_3_1_inst_n_938,PCIE_3_1_inst_n_939,PCIE_3_1_inst_n_940,PCIE_3_1_inst_n_941,PCIE_3_1_inst_n_942,PCIE_3_1_inst_n_943,PCIE_3_1_inst_n_944,PCIE_3_1_inst_n_945,PCIE_3_1_inst_n_946,PCIE_3_1_inst_n_947,PCIE_3_1_inst_n_948,PCIE_3_1_inst_n_949,PCIE_3_1_inst_n_950,PCIE_3_1_inst_n_951,PCIE_3_1_inst_n_952,PCIE_3_1_inst_n_953,PCIE_3_1_inst_n_954,PCIE_3_1_inst_n_955,PCIE_3_1_inst_n_956,PCIE_3_1_inst_n_957,PCIE_3_1_inst_n_958,PCIE_3_1_inst_n_959,PCIE_3_1_inst_n_960,PCIE_3_1_inst_n_961,PCIE_3_1_inst_n_962,PCIE_3_1_inst_n_963,PCIE_3_1_inst_n_964,PCIE_3_1_inst_n_965,PCIE_3_1_inst_n_966,PCIE_3_1_inst_n_967,PCIE_3_1_inst_n_968,PCIE_3_1_inst_n_969,PCIE_3_1_inst_n_970,PCIE_3_1_inst_n_971,PCIE_3_1_inst_n_972,PCIE_3_1_inst_n_973,PCIE_3_1_inst_n_974,PCIE_3_1_inst_n_975,PCIE_3_1_inst_n_976,PCIE_3_1_inst_n_977,PCIE_3_1_inst_n_978,PCIE_3_1_inst_n_979,PCIE_3_1_inst_n_980,PCIE_3_1_inst_n_981,PCIE_3_1_inst_n_982,PCIE_3_1_inst_n_983,PCIE_3_1_inst_n_984,PCIE_3_1_inst_n_985,PCIE_3_1_inst_n_986,PCIE_3_1_inst_n_987,PCIE_3_1_inst_n_988,PCIE_3_1_inst_n_989,PCIE_3_1_inst_n_990,PCIE_3_1_inst_n_991,PCIE_3_1_inst_n_992,PCIE_3_1_inst_n_993,PCIE_3_1_inst_n_994,PCIE_3_1_inst_n_995,PCIE_3_1_inst_n_996,PCIE_3_1_inst_n_997}),
        .LL2LMMAXISRXTUSER({PCIE_3_1_inst_n_562,PCIE_3_1_inst_n_563,PCIE_3_1_inst_n_564,PCIE_3_1_inst_n_565,PCIE_3_1_inst_n_566,PCIE_3_1_inst_n_567,PCIE_3_1_inst_n_568,PCIE_3_1_inst_n_569,PCIE_3_1_inst_n_570,PCIE_3_1_inst_n_571,PCIE_3_1_inst_n_572,PCIE_3_1_inst_n_573,PCIE_3_1_inst_n_574,PCIE_3_1_inst_n_575,PCIE_3_1_inst_n_576,PCIE_3_1_inst_n_577,PCIE_3_1_inst_n_578,PCIE_3_1_inst_n_579}),
        .LL2LMMAXISRXTVALID({PCIE_3_1_inst_n_2630,PCIE_3_1_inst_n_2631,PCIE_3_1_inst_n_2632,PCIE_3_1_inst_n_2633,PCIE_3_1_inst_n_2634,PCIE_3_1_inst_n_2635,PCIE_3_1_inst_n_2636,PCIE_3_1_inst_n_2637}),
        .LL2LMSAXISTXTREADY({PCIE_3_1_inst_n_2638,PCIE_3_1_inst_n_2639,PCIE_3_1_inst_n_2640,PCIE_3_1_inst_n_2641,PCIE_3_1_inst_n_2642,PCIE_3_1_inst_n_2643,PCIE_3_1_inst_n_2644,PCIE_3_1_inst_n_2645}),
        .LL2LMSAXISTXTUSER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .LL2LMSAXISTXTVALID(1'b0),
        .LL2LMTXTLPID0({1'b0,1'b0,1'b0,1'b0}),
        .LL2LMTXTLPID1({1'b0,1'b0,1'b0,1'b0}),
        .MAXISCQTDATA({PCIE_3_1_inst_n_998,PCIE_3_1_inst_n_999,PCIE_3_1_inst_n_1000,PCIE_3_1_inst_n_1001,PCIE_3_1_inst_n_1002,PCIE_3_1_inst_n_1003,PCIE_3_1_inst_n_1004,PCIE_3_1_inst_n_1005,PCIE_3_1_inst_n_1006,PCIE_3_1_inst_n_1007,PCIE_3_1_inst_n_1008,PCIE_3_1_inst_n_1009,PCIE_3_1_inst_n_1010,PCIE_3_1_inst_n_1011,PCIE_3_1_inst_n_1012,PCIE_3_1_inst_n_1013,PCIE_3_1_inst_n_1014,PCIE_3_1_inst_n_1015,PCIE_3_1_inst_n_1016,PCIE_3_1_inst_n_1017,PCIE_3_1_inst_n_1018,PCIE_3_1_inst_n_1019,PCIE_3_1_inst_n_1020,PCIE_3_1_inst_n_1021,PCIE_3_1_inst_n_1022,PCIE_3_1_inst_n_1023,PCIE_3_1_inst_n_1024,PCIE_3_1_inst_n_1025,PCIE_3_1_inst_n_1026,PCIE_3_1_inst_n_1027,PCIE_3_1_inst_n_1028,PCIE_3_1_inst_n_1029,PCIE_3_1_inst_n_1030,PCIE_3_1_inst_n_1031,PCIE_3_1_inst_n_1032,PCIE_3_1_inst_n_1033,PCIE_3_1_inst_n_1034,PCIE_3_1_inst_n_1035,PCIE_3_1_inst_n_1036,PCIE_3_1_inst_n_1037,PCIE_3_1_inst_n_1038,PCIE_3_1_inst_n_1039,PCIE_3_1_inst_n_1040,PCIE_3_1_inst_n_1041,PCIE_3_1_inst_n_1042,PCIE_3_1_inst_n_1043,PCIE_3_1_inst_n_1044,PCIE_3_1_inst_n_1045,PCIE_3_1_inst_n_1046,PCIE_3_1_inst_n_1047,PCIE_3_1_inst_n_1048,PCIE_3_1_inst_n_1049,PCIE_3_1_inst_n_1050,PCIE_3_1_inst_n_1051,PCIE_3_1_inst_n_1052,PCIE_3_1_inst_n_1053,PCIE_3_1_inst_n_1054,PCIE_3_1_inst_n_1055,PCIE_3_1_inst_n_1056,PCIE_3_1_inst_n_1057,PCIE_3_1_inst_n_1058,PCIE_3_1_inst_n_1059,PCIE_3_1_inst_n_1060,PCIE_3_1_inst_n_1061,PCIE_3_1_inst_n_1062,PCIE_3_1_inst_n_1063,PCIE_3_1_inst_n_1064,PCIE_3_1_inst_n_1065,PCIE_3_1_inst_n_1066,PCIE_3_1_inst_n_1067,PCIE_3_1_inst_n_1068,PCIE_3_1_inst_n_1069,PCIE_3_1_inst_n_1070,PCIE_3_1_inst_n_1071,PCIE_3_1_inst_n_1072,PCIE_3_1_inst_n_1073,PCIE_3_1_inst_n_1074,PCIE_3_1_inst_n_1075,PCIE_3_1_inst_n_1076,PCIE_3_1_inst_n_1077,PCIE_3_1_inst_n_1078,PCIE_3_1_inst_n_1079,PCIE_3_1_inst_n_1080,PCIE_3_1_inst_n_1081,PCIE_3_1_inst_n_1082,PCIE_3_1_inst_n_1083,PCIE_3_1_inst_n_1084,PCIE_3_1_inst_n_1085,PCIE_3_1_inst_n_1086,PCIE_3_1_inst_n_1087,PCIE_3_1_inst_n_1088,PCIE_3_1_inst_n_1089,PCIE_3_1_inst_n_1090,PCIE_3_1_inst_n_1091,PCIE_3_1_inst_n_1092,PCIE_3_1_inst_n_1093,PCIE_3_1_inst_n_1094,PCIE_3_1_inst_n_1095,PCIE_3_1_inst_n_1096,PCIE_3_1_inst_n_1097,PCIE_3_1_inst_n_1098,PCIE_3_1_inst_n_1099,PCIE_3_1_inst_n_1100,PCIE_3_1_inst_n_1101,PCIE_3_1_inst_n_1102,PCIE_3_1_inst_n_1103,PCIE_3_1_inst_n_1104,PCIE_3_1_inst_n_1105,PCIE_3_1_inst_n_1106,PCIE_3_1_inst_n_1107,PCIE_3_1_inst_n_1108,PCIE_3_1_inst_n_1109,PCIE_3_1_inst_n_1110,PCIE_3_1_inst_n_1111,PCIE_3_1_inst_n_1112,PCIE_3_1_inst_n_1113,PCIE_3_1_inst_n_1114,PCIE_3_1_inst_n_1115,PCIE_3_1_inst_n_1116,PCIE_3_1_inst_n_1117,PCIE_3_1_inst_n_1118,PCIE_3_1_inst_n_1119,PCIE_3_1_inst_n_1120,PCIE_3_1_inst_n_1121,PCIE_3_1_inst_n_1122,PCIE_3_1_inst_n_1123,PCIE_3_1_inst_n_1124,PCIE_3_1_inst_n_1125,m_axis_cq_tdata}),
        .MAXISCQTKEEP({PCIE_3_1_inst_n_2646,PCIE_3_1_inst_n_2647,PCIE_3_1_inst_n_2648,PCIE_3_1_inst_n_2649,m_axis_cq_tkeep}),
        .MAXISCQTLAST(m_axis_cq_tlast),
        .MAXISCQTREADY({m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready,m_axis_cq_tready}),
        .MAXISCQTUSER(m_axis_cq_tuser),
        .MAXISCQTVALID(m_axis_cq_tvalid),
        .MAXISRCTDATA({PCIE_3_1_inst_n_1254,PCIE_3_1_inst_n_1255,PCIE_3_1_inst_n_1256,PCIE_3_1_inst_n_1257,PCIE_3_1_inst_n_1258,PCIE_3_1_inst_n_1259,PCIE_3_1_inst_n_1260,PCIE_3_1_inst_n_1261,PCIE_3_1_inst_n_1262,PCIE_3_1_inst_n_1263,PCIE_3_1_inst_n_1264,PCIE_3_1_inst_n_1265,PCIE_3_1_inst_n_1266,PCIE_3_1_inst_n_1267,PCIE_3_1_inst_n_1268,PCIE_3_1_inst_n_1269,PCIE_3_1_inst_n_1270,PCIE_3_1_inst_n_1271,PCIE_3_1_inst_n_1272,PCIE_3_1_inst_n_1273,PCIE_3_1_inst_n_1274,PCIE_3_1_inst_n_1275,PCIE_3_1_inst_n_1276,PCIE_3_1_inst_n_1277,PCIE_3_1_inst_n_1278,PCIE_3_1_inst_n_1279,PCIE_3_1_inst_n_1280,PCIE_3_1_inst_n_1281,PCIE_3_1_inst_n_1282,PCIE_3_1_inst_n_1283,PCIE_3_1_inst_n_1284,PCIE_3_1_inst_n_1285,PCIE_3_1_inst_n_1286,PCIE_3_1_inst_n_1287,PCIE_3_1_inst_n_1288,PCIE_3_1_inst_n_1289,PCIE_3_1_inst_n_1290,PCIE_3_1_inst_n_1291,PCIE_3_1_inst_n_1292,PCIE_3_1_inst_n_1293,PCIE_3_1_inst_n_1294,PCIE_3_1_inst_n_1295,PCIE_3_1_inst_n_1296,PCIE_3_1_inst_n_1297,PCIE_3_1_inst_n_1298,PCIE_3_1_inst_n_1299,PCIE_3_1_inst_n_1300,PCIE_3_1_inst_n_1301,PCIE_3_1_inst_n_1302,PCIE_3_1_inst_n_1303,PCIE_3_1_inst_n_1304,PCIE_3_1_inst_n_1305,PCIE_3_1_inst_n_1306,PCIE_3_1_inst_n_1307,PCIE_3_1_inst_n_1308,PCIE_3_1_inst_n_1309,PCIE_3_1_inst_n_1310,PCIE_3_1_inst_n_1311,PCIE_3_1_inst_n_1312,PCIE_3_1_inst_n_1313,PCIE_3_1_inst_n_1314,PCIE_3_1_inst_n_1315,PCIE_3_1_inst_n_1316,PCIE_3_1_inst_n_1317,PCIE_3_1_inst_n_1318,PCIE_3_1_inst_n_1319,PCIE_3_1_inst_n_1320,PCIE_3_1_inst_n_1321,PCIE_3_1_inst_n_1322,PCIE_3_1_inst_n_1323,PCIE_3_1_inst_n_1324,PCIE_3_1_inst_n_1325,PCIE_3_1_inst_n_1326,PCIE_3_1_inst_n_1327,PCIE_3_1_inst_n_1328,PCIE_3_1_inst_n_1329,PCIE_3_1_inst_n_1330,PCIE_3_1_inst_n_1331,PCIE_3_1_inst_n_1332,PCIE_3_1_inst_n_1333,PCIE_3_1_inst_n_1334,PCIE_3_1_inst_n_1335,PCIE_3_1_inst_n_1336,PCIE_3_1_inst_n_1337,PCIE_3_1_inst_n_1338,PCIE_3_1_inst_n_1339,PCIE_3_1_inst_n_1340,PCIE_3_1_inst_n_1341,PCIE_3_1_inst_n_1342,PCIE_3_1_inst_n_1343,PCIE_3_1_inst_n_1344,PCIE_3_1_inst_n_1345,PCIE_3_1_inst_n_1346,PCIE_3_1_inst_n_1347,PCIE_3_1_inst_n_1348,PCIE_3_1_inst_n_1349,PCIE_3_1_inst_n_1350,PCIE_3_1_inst_n_1351,PCIE_3_1_inst_n_1352,PCIE_3_1_inst_n_1353,PCIE_3_1_inst_n_1354,PCIE_3_1_inst_n_1355,PCIE_3_1_inst_n_1356,PCIE_3_1_inst_n_1357,PCIE_3_1_inst_n_1358,PCIE_3_1_inst_n_1359,PCIE_3_1_inst_n_1360,PCIE_3_1_inst_n_1361,PCIE_3_1_inst_n_1362,PCIE_3_1_inst_n_1363,PCIE_3_1_inst_n_1364,PCIE_3_1_inst_n_1365,PCIE_3_1_inst_n_1366,PCIE_3_1_inst_n_1367,PCIE_3_1_inst_n_1368,PCIE_3_1_inst_n_1369,PCIE_3_1_inst_n_1370,PCIE_3_1_inst_n_1371,PCIE_3_1_inst_n_1372,PCIE_3_1_inst_n_1373,PCIE_3_1_inst_n_1374,PCIE_3_1_inst_n_1375,PCIE_3_1_inst_n_1376,PCIE_3_1_inst_n_1377,PCIE_3_1_inst_n_1378,PCIE_3_1_inst_n_1379,PCIE_3_1_inst_n_1380,PCIE_3_1_inst_n_1381,m_axis_rc_tdata}),
        .MAXISRCTKEEP({PCIE_3_1_inst_n_2654,PCIE_3_1_inst_n_2655,PCIE_3_1_inst_n_2656,PCIE_3_1_inst_n_2657,m_axis_rc_tkeep}),
        .MAXISRCTLAST(m_axis_rc_tlast),
        .MAXISRCTREADY({m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready,m_axis_rc_tready}),
        .MAXISRCTUSER(m_axis_rc_tuser),
        .MAXISRCTVALID(m_axis_rc_tvalid),
        .MCAPCLK(MCAPCLK),
        .MCAPPERST0B(sys_reset),
        .MCAPPERST1B(pcie_perstn1_in),
        .MGMTRESETN(MGMTSTICKYRESETN),
        .MGMTSTICKYRESETN(MGMTSTICKYRESETN),
        .MICOMPLETIONRAMREADADDRESSAL(MICOMPLETIONRAMREADADDRESSAL),
        .MICOMPLETIONRAMREADADDRESSAU(MICOMPLETIONRAMREADADDRESSAU),
        .MICOMPLETIONRAMREADADDRESSBL(MICOMPLETIONRAMREADADDRESSBL),
        .MICOMPLETIONRAMREADADDRESSBU(MICOMPLETIONRAMREADADDRESSBU),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL(MICOMPLETIONRAMREADENABLEL),
        .MICOMPLETIONRAMREADENABLEU(MICOMPLETIONRAMREADENABLEU),
        .MICOMPLETIONRAMWRITEADDRESSAL(MICOMPLETIONRAMWRITEADDRESSAL),
        .MICOMPLETIONRAMWRITEADDRESSAU(MICOMPLETIONRAMWRITEADDRESSAU),
        .MICOMPLETIONRAMWRITEADDRESSBL(MICOMPLETIONRAMWRITEADDRESSBL),
        .MICOMPLETIONRAMWRITEADDRESSBU(MICOMPLETIONRAMWRITEADDRESSBU),
        .MICOMPLETIONRAMWRITEDATAL(MICOMPLETIONRAMWRITEDATAL),
        .MICOMPLETIONRAMWRITEDATAU(MICOMPLETIONRAMWRITEDATAU),
        .MICOMPLETIONRAMWRITEENABLEL(MICOMPLETIONRAMWRITEENABLEL),
        .MICOMPLETIONRAMWRITEENABLEU(MICOMPLETIONRAMWRITEENABLEU),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMREADENABLE(MIREPLAYRAMREADENABLE),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .MIREQUESTRAMREADADDRESSA(MIREQUESTRAMREADADDRESSA),
        .MIREQUESTRAMREADADDRESSB(MIREQUESTRAMREADADDRESSB),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMREADENABLE(MIREQUESTRAMREADENABLE),
        .MIREQUESTRAMWRITEADDRESSA(MIREQUESTRAMWRITEADDRESSA),
        .MIREQUESTRAMWRITEADDRESSB(MIREQUESTRAMWRITEADDRESSB),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .PCIECQNPREQ(pcie_cq_np_req),
        .PCIECQNPREQCOUNT(pcie_cq_np_req_count),
        .PCIEPERST0B(PCIEPERST0B),
        .PCIEPERST1B(pcie_perstn1_out),
        .PCIERQSEQNUM(pcie_rq_seq_num),
        .PCIERQSEQNUMVLD(pcie_rq_seq_num_vld),
        .PCIERQTAG(pcie_rq_tag),
        .PCIERQTAGAV(pcie_rq_tag_av),
        .PCIERQTAGVLD(pcie_rq_tag_vld),
        .PCIETFCNPDAV(pcie_tfc_npd_av),
        .PCIETFCNPHAV(pcie_tfc_nph_av),
        .PIPECLK(CLK),
        .PIPEEQFS({\pipe_stages_1.pipe_tx_eqfs_q_reg[5] [1],1'b0,\pipe_stages_1.pipe_tx_eqfs_q_reg[5] [0],1'b0,1'b0,1'b0}),
        .PIPEEQLF({1'b0,1'b0,\pipe_stages_1.pipe_tx_eqlf_q_reg[3] ,1'b0,1'b0}),
        .PIPERESETN(RESETN),
        .PIPERX0CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ),
        .PIPERX0DATA(\pipe_stages_1.pipe_rx_data_q_reg[31] ),
        .PIPERX0DATAVALID(PIPERX0DATAVALID),
        .PIPERX0ELECIDLE(PIPERX0ELECIDLE),
        .PIPERX0EQCONTROL(PIPERX0EQCONTROL),
        .PIPERX0EQDONE(PIPERX0EQDONE),
        .PIPERX0EQLPADAPTDONE(PIPERX0EQLPADAPTDONE),
        .PIPERX0EQLPLFFS(PIPERX0EQLPLFFS),
        .PIPERX0EQLPLFFSSEL(PIPERX0EQLPLFFSSEL),
        .PIPERX0EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX0EQLPTXPRESET(PIPERX0EQLPTXPRESET),
        .PIPERX0EQPRESET(PIPERX0EQPRESET),
        .PIPERX0PHYSTATUS(PIPERX0PHYSTATUS),
        .PIPERX0POLARITY(PIPERX0POLARITY),
        .PIPERX0STARTBLOCK(PIPERX0STARTBLOCK),
        .PIPERX0STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2] ),
        .PIPERX0SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1] ),
        .PIPERX0VALID(PIPERX0VALID),
        .PIPERX1CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ),
        .PIPERX1DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_0 ),
        .PIPERX1DATAVALID(PIPERX1DATAVALID),
        .PIPERX1ELECIDLE(PIPERX1ELECIDLE),
        .PIPERX1EQCONTROL(PIPERX1EQCONTROL),
        .PIPERX1EQDONE(PIPERX1EQDONE),
        .PIPERX1EQLPADAPTDONE(PIPERX1EQLPADAPTDONE),
        .PIPERX1EQLPLFFS(PIPERX1EQLPLFFS),
        .PIPERX1EQLPLFFSSEL(PIPERX1EQLPLFFSSEL),
        .PIPERX1EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX1EQLPTXPRESET(PIPERX1EQLPTXPRESET),
        .PIPERX1EQPRESET(PIPERX1EQPRESET),
        .PIPERX1PHYSTATUS(PIPERX1PHYSTATUS),
        .PIPERX1POLARITY(PIPERX1POLARITY),
        .PIPERX1STARTBLOCK(PIPERX1STARTBLOCK),
        .PIPERX1STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ),
        .PIPERX1SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_0 ),
        .PIPERX1VALID(PIPERX1VALID),
        .PIPERX2CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ),
        .PIPERX2DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_1 ),
        .PIPERX2DATAVALID(PIPERX2DATAVALID),
        .PIPERX2ELECIDLE(PIPERX2ELECIDLE),
        .PIPERX2EQCONTROL(PIPERX2EQCONTROL),
        .PIPERX2EQDONE(PIPERX2EQDONE),
        .PIPERX2EQLPADAPTDONE(PIPERX2EQLPADAPTDONE),
        .PIPERX2EQLPLFFS(PIPERX2EQLPLFFS),
        .PIPERX2EQLPLFFSSEL(PIPERX2EQLPLFFSSEL),
        .PIPERX2EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX2EQLPTXPRESET(PIPERX2EQLPTXPRESET),
        .PIPERX2EQPRESET(PIPERX2EQPRESET),
        .PIPERX2PHYSTATUS(PIPERX2PHYSTATUS),
        .PIPERX2POLARITY(PIPERX2POLARITY),
        .PIPERX2STARTBLOCK(PIPERX2STARTBLOCK),
        .PIPERX2STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ),
        .PIPERX2SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_1 ),
        .PIPERX2VALID(PIPERX2VALID),
        .PIPERX3CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ),
        .PIPERX3DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_2 ),
        .PIPERX3DATAVALID(PIPERX3DATAVALID),
        .PIPERX3ELECIDLE(PIPERX3ELECIDLE),
        .PIPERX3EQCONTROL(PIPERX3EQCONTROL),
        .PIPERX3EQDONE(PIPERX3EQDONE),
        .PIPERX3EQLPADAPTDONE(PIPERX3EQLPADAPTDONE),
        .PIPERX3EQLPLFFS(PIPERX3EQLPLFFS),
        .PIPERX3EQLPLFFSSEL(PIPERX3EQLPLFFSSEL),
        .PIPERX3EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX3EQLPTXPRESET(PIPERX3EQLPTXPRESET),
        .PIPERX3EQPRESET(PIPERX3EQPRESET),
        .PIPERX3PHYSTATUS(PIPERX3PHYSTATUS),
        .PIPERX3POLARITY(PIPERX3POLARITY),
        .PIPERX3STARTBLOCK(PIPERX3STARTBLOCK),
        .PIPERX3STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ),
        .PIPERX3SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_2 ),
        .PIPERX3VALID(PIPERX3VALID),
        .PIPERX4CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ),
        .PIPERX4DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_3 ),
        .PIPERX4DATAVALID(PIPERX4DATAVALID),
        .PIPERX4ELECIDLE(PIPERX4ELECIDLE),
        .PIPERX4EQCONTROL(PIPERX4EQCONTROL),
        .PIPERX4EQDONE(PIPERX4EQDONE),
        .PIPERX4EQLPADAPTDONE(PIPERX4EQLPADAPTDONE),
        .PIPERX4EQLPLFFS(PIPERX4EQLPLFFS),
        .PIPERX4EQLPLFFSSEL(PIPERX4EQLPLFFSSEL),
        .PIPERX4EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX4EQLPTXPRESET(PIPERX4EQLPTXPRESET),
        .PIPERX4EQPRESET(PIPERX4EQPRESET),
        .PIPERX4PHYSTATUS(PIPERX4PHYSTATUS),
        .PIPERX4POLARITY(PIPERX4POLARITY),
        .PIPERX4STARTBLOCK(PIPERX4STARTBLOCK),
        .PIPERX4STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ),
        .PIPERX4SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_3 ),
        .PIPERX4VALID(PIPERX4VALID),
        .PIPERX5CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ),
        .PIPERX5DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_4 ),
        .PIPERX5DATAVALID(PIPERX5DATAVALID),
        .PIPERX5ELECIDLE(PIPERX5ELECIDLE),
        .PIPERX5EQCONTROL(PIPERX5EQCONTROL),
        .PIPERX5EQDONE(PIPERX5EQDONE),
        .PIPERX5EQLPADAPTDONE(PIPERX5EQLPADAPTDONE),
        .PIPERX5EQLPLFFS(PIPERX5EQLPLFFS),
        .PIPERX5EQLPLFFSSEL(PIPERX5EQLPLFFSSEL),
        .PIPERX5EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX5EQLPTXPRESET(PIPERX5EQLPTXPRESET),
        .PIPERX5EQPRESET(PIPERX5EQPRESET),
        .PIPERX5PHYSTATUS(PIPERX5PHYSTATUS),
        .PIPERX5POLARITY(PIPERX5POLARITY),
        .PIPERX5STARTBLOCK(PIPERX5STARTBLOCK),
        .PIPERX5STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ),
        .PIPERX5SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_4 ),
        .PIPERX5VALID(PIPERX5VALID),
        .PIPERX6CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ),
        .PIPERX6DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_5 ),
        .PIPERX6DATAVALID(PIPERX6DATAVALID),
        .PIPERX6ELECIDLE(PIPERX6ELECIDLE),
        .PIPERX6EQCONTROL(PIPERX6EQCONTROL),
        .PIPERX6EQDONE(PIPERX6EQDONE),
        .PIPERX6EQLPADAPTDONE(PIPERX6EQLPADAPTDONE),
        .PIPERX6EQLPLFFS(PIPERX6EQLPLFFS),
        .PIPERX6EQLPLFFSSEL(PIPERX6EQLPLFFSSEL),
        .PIPERX6EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX6EQLPTXPRESET(PIPERX6EQLPTXPRESET),
        .PIPERX6EQPRESET(PIPERX6EQPRESET),
        .PIPERX6PHYSTATUS(PIPERX6PHYSTATUS),
        .PIPERX6POLARITY(PIPERX6POLARITY),
        .PIPERX6STARTBLOCK(PIPERX6STARTBLOCK),
        .PIPERX6STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ),
        .PIPERX6SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_5 ),
        .PIPERX6VALID(PIPERX6VALID),
        .PIPERX7CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_6 ),
        .PIPERX7DATA(\pipe_stages_1.pipe_rx_data_q_reg[31]_6 ),
        .PIPERX7DATAVALID(PIPERX7DATAVALID),
        .PIPERX7ELECIDLE(PIPERX7ELECIDLE),
        .PIPERX7EQCONTROL(PIPERX7EQCONTROL),
        .PIPERX7EQDONE(PIPERX7EQDONE),
        .PIPERX7EQLPADAPTDONE(PIPERX7EQLPADAPTDONE),
        .PIPERX7EQLPLFFS(PIPERX7EQLPLFFS),
        .PIPERX7EQLPLFFSSEL(PIPERX7EQLPLFFSSEL),
        .PIPERX7EQLPNEWTXCOEFFORPRESET({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,PIPERX7EQLPNEWTXCOEFFORPRESET,1'b0,1'b0}),
        .PIPERX7EQLPTXPRESET(PIPERX7EQLPTXPRESET),
        .PIPERX7EQPRESET(PIPERX7EQPRESET),
        .PIPERX7PHYSTATUS(PIPERX7PHYSTATUS),
        .PIPERX7POLARITY(PIPERX7POLARITY),
        .PIPERX7STARTBLOCK(PIPERX7STARTBLOCK),
        .PIPERX7STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ),
        .PIPERX7SYNCHEADER(\pipe_stages_1.pipe_rx_syncheader_q_reg[1]_6 ),
        .PIPERX7VALID(PIPERX7VALID),
        .PIPETX0CHARISK(PIPETX0CHARISK),
        .PIPETX0COMPLIANCE(PIPETX0COMPLIANCE),
        .PIPETX0DATA(PIPETX0DATA),
        .PIPETX0DATAVALID(PIPETX0DATAVALID),
        .PIPETX0DEEMPH(PIPETX0DEEMPH),
        .PIPETX0ELECIDLE(PIPETX0ELECIDLE),
        .PIPETX0EQCOEFF({1'b0,Q[15:5],1'b0,Q[4:0]}),
        .PIPETX0EQCONTROL(PIPETX0EQCONTROL),
        .PIPETX0EQDEEMPH(PIPETX0EQDEEMPH),
        .PIPETX0EQDONE(PIPETX0EQDONE),
        .PIPETX0EQPRESET(PIPETX0EQPRESET),
        .PIPETX0MARGIN(PIPETX0MARGIN),
        .PIPETX0POWERDOWN(PIPETX0POWERDOWN),
        .PIPETX0RATE(PIPETX0RATE),
        .PIPETX0RCVRDET(PIPETX0RCVRDET),
        .PIPETX0RESET(pipe_tx0_reset),
        .PIPETX0STARTBLOCK(PIPETX0STARTBLOCK),
        .PIPETX0SWING(PIPETX0SWING),
        .PIPETX0SYNCHEADER(PIPETX0SYNCHEADER),
        .PIPETX1CHARISK(PIPETX1CHARISK),
        .PIPETX1COMPLIANCE(PIPETX1COMPLIANCE),
        .PIPETX1DATA(PIPETX1DATA),
        .PIPETX1DATAVALID(PIPETX1DATAVALID),
        .PIPETX1DEEMPH(PCIE_3_1_inst_n_67),
        .PIPETX1ELECIDLE(PIPETX1ELECIDLE),
        .PIPETX1EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4:0]}),
        .PIPETX1EQCONTROL(PIPETX1EQCONTROL),
        .PIPETX1EQDEEMPH(PIPETX1EQDEEMPH),
        .PIPETX1EQDONE(PIPETX1EQDONE),
        .PIPETX1EQPRESET(PIPETX1EQPRESET),
        .PIPETX1MARGIN({PCIE_3_1_inst_n_1546,PCIE_3_1_inst_n_1547,PCIE_3_1_inst_n_1548}),
        .PIPETX1POWERDOWN(pipe_tx1_powerdown),
        .PIPETX1RATE({PCIE_3_1_inst_n_628,PCIE_3_1_inst_n_629}),
        .PIPETX1RCVRDET(PCIE_3_1_inst_n_69),
        .PIPETX1RESET(PCIE_3_1_inst_n_70),
        .PIPETX1STARTBLOCK(PIPETX1STARTBLOCK),
        .PIPETX1SWING(PCIE_3_1_inst_n_72),
        .PIPETX1SYNCHEADER(PIPETX1SYNCHEADER),
        .PIPETX2CHARISK(PIPETX2CHARISK),
        .PIPETX2COMPLIANCE(PIPETX2COMPLIANCE),
        .PIPETX2DATA(PIPETX2DATA),
        .PIPETX2DATAVALID(PIPETX2DATAVALID),
        .PIPETX2DEEMPH(PCIE_3_1_inst_n_75),
        .PIPETX2ELECIDLE(PIPETX2ELECIDLE),
        .PIPETX2EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 [4:0]}),
        .PIPETX2EQCONTROL(PIPETX2EQCONTROL),
        .PIPETX2EQDEEMPH(PIPETX2EQDEEMPH),
        .PIPETX2EQDONE(PIPETX2EQDONE),
        .PIPETX2EQPRESET(PIPETX2EQPRESET),
        .PIPETX2MARGIN({PCIE_3_1_inst_n_1549,PCIE_3_1_inst_n_1550,PCIE_3_1_inst_n_1551}),
        .PIPETX2POWERDOWN(pipe_tx2_powerdown),
        .PIPETX2RATE({PCIE_3_1_inst_n_638,PCIE_3_1_inst_n_639}),
        .PIPETX2RCVRDET(PCIE_3_1_inst_n_77),
        .PIPETX2RESET(PCIE_3_1_inst_n_78),
        .PIPETX2STARTBLOCK(PIPETX2STARTBLOCK),
        .PIPETX2SWING(PCIE_3_1_inst_n_80),
        .PIPETX2SYNCHEADER(PIPETX2SYNCHEADER),
        .PIPETX3CHARISK(PIPETX3CHARISK),
        .PIPETX3COMPLIANCE(PIPETX3COMPLIANCE),
        .PIPETX3DATA(PIPETX3DATA),
        .PIPETX3DATAVALID(PIPETX3DATAVALID),
        .PIPETX3DEEMPH(PCIE_3_1_inst_n_83),
        .PIPETX3ELECIDLE(PIPETX3ELECIDLE),
        .PIPETX3EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 [4:0]}),
        .PIPETX3EQCONTROL(PIPETX3EQCONTROL),
        .PIPETX3EQDEEMPH(PIPETX3EQDEEMPH),
        .PIPETX3EQDONE(PIPETX3EQDONE),
        .PIPETX3EQPRESET(PIPETX3EQPRESET),
        .PIPETX3MARGIN({PCIE_3_1_inst_n_1552,PCIE_3_1_inst_n_1553,PCIE_3_1_inst_n_1554}),
        .PIPETX3POWERDOWN(pipe_tx3_powerdown),
        .PIPETX3RATE({PCIE_3_1_inst_n_648,PCIE_3_1_inst_n_649}),
        .PIPETX3RCVRDET(PCIE_3_1_inst_n_85),
        .PIPETX3RESET(PCIE_3_1_inst_n_86),
        .PIPETX3STARTBLOCK(PIPETX3STARTBLOCK),
        .PIPETX3SWING(PCIE_3_1_inst_n_88),
        .PIPETX3SYNCHEADER(PIPETX3SYNCHEADER),
        .PIPETX4CHARISK(PIPETX4CHARISK),
        .PIPETX4COMPLIANCE(PIPETX4COMPLIANCE),
        .PIPETX4DATA(PIPETX4DATA),
        .PIPETX4DATAVALID(PIPETX4DATAVALID),
        .PIPETX4DEEMPH(PCIE_3_1_inst_n_91),
        .PIPETX4ELECIDLE(PIPETX4ELECIDLE),
        .PIPETX4EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 [4:0]}),
        .PIPETX4EQCONTROL(PIPETX4EQCONTROL),
        .PIPETX4EQDEEMPH(PIPETX4EQDEEMPH),
        .PIPETX4EQDONE(PIPETX4EQDONE),
        .PIPETX4EQPRESET(PIPETX4EQPRESET),
        .PIPETX4MARGIN({PCIE_3_1_inst_n_1555,PCIE_3_1_inst_n_1556,PCIE_3_1_inst_n_1557}),
        .PIPETX4POWERDOWN(pipe_tx4_powerdown),
        .PIPETX4RATE({PCIE_3_1_inst_n_658,PCIE_3_1_inst_n_659}),
        .PIPETX4RCVRDET(PCIE_3_1_inst_n_93),
        .PIPETX4RESET(PCIE_3_1_inst_n_94),
        .PIPETX4STARTBLOCK(PIPETX4STARTBLOCK),
        .PIPETX4SWING(PCIE_3_1_inst_n_96),
        .PIPETX4SYNCHEADER(PIPETX4SYNCHEADER),
        .PIPETX5CHARISK(PIPETX5CHARISK),
        .PIPETX5COMPLIANCE(PIPETX5COMPLIANCE),
        .PIPETX5DATA(PIPETX5DATA),
        .PIPETX5DATAVALID(PIPETX5DATAVALID),
        .PIPETX5DEEMPH(PCIE_3_1_inst_n_99),
        .PIPETX5ELECIDLE(PIPETX5ELECIDLE),
        .PIPETX5EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 [4:0]}),
        .PIPETX5EQCONTROL(PIPETX5EQCONTROL),
        .PIPETX5EQDEEMPH(PIPETX5EQDEEMPH),
        .PIPETX5EQDONE(PIPETX5EQDONE),
        .PIPETX5EQPRESET(PIPETX5EQPRESET),
        .PIPETX5MARGIN({PCIE_3_1_inst_n_1558,PCIE_3_1_inst_n_1559,PCIE_3_1_inst_n_1560}),
        .PIPETX5POWERDOWN(pipe_tx5_powerdown),
        .PIPETX5RATE({PCIE_3_1_inst_n_668,PCIE_3_1_inst_n_669}),
        .PIPETX5RCVRDET(PCIE_3_1_inst_n_101),
        .PIPETX5RESET(PCIE_3_1_inst_n_102),
        .PIPETX5STARTBLOCK(PIPETX5STARTBLOCK),
        .PIPETX5SWING(PCIE_3_1_inst_n_104),
        .PIPETX5SYNCHEADER(PIPETX5SYNCHEADER),
        .PIPETX6CHARISK(PIPETX6CHARISK),
        .PIPETX6COMPLIANCE(PIPETX6COMPLIANCE),
        .PIPETX6DATA(PIPETX6DATA),
        .PIPETX6DATAVALID(PIPETX6DATAVALID),
        .PIPETX6DEEMPH(PCIE_3_1_inst_n_107),
        .PIPETX6ELECIDLE(PIPETX6ELECIDLE),
        .PIPETX6EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 [4:0]}),
        .PIPETX6EQCONTROL(PIPETX6EQCONTROL),
        .PIPETX6EQDEEMPH(PIPETX6EQDEEMPH),
        .PIPETX6EQDONE(PIPETX6EQDONE),
        .PIPETX6EQPRESET(PIPETX6EQPRESET),
        .PIPETX6MARGIN({PCIE_3_1_inst_n_1561,PCIE_3_1_inst_n_1562,PCIE_3_1_inst_n_1563}),
        .PIPETX6POWERDOWN(pipe_tx6_powerdown),
        .PIPETX6RATE({PCIE_3_1_inst_n_678,PCIE_3_1_inst_n_679}),
        .PIPETX6RCVRDET(PCIE_3_1_inst_n_109),
        .PIPETX6RESET(PCIE_3_1_inst_n_110),
        .PIPETX6STARTBLOCK(PIPETX6STARTBLOCK),
        .PIPETX6SWING(PCIE_3_1_inst_n_112),
        .PIPETX6SYNCHEADER(PIPETX6SYNCHEADER),
        .PIPETX7CHARISK(PIPETX7CHARISK),
        .PIPETX7COMPLIANCE(PIPETX7COMPLIANCE),
        .PIPETX7DATA(PIPETX7DATA),
        .PIPETX7DATAVALID(PIPETX7DATAVALID),
        .PIPETX7DEEMPH(PCIE_3_1_inst_n_115),
        .PIPETX7ELECIDLE(PIPETX7ELECIDLE),
        .PIPETX7EQCOEFF({1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 [15:5],1'b0,\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 [4:0]}),
        .PIPETX7EQCONTROL(PIPETX7EQCONTROL),
        .PIPETX7EQDEEMPH(PIPETX7EQDEEMPH),
        .PIPETX7EQDONE(PIPETX7EQDONE),
        .PIPETX7EQPRESET(PIPETX7EQPRESET),
        .PIPETX7MARGIN({PCIE_3_1_inst_n_1564,PCIE_3_1_inst_n_1565,PCIE_3_1_inst_n_1566}),
        .PIPETX7POWERDOWN(pipe_tx7_powerdown),
        .PIPETX7RATE({PCIE_3_1_inst_n_688,PCIE_3_1_inst_n_689}),
        .PIPETX7RCVRDET(PCIE_3_1_inst_n_117),
        .PIPETX7RESET(PCIE_3_1_inst_n_118),
        .PIPETX7STARTBLOCK(PIPETX7STARTBLOCK),
        .PIPETX7SWING(PCIE_3_1_inst_n_120),
        .PIPETX7SYNCHEADER(PIPETX7SYNCHEADER),
        .PLEQINPROGRESS(pl_eq_in_progress),
        .PLEQPHASE(pl_eq_phase),
        .PLEQRESETEIEOSCOUNT(pl_eq_reset_eieos_count),
        .PLGEN2UPSTREAMPREFERDEEMPH(pl_gen2_upstream_prefer_deemph),
        .RESETN(RESETN),
        .SAXISCCTDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axis_cc_tdata}),
        .SAXISCCTKEEP({1'b0,1'b0,1'b0,1'b0,s_axis_cc_tkeep}),
        .SAXISCCTLAST(s_axis_cc_tlast),
        .SAXISCCTREADY(s_axis_cc_tready),
        .SAXISCCTUSER(s_axis_cc_tuser),
        .SAXISCCTVALID(s_axis_cc_tvalid),
        .SAXISRQTDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axis_rq_tdata}),
        .SAXISRQTKEEP({1'b0,1'b0,1'b0,1'b0,s_axis_rq_tkeep}),
        .SAXISRQTLAST(s_axis_rq_tlast),
        .SAXISRQTREADY(s_axis_rq_tready),
        .SAXISRQTUSER(s_axis_rq_tuser),
        .SAXISRQTVALID(s_axis_rq_tvalid),
        .SPAREIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .SPAREOUT({PCIE_3_1_inst_n_2015,PCIE_3_1_inst_n_2016,PCIE_3_1_inst_n_2017,PCIE_3_1_inst_n_2018,PCIE_3_1_inst_n_2019,PCIE_3_1_inst_n_2020,PCIE_3_1_inst_n_2021,PCIE_3_1_inst_n_2022,PCIE_3_1_inst_n_2023,PCIE_3_1_inst_n_2024,PCIE_3_1_inst_n_2025,PCIE_3_1_inst_n_2026,PCIE_3_1_inst_n_2027,PCIE_3_1_inst_n_2028,PCIE_3_1_inst_n_2029,PCIE_3_1_inst_n_2030,PCIE_3_1_inst_n_2031,PCIE_3_1_inst_n_2032,PCIE_3_1_inst_n_2033,PCIE_3_1_inst_n_2034,PCIE_3_1_inst_n_2035,PCIE_3_1_inst_n_2036,PCIE_3_1_inst_n_2037,PCIE_3_1_inst_n_2038,PCIE_3_1_inst_n_2039,PCIE_3_1_inst_n_2040,PCIE_3_1_inst_n_2041,PCIE_3_1_inst_n_2042,PCIE_3_1_inst_n_2043,PCIE_3_1_inst_n_2044,PCIE_3_1_inst_n_2045,PCIE_3_1_inst_n_2046}),
        .USERCLK(idle_reg));
  LUT2 #(
    .INIT(4'hB)) 
    PCIE_3_1_inst_i_1
       (.I0(cap_rel),
        .I1(cap_gnt),
        .O(PCIE_3_1_inst_i_1_n_0));
  pcie3_ultrascale_0_pcie3_ultrascale_0_bram bram_inst
       (.CORECLKMIREQUESTRAM(CORECLKMIREQUESTRAM),
        .MICOMPLETIONRAMREADDATA(MICOMPLETIONRAMREADDATA),
        .MICOMPLETIONRAMREADENABLEL(MICOMPLETIONRAMREADENABLEL),
        .MICOMPLETIONRAMREADENABLEU(MICOMPLETIONRAMREADENABLEU),
        .MICOMPLETIONRAMWRITEENABLEL(MICOMPLETIONRAMWRITEENABLEL),
        .MICOMPLETIONRAMWRITEENABLEU(MICOMPLETIONRAMWRITEENABLEU),
        .MIREPLAYRAMADDRESS(MIREPLAYRAMADDRESS),
        .MIREPLAYRAMREADDATA(MIREPLAYRAMREADDATA),
        .MIREPLAYRAMWRITEDATA(MIREPLAYRAMWRITEDATA),
        .MIREPLAYRAMWRITEENABLE(MIREPLAYRAMWRITEENABLE),
        .MIREQUESTRAMREADDATA(MIREQUESTRAMREADDATA),
        .MIREQUESTRAMREADENABLE(MIREQUESTRAMREADENABLE),
        .MIREQUESTRAMWRITEDATA(MIREQUESTRAMWRITEDATA),
        .MIREQUESTRAMWRITEENABLE(MIREQUESTRAMWRITEENABLE),
        .mi_cpl_raddr0_i(MICOMPLETIONRAMREADADDRESSAL),
        .mi_cpl_raddr1_i(MICOMPLETIONRAMREADADDRESSBL),
        .mi_cpl_raddr2_i(MICOMPLETIONRAMREADADDRESSAU),
        .mi_cpl_raddr3_i(MICOMPLETIONRAMREADADDRESSBU),
        .mi_cpl_waddr0_i(MICOMPLETIONRAMWRITEADDRESSAL),
        .mi_cpl_waddr1_i(MICOMPLETIONRAMWRITEADDRESSBL),
        .mi_cpl_waddr2_i(MICOMPLETIONRAMWRITEADDRESSAU),
        .mi_cpl_waddr3_i(MICOMPLETIONRAMWRITEADDRESSBU),
        .mi_cpl_wdata_i({MICOMPLETIONRAMWRITEDATAU[70:63],MICOMPLETIONRAMWRITEDATAU[61:54],MICOMPLETIONRAMWRITEDATAU[52:45],MICOMPLETIONRAMWRITEDATAU[43:36],MICOMPLETIONRAMWRITEDATAU[34:27],MICOMPLETIONRAMWRITEDATAU[25:18],MICOMPLETIONRAMWRITEDATAU[16:9],MICOMPLETIONRAMWRITEDATAU[7:0],MICOMPLETIONRAMWRITEDATAL[70:63],MICOMPLETIONRAMWRITEDATAL[61:54],MICOMPLETIONRAMWRITEDATAL[52:45],MICOMPLETIONRAMWRITEDATAL[43:36],MICOMPLETIONRAMWRITEDATAL[34:27],MICOMPLETIONRAMWRITEDATAL[25:18],MICOMPLETIONRAMWRITEDATAL[16:9],MICOMPLETIONRAMWRITEDATAL[7:0]}),
        .mi_cpl_wdip_i({MICOMPLETIONRAMWRITEDATAU[71],MICOMPLETIONRAMWRITEDATAU[62],MICOMPLETIONRAMWRITEDATAU[53],MICOMPLETIONRAMWRITEDATAU[44],MICOMPLETIONRAMWRITEDATAU[35],MICOMPLETIONRAMWRITEDATAU[26],MICOMPLETIONRAMWRITEDATAU[17],MICOMPLETIONRAMWRITEDATAU[8],MICOMPLETIONRAMWRITEDATAL[71],MICOMPLETIONRAMWRITEDATAL[62],MICOMPLETIONRAMWRITEDATAL[53],MICOMPLETIONRAMWRITEDATAL[44],MICOMPLETIONRAMWRITEDATAL[35],MICOMPLETIONRAMWRITEDATAL[26],MICOMPLETIONRAMWRITEDATAL[17],MICOMPLETIONRAMWRITEDATAL[8]}),
        .mi_req_raddr0_i(MIREQUESTRAMREADADDRESSA),
        .mi_req_raddr1_i(MIREQUESTRAMREADADDRESSB),
        .mi_req_waddr0_i(MIREQUESTRAMWRITEADDRESSA),
        .mi_req_waddr1_i(MIREQUESTRAMWRITEADDRESSB));
  LUT3 #(
    .INIT(8'h80)) 
    reg_user_lnk_up_i_1
       (.I0(PCIEPERST0B),
        .I1(cfg_phy_link_status[1]),
        .I2(cfg_phy_link_status[0]),
        .O(reg_user_lnk_up_reg));
  LUT2 #(
    .INIT(4'hB)) 
    reg_user_reset_i_1
       (.I0(cfg_hot_reset_out),
        .I1(PCIEPERST0B),
        .O(user_reset_int_reg_0));
  LUT6 #(
    .INIT(64'h1000000400000060)) 
    rxcdrhold_req_i_1
       (.I0(cfg_ltssm_state[5]),
        .I1(cfg_ltssm_state[3]),
        .I2(cfg_ltssm_state[2]),
        .I3(cfg_ltssm_state[1]),
        .I4(cfg_ltssm_state[0]),
        .I5(cfg_ltssm_state[4]),
        .O(rxcdrhold_req_reg));
  LUT3 #(
    .INIT(8'hDC)) 
    user_reset_int_i_1
       (.I0(cfg_phy_link_status[1]),
        .I1(cfg_phy_link_down),
        .I2(user_reset_int_reg_1),
        .O(user_reset_int_reg));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_clk" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_clk
   (CLK_PCLK,
    CLK_USERCLK,
    CLK_CORECLK,
    CLK_PCLK_CE,
    CLK_PCLK_CEMASK,
    CLK_PCLK_CLR,
    CLK_PCLK_MASK,
    CLK_USERCLK_IN,
    gt_bufgtdiv,
    CLK_USERCLK_CEMASK,
    lopt,
    lopt_1);
  output CLK_PCLK;
  output CLK_USERCLK;
  output CLK_CORECLK;
  input CLK_PCLK_CE;
  input CLK_PCLK_CEMASK;
  input CLK_PCLK_CLR;
  input CLK_PCLK_MASK;
  input CLK_USERCLK_IN;
  input [8:0]gt_bufgtdiv;
  input CLK_USERCLK_CEMASK;
  input lopt;
  input lopt_1;

  wire CLK_CORECLK;
  wire CLK_PCLK;
  wire CLK_PCLK_CE;
  wire CLK_PCLK_CEMASK;
  wire CLK_PCLK_CLR;
  wire CLK_PCLK_MASK;
  wire CLK_USERCLK;
  wire CLK_USERCLK_CEMASK;
  wire CLK_USERCLK_IN;
  wire [8:0]gt_bufgtdiv;
  wire lopt;
  wire lopt_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT bufg_gt_coreclk
       (.CE(lopt),
        .CEMASK(CLK_USERCLK_CEMASK),
        .CLR(lopt_1),
        .CLRMASK(CLK_USERCLK_CEMASK),
        .DIV(gt_bufgtdiv[5:3]),
        .I(CLK_USERCLK_IN),
        .O(CLK_CORECLK));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT bufg_gt_pclk
       (.CE(lopt),
        .CEMASK(CLK_PCLK_CEMASK),
        .CLR(lopt_1),
        .CLRMASK(CLK_PCLK_MASK),
        .DIV(gt_bufgtdiv[2:0]),
        .I(CLK_USERCLK_IN),
        .O(CLK_PCLK));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT bufg_gt_userclk
       (.CE(lopt),
        .CEMASK(CLK_USERCLK_CEMASK),
        .CLR(lopt_1),
        .CLRMASK(CLK_USERCLK_CEMASK),
        .DIV(gt_bufgtdiv[8:6]),
        .I(CLK_USERCLK_IN),
        .O(CLK_USERCLK));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rst" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rst
   (phy_rrst_n,
    out,
    idle_reg_0,
    in0,
    rst_qpll1pd,
    rst_qpll1reset,
    rxprogdivreset_in,
    gtrxreset_in,
    rxuserrdy_in,
    SR,
    Q,
    pciersttxsyncstart_in,
    sys_clk,
    gt_gtpowergood,
    gt_cplllock,
    int_qpll1lock_out,
    txprgdivresetdone_out,
    gt_txresetdone,
    gt_rxresetdone,
    pciesynctxsyncdone_out,
    gt_phystatus,
    PCIEPERST0B,
    \rrst_n_r_reg[7]_0 );
  output phy_rrst_n;
  output [0:0]out;
  output idle_reg_0;
  output [1:0]in0;
  output rst_qpll1pd;
  output rst_qpll1reset;
  output [0:0]rxprogdivreset_in;
  output [0:0]gtrxreset_in;
  output [0:0]rxuserrdy_in;
  output [0:0]SR;
  output [2:0]Q;
  output [0:0]pciersttxsyncstart_in;
  input sys_clk;
  input [7:0]gt_gtpowergood;
  input [7:0]gt_cplllock;
  input [1:0]int_qpll1lock_out;
  input [7:0]txprgdivresetdone_out;
  input [7:0]gt_txresetdone;
  input [7:0]gt_rxresetdone;
  input [7:0]pciesynctxsyncdone_out;
  input [7:0]gt_phystatus;
  input PCIEPERST0B;
  input \rrst_n_r_reg[7]_0 ;

  wire PCIEPERST0B;
  wire [2:0]Q;
  wire [0:0]SR;
  wire cplllock_r;
  wire [8:1]cpllreset_cnt;
  wire \cpllreset_cnt[0]_i_1_n_0 ;
  wire \cpllreset_cnt[5]_i_2_n_0 ;
  wire \cpllreset_cnt[8]_i_2_n_0 ;
  wire \cpllreset_cnt[8]_i_3_n_0 ;
  wire \cpllreset_cnt_reg_n_0_[0] ;
  wire \cpllreset_cnt_reg_n_0_[1] ;
  wire \cpllreset_cnt_reg_n_0_[2] ;
  wire \cpllreset_cnt_reg_n_0_[3] ;
  wire \cpllreset_cnt_reg_n_0_[4] ;
  wire \cpllreset_cnt_reg_n_0_[5] ;
  wire \cpllreset_cnt_reg_n_0_[6] ;
  wire \cpllreset_cnt_reg_n_0_[7] ;
  wire \cpllreset_cnt_reg_n_0_[8] ;
  wire cpllreset_i_1_n_0;
  wire \cpllreset_r_reg[2]_srl3_n_0 ;
  wire [2:0]fsm;
  wire fsm23_out;
  wire fsm25_out;
  wire \fsm[1]_i_5_n_0 ;
  wire \fsm[1]_i_9_n_0 ;
  wire \fsm[2]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm__0;
  wire [7:0]gt_cplllock;
  wire [7:0]gt_gtpowergood;
  wire [7:0]gt_phystatus;
  wire [7:0]gt_rxresetdone;
  wire [7:0]gt_txresetdone;
  wire gtreset;
  wire gtreset_0;
  wire \gtreset_r_reg[2]_srl3_n_0 ;
  wire [0:0]gtrxreset_in;
  wire idle_i_1_n_0;
  wire idle_reg_0;
  wire [1:0]in0;
  wire [1:0]int_qpll1lock_out;
  wire p_0_in;
  wire [0:0]pciersttxsyncstart_in;
  wire [7:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [7:0]prst_n_r;
  wire prst_n_rdy;
  wire \qpllpd_r_reg[2]_srl3_n_0 ;
  wire qpllreset;
  wire \qpllreset_r_reg[2]_srl3_n_0 ;
  wire resetdone_a;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [7:0]rrst_n_r;
  wire \rrst_n_r_reg[7]_0 ;
  wire rst_qpll1pd;
  wire rst_qpll1reset;
  wire [0:0]rxprogdivreset_in;
  wire [0:0]rxuserrdy_in;
  wire sync_phystatus_n_2;
  wire sync_phystatus_n_3;
  wire sync_qpll1lock_n_0;
  wire sync_rxresetdone_n_0;
  wire sync_rxresetdone_n_1;
  wire sync_txresetdone_n_1;
  wire sync_txresetdone_n_2;
  wire sync_txsync_done_n_0;
  wire sync_txsync_done_n_2;
  wire sys_clk;
  wire sys_or_hot_rst0;
  wire [7:0]txprgdivresetdone_out;
  wire txprogdivreset;
  wire txprogdivreset_i_1_n_0;
  wire \txprogdivreset_r_reg[2]_srl3_n_0 ;
  wire txprogdivresetdone_r;
  wire txsync_done_a;
  wire [1:0]txsync_start_cnt;
  wire \txsync_start_cnt_reg_n_0_[0] ;
  wire \txsync_start_cnt_reg_n_0_[1] ;
  wire txsync_start_i_1_n_0;
  wire userrdy;
  wire \userrdy_r_reg[2]_srl3_n_0 ;

  assign out[0] = prst_n_r[7];
  assign phy_rrst_n = rrst_n_r[7];
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_fsm[2]_i_1__15 
       (.I0(prst_n_r[7]),
        .O(SR));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_fsm_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(sync_txsync_done_n_2),
        .Q(fsm__0[0]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_fsm_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(sync_txresetdone_n_2),
        .Q(fsm__0[1]));
  (* KEEP = "yes" *) 
  FDCE \FSM_sequential_fsm_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(sync_txresetdone_n_1),
        .Q(fsm__0[2]));
  LUT1 #(
    .INIT(2'h1)) 
    PHY_TXOUTCLKSEL_inferred_i_1
       (.I0(in0[0]),
        .O(in0[1]));
  LUT4 #(
    .INIT(16'h0001)) 
    \cpllreset_cnt[0]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[0] ),
        .O(\cpllreset_cnt[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010100)) 
    \cpllreset_cnt[1]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[1] ),
        .I4(\cpllreset_cnt_reg_n_0_[0] ),
        .O(cpllreset_cnt[1]));
  LUT6 #(
    .INIT(64'h0001010001000100)) 
    \cpllreset_cnt[2]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[2] ),
        .I4(\cpllreset_cnt_reg_n_0_[1] ),
        .I5(\cpllreset_cnt_reg_n_0_[0] ),
        .O(cpllreset_cnt[2]));
  LUT5 #(
    .INIT(32'h28888888)) 
    \cpllreset_cnt[3]_i_1 
       (.I0(\cpllreset_cnt[8]_i_2_n_0 ),
        .I1(\cpllreset_cnt_reg_n_0_[3] ),
        .I2(\cpllreset_cnt_reg_n_0_[2] ),
        .I3(\cpllreset_cnt_reg_n_0_[0] ),
        .I4(\cpllreset_cnt_reg_n_0_[1] ),
        .O(cpllreset_cnt[3]));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \cpllreset_cnt[4]_i_1 
       (.I0(\cpllreset_cnt[8]_i_2_n_0 ),
        .I1(\cpllreset_cnt_reg_n_0_[4] ),
        .I2(\cpllreset_cnt_reg_n_0_[3] ),
        .I3(\cpllreset_cnt_reg_n_0_[1] ),
        .I4(\cpllreset_cnt_reg_n_0_[0] ),
        .I5(\cpllreset_cnt_reg_n_0_[2] ),
        .O(cpllreset_cnt[4]));
  LUT5 #(
    .INIT(32'h00010100)) 
    \cpllreset_cnt[5]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[5] ),
        .I4(\cpllreset_cnt[5]_i_2_n_0 ),
        .O(cpllreset_cnt[5]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \cpllreset_cnt[5]_i_2 
       (.I0(\cpllreset_cnt_reg_n_0_[4] ),
        .I1(\cpllreset_cnt_reg_n_0_[2] ),
        .I2(\cpllreset_cnt_reg_n_0_[0] ),
        .I3(\cpllreset_cnt_reg_n_0_[1] ),
        .I4(\cpllreset_cnt_reg_n_0_[3] ),
        .O(\cpllreset_cnt[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00010100)) 
    \cpllreset_cnt[6]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[6] ),
        .I4(\cpllreset_cnt[8]_i_3_n_0 ),
        .O(cpllreset_cnt[6]));
  LUT6 #(
    .INIT(64'h0001010001000100)) 
    \cpllreset_cnt[7]_i_1 
       (.I0(fsm__0[1]),
        .I1(fsm__0[0]),
        .I2(fsm__0[2]),
        .I3(\cpllreset_cnt_reg_n_0_[7] ),
        .I4(\cpllreset_cnt_reg_n_0_[6] ),
        .I5(\cpllreset_cnt[8]_i_3_n_0 ),
        .O(cpllreset_cnt[7]));
  LUT5 #(
    .INIT(32'h28888888)) 
    \cpllreset_cnt[8]_i_1 
       (.I0(\cpllreset_cnt[8]_i_2_n_0 ),
        .I1(\cpllreset_cnt_reg_n_0_[8] ),
        .I2(\cpllreset_cnt_reg_n_0_[7] ),
        .I3(\cpllreset_cnt[8]_i_3_n_0 ),
        .I4(\cpllreset_cnt_reg_n_0_[6] ),
        .O(cpllreset_cnt[8]));
  LUT3 #(
    .INIT(8'h01)) 
    \cpllreset_cnt[8]_i_2 
       (.I0(fsm__0[2]),
        .I1(fsm__0[0]),
        .I2(fsm__0[1]),
        .O(\cpllreset_cnt[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cpllreset_cnt[8]_i_3 
       (.I0(\cpllreset_cnt_reg_n_0_[5] ),
        .I1(\cpllreset_cnt_reg_n_0_[3] ),
        .I2(\cpllreset_cnt_reg_n_0_[1] ),
        .I3(\cpllreset_cnt_reg_n_0_[0] ),
        .I4(\cpllreset_cnt_reg_n_0_[2] ),
        .I5(\cpllreset_cnt_reg_n_0_[4] ),
        .O(\cpllreset_cnt[8]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(\cpllreset_cnt[0]_i_1_n_0 ),
        .Q(\cpllreset_cnt_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[1]),
        .Q(\cpllreset_cnt_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[2]),
        .Q(\cpllreset_cnt_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[3]),
        .Q(\cpllreset_cnt_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[4] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[4]),
        .Q(\cpllreset_cnt_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[5] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[5]),
        .Q(\cpllreset_cnt_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[6] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[6]),
        .Q(\cpllreset_cnt_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[7] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[7]),
        .Q(\cpllreset_cnt_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \cpllreset_cnt_reg[8] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(cpllreset_cnt[8]),
        .Q(\cpllreset_cnt_reg_n_0_[8] ));
  LUT4 #(
    .INIT(16'hAA8A)) 
    cpllreset_i_1
       (.I0(qpllreset),
        .I1(fsm__0[1]),
        .I2(fsm__0[0]),
        .I3(fsm__0[2]),
        .O(cpllreset_i_1_n_0));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/cpllreset_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/cpllreset_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0007)) 
    \cpllreset_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(qpllreset),
        .Q(\cpllreset_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \cpllreset_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\cpllreset_r_reg[2]_srl3_n_0 ),
        .Q(in0[0]),
        .R(1'b0));
  FDPE #(
    .INIT(1'b1)) 
    cpllreset_reg
       (.C(sys_clk),
        .CE(1'b1),
        .D(cpllreset_i_1_n_0),
        .PRE(\fsm[2]_i_2_n_0 ),
        .Q(qpllreset));
  LUT5 #(
    .INIT(32'h777FFFFF)) 
    \fsm[1]_i_5 
       (.I0(\cpllreset_cnt_reg_n_0_[6] ),
        .I1(\cpllreset_cnt_reg_n_0_[5] ),
        .I2(\cpllreset_cnt_reg_n_0_[2] ),
        .I3(\cpllreset_cnt_reg_n_0_[3] ),
        .I4(\cpllreset_cnt_reg_n_0_[8] ),
        .O(\fsm[1]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \fsm[1]_i_9 
       (.I0(\cpllreset_cnt_reg_n_0_[7] ),
        .I1(\cpllreset_cnt_reg_n_0_[4] ),
        .O(\fsm[1]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \fsm[2]_i_2 
       (.I0(rrst_n_r[7]),
        .O(\fsm[2]_i_2_n_0 ));
  FDPE \fsm_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(fsm[0]),
        .PRE(\fsm[2]_i_2_n_0 ),
        .Q(Q[0]));
  FDCE \fsm_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(fsm[1]),
        .Q(Q[1]));
  FDCE \fsm_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(fsm[2]),
        .Q(Q[2]));
  LUT3 #(
    .INIT(8'h40)) 
    gtreset_i_1
       (.I0(fsm__0[2]),
        .I1(fsm__0[0]),
        .I2(fsm__0[1]),
        .O(gtreset_0));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/gtreset_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/gtreset_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0007)) 
    \gtreset_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(gtreset),
        .Q(\gtreset_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \gtreset_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\gtreset_r_reg[2]_srl3_n_0 ),
        .Q(gtrxreset_in),
        .R(1'b0));
  FDPE #(
    .INIT(1'b1)) 
    gtreset_reg
       (.C(sys_clk),
        .CE(gtreset_0),
        .D(1'b0),
        .PRE(\fsm[2]_i_2_n_0 ),
        .Q(gtreset));
  LUT3 #(
    .INIT(8'hF8)) 
    idle_i_1
       (.I0(fsm__0[1]),
        .I1(fsm__0[2]),
        .I2(idle_reg_0),
        .O(idle_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    idle_reg
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(idle_i_1_n_0),
        .Q(idle_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[0] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(1'b1),
        .Q(prst_n_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[1] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[0]),
        .Q(prst_n_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[2] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[1]),
        .Q(prst_n_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[3] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[2]),
        .Q(prst_n_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[4] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[3]),
        .Q(prst_n_r[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[5] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[4]),
        .Q(prst_n_r[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[6] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[5]),
        .Q(prst_n_r[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \prst_n_r_reg[7] 
       (.C(\rrst_n_r_reg[7]_0 ),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(prst_n_r[6]),
        .Q(prst_n_r[7]));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/qpllpd_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/qpllpd_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0007)) 
    \qpllpd_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(qpllreset),
        .Q(\qpllpd_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \qpllpd_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\qpllpd_r_reg[2]_srl3_n_0 ),
        .Q(rst_qpll1pd),
        .R(1'b0));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/qpllreset_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/qpllreset_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0007)) 
    \qpllreset_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(qpllreset),
        .Q(\qpllreset_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \qpllreset_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\qpllreset_r_reg[2]_srl3_n_0 ),
        .Q(rst_qpll1reset),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \rrst_n_r[7]_i_1 
       (.I0(PCIEPERST0B),
        .O(sys_or_hot_rst0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(1'b1),
        .Q(rrst_n_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[0]),
        .Q(rrst_n_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[1]),
        .Q(rrst_n_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[2]),
        .Q(rrst_n_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[4] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[3]),
        .Q(rrst_n_r[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[5] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[4]),
        .Q(rrst_n_r[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[6] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[5]),
        .Q(rrst_n_r[6]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE #(
    .INIT(1'b0)) 
    \rrst_n_r_reg[7] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(sys_or_hot_rst0),
        .D(rrst_n_r[6]),
        .Q(rrst_n_r[7]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized7 sync_cplllock
       (.gt_cplllock(gt_cplllock),
        .out(cplllock_r),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized6 sync_gtpowergood
       (.\cpllreset_cnt_reg[6] (\fsm[1]_i_5_n_0 ),
        .\cpllreset_cnt_reg[7] (\fsm[1]_i_9_n_0 ),
        .fsm25_out(fsm25_out),
        .gt_gtpowergood(gt_gtpowergood),
        .out(cplllock_r),
        .\sync_reg[3] (sync_qpll1lock_n_0),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized14 sync_phystatus
       (.D(fsm[2]),
        .\FSM_sequential_fsm_reg[0] (sync_phystatus_n_3),
        .\FSM_sequential_fsm_reg[2] ({fsm__0[2],fsm__0[0]}),
        .Q(Q),
        .\fsm_reg[1] (sync_phystatus_n_2),
        .gt_phystatus(gt_phystatus),
        .out(txprogdivresetdone_r),
        .p_0_in(p_0_in),
        .resetdone_a(resetdone_a),
        .\sync_reg[3] (prst_n_rdy),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a),
        .\txsync_start_cnt_reg[1] ({\txsync_start_cnt_reg_n_0_[1] ,\txsync_start_cnt_reg_n_0_[0] }));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized15 sync_prst_n
       (.D(fsm[1:0]),
        .Q(Q),
        .fsm23_out(fsm23_out),
        .fsm25_out(fsm25_out),
        .\fsm_reg[1] (sync_txsync_done_n_0),
        .\fsm_reg[1]_0 (sync_phystatus_n_2),
        .out(prst_n_rdy),
        .\prst_n_r_reg[7] (prst_n_r[7]),
        .\sync_reg[3] (txprogdivresetdone_r),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized8 sync_qpll0lock
       (.sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized9 sync_qpll1lock
       (.\FSM_sequential_fsm_reg[0] (sync_qpll1lock_n_0),
        .fsm23_out(fsm23_out),
        .int_qpll1lock_out(int_qpll1lock_out),
        .out(cplllock_r),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized12 sync_rxresetdone
       (.\FSM_sequential_fsm_reg[1] (sync_rxresetdone_n_0),
        .\FSM_sequential_fsm_reg[1]_0 (sync_rxresetdone_n_1),
        .gt_rxresetdone(gt_rxresetdone),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized10 sync_txprogdivresetdone
       (.out(txprogdivresetdone_r),
        .sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized11 sync_txresetdone
       (.D({sync_txresetdone_n_1,sync_txresetdone_n_2}),
        .fsm23_out(fsm23_out),
        .gt_txresetdone(gt_txresetdone),
        .out(fsm__0),
        .resetdone_a(resetdone_a),
        .\sync_reg[3] (sync_rxresetdone_n_0),
        .\sync_reg[3]_0 (sync_rxresetdone_n_1),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized13 sync_txsync_done
       (.D(sync_txsync_done_n_2),
        .\FSM_sequential_fsm_reg[2] (sync_phystatus_n_3),
        .Q(Q[1:0]),
        .fsm23_out(fsm23_out),
        .fsm25_out(fsm25_out),
        .\fsm_reg[0] (sync_txsync_done_n_0),
        .out(fsm__0),
        .p_0_in(p_0_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out),
        .resetdone_a(resetdone_a),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a),
        .\txsync_start_cnt_reg[1] ({\txsync_start_cnt_reg_n_0_[1] ,\txsync_start_cnt_reg_n_0_[0] }));
  LUT4 #(
    .INIT(16'hAAA2)) 
    txprogdivreset_i_1
       (.I0(txprogdivreset),
        .I1(fsm__0[1]),
        .I2(fsm__0[0]),
        .I3(fsm__0[2]),
        .O(txprogdivreset_i_1_n_0));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/txprogdivreset_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/txprogdivreset_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0007)) 
    \txprogdivreset_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(txprogdivreset),
        .Q(\txprogdivreset_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \txprogdivreset_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\txprogdivreset_r_reg[2]_srl3_n_0 ),
        .Q(rxprogdivreset_in),
        .R(1'b0));
  FDPE #(
    .INIT(1'b1)) 
    txprogdivreset_reg
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprogdivreset_i_1_n_0),
        .PRE(\fsm[2]_i_2_n_0 ),
        .Q(txprogdivreset));
  LUT4 #(
    .INIT(16'h0004)) 
    \txsync_start_cnt[0]_i_1 
       (.I0(\txsync_start_cnt_reg_n_0_[0] ),
        .I1(fsm__0[2]),
        .I2(fsm__0[0]),
        .I3(fsm__0[1]),
        .O(txsync_start_cnt[0]));
  LUT5 #(
    .INIT(32'h00000060)) 
    \txsync_start_cnt[1]_i_1 
       (.I0(\txsync_start_cnt_reg_n_0_[0] ),
        .I1(\txsync_start_cnt_reg_n_0_[1] ),
        .I2(fsm__0[2]),
        .I3(fsm__0[0]),
        .I4(fsm__0[1]),
        .O(txsync_start_cnt[1]));
  FDCE #(
    .INIT(1'b0)) 
    \txsync_start_cnt_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(txsync_start_cnt[0]),
        .Q(\txsync_start_cnt_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \txsync_start_cnt_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(txsync_start_cnt[1]),
        .Q(\txsync_start_cnt_reg_n_0_[1] ));
  LUT4 #(
    .INIT(16'hF704)) 
    txsync_start_i_1
       (.I0(fsm__0[0]),
        .I1(fsm__0[2]),
        .I2(fsm__0[1]),
        .I3(pciersttxsyncstart_in),
        .O(txsync_start_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    txsync_start_reg
       (.C(sys_clk),
        .CE(1'b1),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(txsync_start_i_1_n_0),
        .Q(pciersttxsyncstart_in));
  (* srl_bus_name = "inst/\gt_top_i/phy_rst_i/userrdy_r_reg " *) 
  (* srl_name = "inst/\gt_top_i/phy_rst_i/userrdy_r_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \userrdy_r_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(sys_clk),
        .D(userrdy),
        .Q(\userrdy_r_reg[2]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \userrdy_r_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\userrdy_r_reg[2]_srl3_n_0 ),
        .Q(rxuserrdy_in),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    userrdy_reg
       (.C(sys_clk),
        .CE(gtreset_0),
        .CLR(\fsm[2]_i_2_n_0 ),
        .D(1'b1),
        .Q(userrdy));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    adapt_done,
    lffs_sel,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    D,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output adapt_done;
  output lffs_sel;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]D;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]D;
  wire \FSM_sequential_fsm[2]_i_2__0_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__0_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__0_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__0_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__0_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10_n_0 ;
  wire \adapt_cnt[0]_i_1_n_0 ;
  wire \adapt_cnt[0]_i_3_n_0 ;
  wire \adapt_cnt[0]_i_4_n_0 ;
  wire \adapt_cnt[0]_i_5_n_0 ;
  wire \adapt_cnt[0]_i_6_n_0 ;
  wire \adapt_cnt[0]_i_7_n_0 ;
  wire \adapt_cnt[0]_i_8_n_0 ;
  wire \adapt_cnt[0]_i_9_n_0 ;
  wire \adapt_cnt[16]_i_2_n_0 ;
  wire \adapt_cnt[16]_i_3_n_0 ;
  wire \adapt_cnt[16]_i_4_n_0 ;
  wire \adapt_cnt[16]_i_5_n_0 ;
  wire \adapt_cnt[16]_i_6_n_0 ;
  wire \adapt_cnt[16]_i_7_n_0 ;
  wire \adapt_cnt[8]_i_2_n_0 ;
  wire \adapt_cnt[8]_i_3_n_0 ;
  wire \adapt_cnt[8]_i_4_n_0 ;
  wire \adapt_cnt[8]_i_5_n_0 ;
  wire \adapt_cnt[8]_i_6_n_0 ;
  wire \adapt_cnt[8]_i_7_n_0 ;
  wire \adapt_cnt[8]_i_8_n_0 ;
  wire \adapt_cnt[8]_i_9_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2_n_0 ;
  wire \adapt_cnt_reg[0]_i_2_n_1 ;
  wire \adapt_cnt_reg[0]_i_2_n_10 ;
  wire \adapt_cnt_reg[0]_i_2_n_11 ;
  wire \adapt_cnt_reg[0]_i_2_n_12 ;
  wire \adapt_cnt_reg[0]_i_2_n_13 ;
  wire \adapt_cnt_reg[0]_i_2_n_14 ;
  wire \adapt_cnt_reg[0]_i_2_n_15 ;
  wire \adapt_cnt_reg[0]_i_2_n_2 ;
  wire \adapt_cnt_reg[0]_i_2_n_3 ;
  wire \adapt_cnt_reg[0]_i_2_n_5 ;
  wire \adapt_cnt_reg[0]_i_2_n_6 ;
  wire \adapt_cnt_reg[0]_i_2_n_7 ;
  wire \adapt_cnt_reg[0]_i_2_n_8 ;
  wire \adapt_cnt_reg[0]_i_2_n_9 ;
  wire \adapt_cnt_reg[16]_i_1_n_10 ;
  wire \adapt_cnt_reg[16]_i_1_n_11 ;
  wire \adapt_cnt_reg[16]_i_1_n_12 ;
  wire \adapt_cnt_reg[16]_i_1_n_13 ;
  wire \adapt_cnt_reg[16]_i_1_n_14 ;
  wire \adapt_cnt_reg[16]_i_1_n_15 ;
  wire \adapt_cnt_reg[16]_i_1_n_3 ;
  wire \adapt_cnt_reg[16]_i_1_n_5 ;
  wire \adapt_cnt_reg[16]_i_1_n_6 ;
  wire \adapt_cnt_reg[16]_i_1_n_7 ;
  wire \adapt_cnt_reg[8]_i_1_n_0 ;
  wire \adapt_cnt_reg[8]_i_1_n_1 ;
  wire \adapt_cnt_reg[8]_i_1_n_10 ;
  wire \adapt_cnt_reg[8]_i_1_n_11 ;
  wire \adapt_cnt_reg[8]_i_1_n_12 ;
  wire \adapt_cnt_reg[8]_i_1_n_13 ;
  wire \adapt_cnt_reg[8]_i_1_n_14 ;
  wire \adapt_cnt_reg[8]_i_1_n_15 ;
  wire \adapt_cnt_reg[8]_i_1_n_2 ;
  wire \adapt_cnt_reg[8]_i_1_n_3 ;
  wire \adapt_cnt_reg[8]_i_1_n_5 ;
  wire \adapt_cnt_reg[8]_i_1_n_6 ;
  wire \adapt_cnt_reg[8]_i_1_n_7 ;
  wire \adapt_cnt_reg[8]_i_1_n_8 ;
  wire \adapt_cnt_reg[8]_i_1_n_9 ;
  wire adapt_done;
  wire adapt_done_0;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire lffs_sel_1;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__0 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__0_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__0_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__0_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__0_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__0 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__0 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__0 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__0 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(D),
        .O(\adapt_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2_n_0 ,\adapt_cnt_reg[0]_i_2_n_1 ,\adapt_cnt_reg[0]_i_2_n_2 ,\adapt_cnt_reg[0]_i_2_n_3 ,\NLW_adapt_cnt_reg[0]_i_2_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2_n_5 ,\adapt_cnt_reg[0]_i_2_n_6 ,\adapt_cnt_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2_n_8 ,\adapt_cnt_reg[0]_i_2_n_9 ,\adapt_cnt_reg[0]_i_2_n_10 ,\adapt_cnt_reg[0]_i_2_n_11 ,\adapt_cnt_reg[0]_i_2_n_12 ,\adapt_cnt_reg[0]_i_2_n_13 ,\adapt_cnt_reg[0]_i_2_n_14 ,\adapt_cnt_reg[0]_i_2_n_15 }),
        .S({\adapt_cnt[0]_i_3_n_0 ,\adapt_cnt[0]_i_4_n_0 ,\adapt_cnt[0]_i_5_n_0 ,\adapt_cnt[0]_i_6_n_0 ,\adapt_cnt[0]_i_7_n_0 ,\adapt_cnt[0]_i_8_n_0 ,\adapt_cnt[0]_i_9_n_0 ,\adapt_cnt[0]_i_10_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1 
       (.CI(\adapt_cnt_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1_n_3 ,\NLW_adapt_cnt_reg[16]_i_1_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1_n_5 ,\adapt_cnt_reg[16]_i_1_n_6 ,\adapt_cnt_reg[16]_i_1_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1_n_10 ,\adapt_cnt_reg[16]_i_1_n_11 ,\adapt_cnt_reg[16]_i_1_n_12 ,\adapt_cnt_reg[16]_i_1_n_13 ,\adapt_cnt_reg[16]_i_1_n_14 ,\adapt_cnt_reg[16]_i_1_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2_n_0 ,\adapt_cnt[16]_i_3_n_0 ,\adapt_cnt[16]_i_4_n_0 ,\adapt_cnt[16]_i_5_n_0 ,\adapt_cnt[16]_i_6_n_0 ,\adapt_cnt[16]_i_7_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1 
       (.CI(\adapt_cnt_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1_n_0 ,\adapt_cnt_reg[8]_i_1_n_1 ,\adapt_cnt_reg[8]_i_1_n_2 ,\adapt_cnt_reg[8]_i_1_n_3 ,\NLW_adapt_cnt_reg[8]_i_1_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1_n_5 ,\adapt_cnt_reg[8]_i_1_n_6 ,\adapt_cnt_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1_n_8 ,\adapt_cnt_reg[8]_i_1_n_9 ,\adapt_cnt_reg[8]_i_1_n_10 ,\adapt_cnt_reg[8]_i_1_n_11 ,\adapt_cnt_reg[8]_i_1_n_12 ,\adapt_cnt_reg[8]_i_1_n_13 ,\adapt_cnt_reg[8]_i_1_n_14 ,\adapt_cnt_reg[8]_i_1_n_15 }),
        .S({\adapt_cnt[8]_i_2_n_0 ,\adapt_cnt[8]_i_3_n_0 ,\adapt_cnt[8]_i_4_n_0 ,\adapt_cnt[8]_i_5_n_0 ,\adapt_cnt[8]_i_6_n_0 ,\adapt_cnt[8]_i_7_n_0 ,\adapt_cnt[8]_i_8_n_0 ,\adapt_cnt[8]_i_9_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done_0),
        .Q(adapt_done),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel_1),
        .Q(lffs_sel),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[0]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[1]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[2]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_315 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__0_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done_0(adapt_done_0),
        .done(done),
        .lffs_sel_1(lffs_sel_1),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_316 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_317 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_318 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_319 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_11
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__3_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__3_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__3_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__3_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__3_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__2_n_0 ;
  wire \adapt_cnt[0]_i_1__2_n_0 ;
  wire \adapt_cnt[0]_i_3__2_n_0 ;
  wire \adapt_cnt[0]_i_4__2_n_0 ;
  wire \adapt_cnt[0]_i_5__2_n_0 ;
  wire \adapt_cnt[0]_i_6__2_n_0 ;
  wire \adapt_cnt[0]_i_7__2_n_0 ;
  wire \adapt_cnt[0]_i_8__2_n_0 ;
  wire \adapt_cnt[0]_i_9__2_n_0 ;
  wire \adapt_cnt[16]_i_2__2_n_0 ;
  wire \adapt_cnt[16]_i_3__2_n_0 ;
  wire \adapt_cnt[16]_i_4__2_n_0 ;
  wire \adapt_cnt[16]_i_5__2_n_0 ;
  wire \adapt_cnt[16]_i_6__2_n_0 ;
  wire \adapt_cnt[16]_i_7__2_n_0 ;
  wire \adapt_cnt[8]_i_2__2_n_0 ;
  wire \adapt_cnt[8]_i_3__2_n_0 ;
  wire \adapt_cnt[8]_i_4__2_n_0 ;
  wire \adapt_cnt[8]_i_5__2_n_0 ;
  wire \adapt_cnt[8]_i_6__2_n_0 ;
  wire \adapt_cnt[8]_i_7__2_n_0 ;
  wire \adapt_cnt[8]_i_8__2_n_0 ;
  wire \adapt_cnt[8]_i_9__2_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__2_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__2_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__2_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__2_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__2_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__2_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__2_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__2_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__2_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__2_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__3 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__3_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__3_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__3_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__3_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__3 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__3_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__3 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__3 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__3 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__2 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__2_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__2 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__2 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__2 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__2 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__2 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__2 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__2 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__2 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__2 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__2 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__2 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__2 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__2 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__2 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__2 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__2 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__2 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__2 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__2 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__2 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__2 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__2 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__2_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__2_n_0 ,\adapt_cnt_reg[0]_i_2__2_n_1 ,\adapt_cnt_reg[0]_i_2__2_n_2 ,\adapt_cnt_reg[0]_i_2__2_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__2_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__2_n_5 ,\adapt_cnt_reg[0]_i_2__2_n_6 ,\adapt_cnt_reg[0]_i_2__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__2_n_8 ,\adapt_cnt_reg[0]_i_2__2_n_9 ,\adapt_cnt_reg[0]_i_2__2_n_10 ,\adapt_cnt_reg[0]_i_2__2_n_11 ,\adapt_cnt_reg[0]_i_2__2_n_12 ,\adapt_cnt_reg[0]_i_2__2_n_13 ,\adapt_cnt_reg[0]_i_2__2_n_14 ,\adapt_cnt_reg[0]_i_2__2_n_15 }),
        .S({\adapt_cnt[0]_i_3__2_n_0 ,\adapt_cnt[0]_i_4__2_n_0 ,\adapt_cnt[0]_i_5__2_n_0 ,\adapt_cnt[0]_i_6__2_n_0 ,\adapt_cnt[0]_i_7__2_n_0 ,\adapt_cnt[0]_i_8__2_n_0 ,\adapt_cnt[0]_i_9__2_n_0 ,\adapt_cnt[0]_i_10__2_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__2 
       (.CI(\adapt_cnt_reg[8]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__2_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__2_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__2_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__2_n_5 ,\adapt_cnt_reg[16]_i_1__2_n_6 ,\adapt_cnt_reg[16]_i_1__2_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__2_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__2_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__2_n_10 ,\adapt_cnt_reg[16]_i_1__2_n_11 ,\adapt_cnt_reg[16]_i_1__2_n_12 ,\adapt_cnt_reg[16]_i_1__2_n_13 ,\adapt_cnt_reg[16]_i_1__2_n_14 ,\adapt_cnt_reg[16]_i_1__2_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__2_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__2_n_0 ,\adapt_cnt[16]_i_3__2_n_0 ,\adapt_cnt[16]_i_4__2_n_0 ,\adapt_cnt[16]_i_5__2_n_0 ,\adapt_cnt[16]_i_6__2_n_0 ,\adapt_cnt[16]_i_7__2_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__2_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__2_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__2 
       (.CI(\adapt_cnt_reg[0]_i_2__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__2_n_0 ,\adapt_cnt_reg[8]_i_1__2_n_1 ,\adapt_cnt_reg[8]_i_1__2_n_2 ,\adapt_cnt_reg[8]_i_1__2_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__2_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__2_n_5 ,\adapt_cnt_reg[8]_i_1__2_n_6 ,\adapt_cnt_reg[8]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__2_n_8 ,\adapt_cnt_reg[8]_i_1__2_n_9 ,\adapt_cnt_reg[8]_i_1__2_n_10 ,\adapt_cnt_reg[8]_i_1__2_n_11 ,\adapt_cnt_reg[8]_i_1__2_n_12 ,\adapt_cnt_reg[8]_i_1__2_n_13 ,\adapt_cnt_reg[8]_i_1__2_n_14 ,\adapt_cnt_reg[8]_i_1__2_n_15 }),
        .S({\adapt_cnt[8]_i_2__2_n_0 ,\adapt_cnt[8]_i_3__2_n_0 ,\adapt_cnt[8]_i_4__2_n_0 ,\adapt_cnt[8]_i_5__2_n_0 ,\adapt_cnt[8]_i_6__2_n_0 ,\adapt_cnt[8]_i_7__2_n_0 ,\adapt_cnt[8]_i_8__2_n_0 ,\adapt_cnt[8]_i_9__2_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__2_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__2_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[10]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[11]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[9]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_192 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__3_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_193 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_194 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_195 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_196 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__2 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_13
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__4_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__4_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__4_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__4_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__4_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__3_n_0 ;
  wire \adapt_cnt[0]_i_1__3_n_0 ;
  wire \adapt_cnt[0]_i_3__3_n_0 ;
  wire \adapt_cnt[0]_i_4__3_n_0 ;
  wire \adapt_cnt[0]_i_5__3_n_0 ;
  wire \adapt_cnt[0]_i_6__3_n_0 ;
  wire \adapt_cnt[0]_i_7__3_n_0 ;
  wire \adapt_cnt[0]_i_8__3_n_0 ;
  wire \adapt_cnt[0]_i_9__3_n_0 ;
  wire \adapt_cnt[16]_i_2__3_n_0 ;
  wire \adapt_cnt[16]_i_3__3_n_0 ;
  wire \adapt_cnt[16]_i_4__3_n_0 ;
  wire \adapt_cnt[16]_i_5__3_n_0 ;
  wire \adapt_cnt[16]_i_6__3_n_0 ;
  wire \adapt_cnt[16]_i_7__3_n_0 ;
  wire \adapt_cnt[8]_i_2__3_n_0 ;
  wire \adapt_cnt[8]_i_3__3_n_0 ;
  wire \adapt_cnt[8]_i_4__3_n_0 ;
  wire \adapt_cnt[8]_i_5__3_n_0 ;
  wire \adapt_cnt[8]_i_6__3_n_0 ;
  wire \adapt_cnt[8]_i_7__3_n_0 ;
  wire \adapt_cnt[8]_i_8__3_n_0 ;
  wire \adapt_cnt[8]_i_9__3_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__3_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__3_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__3_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__3_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__3_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__3_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__3_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__3_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__3_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__3_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__4 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__4_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__4_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__4_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__4_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__4 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__4_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__4 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__4 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__4_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__4 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__4_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__3 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__3_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__3 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__3 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__3 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__3 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__3 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__3 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__3 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__3 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__3 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__3 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__3 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__3 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__3 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__3 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__3 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__3 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__3 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__3 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__3 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__3 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__3 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__3 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__3_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__3_n_0 ,\adapt_cnt_reg[0]_i_2__3_n_1 ,\adapt_cnt_reg[0]_i_2__3_n_2 ,\adapt_cnt_reg[0]_i_2__3_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__3_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__3_n_5 ,\adapt_cnt_reg[0]_i_2__3_n_6 ,\adapt_cnt_reg[0]_i_2__3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__3_n_8 ,\adapt_cnt_reg[0]_i_2__3_n_9 ,\adapt_cnt_reg[0]_i_2__3_n_10 ,\adapt_cnt_reg[0]_i_2__3_n_11 ,\adapt_cnt_reg[0]_i_2__3_n_12 ,\adapt_cnt_reg[0]_i_2__3_n_13 ,\adapt_cnt_reg[0]_i_2__3_n_14 ,\adapt_cnt_reg[0]_i_2__3_n_15 }),
        .S({\adapt_cnt[0]_i_3__3_n_0 ,\adapt_cnt[0]_i_4__3_n_0 ,\adapt_cnt[0]_i_5__3_n_0 ,\adapt_cnt[0]_i_6__3_n_0 ,\adapt_cnt[0]_i_7__3_n_0 ,\adapt_cnt[0]_i_8__3_n_0 ,\adapt_cnt[0]_i_9__3_n_0 ,\adapt_cnt[0]_i_10__3_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__3 
       (.CI(\adapt_cnt_reg[8]_i_1__3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__3_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__3_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__3_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__3_n_5 ,\adapt_cnt_reg[16]_i_1__3_n_6 ,\adapt_cnt_reg[16]_i_1__3_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__3_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__3_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__3_n_10 ,\adapt_cnt_reg[16]_i_1__3_n_11 ,\adapt_cnt_reg[16]_i_1__3_n_12 ,\adapt_cnt_reg[16]_i_1__3_n_13 ,\adapt_cnt_reg[16]_i_1__3_n_14 ,\adapt_cnt_reg[16]_i_1__3_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__3_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__3_n_0 ,\adapt_cnt[16]_i_3__3_n_0 ,\adapt_cnt[16]_i_4__3_n_0 ,\adapt_cnt[16]_i_5__3_n_0 ,\adapt_cnt[16]_i_6__3_n_0 ,\adapt_cnt[16]_i_7__3_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__3_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__3_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__3 
       (.CI(\adapt_cnt_reg[0]_i_2__3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__3_n_0 ,\adapt_cnt_reg[8]_i_1__3_n_1 ,\adapt_cnt_reg[8]_i_1__3_n_2 ,\adapt_cnt_reg[8]_i_1__3_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__3_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__3_n_5 ,\adapt_cnt_reg[8]_i_1__3_n_6 ,\adapt_cnt_reg[8]_i_1__3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__3_n_8 ,\adapt_cnt_reg[8]_i_1__3_n_9 ,\adapt_cnt_reg[8]_i_1__3_n_10 ,\adapt_cnt_reg[8]_i_1__3_n_11 ,\adapt_cnt_reg[8]_i_1__3_n_12 ,\adapt_cnt_reg[8]_i_1__3_n_13 ,\adapt_cnt_reg[8]_i_1__3_n_14 ,\adapt_cnt_reg[8]_i_1__3_n_15 }),
        .S({\adapt_cnt[8]_i_2__3_n_0 ,\adapt_cnt[8]_i_3__3_n_0 ,\adapt_cnt[8]_i_4__3_n_0 ,\adapt_cnt[8]_i_5__3_n_0 ,\adapt_cnt[8]_i_6__3_n_0 ,\adapt_cnt[8]_i_7__3_n_0 ,\adapt_cnt[8]_i_8__3_n_0 ,\adapt_cnt[8]_i_9__3_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__3_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__3_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[12]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[13]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[14]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_151 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__4_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_152 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_153 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_154 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_155 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__3 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_15
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__5_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__5_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__5_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__5_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__5_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__4_n_0 ;
  wire \adapt_cnt[0]_i_1__4_n_0 ;
  wire \adapt_cnt[0]_i_3__4_n_0 ;
  wire \adapt_cnt[0]_i_4__4_n_0 ;
  wire \adapt_cnt[0]_i_5__4_n_0 ;
  wire \adapt_cnt[0]_i_6__4_n_0 ;
  wire \adapt_cnt[0]_i_7__4_n_0 ;
  wire \adapt_cnt[0]_i_8__4_n_0 ;
  wire \adapt_cnt[0]_i_9__4_n_0 ;
  wire \adapt_cnt[16]_i_2__4_n_0 ;
  wire \adapt_cnt[16]_i_3__4_n_0 ;
  wire \adapt_cnt[16]_i_4__4_n_0 ;
  wire \adapt_cnt[16]_i_5__4_n_0 ;
  wire \adapt_cnt[16]_i_6__4_n_0 ;
  wire \adapt_cnt[16]_i_7__4_n_0 ;
  wire \adapt_cnt[8]_i_2__4_n_0 ;
  wire \adapt_cnt[8]_i_3__4_n_0 ;
  wire \adapt_cnt[8]_i_4__4_n_0 ;
  wire \adapt_cnt[8]_i_5__4_n_0 ;
  wire \adapt_cnt[8]_i_6__4_n_0 ;
  wire \adapt_cnt[8]_i_7__4_n_0 ;
  wire \adapt_cnt[8]_i_8__4_n_0 ;
  wire \adapt_cnt[8]_i_9__4_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__4_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__4_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__4_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__4_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__4_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__4_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__4_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__4_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__4_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__4_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__5 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__5_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__5_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__5_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__5_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__5 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__5 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__5 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__5_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__5 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__5_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__4 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__4_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__4 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__4 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__4 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__4 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__4 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__4 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__4 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__4 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__4 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__4 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__4 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__4 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__4 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__4 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__4 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__4 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__4 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__4 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__4 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__4 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__4 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__4 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__4_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__4 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__4_n_0 ,\adapt_cnt_reg[0]_i_2__4_n_1 ,\adapt_cnt_reg[0]_i_2__4_n_2 ,\adapt_cnt_reg[0]_i_2__4_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__4_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__4_n_5 ,\adapt_cnt_reg[0]_i_2__4_n_6 ,\adapt_cnt_reg[0]_i_2__4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__4_n_8 ,\adapt_cnt_reg[0]_i_2__4_n_9 ,\adapt_cnt_reg[0]_i_2__4_n_10 ,\adapt_cnt_reg[0]_i_2__4_n_11 ,\adapt_cnt_reg[0]_i_2__4_n_12 ,\adapt_cnt_reg[0]_i_2__4_n_13 ,\adapt_cnt_reg[0]_i_2__4_n_14 ,\adapt_cnt_reg[0]_i_2__4_n_15 }),
        .S({\adapt_cnt[0]_i_3__4_n_0 ,\adapt_cnt[0]_i_4__4_n_0 ,\adapt_cnt[0]_i_5__4_n_0 ,\adapt_cnt[0]_i_6__4_n_0 ,\adapt_cnt[0]_i_7__4_n_0 ,\adapt_cnt[0]_i_8__4_n_0 ,\adapt_cnt[0]_i_9__4_n_0 ,\adapt_cnt[0]_i_10__4_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__4 
       (.CI(\adapt_cnt_reg[8]_i_1__4_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__4_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__4_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__4_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__4_n_5 ,\adapt_cnt_reg[16]_i_1__4_n_6 ,\adapt_cnt_reg[16]_i_1__4_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__4_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__4_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__4_n_10 ,\adapt_cnt_reg[16]_i_1__4_n_11 ,\adapt_cnt_reg[16]_i_1__4_n_12 ,\adapt_cnt_reg[16]_i_1__4_n_13 ,\adapt_cnt_reg[16]_i_1__4_n_14 ,\adapt_cnt_reg[16]_i_1__4_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__4_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__4_n_0 ,\adapt_cnt[16]_i_3__4_n_0 ,\adapt_cnt[16]_i_4__4_n_0 ,\adapt_cnt[16]_i_5__4_n_0 ,\adapt_cnt[16]_i_6__4_n_0 ,\adapt_cnt[16]_i_7__4_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__4_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__4_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__4 
       (.CI(\adapt_cnt_reg[0]_i_2__4_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__4_n_0 ,\adapt_cnt_reg[8]_i_1__4_n_1 ,\adapt_cnt_reg[8]_i_1__4_n_2 ,\adapt_cnt_reg[8]_i_1__4_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__4_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__4_n_5 ,\adapt_cnt_reg[8]_i_1__4_n_6 ,\adapt_cnt_reg[8]_i_1__4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__4_n_8 ,\adapt_cnt_reg[8]_i_1__4_n_9 ,\adapt_cnt_reg[8]_i_1__4_n_10 ,\adapt_cnt_reg[8]_i_1__4_n_11 ,\adapt_cnt_reg[8]_i_1__4_n_12 ,\adapt_cnt_reg[8]_i_1__4_n_13 ,\adapt_cnt_reg[8]_i_1__4_n_14 ,\adapt_cnt_reg[8]_i_1__4_n_15 }),
        .S({\adapt_cnt[8]_i_2__4_n_0 ,\adapt_cnt[8]_i_3__4_n_0 ,\adapt_cnt[8]_i_4__4_n_0 ,\adapt_cnt[8]_i_5__4_n_0 ,\adapt_cnt[8]_i_6__4_n_0 ,\adapt_cnt[8]_i_7__4_n_0 ,\adapt_cnt[8]_i_8__4_n_0 ,\adapt_cnt[8]_i_9__4_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__4_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__4_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[15]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[16]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[17]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_110 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__5_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_111 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_112 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_113 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_114 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__4 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_17
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__6_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__6_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__6_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__6_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__6_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__5_n_0 ;
  wire \adapt_cnt[0]_i_1__5_n_0 ;
  wire \adapt_cnt[0]_i_3__5_n_0 ;
  wire \adapt_cnt[0]_i_4__5_n_0 ;
  wire \adapt_cnt[0]_i_5__5_n_0 ;
  wire \adapt_cnt[0]_i_6__5_n_0 ;
  wire \adapt_cnt[0]_i_7__5_n_0 ;
  wire \adapt_cnt[0]_i_8__5_n_0 ;
  wire \adapt_cnt[0]_i_9__5_n_0 ;
  wire \adapt_cnt[16]_i_2__5_n_0 ;
  wire \adapt_cnt[16]_i_3__5_n_0 ;
  wire \adapt_cnt[16]_i_4__5_n_0 ;
  wire \adapt_cnt[16]_i_5__5_n_0 ;
  wire \adapt_cnt[16]_i_6__5_n_0 ;
  wire \adapt_cnt[16]_i_7__5_n_0 ;
  wire \adapt_cnt[8]_i_2__5_n_0 ;
  wire \adapt_cnt[8]_i_3__5_n_0 ;
  wire \adapt_cnt[8]_i_4__5_n_0 ;
  wire \adapt_cnt[8]_i_5__5_n_0 ;
  wire \adapt_cnt[8]_i_6__5_n_0 ;
  wire \adapt_cnt[8]_i_7__5_n_0 ;
  wire \adapt_cnt[8]_i_8__5_n_0 ;
  wire \adapt_cnt[8]_i_9__5_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__5_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__5_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__5_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__5_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__5_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__5_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__5_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__5_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__5_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__5_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__6 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__6_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__6_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__6_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__6_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__6 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__6_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__6 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__6 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__6_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__6 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__6_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__5 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__5_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__5 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__5 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__5 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__5 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__5 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__5 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__5 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__5 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__5 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__5 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__5 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__5 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__5 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__5 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__5 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__5 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__5 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__5 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__5 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__5 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__5 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__5 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__5_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__5 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__5_n_0 ,\adapt_cnt_reg[0]_i_2__5_n_1 ,\adapt_cnt_reg[0]_i_2__5_n_2 ,\adapt_cnt_reg[0]_i_2__5_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__5_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__5_n_5 ,\adapt_cnt_reg[0]_i_2__5_n_6 ,\adapt_cnt_reg[0]_i_2__5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__5_n_8 ,\adapt_cnt_reg[0]_i_2__5_n_9 ,\adapt_cnt_reg[0]_i_2__5_n_10 ,\adapt_cnt_reg[0]_i_2__5_n_11 ,\adapt_cnt_reg[0]_i_2__5_n_12 ,\adapt_cnt_reg[0]_i_2__5_n_13 ,\adapt_cnt_reg[0]_i_2__5_n_14 ,\adapt_cnt_reg[0]_i_2__5_n_15 }),
        .S({\adapt_cnt[0]_i_3__5_n_0 ,\adapt_cnt[0]_i_4__5_n_0 ,\adapt_cnt[0]_i_5__5_n_0 ,\adapt_cnt[0]_i_6__5_n_0 ,\adapt_cnt[0]_i_7__5_n_0 ,\adapt_cnt[0]_i_8__5_n_0 ,\adapt_cnt[0]_i_9__5_n_0 ,\adapt_cnt[0]_i_10__5_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__5 
       (.CI(\adapt_cnt_reg[8]_i_1__5_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__5_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__5_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__5_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__5_n_5 ,\adapt_cnt_reg[16]_i_1__5_n_6 ,\adapt_cnt_reg[16]_i_1__5_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__5_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__5_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__5_n_10 ,\adapt_cnt_reg[16]_i_1__5_n_11 ,\adapt_cnt_reg[16]_i_1__5_n_12 ,\adapt_cnt_reg[16]_i_1__5_n_13 ,\adapt_cnt_reg[16]_i_1__5_n_14 ,\adapt_cnt_reg[16]_i_1__5_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__5_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__5_n_0 ,\adapt_cnt[16]_i_3__5_n_0 ,\adapt_cnt[16]_i_4__5_n_0 ,\adapt_cnt[16]_i_5__5_n_0 ,\adapt_cnt[16]_i_6__5_n_0 ,\adapt_cnt[16]_i_7__5_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__5_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__5_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__5 
       (.CI(\adapt_cnt_reg[0]_i_2__5_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__5_n_0 ,\adapt_cnt_reg[8]_i_1__5_n_1 ,\adapt_cnt_reg[8]_i_1__5_n_2 ,\adapt_cnt_reg[8]_i_1__5_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__5_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__5_n_5 ,\adapt_cnt_reg[8]_i_1__5_n_6 ,\adapt_cnt_reg[8]_i_1__5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__5_n_8 ,\adapt_cnt_reg[8]_i_1__5_n_9 ,\adapt_cnt_reg[8]_i_1__5_n_10 ,\adapt_cnt_reg[8]_i_1__5_n_11 ,\adapt_cnt_reg[8]_i_1__5_n_12 ,\adapt_cnt_reg[8]_i_1__5_n_13 ,\adapt_cnt_reg[8]_i_1__5_n_14 ,\adapt_cnt_reg[8]_i_1__5_n_15 }),
        .S({\adapt_cnt[8]_i_2__5_n_0 ,\adapt_cnt[8]_i_3__5_n_0 ,\adapt_cnt[8]_i_4__5_n_0 ,\adapt_cnt[8]_i_5__5_n_0 ,\adapt_cnt[8]_i_6__5_n_0 ,\adapt_cnt[8]_i_7__5_n_0 ,\adapt_cnt[8]_i_8__5_n_0 ,\adapt_cnt[8]_i_9__5_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__5_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__5_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[18]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[19]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[20]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_69 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__6_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_70 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_71 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_72 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_73 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__5 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_19
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__7_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__7_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__7_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__7_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__7_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__6_n_0 ;
  wire \adapt_cnt[0]_i_1__6_n_0 ;
  wire \adapt_cnt[0]_i_3__6_n_0 ;
  wire \adapt_cnt[0]_i_4__6_n_0 ;
  wire \adapt_cnt[0]_i_5__6_n_0 ;
  wire \adapt_cnt[0]_i_6__6_n_0 ;
  wire \adapt_cnt[0]_i_7__6_n_0 ;
  wire \adapt_cnt[0]_i_8__6_n_0 ;
  wire \adapt_cnt[0]_i_9__6_n_0 ;
  wire \adapt_cnt[16]_i_2__6_n_0 ;
  wire \adapt_cnt[16]_i_3__6_n_0 ;
  wire \adapt_cnt[16]_i_4__6_n_0 ;
  wire \adapt_cnt[16]_i_5__6_n_0 ;
  wire \adapt_cnt[16]_i_6__6_n_0 ;
  wire \adapt_cnt[16]_i_7__6_n_0 ;
  wire \adapt_cnt[8]_i_2__6_n_0 ;
  wire \adapt_cnt[8]_i_3__6_n_0 ;
  wire \adapt_cnt[8]_i_4__6_n_0 ;
  wire \adapt_cnt[8]_i_5__6_n_0 ;
  wire \adapt_cnt[8]_i_6__6_n_0 ;
  wire \adapt_cnt[8]_i_7__6_n_0 ;
  wire \adapt_cnt[8]_i_8__6_n_0 ;
  wire \adapt_cnt[8]_i_9__6_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__6_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__6_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__6_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__6_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__6_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__6_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__6_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__6_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__6_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__6_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__7 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__7_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__7_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__7_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__7_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__7_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__7 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__7_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__7 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__7 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__7_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__7 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__7_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__6 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__6_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__6 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__6 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__6 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__6 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__6 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__6 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__6 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__6 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__6 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__6 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__6 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__6 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__6 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__6 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__6 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__6 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__6 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__6 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__6 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__6 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__6 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__6 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__6_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__6 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__6_n_0 ,\adapt_cnt_reg[0]_i_2__6_n_1 ,\adapt_cnt_reg[0]_i_2__6_n_2 ,\adapt_cnt_reg[0]_i_2__6_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__6_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__6_n_5 ,\adapt_cnt_reg[0]_i_2__6_n_6 ,\adapt_cnt_reg[0]_i_2__6_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__6_n_8 ,\adapt_cnt_reg[0]_i_2__6_n_9 ,\adapt_cnt_reg[0]_i_2__6_n_10 ,\adapt_cnt_reg[0]_i_2__6_n_11 ,\adapt_cnt_reg[0]_i_2__6_n_12 ,\adapt_cnt_reg[0]_i_2__6_n_13 ,\adapt_cnt_reg[0]_i_2__6_n_14 ,\adapt_cnt_reg[0]_i_2__6_n_15 }),
        .S({\adapt_cnt[0]_i_3__6_n_0 ,\adapt_cnt[0]_i_4__6_n_0 ,\adapt_cnt[0]_i_5__6_n_0 ,\adapt_cnt[0]_i_6__6_n_0 ,\adapt_cnt[0]_i_7__6_n_0 ,\adapt_cnt[0]_i_8__6_n_0 ,\adapt_cnt[0]_i_9__6_n_0 ,\adapt_cnt[0]_i_10__6_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__6 
       (.CI(\adapt_cnt_reg[8]_i_1__6_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__6_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__6_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__6_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__6_n_5 ,\adapt_cnt_reg[16]_i_1__6_n_6 ,\adapt_cnt_reg[16]_i_1__6_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__6_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__6_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__6_n_10 ,\adapt_cnt_reg[16]_i_1__6_n_11 ,\adapt_cnt_reg[16]_i_1__6_n_12 ,\adapt_cnt_reg[16]_i_1__6_n_13 ,\adapt_cnt_reg[16]_i_1__6_n_14 ,\adapt_cnt_reg[16]_i_1__6_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__6_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__6_n_0 ,\adapt_cnt[16]_i_3__6_n_0 ,\adapt_cnt[16]_i_4__6_n_0 ,\adapt_cnt[16]_i_5__6_n_0 ,\adapt_cnt[16]_i_6__6_n_0 ,\adapt_cnt[16]_i_7__6_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__6_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__6_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__6 
       (.CI(\adapt_cnt_reg[0]_i_2__6_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__6_n_0 ,\adapt_cnt_reg[8]_i_1__6_n_1 ,\adapt_cnt_reg[8]_i_1__6_n_2 ,\adapt_cnt_reg[8]_i_1__6_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__6_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__6_n_5 ,\adapt_cnt_reg[8]_i_1__6_n_6 ,\adapt_cnt_reg[8]_i_1__6_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__6_n_8 ,\adapt_cnt_reg[8]_i_1__6_n_9 ,\adapt_cnt_reg[8]_i_1__6_n_10 ,\adapt_cnt_reg[8]_i_1__6_n_11 ,\adapt_cnt_reg[8]_i_1__6_n_12 ,\adapt_cnt_reg[8]_i_1__6_n_13 ,\adapt_cnt_reg[8]_i_1__6_n_14 ,\adapt_cnt_reg[8]_i_1__6_n_15 }),
        .S({\adapt_cnt[8]_i_2__6_n_0 ,\adapt_cnt[8]_i_3__6_n_0 ,\adapt_cnt[8]_i_4__6_n_0 ,\adapt_cnt[8]_i_5__6_n_0 ,\adapt_cnt[8]_i_6__6_n_0 ,\adapt_cnt[8]_i_7__6_n_0 ,\adapt_cnt[8]_i_8__6_n_0 ,\adapt_cnt[8]_i_9__6_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__6_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__6_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[21]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[22]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[23]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_32 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__7_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__6 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_7
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    D,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]D;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]D;
  wire \FSM_sequential_fsm[2]_i_2__1_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__1_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__1_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__1_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__1_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__0_n_0 ;
  wire \adapt_cnt[0]_i_1__0_n_0 ;
  wire \adapt_cnt[0]_i_3__0_n_0 ;
  wire \adapt_cnt[0]_i_4__0_n_0 ;
  wire \adapt_cnt[0]_i_5__0_n_0 ;
  wire \adapt_cnt[0]_i_6__0_n_0 ;
  wire \adapt_cnt[0]_i_7__0_n_0 ;
  wire \adapt_cnt[0]_i_8__0_n_0 ;
  wire \adapt_cnt[0]_i_9__0_n_0 ;
  wire \adapt_cnt[16]_i_2__0_n_0 ;
  wire \adapt_cnt[16]_i_3__0_n_0 ;
  wire \adapt_cnt[16]_i_4__0_n_0 ;
  wire \adapt_cnt[16]_i_5__0_n_0 ;
  wire \adapt_cnt[16]_i_6__0_n_0 ;
  wire \adapt_cnt[16]_i_7__0_n_0 ;
  wire \adapt_cnt[8]_i_2__0_n_0 ;
  wire \adapt_cnt[8]_i_3__0_n_0 ;
  wire \adapt_cnt[8]_i_4__0_n_0 ;
  wire \adapt_cnt[8]_i_5__0_n_0 ;
  wire \adapt_cnt[8]_i_6__0_n_0 ;
  wire \adapt_cnt[8]_i_7__0_n_0 ;
  wire \adapt_cnt[8]_i_8__0_n_0 ;
  wire \adapt_cnt[8]_i_9__0_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__0_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__0_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__0_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__0_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__0_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__0_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__0_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__0_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__1 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__1_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__1_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__1_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__1_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__1 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__1 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__1 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__1 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__0 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(D),
        .O(\adapt_cnt[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__0 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__0 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__0 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__0 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__0 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__0 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__0 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__0 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__0 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__0 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__0 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__0 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__0 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__0 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__0 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__0 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__0 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__0 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__0 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__0 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__0 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__0_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__0 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__0_n_0 ,\adapt_cnt_reg[0]_i_2__0_n_1 ,\adapt_cnt_reg[0]_i_2__0_n_2 ,\adapt_cnt_reg[0]_i_2__0_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__0_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__0_n_5 ,\adapt_cnt_reg[0]_i_2__0_n_6 ,\adapt_cnt_reg[0]_i_2__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__0_n_8 ,\adapt_cnt_reg[0]_i_2__0_n_9 ,\adapt_cnt_reg[0]_i_2__0_n_10 ,\adapt_cnt_reg[0]_i_2__0_n_11 ,\adapt_cnt_reg[0]_i_2__0_n_12 ,\adapt_cnt_reg[0]_i_2__0_n_13 ,\adapt_cnt_reg[0]_i_2__0_n_14 ,\adapt_cnt_reg[0]_i_2__0_n_15 }),
        .S({\adapt_cnt[0]_i_3__0_n_0 ,\adapt_cnt[0]_i_4__0_n_0 ,\adapt_cnt[0]_i_5__0_n_0 ,\adapt_cnt[0]_i_6__0_n_0 ,\adapt_cnt[0]_i_7__0_n_0 ,\adapt_cnt[0]_i_8__0_n_0 ,\adapt_cnt[0]_i_9__0_n_0 ,\adapt_cnt[0]_i_10__0_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__0 
       (.CI(\adapt_cnt_reg[8]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__0_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__0_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__0_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__0_n_5 ,\adapt_cnt_reg[16]_i_1__0_n_6 ,\adapt_cnt_reg[16]_i_1__0_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__0_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__0_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__0_n_10 ,\adapt_cnt_reg[16]_i_1__0_n_11 ,\adapt_cnt_reg[16]_i_1__0_n_12 ,\adapt_cnt_reg[16]_i_1__0_n_13 ,\adapt_cnt_reg[16]_i_1__0_n_14 ,\adapt_cnt_reg[16]_i_1__0_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__0_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__0_n_0 ,\adapt_cnt[16]_i_3__0_n_0 ,\adapt_cnt[16]_i_4__0_n_0 ,\adapt_cnt[16]_i_5__0_n_0 ,\adapt_cnt[16]_i_6__0_n_0 ,\adapt_cnt[16]_i_7__0_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__0_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__0_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__0 
       (.CI(\adapt_cnt_reg[0]_i_2__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__0_n_0 ,\adapt_cnt_reg[8]_i_1__0_n_1 ,\adapt_cnt_reg[8]_i_1__0_n_2 ,\adapt_cnt_reg[8]_i_1__0_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__0_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__0_n_5 ,\adapt_cnt_reg[8]_i_1__0_n_6 ,\adapt_cnt_reg[8]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__0_n_8 ,\adapt_cnt_reg[8]_i_1__0_n_9 ,\adapt_cnt_reg[8]_i_1__0_n_10 ,\adapt_cnt_reg[8]_i_1__0_n_11 ,\adapt_cnt_reg[8]_i_1__0_n_12 ,\adapt_cnt_reg[8]_i_1__0_n_13 ,\adapt_cnt_reg[8]_i_1__0_n_14 ,\adapt_cnt_reg[8]_i_1__0_n_15 }),
        .S({\adapt_cnt[8]_i_2__0_n_0 ,\adapt_cnt[8]_i_3__0_n_0 ,\adapt_cnt[8]_i_4__0_n_0 ,\adapt_cnt[8]_i_5__0_n_0 ,\adapt_cnt[8]_i_6__0_n_0 ,\adapt_cnt[8]_i_7__0_n_0 ,\adapt_cnt[8]_i_8__0_n_0 ,\adapt_cnt[8]_i_9__0_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__0_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__0_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[3]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[4]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[5]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_274 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__1_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_275 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_276 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_277 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_278 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_rxeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_9
   (\pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    phy_rxeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output [2:0]phy_rxeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire \FSM_sequential_fsm[2]_i_2__2_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3__2_n_0 ;
  wire \FSM_sequential_fsm[2]_i_4__2_n_0 ;
  wire \FSM_sequential_fsm[2]_i_5__2_n_0 ;
  wire \FSM_sequential_fsm[2]_i_6__2_n_0 ;
  wire [0:0]SR;
  wire adapt_2nd_reg_n_0;
  wire \adapt_cnt[0]_i_10__1_n_0 ;
  wire \adapt_cnt[0]_i_1__1_n_0 ;
  wire \adapt_cnt[0]_i_3__1_n_0 ;
  wire \adapt_cnt[0]_i_4__1_n_0 ;
  wire \adapt_cnt[0]_i_5__1_n_0 ;
  wire \adapt_cnt[0]_i_6__1_n_0 ;
  wire \adapt_cnt[0]_i_7__1_n_0 ;
  wire \adapt_cnt[0]_i_8__1_n_0 ;
  wire \adapt_cnt[0]_i_9__1_n_0 ;
  wire \adapt_cnt[16]_i_2__1_n_0 ;
  wire \adapt_cnt[16]_i_3__1_n_0 ;
  wire \adapt_cnt[16]_i_4__1_n_0 ;
  wire \adapt_cnt[16]_i_5__1_n_0 ;
  wire \adapt_cnt[16]_i_6__1_n_0 ;
  wire \adapt_cnt[16]_i_7__1_n_0 ;
  wire \adapt_cnt[8]_i_2__1_n_0 ;
  wire \adapt_cnt[8]_i_3__1_n_0 ;
  wire \adapt_cnt[8]_i_4__1_n_0 ;
  wire \adapt_cnt[8]_i_5__1_n_0 ;
  wire \adapt_cnt[8]_i_6__1_n_0 ;
  wire \adapt_cnt[8]_i_7__1_n_0 ;
  wire \adapt_cnt[8]_i_8__1_n_0 ;
  wire \adapt_cnt[8]_i_9__1_n_0 ;
  wire [21:0]adapt_cnt_reg;
  wire \adapt_cnt_reg[0]_i_2__1_n_0 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_1 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_10 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_11 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_12 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_13 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_14 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_15 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_2 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_3 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_5 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_6 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_7 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_8 ;
  wire \adapt_cnt_reg[0]_i_2__1_n_9 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_10 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_11 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_12 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_13 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_14 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_15 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_3 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_5 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_6 ;
  wire \adapt_cnt_reg[16]_i_1__1_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_0 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_1 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_10 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_11 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_12 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_13 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_14 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_15 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_2 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_3 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_5 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_6 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_7 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_8 ;
  wire \adapt_cnt_reg[8]_i_1__1_n_9 ;
  wire adapt_done;
  wire done;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire lffs_sel;
  wire [0:0]out;
  wire [2:0]phy_rxeq_fsm;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [1:0]txcoeff_cnt;
  wire \txcoeff_cnt_reg_n_0_[0] ;
  wire \txcoeff_cnt_reg_n_0_[1] ;
  wire [3:3]\NLW_adapt_cnt_reg[0]_i_2__1_CO_UNCONNECTED ;
  wire [7:3]\NLW_adapt_cnt_reg[16]_i_1__1_CO_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__1_DI_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__1_O_UNCONNECTED ;
  wire [7:6]\NLW_adapt_cnt_reg[16]_i_1__1_S_UNCONNECTED ;
  wire [3:3]\NLW_adapt_cnt_reg[8]_i_1__1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0888888888888888)) 
    \FSM_sequential_fsm[2]_i_2__2 
       (.I0(fsm[1]),
        .I1(adapt_2nd_reg_n_0),
        .I2(\FSM_sequential_fsm[2]_i_3__2_n_0 ),
        .I3(\FSM_sequential_fsm[2]_i_4__2_n_0 ),
        .I4(\FSM_sequential_fsm[2]_i_5__2_n_0 ),
        .I5(\FSM_sequential_fsm[2]_i_6__2_n_0 ),
        .O(\FSM_sequential_fsm[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \FSM_sequential_fsm[2]_i_3__2 
       (.I0(adapt_cnt_reg[12]),
        .I1(adapt_cnt_reg[13]),
        .I2(adapt_cnt_reg[10]),
        .I3(adapt_cnt_reg[11]),
        .I4(adapt_cnt_reg[14]),
        .I5(adapt_cnt_reg[15]),
        .O(\FSM_sequential_fsm[2]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_fsm[2]_i_4__2 
       (.I0(adapt_cnt_reg[1]),
        .I1(adapt_cnt_reg[0]),
        .I2(adapt_cnt_reg[3]),
        .I3(adapt_cnt_reg[2]),
        .O(\FSM_sequential_fsm[2]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_sequential_fsm[2]_i_5__2 
       (.I0(adapt_cnt_reg[7]),
        .I1(adapt_cnt_reg[6]),
        .I2(adapt_cnt_reg[4]),
        .I3(adapt_cnt_reg[5]),
        .I4(adapt_cnt_reg[9]),
        .I5(adapt_cnt_reg[8]),
        .O(\FSM_sequential_fsm[2]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \FSM_sequential_fsm[2]_i_6__2 
       (.I0(adapt_cnt_reg[18]),
        .I1(adapt_cnt_reg[19]),
        .I2(adapt_cnt_reg[17]),
        .I3(adapt_cnt_reg[16]),
        .I4(adapt_cnt_reg[21]),
        .I5(adapt_cnt_reg[20]),
        .O(\FSM_sequential_fsm[2]_i_6__2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDSE adapt_2nd_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_0),
        .Q(adapt_2nd_reg_n_0),
        .S(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \adapt_cnt[0]_i_10__1 
       (.I0(adapt_cnt_reg[0]),
        .O(\adapt_cnt[0]_i_10__1_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \adapt_cnt[0]_i_1__1 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(out),
        .O(\adapt_cnt[0]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_3__1 
       (.I0(adapt_cnt_reg[7]),
        .O(\adapt_cnt[0]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_4__1 
       (.I0(adapt_cnt_reg[6]),
        .O(\adapt_cnt[0]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_5__1 
       (.I0(adapt_cnt_reg[5]),
        .O(\adapt_cnt[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_6__1 
       (.I0(adapt_cnt_reg[4]),
        .O(\adapt_cnt[0]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_7__1 
       (.I0(adapt_cnt_reg[3]),
        .O(\adapt_cnt[0]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_8__1 
       (.I0(adapt_cnt_reg[2]),
        .O(\adapt_cnt[0]_i_8__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[0]_i_9__1 
       (.I0(adapt_cnt_reg[1]),
        .O(\adapt_cnt[0]_i_9__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_2__1 
       (.I0(adapt_cnt_reg[21]),
        .O(\adapt_cnt[16]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_3__1 
       (.I0(adapt_cnt_reg[20]),
        .O(\adapt_cnt[16]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_4__1 
       (.I0(adapt_cnt_reg[19]),
        .O(\adapt_cnt[16]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_5__1 
       (.I0(adapt_cnt_reg[18]),
        .O(\adapt_cnt[16]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_6__1 
       (.I0(adapt_cnt_reg[17]),
        .O(\adapt_cnt[16]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[16]_i_7__1 
       (.I0(adapt_cnt_reg[16]),
        .O(\adapt_cnt[16]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_2__1 
       (.I0(adapt_cnt_reg[15]),
        .O(\adapt_cnt[8]_i_2__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_3__1 
       (.I0(adapt_cnt_reg[14]),
        .O(\adapt_cnt[8]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_4__1 
       (.I0(adapt_cnt_reg[13]),
        .O(\adapt_cnt[8]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_5__1 
       (.I0(adapt_cnt_reg[12]),
        .O(\adapt_cnt[8]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_6__1 
       (.I0(adapt_cnt_reg[11]),
        .O(\adapt_cnt[8]_i_6__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_7__1 
       (.I0(adapt_cnt_reg[10]),
        .O(\adapt_cnt[8]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_8__1 
       (.I0(adapt_cnt_reg[9]),
        .O(\adapt_cnt[8]_i_8__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \adapt_cnt[8]_i_9__1 
       (.I0(adapt_cnt_reg[8]),
        .O(\adapt_cnt[8]_i_9__1_n_0 ));
  FDRE \adapt_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_15 ),
        .Q(adapt_cnt_reg[0]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  CARRY8 \adapt_cnt_reg[0]_i_2__1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[0]_i_2__1_n_0 ,\adapt_cnt_reg[0]_i_2__1_n_1 ,\adapt_cnt_reg[0]_i_2__1_n_2 ,\adapt_cnt_reg[0]_i_2__1_n_3 ,\NLW_adapt_cnt_reg[0]_i_2__1_CO_UNCONNECTED [3],\adapt_cnt_reg[0]_i_2__1_n_5 ,\adapt_cnt_reg[0]_i_2__1_n_6 ,\adapt_cnt_reg[0]_i_2__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\adapt_cnt_reg[0]_i_2__1_n_8 ,\adapt_cnt_reg[0]_i_2__1_n_9 ,\adapt_cnt_reg[0]_i_2__1_n_10 ,\adapt_cnt_reg[0]_i_2__1_n_11 ,\adapt_cnt_reg[0]_i_2__1_n_12 ,\adapt_cnt_reg[0]_i_2__1_n_13 ,\adapt_cnt_reg[0]_i_2__1_n_14 ,\adapt_cnt_reg[0]_i_2__1_n_15 }),
        .S({\adapt_cnt[0]_i_3__1_n_0 ,\adapt_cnt[0]_i_4__1_n_0 ,\adapt_cnt[0]_i_5__1_n_0 ,\adapt_cnt[0]_i_6__1_n_0 ,\adapt_cnt[0]_i_7__1_n_0 ,\adapt_cnt[0]_i_8__1_n_0 ,\adapt_cnt[0]_i_9__1_n_0 ,\adapt_cnt[0]_i_10__1_n_0 }));
  FDRE \adapt_cnt_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_13 ),
        .Q(adapt_cnt_reg[10]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_12 ),
        .Q(adapt_cnt_reg[11]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_11 ),
        .Q(adapt_cnt_reg[12]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_10 ),
        .Q(adapt_cnt_reg[13]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_9 ),
        .Q(adapt_cnt_reg[14]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_8 ),
        .Q(adapt_cnt_reg[15]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_15 ),
        .Q(adapt_cnt_reg[16]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  CARRY8 \adapt_cnt_reg[16]_i_1__1 
       (.CI(\adapt_cnt_reg[8]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_adapt_cnt_reg[16]_i_1__1_CO_UNCONNECTED [7:5],\adapt_cnt_reg[16]_i_1__1_n_3 ,\NLW_adapt_cnt_reg[16]_i_1__1_CO_UNCONNECTED [3],\adapt_cnt_reg[16]_i_1__1_n_5 ,\adapt_cnt_reg[16]_i_1__1_n_6 ,\adapt_cnt_reg[16]_i_1__1_n_7 }),
        .DI({\NLW_adapt_cnt_reg[16]_i_1__1_DI_UNCONNECTED [7:6],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_adapt_cnt_reg[16]_i_1__1_O_UNCONNECTED [7:6],\adapt_cnt_reg[16]_i_1__1_n_10 ,\adapt_cnt_reg[16]_i_1__1_n_11 ,\adapt_cnt_reg[16]_i_1__1_n_12 ,\adapt_cnt_reg[16]_i_1__1_n_13 ,\adapt_cnt_reg[16]_i_1__1_n_14 ,\adapt_cnt_reg[16]_i_1__1_n_15 }),
        .S({\NLW_adapt_cnt_reg[16]_i_1__1_S_UNCONNECTED [7:6],\adapt_cnt[16]_i_2__1_n_0 ,\adapt_cnt[16]_i_3__1_n_0 ,\adapt_cnt[16]_i_4__1_n_0 ,\adapt_cnt[16]_i_5__1_n_0 ,\adapt_cnt[16]_i_6__1_n_0 ,\adapt_cnt[16]_i_7__1_n_0 }));
  FDRE \adapt_cnt_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_14 ),
        .Q(adapt_cnt_reg[17]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_13 ),
        .Q(adapt_cnt_reg[18]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[19] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_12 ),
        .Q(adapt_cnt_reg[19]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_14 ),
        .Q(adapt_cnt_reg[1]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[20] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_11 ),
        .Q(adapt_cnt_reg[20]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[21] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[16]_i_1__1_n_10 ),
        .Q(adapt_cnt_reg[21]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_13 ),
        .Q(adapt_cnt_reg[2]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_12 ),
        .Q(adapt_cnt_reg[3]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_11 ),
        .Q(adapt_cnt_reg[4]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_10 ),
        .Q(adapt_cnt_reg[5]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_9 ),
        .Q(adapt_cnt_reg[6]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[0]_i_2__1_n_8 ),
        .Q(adapt_cnt_reg[7]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE \adapt_cnt_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_15 ),
        .Q(adapt_cnt_reg[8]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  CARRY8 \adapt_cnt_reg[8]_i_1__1 
       (.CI(\adapt_cnt_reg[0]_i_2__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\adapt_cnt_reg[8]_i_1__1_n_0 ,\adapt_cnt_reg[8]_i_1__1_n_1 ,\adapt_cnt_reg[8]_i_1__1_n_2 ,\adapt_cnt_reg[8]_i_1__1_n_3 ,\NLW_adapt_cnt_reg[8]_i_1__1_CO_UNCONNECTED [3],\adapt_cnt_reg[8]_i_1__1_n_5 ,\adapt_cnt_reg[8]_i_1__1_n_6 ,\adapt_cnt_reg[8]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\adapt_cnt_reg[8]_i_1__1_n_8 ,\adapt_cnt_reg[8]_i_1__1_n_9 ,\adapt_cnt_reg[8]_i_1__1_n_10 ,\adapt_cnt_reg[8]_i_1__1_n_11 ,\adapt_cnt_reg[8]_i_1__1_n_12 ,\adapt_cnt_reg[8]_i_1__1_n_13 ,\adapt_cnt_reg[8]_i_1__1_n_14 ,\adapt_cnt_reg[8]_i_1__1_n_15 }),
        .S({\adapt_cnt[8]_i_2__1_n_0 ,\adapt_cnt[8]_i_3__1_n_0 ,\adapt_cnt[8]_i_4__1_n_0 ,\adapt_cnt[8]_i_5__1_n_0 ,\adapt_cnt[8]_i_6__1_n_0 ,\adapt_cnt[8]_i_7__1_n_0 ,\adapt_cnt[8]_i_8__1_n_0 ,\adapt_cnt[8]_i_9__1_n_0 }));
  FDRE \adapt_cnt_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\adapt_cnt_reg[8]_i_1__1_n_14 ),
        .Q(adapt_cnt_reg[9]),
        .R(\adapt_cnt[0]_i_1__1_n_0 ));
  FDRE adapt_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(adapt_done),
        .Q(\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .R(SR));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .R(SR));
  FDRE lffs_sel_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[6]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_rxeq_fsm[7]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_rxeq_fsm[1]));
  LUT3 #(
    .INIT(8'h02)) 
    \phy_rxeq_fsm[8]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .O(phy_rxeq_fsm[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_233 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm[2]_i_2__2_n_0 ),
        .Q({\txcoeff_cnt_reg_n_0_[1] ,\txcoeff_cnt_reg_n_0_[0] }),
        .adapt_2nd_reg(sync_ctrl_n_0),
        .adapt_2nd_reg_0(adapt_2nd_reg_n_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(fsm),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\txcoeff_cnt_reg[0] (txcoeff_cnt[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_234 sync_lffs
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_235 sync_preset
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_236 sync_txcoeff
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_237 sync_txpreset
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  LUT5 #(
    .INIT(32'h01100000)) 
    \txcoeff_cnt[1]_i_1__1 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(\txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txcoeff_cnt_reg_n_0_[1] ),
        .I4(fsm[1]),
        .O(txcoeff_cnt[1]));
  FDRE \txcoeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[0]),
        .Q(\txcoeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \txcoeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(txcoeff_cnt[1]),
        .Q(\txcoeff_cnt_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_24 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_25 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_110
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_134 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_135 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_137
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_143 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_144 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_151
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_175 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_176 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_178
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_184 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_185 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_192
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_216 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_217 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_219
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_225 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_226 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_233
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_257 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_258 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_260
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_266 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_267 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_274
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_298 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_299 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_301
   (E,
    \FSM_sequential_fsm_reg[2] ,
    \coeff_cnt_reg[0] ,
    out,
    D,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]\FSM_sequential_fsm_reg[2] ;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]D;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_307 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_308 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (\FSM_sequential_fsm_reg[2] ),
        .\FSM_sequential_fsm_reg[2]_0 (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_315
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done_0,
    lffs_sel_1,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done_0;
  output lffs_sel_1;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done_0;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel_1;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_339 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_340 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done_0(adapt_done_0),
        .done(done),
        .lffs_sel_1(lffs_sel_1),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_32
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_52 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_53 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_55
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_61 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_62 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_69
   (adapt_2nd_reg,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    out,
    adapt_2nd_reg_0,
    \FSM_sequential_fsm_reg[1] ,
    Q,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output adapt_2nd_reg;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]out;
  input adapt_2nd_reg_0;
  input \FSM_sequential_fsm_reg[1] ;
  input [1:0]Q;
  input \rrst_n_r_reg[7] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire adapt_done;
  wire [1:0]ctrl_r;
  wire done;
  wire lffs_sel;
  wire [2:0]out;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_93 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .adapt_2nd_reg(adapt_2nd_reg),
        .adapt_2nd_reg_0(adapt_2nd_reg_0),
        .out(ctrl_r[0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_94 \sync_vec[1].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .adapt_2nd_reg(adapt_2nd_reg_0),
        .adapt_done(adapt_done),
        .done(done),
        .lffs_sel(lffs_sel),
        .out(ctrl_r[1]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]),
        .\txcoeff_cnt_reg[0] (\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_96
   (E,
    D,
    \coeff_cnt_reg[0] ,
    out,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]E;
  output [2:0]D;
  output [0:0]\coeff_cnt_reg[0] ;
  input [2:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [1:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [1:0]ctrl_r;
  wire [2:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_102 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[2] (out),
        .Q(Q[0]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .out(ctrl_r[0]),
        .phy_txeq_ctrl(phy_txeq_ctrl[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_103 \sync_vec[1].sync_cell_i 
       (.D(D),
        .E(E),
        .\FSM_sequential_fsm_reg[2] (out),
        .Q(Q),
        .out(ctrl_r[1]),
        .phy_txeq_ctrl(phy_txeq_ctrl[1]),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (ctrl_r[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_21 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_22 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_23 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_138
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_139 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_140 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_141 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_142 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_179
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_180 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_181 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_182 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_183 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_220
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_221 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_222 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_223 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_224 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_261
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_262 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_263 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_264 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_265 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_302
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_303 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_304 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_305 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_306 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_56
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_57 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_58 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_59 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_60 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_97
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [3:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [3:0]phy_txeq_preset;

  wire [3:0]phy_txeq_preset;
  wire [3:0]preset_r;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_98 \sync_vec[0].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[0]),
        .preset_r(preset_r[0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_99 \sync_vec[1].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[1]),
        .preset_r(preset_r[1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_100 \sync_vec[2].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[2]),
        .preset_r(preset_r[2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_101 \sync_vec[3].sync_cell_i 
       (.phy_txeq_preset(phy_txeq_preset[3]),
        .preset_r(preset_r[3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_26 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_27 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_28 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_29 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_30 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_31 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized10
   (out,
    sys_clk,
    txprgdivresetdone_out);
  output [0:0]out;
  input sys_clk;
  input [7:0]txprgdivresetdone_out;

  wire [0:0]out;
  wire sys_clk;
  wire [7:0]txprgdivresetdone_out;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized20 \sync_vec[0].sync_cell_i 
       (.out(out),
        .sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[7]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized21 \sync_vec[1].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[6]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized22 \sync_vec[2].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[5]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized23 \sync_vec[3].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[4]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized24 \sync_vec[4].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized25 \sync_vec[5].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized26 \sync_vec[6].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized27 \sync_vec[7].sync_cell_i 
       (.sys_clk(sys_clk),
        .txprgdivresetdone_out(txprgdivresetdone_out[0]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized11
   (resetdone_a,
    D,
    \sync_reg[3] ,
    \sync_reg[3]_0 ,
    out,
    txsync_done_a,
    fsm23_out,
    sys_clk,
    gt_txresetdone);
  output resetdone_a;
  output [1:0]D;
  input \sync_reg[3] ;
  input \sync_reg[3]_0 ;
  input [2:0]out;
  input txsync_done_a;
  input fsm23_out;
  input sys_clk;
  input [7:0]gt_txresetdone;

  wire [1:0]D;
  wire fsm23_out;
  wire [7:0]gt_txresetdone;
  wire [2:0]out;
  wire resetdone_a;
  wire \sync_reg[3] ;
  wire \sync_reg[3]_0 ;
  wire \sync_vec[5].sync_cell_i_n_0 ;
  wire sys_clk;
  wire [7:0]txresetdone_r;
  wire txsync_done_a;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized28 \sync_vec[0].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[0]),
        .out(txresetdone_r[0]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized29 \sync_vec[1].sync_cell_i 
       (.D(D),
        .fsm23_out(fsm23_out),
        .gt_txresetdone(gt_txresetdone[1]),
        .out(out),
        .resetdone_a(resetdone_a),
        .\sync_reg[3]_0 ({txresetdone_r[3:2],txresetdone_r[0]}),
        .\sync_reg[3]_1 (\sync_vec[5].sync_cell_i_n_0 ),
        .\sync_reg[3]_2 (\sync_reg[3] ),
        .\sync_reg[3]_3 (\sync_reg[3]_0 ),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized30 \sync_vec[2].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[2]),
        .out(txresetdone_r[2]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized31 \sync_vec[3].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[3]),
        .out(txresetdone_r[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized32 \sync_vec[4].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[4]),
        .out(txresetdone_r[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized33 \sync_vec[5].sync_cell_i 
       (.\FSM_sequential_fsm_reg[1] (\sync_vec[5].sync_cell_i_n_0 ),
        .gt_txresetdone(gt_txresetdone[5]),
        .\sync_reg[3]_0 ({txresetdone_r[7:6],txresetdone_r[4]}),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized34 \sync_vec[6].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[6]),
        .out(txresetdone_r[6]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized35 \sync_vec[7].sync_cell_i 
       (.gt_txresetdone(gt_txresetdone[7]),
        .out(txresetdone_r[7]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized12
   (\FSM_sequential_fsm_reg[1] ,
    \FSM_sequential_fsm_reg[1]_0 ,
    sys_clk,
    gt_rxresetdone);
  output \FSM_sequential_fsm_reg[1] ;
  output \FSM_sequential_fsm_reg[1]_0 ;
  input sys_clk;
  input [7:0]gt_rxresetdone;

  wire \FSM_sequential_fsm_reg[1] ;
  wire \FSM_sequential_fsm_reg[1]_0 ;
  wire [7:0]gt_rxresetdone;
  wire [7:0]rxresetdone_r;
  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized36 \sync_vec[0].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[0]),
        .out(rxresetdone_r[0]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized37 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .gt_rxresetdone(gt_rxresetdone[1]),
        .\sync_reg[3]_0 ({rxresetdone_r[3:2],rxresetdone_r[0]}),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized38 \sync_vec[2].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[2]),
        .out(rxresetdone_r[2]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized39 \sync_vec[3].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[3]),
        .out(rxresetdone_r[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized40 \sync_vec[4].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[4]),
        .out(rxresetdone_r[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized41 \sync_vec[5].sync_cell_i 
       (.\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1]_0 ),
        .gt_rxresetdone(gt_rxresetdone[5]),
        .\sync_reg[3]_0 ({rxresetdone_r[7:6],rxresetdone_r[4]}),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized42 \sync_vec[6].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[6]),
        .out(rxresetdone_r[6]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized43 \sync_vec[7].sync_cell_i 
       (.gt_rxresetdone(gt_rxresetdone[7]),
        .out(rxresetdone_r[7]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized13
   (\fsm_reg[0] ,
    txsync_done_a,
    D,
    p_0_in,
    Q,
    resetdone_a,
    \txsync_start_cnt_reg[1] ,
    out,
    \FSM_sequential_fsm_reg[2] ,
    fsm23_out,
    fsm25_out,
    sys_clk,
    pciesynctxsyncdone_out);
  output \fsm_reg[0] ;
  output txsync_done_a;
  output [0:0]D;
  input p_0_in;
  input [1:0]Q;
  input resetdone_a;
  input [1:0]\txsync_start_cnt_reg[1] ;
  input [2:0]out;
  input \FSM_sequential_fsm_reg[2] ;
  input fsm23_out;
  input fsm25_out;
  input sys_clk;
  input [7:0]pciesynctxsyncdone_out;

  wire [0:0]D;
  wire \FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire fsm2;
  wire fsm23_out;
  wire fsm25_out;
  wire \fsm_reg[0] ;
  wire [2:0]out;
  wire p_0_in;
  wire [7:0]pciesynctxsyncdone_out;
  wire resetdone_a;
  wire \sync_vec[1].sync_cell_i_n_1 ;
  wire \sync_vec[5].sync_cell_i_n_1 ;
  wire sys_clk;
  wire txsync_done_a;
  wire [7:0]txsync_done_r;
  wire [1:0]\txsync_start_cnt_reg[1] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized44 \sync_vec[0].sync_cell_i 
       (.out(txsync_done_r[0]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[7]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized45 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[1] (\sync_vec[1].sync_cell_i_n_1 ),
        .fsm2(fsm2),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[6]),
        .\sync_reg[3]_0 ({txsync_done_r[3:2],txsync_done_r[0]}),
        .\sync_reg[3]_1 (\sync_vec[5].sync_cell_i_n_1 ),
        .sys_clk(sys_clk),
        .\txsync_start_cnt_reg[1] (\txsync_start_cnt_reg[1] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized46 \sync_vec[2].sync_cell_i 
       (.out(txsync_done_r[2]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[5]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized47 \sync_vec[3].sync_cell_i 
       (.out(txsync_done_r[3]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized48 \sync_vec[4].sync_cell_i 
       (.out(txsync_done_r[4]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized49 \sync_vec[5].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\sync_vec[5].sync_cell_i_n_1 ),
        .out(txsync_done_r[5]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[2]),
        .sys_clk(sys_clk),
        .txsync_done_r({txsync_done_r[7:6],txsync_done_r[4]}));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized50 \sync_vec[6].sync_cell_i 
       (.out(txsync_done_r[6]),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[1]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized51 \sync_vec[7].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[2] (out),
        .\FSM_sequential_fsm_reg[2]_0 (\FSM_sequential_fsm_reg[2] ),
        .Q(Q),
        .fsm2(fsm2),
        .fsm23_out(fsm23_out),
        .fsm25_out(fsm25_out),
        .\fsm_reg[0] (\fsm_reg[0] ),
        .out(txsync_done_r[7]),
        .p_0_in(p_0_in),
        .pciesynctxsyncdone_out(pciesynctxsyncdone_out[0]),
        .resetdone_a(resetdone_a),
        .\sync_reg[3]_0 (\sync_vec[1].sync_cell_i_n_1 ),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a),
        .txsync_done_r(txsync_done_r[6:4]));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized14
   (D,
    p_0_in,
    \fsm_reg[1] ,
    \FSM_sequential_fsm_reg[0] ,
    Q,
    out,
    \sync_reg[3] ,
    \txsync_start_cnt_reg[1] ,
    txsync_done_a,
    \FSM_sequential_fsm_reg[2] ,
    resetdone_a,
    sys_clk,
    gt_phystatus);
  output [0:0]D;
  output p_0_in;
  output \fsm_reg[1] ;
  output \FSM_sequential_fsm_reg[0] ;
  input [2:0]Q;
  input [0:0]out;
  input [0:0]\sync_reg[3] ;
  input [1:0]\txsync_start_cnt_reg[1] ;
  input txsync_done_a;
  input [1:0]\FSM_sequential_fsm_reg[2] ;
  input resetdone_a;
  input sys_clk;
  input [7:0]gt_phystatus;

  wire [0:0]D;
  wire \FSM_sequential_fsm_reg[0] ;
  wire [1:0]\FSM_sequential_fsm_reg[2] ;
  wire [2:0]Q;
  wire \fsm_reg[1] ;
  wire [7:0]gt_phystatus;
  wire [0:0]out;
  wire p_0_in;
  wire [7:1]phystatus_r;
  wire resetdone_a;
  wire [0:0]\sync_reg[3] ;
  wire \sync_vec[6].sync_cell_i_n_0 ;
  wire sys_clk;
  wire txsync_done_a;
  wire [1:0]\txsync_start_cnt_reg[1] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized52 \sync_vec[0].sync_cell_i 
       (.D(D),
        .\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[0] ),
        .\FSM_sequential_fsm_reg[2] (\FSM_sequential_fsm_reg[2] ),
        .Q(Q),
        .\fsm_reg[1] (\fsm_reg[1] ),
        .\fsm_reg[2] (p_0_in),
        .gt_phystatus(gt_phystatus[0]),
        .out(out),
        .resetdone_a(resetdone_a),
        .\sync_reg[3]_0 (phystatus_r[3:1]),
        .\sync_reg[3]_1 (\sync_reg[3] ),
        .\sync_reg[3]_2 (\sync_vec[6].sync_cell_i_n_0 ),
        .sys_clk(sys_clk),
        .txsync_done_a(txsync_done_a),
        .\txsync_start_cnt_reg[1] (\txsync_start_cnt_reg[1] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized53 \sync_vec[1].sync_cell_i 
       (.gt_phystatus(gt_phystatus[1]),
        .out(phystatus_r[1]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized54 \sync_vec[2].sync_cell_i 
       (.gt_phystatus(gt_phystatus[2]),
        .out(phystatus_r[2]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized55 \sync_vec[3].sync_cell_i 
       (.gt_phystatus(gt_phystatus[3]),
        .out(phystatus_r[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized56 \sync_vec[4].sync_cell_i 
       (.gt_phystatus(gt_phystatus[4]),
        .out(phystatus_r[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized57 \sync_vec[5].sync_cell_i 
       (.gt_phystatus(gt_phystatus[5]),
        .out(phystatus_r[5]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized58 \sync_vec[6].sync_cell_i 
       (.\fsm_reg[2] (\sync_vec[6].sync_cell_i_n_0 ),
        .gt_phystatus(gt_phystatus[6]),
        .\sync_reg[3]_0 ({phystatus_r[7],phystatus_r[5:4]}),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized59 \sync_vec[7].sync_cell_i 
       (.gt_phystatus(gt_phystatus[7]),
        .out(phystatus_r[7]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized15
   (out,
    D,
    Q,
    \fsm_reg[1] ,
    \sync_reg[3] ,
    fsm23_out,
    fsm25_out,
    \fsm_reg[1]_0 ,
    sys_clk,
    \prst_n_r_reg[7] );
  output [0:0]out;
  output [1:0]D;
  input [2:0]Q;
  input \fsm_reg[1] ;
  input [0:0]\sync_reg[3] ;
  input fsm23_out;
  input fsm25_out;
  input \fsm_reg[1]_0 ;
  input sys_clk;
  input [0:0]\prst_n_r_reg[7] ;

  wire [1:0]D;
  wire [2:0]Q;
  wire fsm23_out;
  wire fsm25_out;
  wire \fsm_reg[1] ;
  wire \fsm_reg[1]_0 ;
  wire [0:0]out;
  wire [0:0]\prst_n_r_reg[7] ;
  wire [0:0]\sync_reg[3] ;
  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized60 \sync_vec[0].sync_cell_i 
       (.D(D),
        .Q(Q),
        .fsm23_out(fsm23_out),
        .fsm25_out(fsm25_out),
        .\fsm_reg[1] (\fsm_reg[1] ),
        .\fsm_reg[1]_0 (\fsm_reg[1]_0 ),
        .out(out),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\sync_reg[3]_0 (\sync_reg[3] ),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized16
   (out,
    pipe_clk,
    D);
  output [0:0]out;
  input pipe_clk;
  input [0:0]D;

  wire [0:0]D;
  wire [0:0]out;
  wire pipe_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized61 \sync_vec[0].sync_cell_i 
       (.D(D),
        .out(out),
        .pipe_clk(pipe_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_136
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_145 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_146 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_147 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_148 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_149 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_150 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_177
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_186 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_187 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_188 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_189 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_190 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_191 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_218
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_227 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_228 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_229 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_230 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_231 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_232 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_259
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_268 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_269 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_270 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_271 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_272 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_273 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_300
   (D,
    \prst_n_r_reg[7] ,
    out,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]out;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [1:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_309 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (out),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_310 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (out[0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_311 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (out),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_312 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (out),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_313 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (out),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_314 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (out),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (\prst_n_r_reg[7] ),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_54
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_63 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_64 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_65 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_66 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_67 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_68 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_95
   (D,
    out,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [6:0]D;
  input [0:0]out;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [7:0]Q;
  input [4:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [6:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [7:0]Q;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [4:0]coeff_r;
  wire [0:0]out;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [4:0]\preset_reg[17] ;
  wire \rrst_n_r_reg[7] ;
  wire \sync_vec[1].sync_cell_i_n_1 ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_104 \sync_vec[0].sync_cell_i 
       (.D(D[1:0]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q({Q[7],Q[0]}),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[12] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\preset_reg[12] (\preset_reg[17] [0]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_105 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[1] [0]),
        .Q(Q[1]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .\coeff_reg[13] (\sync_vec[1].sync_cell_i_n_1 ),
        .out(coeff_r[1]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_106 \sync_vec[2].sync_cell_i 
       (.D(D[2]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[2]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[2]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\preset_reg[14] (\preset_reg[17] [1]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[1]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_107 \sync_vec[3].sync_cell_i 
       (.D(D[3]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[3]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[3]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\preset_reg[15] (\preset_reg[17] [2]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[2]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_108 \sync_vec[4].sync_cell_i 
       (.D(D[4]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[4]),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\preset_reg[16] (\preset_reg[17] [3]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ),
        .\sync_reg[2]_0 (coeff_r[3]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_109 \sync_vec[5].sync_cell_i 
       (.D(D[6:5]),
        .\FSM_sequential_fsm_reg[1] (\FSM_sequential_fsm_reg[1] ),
        .Q(Q[6:5]),
        .\coeff_cnt_reg[0] (\coeff_cnt_reg[0] ),
        .\coeff_cnt_reg[1] (\coeff_cnt_reg[1] ),
        .out(coeff_r[4]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\preset_reg[17] (\preset_reg[17] [4]),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_43 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_44 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_45 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_112
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_125 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_126 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_127 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_153
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_166 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_167 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_168 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_194
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_207 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_208 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_209 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_235
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_248 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_249 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_250 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_276
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_289 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_290 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_291 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_317
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_330 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_331 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_332 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized2_71
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_84 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_85 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_86 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_33 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_34 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_35 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_36 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_114
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_115 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_116 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_117 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_118 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_155
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_156 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_157 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_158 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_159 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_196
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_197 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_198 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_199 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_200 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_237
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_238 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_239 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_240 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_241 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_278
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_279 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_280 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_281 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_282 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_319
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_320 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_321 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_322 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_323 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized3_73
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_74 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_75 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_76 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_77 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_37 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_38 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_39 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_40 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_41 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_42 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_113
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_119 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_120 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_121 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_122 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_123 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_124 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_154
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_160 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_161 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_162 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_163 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_164 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_165 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_195
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_201 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_202 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_203 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_204 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_205 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_206 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_236
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_242 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_243 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_244 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_245 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_246 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_247 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_277
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_283 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_284 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_285 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_286 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_287 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_288 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_318
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_324 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_325 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_326 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_327 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_328 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_329 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized4_72
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_78 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_79 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_80 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_81 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_82 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_83 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_46 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_47 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_48 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_49 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_50 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_51 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_111
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_128 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_129 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_130 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_131 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_132 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_133 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_152
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_169 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_170 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_171 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_172 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_173 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_174 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_193
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_210 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_211 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_212 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_213 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_214 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_215 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_234
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_251 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_252 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_253 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_254 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_255 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_256 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_275
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_292 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_293 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_294 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_295 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_296 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_297 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_316
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_333 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_334 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_335 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_336 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_337 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_338 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized5_70
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_87 \sync_vec[0].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [0]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_88 \sync_vec[1].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [1]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_89 \sync_vec[2].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [2]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_90 \sync_vec[3].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [3]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_91 \sync_vec[4].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [4]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_92 \sync_vec[5].sync_cell_i 
       (.\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] [5]),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized6
   (fsm25_out,
    out,
    \cpllreset_cnt_reg[6] ,
    \sync_reg[3] ,
    \cpllreset_cnt_reg[7] ,
    sys_clk,
    gt_gtpowergood);
  output fsm25_out;
  input [0:0]out;
  input \cpllreset_cnt_reg[6] ;
  input \sync_reg[3] ;
  input \cpllreset_cnt_reg[7] ;
  input sys_clk;
  input [7:0]gt_gtpowergood;

  wire \cpllreset_cnt_reg[6] ;
  wire \cpllreset_cnt_reg[7] ;
  wire fsm25_out;
  wire [7:0]gt_gtpowergood;
  wire [7:0]gtpowergood_r;
  wire [0:0]out;
  wire \sync_reg[3] ;
  wire \sync_vec[1].sync_cell_i_n_0 ;
  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized0 \sync_vec[0].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[0]),
        .out(gtpowergood_r[0]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized1 \sync_vec[1].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\sync_vec[1].sync_cell_i_n_0 ),
        .gt_gtpowergood(gt_gtpowergood[1]),
        .\sync_reg[3]_0 ({gtpowergood_r[3:2],gtpowergood_r[0]}),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized2 \sync_vec[2].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[2]),
        .out(gtpowergood_r[2]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized3 \sync_vec[3].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[3]),
        .out(gtpowergood_r[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized4 \sync_vec[4].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[4]),
        .out(gtpowergood_r[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized5 \sync_vec[5].sync_cell_i 
       (.\cpllreset_cnt_reg[6] (\cpllreset_cnt_reg[6] ),
        .\cpllreset_cnt_reg[7] (\cpllreset_cnt_reg[7] ),
        .fsm25_out(fsm25_out),
        .gt_gtpowergood(gt_gtpowergood[5]),
        .out(out),
        .\sync_reg[3]_0 ({gtpowergood_r[7:6],gtpowergood_r[4]}),
        .\sync_reg[3]_1 (\sync_vec[1].sync_cell_i_n_0 ),
        .\sync_reg[3]_2 (\sync_reg[3] ),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized6 \sync_vec[6].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[6]),
        .out(gtpowergood_r[6]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized7 \sync_vec[7].sync_cell_i 
       (.gt_gtpowergood(gt_gtpowergood[7]),
        .out(gtpowergood_r[7]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized7
   (out,
    sys_clk,
    gt_cplllock);
  output [0:0]out;
  input sys_clk;
  input [7:0]gt_cplllock;

  wire [7:0]gt_cplllock;
  wire [0:0]out;
  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized8 \sync_vec[0].sync_cell_i 
       (.gt_cplllock(gt_cplllock[0]),
        .out(out),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized9 \sync_vec[1].sync_cell_i 
       (.gt_cplllock(gt_cplllock[1]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized10 \sync_vec[2].sync_cell_i 
       (.gt_cplllock(gt_cplllock[2]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized11 \sync_vec[3].sync_cell_i 
       (.gt_cplllock(gt_cplllock[3]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized12 \sync_vec[4].sync_cell_i 
       (.gt_cplllock(gt_cplllock[4]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized13 \sync_vec[5].sync_cell_i 
       (.gt_cplllock(gt_cplllock[5]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized14 \sync_vec[6].sync_cell_i 
       (.gt_cplllock(gt_cplllock[6]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized15 \sync_vec[7].sync_cell_i 
       (.gt_cplllock(gt_cplllock[7]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized8
   (sys_clk);
  input sys_clk;

  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized16 \sync_vec[0].sync_cell_i 
       (.sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized17 \sync_vec[1].sync_cell_i 
       (.sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized9
   (\FSM_sequential_fsm_reg[0] ,
    fsm23_out,
    out,
    sys_clk,
    int_qpll1lock_out);
  output \FSM_sequential_fsm_reg[0] ;
  output fsm23_out;
  input [0:0]out;
  input sys_clk;
  input [1:0]int_qpll1lock_out;

  wire \FSM_sequential_fsm_reg[0] ;
  wire fsm23_out;
  wire [1:0]int_qpll1lock_out;
  wire [0:0]out;
  wire [1:0]qpll1lock_r;
  wire sys_clk;

  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized18 \sync_vec[0].sync_cell_i 
       (.\FSM_sequential_fsm_reg[0] (\FSM_sequential_fsm_reg[0] ),
        .int_qpll1lock_out(int_qpll1lock_out[0]),
        .out(qpll1lock_r[0]),
        .\sync_reg[3]_0 (qpll1lock_r[1]),
        .sys_clk(sys_clk));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized19 \sync_vec[1].sync_cell_i 
       (.fsm23_out(fsm23_out),
        .int_qpll1lock_out(int_qpll1lock_out[1]),
        .out(qpll1lock_r[1]),
        .\sync_reg[3]_0 (out),
        .\sync_reg[3]_1 (qpll1lock_r[0]),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_100
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_101
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_102
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__4 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_103
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__10_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__4 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__10_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__10 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__10_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__5 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__9 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__4 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_104
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__4_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__4 
       (.I0(\coeff[12]_i_2__4_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__4 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__4 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_105
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__4 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_106
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__4_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__4 
       (.I0(\coeff[14]_i_2__4_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__4 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__4_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_107
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__4_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__4 
       (.I0(\coeff[15]_i_2__4_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__4 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__4_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_108
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__4_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__4 
       (.I0(\coeff[16]_i_2__4_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__4 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__4_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_109
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__4_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__4 
       (.I0(\coeff[17]_i_2__4_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__4 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__4 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_115
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_116
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_117
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_118
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_119
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_120
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_121
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_122
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_123
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_124
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_125
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_126
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_127
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_128
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_129
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_130
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_131
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_132
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_133
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_134
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__4
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_135
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__11_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__12 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__11_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__11 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__11_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__13 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__10 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__4
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__10
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__4
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__4 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_139
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_140
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_141
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_142
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_143
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__3 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_144
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__8_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__3 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__8_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__8 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__8_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__4 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__7 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__3 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_145
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__3_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__3 
       (.I0(\coeff[12]_i_2__3_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__3 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__3 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_146
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__3 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_147
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__3_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__3 
       (.I0(\coeff[14]_i_2__3_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__3 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_148
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__3_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__3 
       (.I0(\coeff[15]_i_2__3_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__3 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_149
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__3_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__3 
       (.I0(\coeff[16]_i_2__3_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__3 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_150
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__3_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__3 
       (.I0(\coeff[17]_i_2__3_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__3 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__3 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_156
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_157
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_158
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_159
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_160
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_161
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_162
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_163
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_164
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_165
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_166
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_167
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_168
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_169
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_170
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_171
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_172
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_173
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_174
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_175
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__3
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_176
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__9_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__11 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__9_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__9 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__9_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__12 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__8 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__3
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__8
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__3
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__3 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_180
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_181
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_182
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_183
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_184
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__2 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_185
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__6_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__2 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__6_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__6 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__3 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__5 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__2 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_186
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__2 
       (.I0(\coeff[12]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__2 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__2 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_187
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_188
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__2 
       (.I0(\coeff[14]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_189
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__2 
       (.I0(\coeff[15]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_190
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__2 
       (.I0(\coeff[16]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_191
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__2_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__2 
       (.I0(\coeff[17]_i_2__2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__2 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__2 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_197
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_198
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_199
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_200
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_201
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_202
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_203
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_204
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_205
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_206
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_207
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_208
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_209
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_21
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_210
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_211
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_212
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_213
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_214
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_215
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_216
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__2
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_217
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__7_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__10 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__7_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__7 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__7_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__11 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__6 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__2
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__6
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__2
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__2 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_22
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_221
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_222
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_223
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_224
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_225
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__1 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_226
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__4_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__1 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__4_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__2 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__3 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__1 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_227
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__1_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__1 
       (.I0(\coeff[12]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__1 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__1 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_228
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__1 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_229
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__1_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__1 
       (.I0(\coeff[14]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__1 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_23
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_230
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__1_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__1 
       (.I0(\coeff[15]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__1 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_231
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__1_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__1 
       (.I0(\coeff[16]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__1 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_232
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__1_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__1 
       (.I0(\coeff[17]_i_2__1_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__1 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__1 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_238
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_239
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_24
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__6 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_240
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_241
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_242
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_243
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_244
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_245
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_246
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_247
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_248
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_249
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_25
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__14_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__6 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__14_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__14 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__14_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__7 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__13 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__6 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_250
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_251
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_252
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_253
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_254
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_255
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_256
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_257
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__1
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_258
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__5_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__9 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__5_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__5 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__10 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__4 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__1
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__4
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__1
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__1 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_26
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__6_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__6 
       (.I0(\coeff[12]_i_2__6_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__6 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__6 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_262
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_263
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_264
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_265
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_266
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__0 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_267
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__2_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__0 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__2_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__1 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__1 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__0 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_268
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__0_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__0 
       (.I0(\coeff[12]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__0 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__0 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_269
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__0 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_27
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__6 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_270
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__0_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__0 
       (.I0(\coeff[14]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__0 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_271
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__0_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__0 
       (.I0(\coeff[15]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__0 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_272
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__0_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__0 
       (.I0(\coeff[16]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__0 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_273
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__0_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__0 
       (.I0(\coeff[17]_i_2__0_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__0 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__0 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_279
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_28
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__6_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__6 
       (.I0(\coeff[14]_i_2__6_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__6 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__6_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_280
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_281
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_282
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_283
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_284
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_285
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_286
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_287
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_288
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_289
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_29
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__6_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__6 
       (.I0(\coeff[15]_i_2__6_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__6 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__6_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_290
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_291
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_292
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_293
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_294
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_295
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_296
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_297
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_298
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__0
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_299
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__3_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__8 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__3_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__3 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__9 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__2 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__0
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__2
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__0
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__0 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_30
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__6_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__6 
       (.I0(\coeff[16]_i_2__6_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__6 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__6_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_303
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_304
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_305
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_306
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_307
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_308
   (out,
    E,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2]_0 ,
    D,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2]_0 ;
  input [0:0]D;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__0_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [2:0]\FSM_sequential_fsm_reg[2]_0 ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1 
       (.I0(\FSM_sequential_fsm_reg[2]_0 [1]),
        .I1(\FSM_sequential_fsm_reg[2]_0 [2]),
        .I2(\FSM_sequential_fsm_reg[2]_0 [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__0_n_0 ),
        .O(\FSM_sequential_fsm_reg[2] [0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2]_0 [1]),
        .I3(\FSM_sequential_fsm_reg[2]_0 [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__0 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2]_0 [1]),
        .I3(\FSM_sequential_fsm_reg[2]_0 [2]),
        .I4(\FSM_sequential_fsm_reg[2]_0 [0]),
        .O(\FSM_sequential_fsm_reg[2] [1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_2 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2]_0 [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2]_0 [0]),
        .I4(\FSM_sequential_fsm_reg[2]_0 [2]),
        .I5(preset_done),
        .O(\FSM_sequential_fsm_reg[2] [2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2]_0 [1]),
        .I3(\FSM_sequential_fsm_reg[2]_0 [2]),
        .I4(\FSM_sequential_fsm_reg[2]_0 [0]),
        .I5(D),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_309
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1 
       (.I0(\coeff[12]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_31
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__6_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__6 
       (.I0(\coeff[17]_i_2__6_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__6 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__6 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_310
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_311
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1 
       (.I0(\coeff[14]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_312
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1 
       (.I0(\coeff[15]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_313
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1 
       (.I0(\coeff[16]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_314
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1 
       (.I0(\coeff[17]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_320
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_321
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_322
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_323
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_324
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_325
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_326
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_327
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_328
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_329
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_33
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_330
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_331
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_332
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_333
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_334
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_335
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_336
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_337
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_338
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_339
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_34
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_340
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done_0,
    lffs_sel_1,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done_0;
  output lffs_sel_1;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__1_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done_0;
  wire done;
  wire lffs_sel_1;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__7 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__1_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__1 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__8 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__0 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done_0));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__0
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_35
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_36
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_37
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_38
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_39
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_40
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_41
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_42
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_43
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_44
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_45
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_46
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_47
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_48
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_49
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_50
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_51
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_52
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__6
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_53
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__15_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__14 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__15_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__15 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__15_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__15 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__14 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__6
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__14
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__6
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__6 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_57
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_58
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_59
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_60
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_61
   (out,
    \coeff_cnt_reg[0] ,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    Q,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]\coeff_cnt_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]Q;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [0:0]Q;
  wire [0:0]\coeff_cnt_reg[0] ;
  wire [0:0]phy_txeq_ctrl;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'h00000000000004F4)) 
    \coeff_cnt[0]_i_1__5 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(Q),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(\FSM_sequential_fsm_reg[2] [0]),
        .O(\coeff_cnt_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_62
   (out,
    E,
    D,
    \sync_reg[2]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \prst_n_r_reg[7] ,
    Q,
    preset_done,
    \rrst_n_r_reg[7] ,
    phy_txeq_ctrl);
  output [0:0]out;
  output [0:0]E;
  output [2:0]D;
  input [0:0]\sync_reg[2]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]Q;
  input preset_done;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_ctrl;

  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_2__12_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire [0:0]phy_txeq_ctrl;
  wire preset_done;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFF3E30303030)) 
    \FSM_sequential_fsm[0]_i_1__5 
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(sync[2]),
        .I5(\FSM_sequential_fsm[0]_i_2__12_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h0F400F4F)) 
    \FSM_sequential_fsm[0]_i_2__12 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(sync[2]),
        .O(\FSM_sequential_fsm[0]_i_2__12_n_0 ));
  LUT5 #(
    .INIT(32'h000000F2)) 
    \FSM_sequential_fsm[1]_i_1__6 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h3233FF203233CC20)) 
    \FSM_sequential_fsm[2]_i_1__11 
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [2]),
        .I5(preset_done),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h00FF00F2FFFFFFFF)) 
    \coeff[18]_i_1__5 
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [1]),
        .I3(\FSM_sequential_fsm_reg[2] [2]),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\prst_n_r_reg[7] ),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_ctrl),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_63
   (out,
    D,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_reg[12] ,
    Q,
    \preset_reg[12] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  output [0:0]out;
  output [1:0]D;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_reg[12] ;
  input [1:0]Q;
  input [0:0]\preset_reg[12] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[12]_i_2__5_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[12] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire [0:0]\preset_reg[12] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[12]_i_1__5 
       (.I0(\coeff[12]_i_2__5_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(Q[1]),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[12] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[12]_i_2__5 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(Q[1]),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[12]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[13]_i_1__5 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_reg[12] ),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_64
   (out,
    \coeff_reg[13] ,
    Q,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[2]_0 ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  output [0:0]out;
  output \coeff_reg[13] ;
  input [0:0]Q;
  input [0:0]\FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\FSM_sequential_fsm_reg[0] ;
  wire [0:0]Q;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire \coeff_reg[13] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[13]_i_2__5 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[0] ),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff_reg[13] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_65
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[14] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[14] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[14]_i_2__5_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire [0:0]\preset_reg[14] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[14]_i_1__5 
       (.I0(\coeff[14]_i_2__5_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[14] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[14]_i_2__5 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[14]_i_2__5_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_66
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[15] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[15] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[15]_i_2__5_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire [0:0]\preset_reg[15] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[15]_i_1__5 
       (.I0(\coeff[15]_i_2__5_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[15] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[15]_i_2__5 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[15]_i_2__5_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_67
   (out,
    D,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    \prst_n_r_reg[7] ,
    \preset_reg[16] ,
    Q,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  output [0:0]out;
  output [0:0]D;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [0:0]\prst_n_r_reg[7] ;
  input [0:0]\preset_reg[16] ;
  input [0:0]Q;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [0:0]Q;
  wire \coeff[16]_i_2__5_n_0 ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire [0:0]\preset_reg[16] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[16]_i_1__5 
       (.I0(\coeff[16]_i_2__5_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[16] ),
        .O(D));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[16]_i_2__5 
       (.I0(Q),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[16]_i_2__5_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_68
   (D,
    out,
    \prst_n_r_reg[7] ,
    \FSM_sequential_fsm_reg[1] ,
    \coeff_cnt_reg[0] ,
    Q,
    \preset_reg[17] ,
    \coeff_cnt_reg[1] ,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output [1:0]D;
  input [0:0]out;
  input [0:0]\prst_n_r_reg[7] ;
  input [1:0]\FSM_sequential_fsm_reg[1] ;
  input \coeff_cnt_reg[0] ;
  input [1:0]Q;
  input [0:0]\preset_reg[17] ;
  input [1:0]\coeff_cnt_reg[1] ;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [1:0]D;
  wire [1:0]\FSM_sequential_fsm_reg[1] ;
  wire [1:0]Q;
  wire \coeff[17]_i_2__5_n_0 ;
  wire \coeff_cnt_reg[0] ;
  wire [1:0]\coeff_cnt_reg[1] ;
  wire [0:0]out;
  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [0:0]\preset_reg[17] ;
  wire [0:0]\prst_n_r_reg[7] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[17]_i_1__5 
       (.I0(\coeff[17]_i_2__5_n_0 ),
        .I1(\FSM_sequential_fsm_reg[1] [1]),
        .I2(\FSM_sequential_fsm_reg[1] [0]),
        .I3(out),
        .I4(\prst_n_r_reg[7] ),
        .I5(\preset_reg[17] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[17]_i_2__5 
       (.I0(Q[0]),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(out),
        .I4(\coeff_cnt_reg[1] [0]),
        .I5(\coeff_cnt_reg[1] [1]),
        .O(\coeff[17]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'h8820A82000202020)) 
    \coeff[18]_i_2__5 
       (.I0(\prst_n_r_reg[7] ),
        .I1(\FSM_sequential_fsm_reg[1] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[1] [1]),
        .I4(\coeff_cnt_reg[0] ),
        .I5(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_74
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_75
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_76
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_77
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_78
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_79
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_80
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_81
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_82
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_83
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_84
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_85
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_86
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_87
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_88
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_89
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_90
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_91
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_92
   (\rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] );
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;

  wire [0:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_93
   (out,
    adapt_2nd_reg,
    \FSM_sequential_fsm_reg[2] ,
    \sync_reg[2]_0 ,
    adapt_2nd_reg_0,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] );
  output [0:0]out;
  output adapt_2nd_reg;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input [0:0]\sync_reg[2]_0 ;
  input adapt_2nd_reg_0;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;

  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire adapt_2nd_reg;
  wire adapt_2nd_reg_0;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;

  assign out[0] = sync[2];
  LUT6 #(
    .INIT(64'hFFFFFEFF00000300)) 
    adapt_2nd_i_1__5
       (.I0(sync[2]),
        .I1(\FSM_sequential_fsm_reg[2] [2]),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .I5(adapt_2nd_reg_0),
        .O(adapt_2nd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_94
   (out,
    D,
    done,
    \txcoeff_cnt_reg[0] ,
    adapt_done,
    lffs_sel,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[2]_0 ,
    Q,
    adapt_2nd_reg,
    \rrst_n_r_reg[7] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] );
  output [0:0]out;
  output [2:0]D;
  output done;
  output [0:0]\txcoeff_cnt_reg[0] ;
  output adapt_done;
  output lffs_sel;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[1] ;
  input [0:0]\sync_reg[2]_0 ;
  input [1:0]Q;
  input adapt_2nd_reg;
  input \rrst_n_r_reg[7] ;
  input [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;

  wire [2:0]D;
  wire \FSM_sequential_fsm[0]_i_2__13_n_0 ;
  wire \FSM_sequential_fsm_reg[1] ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire [1:0]Q;
  wire adapt_2nd_reg;
  wire adapt_done;
  wire done;
  wire lffs_sel;
  wire [0:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;
  wire [0:0]\sync_reg[2]_0 ;
  wire [0:0]\txcoeff_cnt_reg[0] ;

  assign out[0] = sync[2];
  LUT4 #(
    .INIT(16'h0045)) 
    \FSM_sequential_fsm[0]_i_1__13 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(\FSM_sequential_fsm[0]_i_2__13_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h5545004555455545)) 
    \FSM_sequential_fsm[0]_i_2__13 
       (.I0(\FSM_sequential_fsm_reg[2] [0]),
        .I1(sync[2]),
        .I2(\sync_reg[2]_0 ),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm[0]_i_2__13_n_0 ));
  LUT5 #(
    .INIT(32'h45454500)) 
    \FSM_sequential_fsm[1]_i_1__14 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[1] ),
        .I2(\FSM_sequential_fsm_reg[2] [0]),
        .I3(sync[2]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000222055552220)) 
    \FSM_sequential_fsm[2]_i_1__12 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(sync[2]),
        .I3(\sync_reg[2]_0 ),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(\FSM_sequential_fsm_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00000080)) 
    adapt_done_i_1__5
       (.I0(adapt_2nd_reg),
        .I1(sync[2]),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(adapt_done));
  LUT5 #(
    .INIT(32'h000000E0)) 
    done_i_1__12
       (.I0(sync[2]),
        .I1(\sync_reg[2]_0 ),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(\FSM_sequential_fsm_reg[2] [1]),
        .O(done));
  LUT3 #(
    .INIT(8'h10)) 
    lffs_sel_i_1__5
       (.I0(\FSM_sequential_fsm_reg[2] [1]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .O(lffs_sel));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00101110)) 
    \txcoeff_cnt[0]_i_1__5 
       (.I0(\FSM_sequential_fsm_reg[2] [2]),
        .I1(\FSM_sequential_fsm_reg[2] [0]),
        .I2(sync[2]),
        .I3(\FSM_sequential_fsm_reg[2] [1]),
        .I4(Q[0]),
        .O(\txcoeff_cnt_reg[0] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_98
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell_99
   (preset_r,
    \rrst_n_r_reg[7] ,
    phy_txeq_preset);
  output [0:0]preset_r;
  input \rrst_n_r_reg[7] ;
  input [0:0]phy_txeq_preset;

  wire [0:0]phy_txeq_preset;
  wire \rrst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]sync;

  assign preset_r[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(phy_txeq_preset),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized0
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized1
   (\FSM_sequential_fsm_reg[0] ,
    \sync_reg[3]_0 ,
    sys_clk,
    gt_gtpowergood);
  output \FSM_sequential_fsm_reg[0] ;
  input [2:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire \FSM_sequential_fsm_reg[0] ;
  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire sys_clk;

  LUT4 #(
    .INIT(16'h7FFF)) 
    \fsm[1]_i_7 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [2]),
        .I3(\sync_reg[3]_0 [1]),
        .O(\FSM_sequential_fsm_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized10
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized11
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized12
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized13
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized14
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized15
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized16
   (sys_clk);
  input sys_clk;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized17
   (sys_clk);
  input sys_clk;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized18
   (out,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[3]_0 ,
    sys_clk,
    int_qpll1lock_out);
  output [0:0]out;
  output \FSM_sequential_fsm_reg[0] ;
  input [0:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]int_qpll1lock_out;

  wire \FSM_sequential_fsm_reg[0] ;
  wire [0:0]int_qpll1lock_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [0:0]\sync_reg[3]_0 ;
  wire sys_clk;

  assign out[0] = sync[3];
  LUT2 #(
    .INIT(4'h8)) 
    \fsm[1]_i_8 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 ),
        .O(\FSM_sequential_fsm_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(int_qpll1lock_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized19
   (out,
    fsm23_out,
    \sync_reg[3]_0 ,
    \sync_reg[3]_1 ,
    sys_clk,
    int_qpll1lock_out);
  output [0:0]out;
  output fsm23_out;
  input [0:0]\sync_reg[3]_0 ;
  input [0:0]\sync_reg[3]_1 ;
  input sys_clk;
  input [0:0]int_qpll1lock_out;

  wire fsm23_out;
  wire [0:0]int_qpll1lock_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [0:0]\sync_reg[3]_0 ;
  wire [0:0]\sync_reg[3]_1 ;
  wire sys_clk;

  assign out[0] = sync[3];
  LUT3 #(
    .INIT(8'h80)) 
    \FSM_sequential_fsm[1]_i_3 
       (.I0(\sync_reg[3]_0 ),
        .I1(sync[3]),
        .I2(\sync_reg[3]_1 ),
        .O(fsm23_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(int_qpll1lock_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized2
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized20
   (out,
    sys_clk,
    txprgdivresetdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized21
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized22
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized23
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized24
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized25
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized26
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized27
   (sys_clk,
    txprgdivresetdone_out);
  input sys_clk;
  input [0:0]txprgdivresetdone_out;

  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [0:0]txprgdivresetdone_out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(txprgdivresetdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized28
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized29
   (resetdone_a,
    D,
    \sync_reg[3]_0 ,
    \sync_reg[3]_1 ,
    \sync_reg[3]_2 ,
    \sync_reg[3]_3 ,
    out,
    txsync_done_a,
    fsm23_out,
    sys_clk,
    gt_txresetdone);
  output resetdone_a;
  output [1:0]D;
  input [2:0]\sync_reg[3]_0 ;
  input \sync_reg[3]_1 ;
  input \sync_reg[3]_2 ;
  input \sync_reg[3]_3 ;
  input [2:0]out;
  input txsync_done_a;
  input fsm23_out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [1:0]D;
  wire \FSM_sequential_fsm[2]_i_3_n_0 ;
  wire fsm23_out;
  wire [0:0]gt_txresetdone;
  wire [2:0]out;
  wire resetdone_a;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire \sync_reg[3]_1 ;
  wire \sync_reg[3]_2 ;
  wire \sync_reg[3]_3 ;
  wire sys_clk;
  wire txsync_done_a;

  LUT6 #(
    .INIT(64'hFC77FC44CCCCCCCC)) 
    \FSM_sequential_fsm[1]_i_1 
       (.I0(resetdone_a),
        .I1(out[1]),
        .I2(txsync_done_a),
        .I3(out[2]),
        .I4(fsm23_out),
        .I5(out[0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'hFF80)) 
    \FSM_sequential_fsm[2]_i_1 
       (.I0(out[0]),
        .I1(resetdone_a),
        .I2(out[1]),
        .I3(out[2]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_sequential_fsm[2]_i_2__8 
       (.I0(\FSM_sequential_fsm[2]_i_3_n_0 ),
        .I1(\sync_reg[3]_1 ),
        .I2(\sync_reg[3]_2 ),
        .I3(\sync_reg[3]_3 ),
        .O(resetdone_a));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_sequential_fsm[2]_i_3 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [2]),
        .I3(\sync_reg[3]_0 [1]),
        .O(\FSM_sequential_fsm[2]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized3
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized30
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized31
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized32
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized33
   (\FSM_sequential_fsm_reg[1] ,
    \sync_reg[3]_0 ,
    sys_clk,
    gt_txresetdone);
  output \FSM_sequential_fsm_reg[1] ;
  input [2:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire \FSM_sequential_fsm_reg[1] ;
  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire sys_clk;

  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_fsm[2]_i_4 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [1]),
        .I3(\sync_reg[3]_0 [2]),
        .O(\FSM_sequential_fsm_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized34
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized35
   (out,
    sys_clk,
    gt_txresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_txresetdone;

  wire [0:0]gt_txresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized36
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized37
   (\FSM_sequential_fsm_reg[1] ,
    \sync_reg[3]_0 ,
    sys_clk,
    gt_rxresetdone);
  output \FSM_sequential_fsm_reg[1] ;
  input [2:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire \FSM_sequential_fsm_reg[1] ;
  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire sys_clk;

  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_sequential_fsm[2]_i_5 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [2]),
        .I3(\sync_reg[3]_0 [1]),
        .O(\FSM_sequential_fsm_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized38
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized39
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized4
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized40
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized41
   (\FSM_sequential_fsm_reg[1] ,
    \sync_reg[3]_0 ,
    sys_clk,
    gt_rxresetdone);
  output \FSM_sequential_fsm_reg[1] ;
  input [2:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire \FSM_sequential_fsm_reg[1] ;
  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire sys_clk;

  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_fsm[2]_i_6 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [1]),
        .I3(\sync_reg[3]_0 [2]),
        .O(\FSM_sequential_fsm_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized42
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized43
   (out,
    sys_clk,
    gt_rxresetdone);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_rxresetdone;

  wire [0:0]gt_rxresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized44
   (out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized45
   (fsm2,
    \FSM_sequential_fsm_reg[1] ,
    \sync_reg[3]_0 ,
    \sync_reg[3]_1 ,
    \txsync_start_cnt_reg[1] ,
    sys_clk,
    pciesynctxsyncdone_out);
  output fsm2;
  output \FSM_sequential_fsm_reg[1] ;
  input [2:0]\sync_reg[3]_0 ;
  input \sync_reg[3]_1 ;
  input [1:0]\txsync_start_cnt_reg[1] ;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire \FSM_sequential_fsm_reg[1] ;
  wire fsm2;
  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire \sync_reg[3]_1 ;
  wire sys_clk;
  wire [1:0]\txsync_start_cnt_reg[1] ;

  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_sequential_fsm[1]_i_4 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [2]),
        .I3(\sync_reg[3]_0 [1]),
        .O(\FSM_sequential_fsm_reg[1] ));
  LUT4 #(
    .INIT(16'hB000)) 
    \fsm[0]_i_4 
       (.I0(\FSM_sequential_fsm_reg[1] ),
        .I1(\sync_reg[3]_1 ),
        .I2(\txsync_start_cnt_reg[1] [1]),
        .I3(\txsync_start_cnt_reg[1] [0]),
        .O(fsm2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized46
   (out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized47
   (out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized48
   (out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized49
   (out,
    \FSM_sequential_fsm_reg[0] ,
    txsync_done_r,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  output \FSM_sequential_fsm_reg[0] ;
  input [2:0]txsync_done_r;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire \FSM_sequential_fsm_reg[0] ;
  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;
  wire [2:0]txsync_done_r;

  assign out[0] = sync[3];
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[0]_i_5 
       (.I0(sync[3]),
        .I1(txsync_done_r[0]),
        .I2(txsync_done_r[1]),
        .I3(txsync_done_r[2]),
        .O(\FSM_sequential_fsm_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized5
   (fsm25_out,
    \sync_reg[3]_0 ,
    out,
    \cpllreset_cnt_reg[6] ,
    \sync_reg[3]_1 ,
    \sync_reg[3]_2 ,
    \cpllreset_cnt_reg[7] ,
    sys_clk,
    gt_gtpowergood);
  output fsm25_out;
  input [2:0]\sync_reg[3]_0 ;
  input [0:0]out;
  input \cpllreset_cnt_reg[6] ;
  input \sync_reg[3]_1 ;
  input \sync_reg[3]_2 ;
  input \cpllreset_cnt_reg[7] ;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire \cpllreset_cnt_reg[6] ;
  wire \cpllreset_cnt_reg[7] ;
  wire fsm25_out;
  wire \fsm[1]_i_6_n_0 ;
  wire [0:0]gt_gtpowergood;
  wire [0:0]out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire \sync_reg[3]_1 ;
  wire \sync_reg[3]_2 ;
  wire sys_clk;

  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \fsm[1]_i_4 
       (.I0(out),
        .I1(\cpllreset_cnt_reg[6] ),
        .I2(\fsm[1]_i_6_n_0 ),
        .I3(\sync_reg[3]_1 ),
        .I4(\sync_reg[3]_2 ),
        .I5(\cpllreset_cnt_reg[7] ),
        .O(fsm25_out));
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_6 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [1]),
        .I3(\sync_reg[3]_0 [2]),
        .O(\fsm[1]_i_6_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized50
   (out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]pciesynctxsyncdone_out;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized51
   (out,
    \fsm_reg[0] ,
    txsync_done_a,
    D,
    p_0_in,
    Q,
    fsm2,
    resetdone_a,
    txsync_done_r,
    \sync_reg[3]_0 ,
    \FSM_sequential_fsm_reg[2] ,
    \FSM_sequential_fsm_reg[2]_0 ,
    fsm23_out,
    fsm25_out,
    sys_clk,
    pciesynctxsyncdone_out);
  output [0:0]out;
  output \fsm_reg[0] ;
  output txsync_done_a;
  output [0:0]D;
  input p_0_in;
  input [1:0]Q;
  input fsm2;
  input resetdone_a;
  input [2:0]txsync_done_r;
  input \sync_reg[3]_0 ;
  input [2:0]\FSM_sequential_fsm_reg[2] ;
  input \FSM_sequential_fsm_reg[2]_0 ;
  input fsm23_out;
  input fsm25_out;
  input sys_clk;
  input [0:0]pciesynctxsyncdone_out;

  wire [0:0]D;
  wire \FSM_sequential_fsm[0]_i_2_n_0 ;
  wire [2:0]\FSM_sequential_fsm_reg[2] ;
  wire \FSM_sequential_fsm_reg[2]_0 ;
  wire [1:0]Q;
  wire fsm2;
  wire fsm23_out;
  wire fsm25_out;
  wire \fsm_reg[0] ;
  wire p_0_in;
  wire [0:0]pciesynctxsyncdone_out;
  wire resetdone_a;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire \sync_reg[3]_0 ;
  wire sys_clk;
  wire txsync_done_a;
  wire [2:0]txsync_done_r;

  assign out[0] = sync[3];
  LUT6 #(
    .INIT(64'h505FCFCF505FC0C0)) 
    \FSM_sequential_fsm[0]_i_2 
       (.I0(txsync_done_a),
        .I1(fsm2),
        .I2(\FSM_sequential_fsm_reg[2] [2]),
        .I3(fsm23_out),
        .I4(\FSM_sequential_fsm_reg[2] [0]),
        .I5(fsm25_out),
        .O(\FSM_sequential_fsm[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \FSM_sequential_fsm[1]_i_2 
       (.I0(sync[3]),
        .I1(txsync_done_r[2]),
        .I2(txsync_done_r[0]),
        .I3(txsync_done_r[1]),
        .I4(\sync_reg[3]_0 ),
        .O(txsync_done_a));
  MUXF7 \FSM_sequential_fsm_reg[0]_i_1 
       (.I0(\FSM_sequential_fsm[0]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_reg[2]_0 ),
        .O(D),
        .S(\FSM_sequential_fsm_reg[2] [1]));
  LUT6 #(
    .INIT(64'hA0AFCFCFA0AFC0C0)) 
    \fsm[0]_i_3 
       (.I0(p_0_in),
        .I1(txsync_done_a),
        .I2(Q[1]),
        .I3(fsm2),
        .I4(Q[0]),
        .I5(resetdone_a),
        .O(\fsm_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(pciesynctxsyncdone_out),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized52
   (D,
    \fsm_reg[2] ,
    \fsm_reg[1] ,
    \FSM_sequential_fsm_reg[0] ,
    \sync_reg[3]_0 ,
    Q,
    out,
    \sync_reg[3]_1 ,
    \txsync_start_cnt_reg[1] ,
    txsync_done_a,
    \sync_reg[3]_2 ,
    \FSM_sequential_fsm_reg[2] ,
    resetdone_a,
    sys_clk,
    gt_phystatus);
  output [0:0]D;
  output \fsm_reg[2] ;
  output \fsm_reg[1] ;
  output \FSM_sequential_fsm_reg[0] ;
  input [2:0]\sync_reg[3]_0 ;
  input [2:0]Q;
  input [0:0]out;
  input [0:0]\sync_reg[3]_1 ;
  input [1:0]\txsync_start_cnt_reg[1] ;
  input txsync_done_a;
  input \sync_reg[3]_2 ;
  input [1:0]\FSM_sequential_fsm_reg[2] ;
  input resetdone_a;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]D;
  wire \FSM_sequential_fsm_reg[0] ;
  wire [1:0]\FSM_sequential_fsm_reg[2] ;
  wire [2:0]Q;
  wire \fsm_reg[1] ;
  wire \fsm_reg[2] ;
  wire [0:0]gt_phystatus;
  wire [0:0]out;
  wire resetdone_a;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire [0:0]\sync_reg[3]_1 ;
  wire \sync_reg[3]_2 ;
  wire sys_clk;
  wire txsync_done_a;
  wire [1:0]\txsync_start_cnt_reg[1] ;

  LUT6 #(
    .INIT(64'hCF77CF44CF44CF44)) 
    \FSM_sequential_fsm[0]_i_3 
       (.I0(\fsm_reg[2] ),
        .I1(\FSM_sequential_fsm_reg[2] [1]),
        .I2(resetdone_a),
        .I3(\FSM_sequential_fsm_reg[2] [0]),
        .I4(out),
        .I5(\sync_reg[3]_1 ),
        .O(\FSM_sequential_fsm_reg[0] ));
  LUT6 #(
    .INIT(64'h8C8C8C8CBC8C8C8C)) 
    \fsm[1]_i_3 
       (.I0(\fsm_reg[2] ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\txsync_start_cnt_reg[1] [0]),
        .I4(\txsync_start_cnt_reg[1] [1]),
        .I5(txsync_done_a),
        .O(\fsm_reg[1] ));
  LUT6 #(
    .INIT(64'hBC8C8C8CCCCCCCCC)) 
    \fsm[2]_i_1 
       (.I0(\fsm_reg[2] ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(out),
        .I4(\sync_reg[3]_1 ),
        .I5(Q[0]),
        .O(D));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \fsm[2]_i_3 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [0]),
        .I2(\sync_reg[3]_0 [1]),
        .I3(\sync_reg[3]_0 [2]),
        .I4(\sync_reg[3]_2 ),
        .O(\fsm_reg[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized53
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized54
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized55
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized56
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized57
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized58
   (\fsm_reg[2] ,
    \sync_reg[3]_0 ,
    sys_clk,
    gt_phystatus);
  output \fsm_reg[2] ;
  input [2:0]\sync_reg[3]_0 ;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire \fsm_reg[2] ;
  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [2:0]\sync_reg[3]_0 ;
  wire sys_clk;

  LUT4 #(
    .INIT(16'h0001)) 
    \fsm[2]_i_4 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 [2]),
        .I2(\sync_reg[3]_0 [1]),
        .I3(\sync_reg[3]_0 [0]),
        .O(\fsm_reg[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized59
   (out,
    sys_clk,
    gt_phystatus);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_phystatus;

  wire [0:0]gt_phystatus;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized6
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized60
   (out,
    D,
    Q,
    \fsm_reg[1] ,
    \sync_reg[3]_0 ,
    fsm23_out,
    fsm25_out,
    \fsm_reg[1]_0 ,
    sys_clk,
    \prst_n_r_reg[7] );
  output [0:0]out;
  output [1:0]D;
  input [2:0]Q;
  input \fsm_reg[1] ;
  input [0:0]\sync_reg[3]_0 ;
  input fsm23_out;
  input fsm25_out;
  input \fsm_reg[1]_0 ;
  input sys_clk;
  input [0:0]\prst_n_r_reg[7] ;

  wire [1:0]D;
  wire [2:0]Q;
  wire fsm23_out;
  wire fsm25_out;
  wire \fsm[0]_i_2_n_0 ;
  wire \fsm[1]_i_2_n_0 ;
  wire \fsm_reg[1] ;
  wire \fsm_reg[1]_0 ;
  wire [0:0]\prst_n_r_reg[7] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire [0:0]\sync_reg[3]_0 ;
  wire sys_clk;

  assign out[0] = sync[3];
  LUT6 #(
    .INIT(64'h7700F00077FFF000)) 
    \fsm[0]_i_2 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 ),
        .I2(fsm23_out),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(fsm25_out),
        .O(\fsm[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FF070F0)) 
    \fsm[1]_i_2 
       (.I0(sync[3]),
        .I1(\sync_reg[3]_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(fsm25_out),
        .O(\fsm[1]_i_2_n_0 ));
  MUXF7 \fsm_reg[0]_i_1 
       (.I0(\fsm[0]_i_2_n_0 ),
        .I1(\fsm_reg[1] ),
        .O(D[0]),
        .S(Q[2]));
  MUXF7 \fsm_reg[1]_i_1 
       (.I0(\fsm[1]_i_2_n_0 ),
        .I1(\fsm_reg[1]_0 ),
        .O(D[1]),
        .S(Q[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(\prst_n_r_reg[7] ),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized61
   (out,
    pipe_clk,
    D);
  output [0:0]out;
  input pipe_clk;
  input [0:0]D;

  wire [0:0]D;
  wire pipe_clk;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(pipe_clk),
        .CE(1'b1),
        .D(D),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(pipe_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(pipe_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(pipe_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized7
   (out,
    sys_clk,
    gt_gtpowergood);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_gtpowergood;

  wire [0:0]gt_gtpowergood;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_gtpowergood),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized8
   (out,
    sys_clk,
    gt_cplllock);
  output [0:0]out;
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  assign out[0] = sync[3];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_sync_cell" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_cell__parameterized9
   (sys_clk,
    gt_cplllock);
  input sys_clk;
  input [0:0]gt_cplllock;

  wire [0:0]gt_cplllock;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]sync;
  wire sys_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[0] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(gt_cplllock),
        .Q(sync[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[1] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[0]),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[2] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \sync_reg[3] 
       (.C(sys_clk),
        .CE(1'b1),
        .D(sync[2]),
        .Q(sync[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq
   (TXEQ_DONE,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    D,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output TXEQ_DONE;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]D;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [0:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire TXEQ_DONE;
  wire \TXEQ_PRECURSOR[4]_i_1_n_0 ;
  wire \coeff[0]_i_1_n_0 ;
  wire \coeff[10]_i_1_n_0 ;
  wire \coeff[10]_i_2_n_0 ;
  wire \coeff[11]_i_1_n_0 ;
  wire \coeff[11]_i_2_n_0 ;
  wire \coeff[18]_i_3_n_0 ;
  wire \coeff[1]_i_1_n_0 ;
  wire \coeff[1]_i_2_n_0 ;
  wire \coeff[2]_i_1_n_0 ;
  wire \coeff[2]_i_2_n_0 ;
  wire \coeff[3]_i_1_n_0 ;
  wire \coeff[3]_i_2_n_0 ;
  wire \coeff[4]_i_1_n_0 ;
  wire \coeff[4]_i_2_n_0 ;
  wire \coeff[5]_i_1_n_0 ;
  wire \coeff[5]_i_2_n_0 ;
  wire \coeff[6]_i_1_n_0 ;
  wire \coeff[6]_i_2_n_0 ;
  wire \coeff[7]_i_1_n_0 ;
  wire \coeff[7]_i_2_n_0 ;
  wire \coeff[8]_i_1_n_0 ;
  wire \coeff[8]_i_2_n_0 ;
  wire \coeff[9]_i_1_n_0 ;
  wire \coeff[9]_i_2_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [17:1]p_1_in;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire preset;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(TXEQ_DONE),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(D),
        .O(\TXEQ_PRECURSOR[4]_i_1_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1 
       (.I0(D),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3_n_0 ),
        .O(\coeff[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1 
       (.I0(\coeff[10]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(D),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1 
       (.I0(\coeff[11]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(D),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1 
       (.I0(\coeff[1]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(D),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1 
       (.I0(\coeff[2]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(D),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1 
       (.I0(\coeff[3]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(D),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1 
       (.I0(D),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2_n_0 ),
        .O(\coeff[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1 
       (.I0(D),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2_n_0 ),
        .O(\coeff[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1 
       (.I0(D),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2_n_0 ),
        .O(\coeff[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1 
       (.I0(\coeff[7]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(D),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1 
       (.I0(\coeff[8]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(D),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1 
       (.I0(\coeff[9]_i_2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(D),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done_0));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_0),
        .Q(done),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[0]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[1]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[2]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(p_1_in[14]));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(p_1_in[9]));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[10]),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[11]),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[12]),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[14]),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[15]),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[14]),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[17]),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[1]),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[2]),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[3]),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[7]),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[8]),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(p_1_in[9]),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_300 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(fsm[1:0]),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\prst_n_r_reg[7] (D),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_301 sync_ctrl
       (.D(D),
        .E(sync_ctrl_n_0),
        .\FSM_sequential_fsm_reg[2] ({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_302 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_10
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__1_n_0 ;
  wire \coeff[0]_i_1__1_n_0 ;
  wire \coeff[10]_i_1__1_n_0 ;
  wire \coeff[10]_i_2__1_n_0 ;
  wire \coeff[11]_i_1__1_n_0 ;
  wire \coeff[11]_i_2__1_n_0 ;
  wire \coeff[18]_i_3__1_n_0 ;
  wire \coeff[1]_i_1__1_n_0 ;
  wire \coeff[1]_i_2__1_n_0 ;
  wire \coeff[2]_i_1__1_n_0 ;
  wire \coeff[2]_i_2__1_n_0 ;
  wire \coeff[3]_i_1__1_n_0 ;
  wire \coeff[3]_i_2__1_n_0 ;
  wire \coeff[4]_i_1__1_n_0 ;
  wire \coeff[4]_i_2__1_n_0 ;
  wire \coeff[5]_i_1__1_n_0 ;
  wire \coeff[5]_i_2__1_n_0 ;
  wire \coeff[6]_i_1__1_n_0 ;
  wire \coeff[6]_i_2__1_n_0 ;
  wire \coeff[7]_i_1__1_n_0 ;
  wire \coeff[7]_i_2__1_n_0 ;
  wire \coeff[8]_i_1__1_n_0 ;
  wire \coeff[8]_i_2__1_n_0 ;
  wire \coeff[9]_i_1__1_n_0 ;
  wire \coeff[9]_i_2__1_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__1 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__1_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__1 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__1_n_0 ),
        .O(\coeff[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__1 
       (.I0(\coeff[10]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__1 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__1 
       (.I0(\coeff[11]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__1 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__1 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__1 
       (.I0(\coeff[1]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__1 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__1 
       (.I0(\coeff[2]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__1 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__1 
       (.I0(\coeff[3]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__1 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__1 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__1_n_0 ),
        .O(\coeff[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__1 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__1 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__1_n_0 ),
        .O(\coeff[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__1 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__1 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__1_n_0 ),
        .O(\coeff[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__1 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__1 
       (.I0(\coeff[7]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__1 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__1 
       (.I0(\coeff[8]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__1 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__1 
       (.I0(\coeff[9]_i_2__1_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__1 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__1 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__1_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__3
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[6]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[7]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[8]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__1 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_218 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__1_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_219 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_220 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_12
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__2_n_0 ;
  wire \coeff[0]_i_1__2_n_0 ;
  wire \coeff[10]_i_1__2_n_0 ;
  wire \coeff[10]_i_2__2_n_0 ;
  wire \coeff[11]_i_1__2_n_0 ;
  wire \coeff[11]_i_2__2_n_0 ;
  wire \coeff[18]_i_3__2_n_0 ;
  wire \coeff[1]_i_1__2_n_0 ;
  wire \coeff[1]_i_2__2_n_0 ;
  wire \coeff[2]_i_1__2_n_0 ;
  wire \coeff[2]_i_2__2_n_0 ;
  wire \coeff[3]_i_1__2_n_0 ;
  wire \coeff[3]_i_2__2_n_0 ;
  wire \coeff[4]_i_1__2_n_0 ;
  wire \coeff[4]_i_2__2_n_0 ;
  wire \coeff[5]_i_1__2_n_0 ;
  wire \coeff[5]_i_2__2_n_0 ;
  wire \coeff[6]_i_1__2_n_0 ;
  wire \coeff[6]_i_2__2_n_0 ;
  wire \coeff[7]_i_1__2_n_0 ;
  wire \coeff[7]_i_2__2_n_0 ;
  wire \coeff[8]_i_1__2_n_0 ;
  wire \coeff[8]_i_2__2_n_0 ;
  wire \coeff[9]_i_1__2_n_0 ;
  wire \coeff[9]_i_2__2_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__2 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__2_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__2 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__2_n_0 ),
        .O(\coeff[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__2 
       (.I0(\coeff[10]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__2 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__2 
       (.I0(\coeff[11]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__2 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__2 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__2 
       (.I0(\coeff[1]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__2 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__2 
       (.I0(\coeff[2]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__2 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__2 
       (.I0(\coeff[3]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__2 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__2 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__2_n_0 ),
        .O(\coeff[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__2 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__2 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__2_n_0 ),
        .O(\coeff[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__2 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__2 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__2_n_0 ),
        .O(\coeff[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__2 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__2 
       (.I0(\coeff[7]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__2 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__2 
       (.I0(\coeff[8]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__2 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__2 
       (.I0(\coeff[9]_i_2__2_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__2 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__2 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__2_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__5
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[10]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[11]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[9]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__2 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_177 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__2_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_178 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_179 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_14
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__3_n_0 ;
  wire \coeff[0]_i_1__3_n_0 ;
  wire \coeff[10]_i_1__3_n_0 ;
  wire \coeff[10]_i_2__3_n_0 ;
  wire \coeff[11]_i_1__3_n_0 ;
  wire \coeff[11]_i_2__3_n_0 ;
  wire \coeff[18]_i_3__3_n_0 ;
  wire \coeff[1]_i_1__3_n_0 ;
  wire \coeff[1]_i_2__3_n_0 ;
  wire \coeff[2]_i_1__3_n_0 ;
  wire \coeff[2]_i_2__3_n_0 ;
  wire \coeff[3]_i_1__3_n_0 ;
  wire \coeff[3]_i_2__3_n_0 ;
  wire \coeff[4]_i_1__3_n_0 ;
  wire \coeff[4]_i_2__3_n_0 ;
  wire \coeff[5]_i_1__3_n_0 ;
  wire \coeff[5]_i_2__3_n_0 ;
  wire \coeff[6]_i_1__3_n_0 ;
  wire \coeff[6]_i_2__3_n_0 ;
  wire \coeff[7]_i_1__3_n_0 ;
  wire \coeff[7]_i_2__3_n_0 ;
  wire \coeff[8]_i_1__3_n_0 ;
  wire \coeff[8]_i_2__3_n_0 ;
  wire \coeff[9]_i_1__3_n_0 ;
  wire \coeff[9]_i_2__3_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__3 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__3_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__3 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__3_n_0 ),
        .O(\coeff[0]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__3 
       (.I0(\coeff[10]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__3 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__3 
       (.I0(\coeff[11]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__3 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__3 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__3 
       (.I0(\coeff[1]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__3 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__3 
       (.I0(\coeff[2]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__3 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__3 
       (.I0(\coeff[3]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__3 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__3 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__3_n_0 ),
        .O(\coeff[4]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__3 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__3 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__3_n_0 ),
        .O(\coeff[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__3 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__3 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__3_n_0 ),
        .O(\coeff[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__3 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__3 
       (.I0(\coeff[7]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__3 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__3 
       (.I0(\coeff[8]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__3 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__3 
       (.I0(\coeff[9]_i_2__3_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__3 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__3_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__3 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__3_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__7
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[12]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[13]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[14]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__3 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_136 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__3_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_137 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_138 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_16
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__4_n_0 ;
  wire \coeff[0]_i_1__4_n_0 ;
  wire \coeff[10]_i_1__4_n_0 ;
  wire \coeff[10]_i_2__4_n_0 ;
  wire \coeff[11]_i_1__4_n_0 ;
  wire \coeff[11]_i_2__4_n_0 ;
  wire \coeff[18]_i_3__4_n_0 ;
  wire \coeff[1]_i_1__4_n_0 ;
  wire \coeff[1]_i_2__4_n_0 ;
  wire \coeff[2]_i_1__4_n_0 ;
  wire \coeff[2]_i_2__4_n_0 ;
  wire \coeff[3]_i_1__4_n_0 ;
  wire \coeff[3]_i_2__4_n_0 ;
  wire \coeff[4]_i_1__4_n_0 ;
  wire \coeff[4]_i_2__4_n_0 ;
  wire \coeff[5]_i_1__4_n_0 ;
  wire \coeff[5]_i_2__4_n_0 ;
  wire \coeff[6]_i_1__4_n_0 ;
  wire \coeff[6]_i_2__4_n_0 ;
  wire \coeff[7]_i_1__4_n_0 ;
  wire \coeff[7]_i_2__4_n_0 ;
  wire \coeff[8]_i_1__4_n_0 ;
  wire \coeff[8]_i_2__4_n_0 ;
  wire \coeff[9]_i_1__4_n_0 ;
  wire \coeff[9]_i_2__4_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__4 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__4_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__4 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__4_n_0 ),
        .O(\coeff[0]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__4 
       (.I0(\coeff[10]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__4 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__4 
       (.I0(\coeff[11]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__4 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__4 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__4 
       (.I0(\coeff[1]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__4 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__4 
       (.I0(\coeff[2]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__4 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__4 
       (.I0(\coeff[3]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__4 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__4 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__4_n_0 ),
        .O(\coeff[4]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__4 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__4 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__4_n_0 ),
        .O(\coeff[5]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__4 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__4 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__4_n_0 ),
        .O(\coeff[6]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__4 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__4 
       (.I0(\coeff[7]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__4 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__4 
       (.I0(\coeff[8]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__4 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__4 
       (.I0(\coeff[9]_i_2__4_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__4 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__4_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__4 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__4_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__9
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[15]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[16]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[17]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__4 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_95 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__4_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_96 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_97 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_18
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__5_n_0 ;
  wire \coeff[0]_i_1__5_n_0 ;
  wire \coeff[10]_i_1__5_n_0 ;
  wire \coeff[10]_i_2__5_n_0 ;
  wire \coeff[11]_i_1__5_n_0 ;
  wire \coeff[11]_i_2__5_n_0 ;
  wire \coeff[18]_i_3__5_n_0 ;
  wire \coeff[1]_i_1__5_n_0 ;
  wire \coeff[1]_i_2__5_n_0 ;
  wire \coeff[2]_i_1__5_n_0 ;
  wire \coeff[2]_i_2__5_n_0 ;
  wire \coeff[3]_i_1__5_n_0 ;
  wire \coeff[3]_i_2__5_n_0 ;
  wire \coeff[4]_i_1__5_n_0 ;
  wire \coeff[4]_i_2__5_n_0 ;
  wire \coeff[5]_i_1__5_n_0 ;
  wire \coeff[5]_i_2__5_n_0 ;
  wire \coeff[6]_i_1__5_n_0 ;
  wire \coeff[6]_i_2__5_n_0 ;
  wire \coeff[7]_i_1__5_n_0 ;
  wire \coeff[7]_i_2__5_n_0 ;
  wire \coeff[8]_i_1__5_n_0 ;
  wire \coeff[8]_i_2__5_n_0 ;
  wire \coeff[9]_i_1__5_n_0 ;
  wire \coeff[9]_i_2__5_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__5 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__5_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__5 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__5_n_0 ),
        .O(\coeff[0]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__5 
       (.I0(\coeff[10]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__5 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__5 
       (.I0(\coeff[11]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__5 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__5 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__5 
       (.I0(\coeff[1]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__5 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__5 
       (.I0(\coeff[2]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__5 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__5 
       (.I0(\coeff[3]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__5 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__5 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__5_n_0 ),
        .O(\coeff[4]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__5 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__5 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__5_n_0 ),
        .O(\coeff[5]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__5 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__5 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__5_n_0 ),
        .O(\coeff[6]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__5 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__5 
       (.I0(\coeff[7]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__5 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__5 
       (.I0(\coeff[8]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__5 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__5_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__5 
       (.I0(\coeff[9]_i_2__5_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__5 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__5_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__5 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__5_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__11
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[18]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[19]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[20]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__5 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_54 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__5_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_55 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_56 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_20
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__6_n_0 ;
  wire \coeff[0]_i_1__6_n_0 ;
  wire \coeff[10]_i_1__6_n_0 ;
  wire \coeff[10]_i_2__6_n_0 ;
  wire \coeff[11]_i_1__6_n_0 ;
  wire \coeff[11]_i_2__6_n_0 ;
  wire \coeff[18]_i_3__6_n_0 ;
  wire \coeff[1]_i_1__6_n_0 ;
  wire \coeff[1]_i_2__6_n_0 ;
  wire \coeff[2]_i_1__6_n_0 ;
  wire \coeff[2]_i_2__6_n_0 ;
  wire \coeff[3]_i_1__6_n_0 ;
  wire \coeff[3]_i_2__6_n_0 ;
  wire \coeff[4]_i_1__6_n_0 ;
  wire \coeff[4]_i_2__6_n_0 ;
  wire \coeff[5]_i_1__6_n_0 ;
  wire \coeff[5]_i_2__6_n_0 ;
  wire \coeff[6]_i_1__6_n_0 ;
  wire \coeff[6]_i_2__6_n_0 ;
  wire \coeff[7]_i_1__6_n_0 ;
  wire \coeff[7]_i_2__6_n_0 ;
  wire \coeff[8]_i_1__6_n_0 ;
  wire \coeff[8]_i_2__6_n_0 ;
  wire \coeff[9]_i_1__6_n_0 ;
  wire \coeff[9]_i_2__6_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__6 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__6_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__6 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__6_n_0 ),
        .O(\coeff[0]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__6 
       (.I0(\coeff[10]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__6 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__6 
       (.I0(\coeff[11]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__6 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__6 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__6 
       (.I0(\coeff[1]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__6 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__6 
       (.I0(\coeff[2]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__6 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__6 
       (.I0(\coeff[3]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__6 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__6 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__6_n_0 ),
        .O(\coeff[4]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__6 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__6 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__6_n_0 ),
        .O(\coeff[5]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__6 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__6 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__6_n_0 ),
        .O(\coeff[6]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__6 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__6 
       (.I0(\coeff[7]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__6 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__6 
       (.I0(\coeff[8]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__6 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__6 
       (.I0(\coeff[9]_i_2__6_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__6 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__6_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__6 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__6_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__13
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[21]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[22]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[23]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__6 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__6_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_txeq" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_8
   (\pipe_stages_1.pipe_tx_eqdone_q_reg ,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    phy_txeq_fsm,
    SR,
    \rrst_n_r_reg[7] ,
    out,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] );
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output [4:0]Q;
  output [6:0]\sync_reg[0] ;
  output [4:0]\sync_reg[0]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [2:0]phy_txeq_fsm;
  input [0:0]SR;
  input \rrst_n_r_reg[7] ;
  input [0:0]out;
  input [1:0]phy_txeq_ctrl;
  input [3:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \TXEQ_PRECURSOR[4]_i_1__0_n_0 ;
  wire \coeff[0]_i_1__0_n_0 ;
  wire \coeff[10]_i_1__0_n_0 ;
  wire \coeff[10]_i_2__0_n_0 ;
  wire \coeff[11]_i_1__0_n_0 ;
  wire \coeff[11]_i_2__0_n_0 ;
  wire \coeff[18]_i_3__0_n_0 ;
  wire \coeff[1]_i_1__0_n_0 ;
  wire \coeff[1]_i_2__0_n_0 ;
  wire \coeff[2]_i_1__0_n_0 ;
  wire \coeff[2]_i_2__0_n_0 ;
  wire \coeff[3]_i_1__0_n_0 ;
  wire \coeff[3]_i_2__0_n_0 ;
  wire \coeff[4]_i_1__0_n_0 ;
  wire \coeff[4]_i_2__0_n_0 ;
  wire \coeff[5]_i_1__0_n_0 ;
  wire \coeff[5]_i_2__0_n_0 ;
  wire \coeff[6]_i_1__0_n_0 ;
  wire \coeff[6]_i_2__0_n_0 ;
  wire \coeff[7]_i_1__0_n_0 ;
  wire \coeff[7]_i_2__0_n_0 ;
  wire \coeff[8]_i_1__0_n_0 ;
  wire \coeff[8]_i_2__0_n_0 ;
  wire \coeff[9]_i_1__0_n_0 ;
  wire \coeff[9]_i_2__0_n_0 ;
  wire [1:0]coeff_cnt;
  wire \coeff_cnt_reg_n_0_[0] ;
  wire \coeff_cnt_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[0] ;
  wire \coeff_reg_n_0_[10] ;
  wire \coeff_reg_n_0_[11] ;
  wire \coeff_reg_n_0_[12] ;
  wire \coeff_reg_n_0_[13] ;
  wire \coeff_reg_n_0_[14] ;
  wire \coeff_reg_n_0_[15] ;
  wire \coeff_reg_n_0_[16] ;
  wire \coeff_reg_n_0_[17] ;
  wire \coeff_reg_n_0_[18] ;
  wire \coeff_reg_n_0_[1] ;
  wire \coeff_reg_n_0_[2] ;
  wire \coeff_reg_n_0_[3] ;
  wire \coeff_reg_n_0_[4] ;
  wire \coeff_reg_n_0_[5] ;
  wire \coeff_reg_n_0_[6] ;
  wire \coeff_reg_n_0_[7] ;
  wire \coeff_reg_n_0_[8] ;
  wire \coeff_reg_n_0_[9] ;
  wire done;
  wire done_reg_n_0;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm;
  wire [0:0]out;
  wire [1:0]phy_txeq_ctrl;
  wire [2:0]phy_txeq_fsm;
  wire [3:0]phy_txeq_preset;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire preset;
  wire \preset[10]_i_1_n_0 ;
  wire \preset[11]_i_1_n_0 ;
  wire \preset[12]_i_1_n_0 ;
  wire \preset[15]_i_1_n_0 ;
  wire \preset[16]_i_1_n_0 ;
  wire \preset[17]_i_2_n_0 ;
  wire \preset[1]_i_1_n_0 ;
  wire \preset[2]_i_1_n_0 ;
  wire \preset[3]_i_1_n_0 ;
  wire \preset[7]_i_1_n_0 ;
  wire \preset[8]_i_1_n_0 ;
  wire \preset[9]_i_1_n_0 ;
  wire preset_done;
  wire [3:0]preset_r;
  wire \preset_reg_n_0_[10] ;
  wire \preset_reg_n_0_[11] ;
  wire \preset_reg_n_0_[12] ;
  wire \preset_reg_n_0_[14] ;
  wire \preset_reg_n_0_[15] ;
  wire \preset_reg_n_0_[16] ;
  wire \preset_reg_n_0_[17] ;
  wire \preset_reg_n_0_[1] ;
  wire \preset_reg_n_0_[2] ;
  wire \preset_reg_n_0_[3] ;
  wire \preset_reg_n_0_[7] ;
  wire \preset_reg_n_0_[8] ;
  wire \preset_reg_n_0_[9] ;
  wire \rrst_n_r_reg[7] ;
  wire sync_coeff_n_0;
  wire sync_coeff_n_1;
  wire sync_coeff_n_2;
  wire sync_coeff_n_3;
  wire sync_coeff_n_4;
  wire sync_coeff_n_5;
  wire sync_coeff_n_6;
  wire sync_ctrl_n_0;
  wire sync_ctrl_n_1;
  wire sync_ctrl_n_2;
  wire sync_ctrl_n_3;
  wire [6:0]\sync_reg[0] ;
  wire [4:0]\sync_reg[0]_0 ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_3),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_2),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(sync_ctrl_n_1),
        .Q(fsm[2]),
        .R(SR));
  FDRE TXEQ_DONE_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done_reg_n_0),
        .Q(\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .R(SR));
  FDRE \TXEQ_MAINCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[6] ),
        .Q(\sync_reg[0] [0]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\sync_reg[0] [1]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\sync_reg[0] [2]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\sync_reg[0] [3]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\sync_reg[0] [4]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\sync_reg[0] [5]),
        .R(1'b0));
  FDRE \TXEQ_MAINCURSOR_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\sync_reg[0] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [0]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[11] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [9]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[12] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [10]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [11]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [12]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [13]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [14]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[18] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [15]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [1]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [2]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [3]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[5] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [4]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[7] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [5]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[8] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [6]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[9] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [7]),
        .R(1'b0));
  FDRE \TXEQ_NEW_COEFF_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[10] ),
        .Q(\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] [8]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[13] ),
        .Q(\sync_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[14] ),
        .Q(\sync_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[15] ),
        .Q(\sync_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[16] ),
        .Q(\sync_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TXEQ_POSTCURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[17] ),
        .Q(\sync_reg[0]_0 [4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h40FF)) 
    \TXEQ_PRECURSOR[4]_i_1__0 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(out),
        .O(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ));
  FDRE \TXEQ_PRECURSOR_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[1] ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[3] ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TXEQ_PRECURSOR_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(\TXEQ_PRECURSOR[4]_i_1__0_n_0 ),
        .D(\coeff_reg_n_0_[4] ),
        .Q(Q[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2220002020202020)) 
    \coeff[0]_i_1__0 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[6] ),
        .I3(fsm[1]),
        .I4(\coeff_reg_n_0_[7] ),
        .I5(\coeff[18]_i_3__0_n_0 ),
        .O(\coeff[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[10]_i_1__0 
       (.I0(\coeff[10]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(out),
        .I5(\preset_reg_n_0_[10] ),
        .O(\coeff[10]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[10]_i_2__0 
       (.I0(\coeff_reg_n_0_[9] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[17] ),
        .I3(\coeff_reg_n_0_[16] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[11]_i_1__0 
       (.I0(\coeff[11]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(out),
        .I5(\preset_reg_n_0_[11] ),
        .O(\coeff[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[11]_i_2__0 
       (.I0(\coeff_reg_n_0_[10] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[18] ),
        .I3(\coeff_reg_n_0_[17] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[11]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \coeff[18]_i_3__0 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[18]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[1]_i_1__0 
       (.I0(\coeff[1]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(out),
        .I5(\preset_reg_n_0_[1] ),
        .O(\coeff[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[1]_i_2__0 
       (.I0(\coeff_reg_n_0_[0] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[8] ),
        .I3(\coeff_reg_n_0_[7] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[2]_i_1__0 
       (.I0(\coeff[2]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(out),
        .I5(\preset_reg_n_0_[2] ),
        .O(\coeff[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[2]_i_2__0 
       (.I0(\coeff_reg_n_0_[1] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[9] ),
        .I3(\coeff_reg_n_0_[8] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[3]_i_1__0 
       (.I0(\coeff[3]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(out),
        .I5(\preset_reg_n_0_[3] ),
        .O(\coeff[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[3]_i_2__0 
       (.I0(\coeff_reg_n_0_[2] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(\coeff_reg_n_0_[9] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[4]_i_1__0 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[10] ),
        .I3(fsm[1]),
        .I4(\coeff[4]_i_2__0_n_0 ),
        .O(\coeff[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[4]_i_2__0 
       (.I0(\coeff_reg_n_0_[3] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(\coeff_reg_n_0_[10] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[4]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[5]_i_1__0 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[11] ),
        .I3(fsm[1]),
        .I4(\coeff[5]_i_2__0_n_0 ),
        .O(\coeff[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[5]_i_2__0 
       (.I0(\coeff_reg_n_0_[4] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(\coeff_reg_n_0_[11] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[5]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hAA200020)) 
    \coeff[6]_i_1__0 
       (.I0(out),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[12] ),
        .I3(fsm[1]),
        .I4(\coeff[6]_i_2__0_n_0 ),
        .O(\coeff[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[6]_i_2__0 
       (.I0(\coeff_reg_n_0_[5] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[13] ),
        .I3(\coeff_reg_n_0_[12] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[7]_i_1__0 
       (.I0(\coeff[7]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(out),
        .I5(\preset_reg_n_0_[7] ),
        .O(\coeff[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[7]_i_2__0 
       (.I0(\coeff_reg_n_0_[6] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[14] ),
        .I3(\coeff_reg_n_0_[13] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[8]_i_1__0 
       (.I0(\coeff[8]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(out),
        .I5(\preset_reg_n_0_[8] ),
        .O(\coeff[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[8]_i_2__0 
       (.I0(\coeff_reg_n_0_[7] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[15] ),
        .I3(\coeff_reg_n_0_[14] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFF8B880000)) 
    \coeff[9]_i_1__0 
       (.I0(\coeff[9]_i_2__0_n_0 ),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(out),
        .I5(\preset_reg_n_0_[9] ),
        .O(\coeff[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB88B8B8BB88)) 
    \coeff[9]_i_2__0 
       (.I0(\coeff_reg_n_0_[8] ),
        .I1(fsm[0]),
        .I2(\coeff_reg_n_0_[16] ),
        .I3(\coeff_reg_n_0_[15] ),
        .I4(\coeff_cnt_reg_n_0_[0] ),
        .I5(\coeff_cnt_reg_n_0_[1] ),
        .O(\coeff[9]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000060)) 
    \coeff_cnt[1]_i_1__0 
       (.I0(\coeff_cnt_reg_n_0_[0] ),
        .I1(\coeff_cnt_reg_n_0_[1] ),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .O(coeff_cnt[1]));
  FDRE \coeff_cnt_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[0]),
        .Q(\coeff_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \coeff_cnt_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(coeff_cnt[1]),
        .Q(\coeff_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \coeff_reg[0] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[0]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \coeff_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[10]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \coeff_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[11]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \coeff_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_6),
        .Q(\coeff_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \coeff_reg[13] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_5),
        .Q(\coeff_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \coeff_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_4),
        .Q(\coeff_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \coeff_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_3),
        .Q(\coeff_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \coeff_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_2),
        .Q(\coeff_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \coeff_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_1),
        .Q(\coeff_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \coeff_reg[18] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(sync_coeff_n_0),
        .Q(\coeff_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \coeff_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[1]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \coeff_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[2]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \coeff_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[3]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \coeff_reg[4] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[4]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \coeff_reg[5] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[5]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \coeff_reg[6] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[6]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \coeff_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[7]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \coeff_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[8]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \coeff_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(sync_ctrl_n_0),
        .D(\coeff[9]_i_1__0_n_0 ),
        .Q(\coeff_reg_n_0_[9] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    done_i_1__1
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(done));
  FDRE done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(done),
        .Q(done_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h4C)) 
    \phy_txeq_fsm[3]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(phy_txeq_fsm[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[4]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .O(phy_txeq_fsm[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \phy_txeq_fsm[5]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .O(phy_txeq_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hEB8B)) 
    \preset[10]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[2]),
        .O(\preset[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hE8AB)) 
    \preset[11]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[1]),
        .I2(preset_r[2]),
        .I3(preset_r[0]),
        .O(\preset[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h107E)) 
    \preset[12]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hA989)) 
    \preset[15]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \preset[16]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[0]),
        .I2(preset_r[2]),
        .O(\preset[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \preset[17]_i_1__0 
       (.I0(fsm[2]),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(preset));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hEE85)) 
    \preset[17]_i_2 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0024)) 
    \preset[1]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[3]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \preset[2]_i_1 
       (.I0(preset_r[2]),
        .I1(preset_r[1]),
        .I2(preset_r[3]),
        .I3(preset_r[0]),
        .O(\preset[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0C38)) 
    \preset[3]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[2]),
        .I2(preset_r[3]),
        .I3(preset_r[1]),
        .O(\preset[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h1602)) 
    \preset[7]_i_1 
       (.I0(preset_r[0]),
        .I1(preset_r[3]),
        .I2(preset_r[2]),
        .I3(preset_r[1]),
        .O(\preset[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'hBAEB)) 
    \preset[8]_i_1 
       (.I0(preset_r[3]),
        .I1(preset_r[2]),
        .I2(preset_r[1]),
        .I3(preset_r[0]),
        .O(\preset[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'hEDC1)) 
    \preset[9]_i_1 
       (.I0(preset_r[1]),
        .I1(preset_r[2]),
        .I2(preset_r[0]),
        .I3(preset_r[3]),
        .O(\preset[9]_i_1_n_0 ));
  FDRE preset_done_reg
       (.C(\rrst_n_r_reg[7] ),
        .CE(1'b1),
        .D(preset),
        .Q(preset_done),
        .R(SR));
  FDSE \preset_reg[10] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[10]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[10] ),
        .S(SR));
  FDSE \preset_reg[11] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[11]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[11] ),
        .S(SR));
  FDRE \preset_reg[12] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[12]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[12] ),
        .R(SR));
  FDRE \preset_reg[14] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[14] ),
        .R(SR));
  FDSE \preset_reg[15] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[15]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[15] ),
        .S(SR));
  FDRE \preset_reg[16] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[16]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[16] ),
        .R(SR));
  FDSE \preset_reg[17] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[17]_i_2_n_0 ),
        .Q(\preset_reg_n_0_[17] ),
        .S(SR));
  FDRE \preset_reg[1] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[1]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[1] ),
        .R(SR));
  FDRE \preset_reg[2] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[2]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[2] ),
        .R(SR));
  FDRE \preset_reg[3] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[3]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[3] ),
        .R(SR));
  FDRE \preset_reg[7] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[7]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[7] ),
        .R(SR));
  FDSE \preset_reg[8] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[8]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[8] ),
        .S(SR));
  FDSE \preset_reg[9] 
       (.C(\rrst_n_r_reg[7] ),
        .CE(preset),
        .D(\preset[9]_i_1_n_0 ),
        .Q(\preset_reg_n_0_[9] ),
        .S(SR));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized1_259 sync_coeff
       (.D({sync_coeff_n_0,sync_coeff_n_1,sync_coeff_n_2,sync_coeff_n_3,sync_coeff_n_4,sync_coeff_n_5,sync_coeff_n_6}),
        .\FSM_sequential_fsm_reg[1] (fsm[1:0]),
        .Q({\coeff_reg_n_0_[18] ,\coeff_reg_n_0_[17] ,\coeff_reg_n_0_[16] ,\coeff_reg_n_0_[15] ,\coeff_reg_n_0_[14] ,\coeff_reg_n_0_[13] ,\coeff_reg_n_0_[12] ,\coeff_reg_n_0_[11] }),
        .\coeff_cnt_reg[0] (\coeff[18]_i_3__0_n_0 ),
        .\coeff_cnt_reg[1] ({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .out(out),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\preset_reg[17] ({\preset_reg_n_0_[17] ,\preset_reg_n_0_[16] ,\preset_reg_n_0_[15] ,\preset_reg_n_0_[14] ,\preset_reg_n_0_[12] }),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync_260 sync_ctrl
       (.D({sync_ctrl_n_1,sync_ctrl_n_2,sync_ctrl_n_3}),
        .E(sync_ctrl_n_0),
        .Q({\coeff_cnt_reg_n_0_[1] ,\coeff_cnt_reg_n_0_[0] }),
        .\coeff_cnt_reg[0] (coeff_cnt[0]),
        .out(fsm),
        .phy_txeq_ctrl(phy_txeq_ctrl),
        .preset_done(preset_done),
        .\prst_n_r_reg[7] (out),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized0_261 sync_preset
       (.phy_txeq_preset(phy_txeq_preset),
        .preset_r(preset_r),
        .\rrst_n_r_reg[7] (\rrst_n_r_reg[7] ));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_phy_wrapper" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_phy_wrapper
   (int_qpll1lock_out,
    int_qpll1outclk_out,
    int_qpll1outrefclk_out,
    gt_bufgtdiv,
    gt_cplllock,
    gt_dmonitorout,
    gt_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    gt_gtpowergood,
    gt_pcierateidle,
    gt_pcieuserratestart,
    gt_phystatus,
    gt_rxbufstatus,
    gt_rxcdrlock,
    gt_rxcommadet,
    rxctrl0_out,
    rxdata_out,
    gt_rxdlysresetdone,
    rxelecidle_out,
    gt_rxphaligndone,
    gt_rxpmaresetdone,
    gt_rxprbserr,
    gt_rxresetdone,
    gt_rxstatus,
    gt_rxsyncdone,
    gt_rxvalid,
    gt_txdlysresetdone,
    gt_txphaligndone,
    gt_txphinitdone,
    gt_txresetdone,
    phy_rst_idle,
    CLK_PCLK,
    MCAPCLK,
    phy_rrst_n,
    out,
    \pipe_stages_1.pipe_rx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_0 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_0 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_0 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_0 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_1 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_1 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_1 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_1 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_2 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_2 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_2 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_2 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_3 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_3 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_3 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_3 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_4 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_4 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_4 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_4 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_5 ,
    \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_5 ,
    \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_5 ,
    \pipe_stages_1.pipe_tx_eqdone_q_reg_5 ,
    \pipe_stages_1.pipe_rx_eqdone_q_reg_6 ,
    adapt_done,
    lffs_sel,
    TXEQ_DONE,
    CLK_USERCLK,
    CLK_CORECLK,
    \fsm_reg[1] ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ,
    \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_6 ,
    phy_txeq_fsm,
    phy_rxeq_fsm,
    sys_clk_gt,
    Q,
    sys_clk,
    pci_exp_rxn,
    pci_exp_rxp,
    gt_loopback,
    gt_pcieuserratedone,
    rxcdrhold_in,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,
    rxpolarity_in,
    gt_rxprbscntreset,
    gt_txprbssel,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdeemph_in,
    txdetectrx_in,
    gt_txelecidle,
    gt_txinhibit,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    gt_txprbsforceerr,
    txswing_in,
    PCIEPERST0B,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_0 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_0 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_0 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_1 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_1 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_1 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_2 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_2 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_2 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_3 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_3 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_3 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_3 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_4 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_4 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_4 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_4 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_5 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_5 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_5 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_5 ,
    \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ,
    \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_6 ,
    \pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_6 ,
    \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_6 ,
    \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_6 );
  output [1:0]int_qpll1lock_out;
  output [1:0]int_qpll1outclk_out;
  output [1:0]int_qpll1outrefclk_out;
  output [8:0]gt_bufgtdiv;
  output [7:0]gt_cplllock;
  output [135:0]gt_dmonitorout;
  output [7:0]gt_eyescandataerror;
  output [7:0]pci_exp_txn;
  output [7:0]pci_exp_txp;
  output [7:0]gt_gtpowergood;
  output [7:0]gt_pcierateidle;
  output [7:0]gt_pcieuserratestart;
  output [7:0]gt_phystatus;
  output [23:0]gt_rxbufstatus;
  output [7:0]gt_rxcdrlock;
  output [7:0]gt_rxcommadet;
  output [47:0]rxctrl0_out;
  output [255:0]rxdata_out;
  output [7:0]gt_rxdlysresetdone;
  output [7:0]rxelecidle_out;
  output [7:0]gt_rxphaligndone;
  output [7:0]gt_rxpmaresetdone;
  output [7:0]gt_rxprbserr;
  output [7:0]gt_rxresetdone;
  output [23:0]gt_rxstatus;
  output [7:0]gt_rxsyncdone;
  output [7:0]gt_rxvalid;
  output [7:0]gt_txdlysresetdone;
  output [7:0]gt_txphaligndone;
  output [7:0]gt_txphinitdone;
  output [7:0]gt_txresetdone;
  output phy_rst_idle;
  output CLK_PCLK;
  output MCAPCLK;
  output phy_rrst_n;
  output [0:0]out;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_0 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_0 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_0 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_1 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_1 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_1 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_1 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_2 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_2 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_2 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_2 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_3 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_3 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_3 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_3 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_4 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_4 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_4 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_4 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_5 ;
  output \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_5 ;
  output \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_5 ;
  output \pipe_stages_1.pipe_tx_eqdone_q_reg_5 ;
  output \pipe_stages_1.pipe_rx_eqdone_q_reg_6 ;
  output adapt_done;
  output lffs_sel;
  output TXEQ_DONE;
  output CLK_USERCLK;
  output CLK_CORECLK;
  output [2:0]\fsm_reg[1] ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ;
  output [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_6 ;
  output [23:0]phy_txeq_fsm;
  output [23:0]phy_rxeq_fsm;
  input sys_clk_gt;
  input [1:0]Q;
  input sys_clk;
  input [7:0]pci_exp_rxn;
  input [7:0]pci_exp_rxp;
  input [23:0]gt_loopback;
  input [7:0]gt_pcieuserratedone;
  input [0:0]rxcdrhold_in;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  input [7:0]rxpolarity_in;
  input [7:0]gt_rxprbscntreset;
  input [31:0]gt_txprbssel;
  input [31:0]txctrl0_in;
  input [7:0]txctrl1_in;
  input [15:0]txctrl2_in;
  input [255:0]txdata_in;
  input [0:0]txdeemph_in;
  input [0:0]txdetectrx_in;
  input [7:0]gt_txelecidle;
  input [7:0]gt_txinhibit;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  input [7:0]gt_txprbsforceerr;
  input [0:0]txswing_in;
  input PCIEPERST0B;
  input [15:0]phy_txeq_ctrl;
  input [31:0]phy_txeq_preset;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_0 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_0 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_0 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_0 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_1 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_1 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_1 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_2 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_2 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_2 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_2 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_3 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_3 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_3 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_3 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_4 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_4 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_4 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_4 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_5 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_5 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_5 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_5 ;
  input [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ;
  input [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_6 ;
  input [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_6 ;
  input [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_6 ;
  input [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_6 ;

  wire CLK_CORECLK;
  wire CLK_PCLK;
  wire CLK_USERCLK;
  wire MCAPCLK;
  wire PCIEPERST0B;
  (* RTL_KEEP = "true" *) wire [2:0]PHY_TXOUTCLKSEL;
  wire [1:0]Q;
  wire TXEQ_DONE;
  wire adapt_done;
  wire [2:0]\fsm_reg[1] ;
  wire gt_bufgtcemask;
  wire [8:0]gt_bufgtdiv;
  wire gt_bufgtrstmask;
  wire [7:0]gt_cplllock;
  wire [135:0]gt_dmonitorout;
  wire [7:0]gt_eyescandataerror;
  wire [7:0]gt_gtpowergood;
  wire [23:0]gt_loopback;
  wire [7:0]gt_pcierateidle;
  wire [7:0]gt_pciesynctxsyncdone;
  wire [7:0]gt_pcieuserratedone;
  wire [7:0]gt_pcieuserratestart;
  wire [7:0]gt_phystatus;
  wire [23:0]gt_rxbufstatus;
  wire [7:0]gt_rxcdrlock;
  wire [7:0]gt_rxcommadet;
  wire [7:0]gt_rxdlysresetdone;
  wire [7:0]gt_rxphaligndone;
  wire [7:0]gt_rxpmaresetdone;
  wire [7:0]gt_rxprbscntreset;
  wire [7:0]gt_rxprbserr;
  wire [7:0]gt_rxresetdone;
  wire [23:0]gt_rxstatus;
  wire [7:0]gt_rxsyncdone;
  wire [7:0]gt_rxvalid;
  wire [7:0]gt_txdlysresetdone;
  wire [7:0]gt_txelecidle;
  wire [7:0]gt_txinhibit;
  wire gt_txoutclk;
  wire [7:0]gt_txphaligndone;
  wire [7:0]gt_txphinitdone;
  wire [7:0]gt_txprbsforceerr;
  wire [31:0]gt_txprbssel;
  wire [7:0]gt_txprogdivresetdone;
  wire [7:0]gt_txresetdone;
  wire \gt_wizard.gtwizard_top_i_n_698 ;
  wire \gt_wizard.gtwizard_top_i_n_699 ;
  wire [1:0]int_qpll1lock_out;
  wire [1:0]int_qpll1outclk_out;
  wire [1:0]int_qpll1outrefclk_out;
  wire lffs_sel;
  wire lopt;
  wire lopt_1;
  wire [0:0]out;
  wire [7:0]pci_exp_rxn;
  wire [7:0]pci_exp_rxp;
  wire [7:0]pci_exp_txn;
  wire [7:0]pci_exp_txp;
  wire phy_rrst_n;
  wire phy_rst_i_n_10;
  wire phy_rst_idle;
  wire [23:0]phy_rxeq_fsm;
  wire [15:0]phy_txeq_ctrl;
  wire [23:0]phy_txeq_fsm;
  wire [31:0]phy_txeq_preset;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_5 ;
  wire [1:0]\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_6 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_4 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_5 ;
  wire \pipe_stages_1.pipe_rx_eqdone_q_reg_6 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_4 ;
  wire \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_5 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_0 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_1 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_2 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_3 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_4 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_5 ;
  wire [5:0]\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_6 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_4 ;
  wire \pipe_stages_1.pipe_rx_eqlplffssel_q_reg_5 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_0 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_1 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_2 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_3 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_4 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_5 ;
  wire [3:0]\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_6 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_1 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_2 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_3 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_4 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_5 ;
  wire [2:0]\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_6 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ;
  wire [15:0]\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_6 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ;
  wire [5:0]\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_0 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_1 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_2 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_3 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_4 ;
  wire \pipe_stages_1.pipe_tx_eqdone_q_reg_5 ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  wire rst_gtreset;
  wire rst_progdivreset;
  wire rst_qpll1pd;
  wire rst_qpll1reset;
  wire rst_txsync_start;
  wire rst_userrdy;
  wire [0:0]rxcdrhold_in;
  wire [47:0]rxctrl0_out;
  wire [255:0]rxdata_out;
  wire [7:0]rxelecidle_out;
  wire [7:0]rxpolarity_in;
  wire sys_clk;
  wire sys_clk_gt;
  wire [31:0]txctrl0_in;
  wire [7:0]txctrl1_in;
  wire [15:0]txctrl2_in;
  wire [255:0]txdata_in;
  wire [0:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [55:0]txeq_maincursor;
  wire [39:0]txeq_postcursor;
  wire [39:0]txeq_precursor;
  wire [0:0]txswing_in;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG_GT bufg_mcap_clk
       (.CE(lopt),
        .CEMASK(1'b0),
        .CLR(lopt_1),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b1}),
        .I(gt_txoutclk),
        .O(MCAPCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_gtwizard_top \gt_wizard.gtwizard_top_i 
       (.CLK_PCLK(CLK_PCLK),
        .CLK_PCLK_CE(\gt_wizard.gtwizard_top_i_n_698 ),
        .CLK_PCLK_CEMASK(gt_bufgtcemask),
        .CLK_PCLK_CLR(\gt_wizard.gtwizard_top_i_n_699 ),
        .CLK_PCLK_MASK(gt_bufgtrstmask),
        .CLK_USERCLK_CEMASK(phy_rst_idle),
        .CLK_USERCLK_IN(gt_txoutclk),
        .Q(Q),
        .cplllock_out({gt_cplllock[0],gt_cplllock[1],gt_cplllock[2],gt_cplllock[3],gt_cplllock[4],gt_cplllock[5],gt_cplllock[6],gt_cplllock[7]}),
        .gt_bufgtdiv(gt_bufgtdiv),
        .gt_dmonitorout(gt_dmonitorout),
        .gt_eyescandataerror(gt_eyescandataerror),
        .gt_gtpowergood(gt_gtpowergood),
        .gt_loopback(gt_loopback),
        .gt_pcierateidle(gt_pcierateidle),
        .gt_pcieuserratedone(gt_pcieuserratedone),
        .gt_pcieuserratestart(gt_pcieuserratestart),
        .gt_phystatus(gt_phystatus),
        .gt_rxbufstatus(gt_rxbufstatus),
        .gt_rxcdrlock(gt_rxcdrlock),
        .gt_rxcommadet(gt_rxcommadet),
        .gt_rxdlysresetdone(gt_rxdlysresetdone),
        .gt_rxphaligndone(gt_rxphaligndone),
        .gt_rxpmaresetdone(gt_rxpmaresetdone),
        .gt_rxprbscntreset(gt_rxprbscntreset),
        .gt_rxprbserr(gt_rxprbserr),
        .gt_rxresetdone(gt_rxresetdone),
        .gt_rxstatus(gt_rxstatus),
        .gt_rxsyncdone(gt_rxsyncdone),
        .gt_rxvalid(gt_rxvalid),
        .gt_txdlysresetdone(gt_txdlysresetdone),
        .gt_txelecidle(gt_txelecidle),
        .gt_txinhibit(gt_txinhibit),
        .gt_txphaligndone(gt_txphaligndone),
        .gt_txphinitdone(gt_txphinitdone),
        .gt_txprbsforceerr(gt_txprbsforceerr),
        .gt_txprbssel(gt_txprbssel),
        .gt_txresetdone(gt_txresetdone),
        .gtrxreset_in(rst_gtreset),
        .in0(PHY_TXOUTCLKSEL[1]),
        .int_qpll1lock_out(int_qpll1lock_out),
        .int_qpll1outclk_out(int_qpll1outclk_out),
        .int_qpll1outrefclk_out(int_qpll1outrefclk_out),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .out(PHY_TXOUTCLKSEL),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pciersttxsyncstart_in(rst_txsync_start),
        .pciesynctxsyncdone_out({gt_pciesynctxsyncdone[0],gt_pciesynctxsyncdone[1],gt_pciesynctxsyncdone[2],gt_pciesynctxsyncdone[3],gt_pciesynctxsyncdone[4],gt_pciesynctxsyncdone[5],gt_pciesynctxsyncdone[6],gt_pciesynctxsyncdone[7]}),
        .phy_rrst_n(phy_rrst_n),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1] (\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ),
        .rst_qpll1pd(rst_qpll1pd),
        .rst_qpll1reset(rst_qpll1reset),
        .rxcdrhold_in(rxcdrhold_in),
        .rxctrl0_out(rxctrl0_out),
        .rxdata_out(rxdata_out),
        .rxelecidle_out(rxelecidle_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprogdivreset_in(rst_progdivreset),
        .rxuserrdy_in(rst_userrdy),
        .sys_clk(sys_clk),
        .sys_clk_gt(sys_clk_gt),
        .txctrl0_in(txctrl0_in),
        .txctrl1_in(txctrl1_in),
        .txctrl2_in(txctrl2_in),
        .txdata_in(txdata_in),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txmaincursor_in({txeq_maincursor[6:0],txeq_maincursor[13:7],txeq_maincursor[20:14],txeq_maincursor[27:21],txeq_maincursor[34:28],txeq_maincursor[41:35],txeq_maincursor[48:42],txeq_maincursor[55:49]}),
        .txpostcursor_in({txeq_postcursor[4:0],txeq_postcursor[9:5],txeq_postcursor[14:10],txeq_postcursor[19:15],txeq_postcursor[24:20],txeq_postcursor[29:25],txeq_postcursor[34:30],txeq_postcursor[39:35]}),
        .txprecursor_in({txeq_precursor[4:0],txeq_precursor[9:5],txeq_precursor[14:10],txeq_precursor[19:15],txeq_precursor[24:20],txeq_precursor[29:25],txeq_precursor[34:30],txeq_precursor[39:35]}),
        .txprgdivresetdone_out({gt_txprogdivresetdone[0],gt_txprogdivresetdone[1],gt_txprogdivresetdone[2],gt_txprogdivresetdone[3],gt_txprogdivresetdone[4],gt_txprogdivresetdone[5],gt_txprogdivresetdone[6],gt_txprogdivresetdone[7]}),
        .txswing_in(txswing_in));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(PHY_TXOUTCLKSEL[0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_clk phy_clk_i
       (.CLK_CORECLK(CLK_CORECLK),
        .CLK_PCLK(CLK_PCLK),
        .CLK_PCLK_CE(\gt_wizard.gtwizard_top_i_n_698 ),
        .CLK_PCLK_CEMASK(gt_bufgtcemask),
        .CLK_PCLK_CLR(\gt_wizard.gtwizard_top_i_n_699 ),
        .CLK_PCLK_MASK(gt_bufgtrstmask),
        .CLK_USERCLK(CLK_USERCLK),
        .CLK_USERCLK_CEMASK(phy_rst_idle),
        .CLK_USERCLK_IN(gt_txoutclk),
        .gt_bufgtdiv(gt_bufgtdiv),
        .lopt(lopt),
        .lopt_1(lopt_1));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq \phy_lane[0].phy_rxeq_i 
       (.D(out),
        .SR(phy_rst_i_n_10),
        .adapt_done(adapt_done),
        .lffs_sel(lffs_sel),
        .phy_rxeq_fsm(phy_rxeq_fsm[2:0]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_6 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq \phy_lane[0].phy_txeq_i 
       (.D(out),
        .Q(txeq_precursor[4:0]),
        .SR(phy_rst_i_n_10),
        .TXEQ_DONE(TXEQ_DONE),
        .phy_txeq_ctrl(phy_txeq_ctrl[1:0]),
        .phy_txeq_fsm(phy_txeq_fsm[2:0]),
        .phy_txeq_preset(phy_txeq_preset[3:0]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_6 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[6:0]),
        .\sync_reg[0]_0 (txeq_postcursor[4:0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_7 \phy_lane[1].phy_rxeq_i 
       (.D(out),
        .SR(phy_rst_i_n_10),
        .phy_rxeq_fsm(phy_rxeq_fsm[5:3]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_0 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_0 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_0 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_8 \phy_lane[1].phy_txeq_i 
       (.Q(txeq_precursor[9:5]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[3:2]),
        .phy_txeq_fsm(phy_txeq_fsm[5:3]),
        .phy_txeq_preset(phy_txeq_preset[7:4]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_0 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[13:7]),
        .\sync_reg[0]_0 (txeq_postcursor[9:5]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_9 \phy_lane[2].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[8:6]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_1 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_1 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_1 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_10 \phy_lane[2].phy_txeq_i 
       (.Q(txeq_precursor[14:10]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[5:4]),
        .phy_txeq_fsm(phy_txeq_fsm[8:6]),
        .phy_txeq_preset(phy_txeq_preset[11:8]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_0 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_1 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_0 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[20:14]),
        .\sync_reg[0]_0 (txeq_postcursor[14:10]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_11 \phy_lane[3].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[11:9]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_2 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_2 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_2 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_12 \phy_lane[3].phy_txeq_i 
       (.Q(txeq_precursor[19:15]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[7:6]),
        .phy_txeq_fsm(phy_txeq_fsm[11:9]),
        .phy_txeq_preset(phy_txeq_preset[15:12]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_1 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_2 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_1 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[27:21]),
        .\sync_reg[0]_0 (txeq_postcursor[19:15]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_13 \phy_lane[4].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[14:12]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_3 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_3 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_3 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_3 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_14 \phy_lane[4].phy_txeq_i 
       (.Q(txeq_precursor[24:20]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[9:8]),
        .phy_txeq_fsm(phy_txeq_fsm[14:12]),
        .phy_txeq_preset(phy_txeq_preset[19:16]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_2 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_3 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_2 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[34:28]),
        .\sync_reg[0]_0 (txeq_postcursor[24:20]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_15 \phy_lane[5].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[17:15]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_4 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_4 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_4 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_4 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_16 \phy_lane[5].phy_txeq_i 
       (.Q(txeq_precursor[29:25]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[11:10]),
        .phy_txeq_fsm(phy_txeq_fsm[17:15]),
        .phy_txeq_preset(phy_txeq_preset[23:20]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_3 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_4 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_3 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[41:35]),
        .\sync_reg[0]_0 (txeq_postcursor[29:25]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_17 \phy_lane[6].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[20:18]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_5 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_4 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_4 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_5 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_4 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_5 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_5 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_18 \phy_lane[6].phy_txeq_i 
       (.Q(txeq_precursor[34:30]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[13:12]),
        .phy_txeq_fsm(phy_txeq_fsm[20:18]),
        .phy_txeq_preset(phy_txeq_preset[27:24]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_4 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_5 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_4 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[48:42]),
        .\sync_reg[0]_0 (txeq_postcursor[34:30]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rxeq_19 \phy_lane[7].phy_rxeq_i 
       (.SR(phy_rst_i_n_10),
        .out(out),
        .phy_rxeq_fsm(phy_rxeq_fsm[23:21]),
        .\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] (\pipe_stages_1.pipe_rx_eqcontrol_q_reg[1]_6 ),
        .\pipe_stages_1.pipe_rx_eqdone_q_reg (\pipe_stages_1.pipe_rx_eqdone_q_reg_5 ),
        .\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg (\pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg_5 ),
        .\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] (\pipe_stages_1.pipe_rx_eqlplffs_q_reg[5]_6 ),
        .\pipe_stages_1.pipe_rx_eqlplffssel_q_reg (\pipe_stages_1.pipe_rx_eqlplffssel_q_reg_5 ),
        .\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] (\pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3]_6 ),
        .\pipe_stages_1.pipe_rx_eqpreset_q_reg[2] (\pipe_stages_1.pipe_rx_eqpreset_q_reg[2]_6 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ),
        .\rrst_n_r_reg[7] (CLK_PCLK));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_txeq_20 \phy_lane[7].phy_txeq_i 
       (.Q(txeq_precursor[39:35]),
        .SR(phy_rst_i_n_10),
        .out(out),
        .phy_txeq_ctrl(phy_txeq_ctrl[15:14]),
        .phy_txeq_fsm(phy_txeq_fsm[23:21]),
        .phy_txeq_preset(phy_txeq_preset[31:28]),
        .\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] (\pipe_stages_1.pipe_tx_eqcoeff_q_reg[16]_5 ),
        .\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] (\pipe_stages_1.pipe_tx_eqdeemph_q_reg[5]_6 ),
        .\pipe_stages_1.pipe_tx_eqdone_q_reg (\pipe_stages_1.pipe_tx_eqdone_q_reg_5 ),
        .\rrst_n_r_reg[7] (CLK_PCLK),
        .\sync_reg[0] (txeq_maincursor[55:49]),
        .\sync_reg[0]_0 (txeq_postcursor[39:35]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_rst phy_rst_i
       (.PCIEPERST0B(PCIEPERST0B),
        .Q(\fsm_reg[1] ),
        .SR(phy_rst_i_n_10),
        .gt_cplllock(gt_cplllock),
        .gt_gtpowergood(gt_gtpowergood),
        .gt_phystatus(gt_phystatus),
        .gt_rxresetdone(gt_rxresetdone),
        .gt_txresetdone(gt_txresetdone),
        .gtrxreset_in(rst_gtreset),
        .idle_reg_0(phy_rst_idle),
        .in0(PHY_TXOUTCLKSEL[2:1]),
        .int_qpll1lock_out(int_qpll1lock_out),
        .out(out),
        .pciersttxsyncstart_in(rst_txsync_start),
        .pciesynctxsyncdone_out({gt_pciesynctxsyncdone[0],gt_pciesynctxsyncdone[1],gt_pciesynctxsyncdone[2],gt_pciesynctxsyncdone[3],gt_pciesynctxsyncdone[4],gt_pciesynctxsyncdone[5],gt_pciesynctxsyncdone[6],gt_pciesynctxsyncdone[7]}),
        .phy_rrst_n(phy_rrst_n),
        .\rrst_n_r_reg[7]_0 (CLK_PCLK),
        .rst_qpll1pd(rst_qpll1pd),
        .rst_qpll1reset(rst_qpll1reset),
        .rxprogdivreset_in(rst_progdivreset),
        .rxuserrdy_in(rst_userrdy),
        .sys_clk(sys_clk),
        .txprgdivresetdone_out({gt_txprogdivresetdone[0],gt_txprogdivresetdone[1],gt_txprogdivresetdone[2],gt_txprogdivresetdone[3],gt_txprogdivresetdone[4],gt_txprogdivresetdone[5],gt_txprogdivresetdone[6],gt_txprogdivresetdone[7]}));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane
   (pipe_rx1_valid,
    pipe_rx1_data_valid,
    pipe_rx1_phy_status,
    pipe_rx1_elec_idle,
    pipe_rx1_eqdone,
    pipe_rx1_eqlp_adaptdone,
    pipe_rx1_eqlp_lffs_sel,
    PIPERX7EQLPNEWTXCOEFFORPRESET,
    pipe_rx1_start_block,
    pipe_tx1_eqdone,
    rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    txctrl2_in,
    txdata_in,
    SR,
    gt_rxvalid,
    CLK,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    pipe_rx1_polarity,
    pipe_tx1_compliance,
    pipe_tx1_elec_idle,
    pipe_tx1_data_valid,
    pipe_tx1_start_block,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] ,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8);
  output pipe_rx1_valid;
  output pipe_rx1_data_valid;
  output pipe_rx1_phy_status;
  output pipe_rx1_elec_idle;
  output pipe_rx1_eqdone;
  output pipe_rx1_eqlp_adaptdone;
  output pipe_rx1_eqlp_lffs_sel;
  output [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  output pipe_rx1_start_block;
  output pipe_tx1_eqdone;
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  input [0:0]SR;
  input [0:0]gt_rxvalid;
  input CLK;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input pipe_rx1_polarity;
  input pipe_tx1_compliance;
  input pipe_tx1_elec_idle;
  input pipe_tx1_data_valid;
  input pipe_tx1_start_block;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;

  wire CLK;
  wire [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx1_data_valid;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_eqdone;
  wire pipe_rx1_eqlp_adaptdone;
  wire pipe_rx1_eqlp_lffs_sel;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_start_block;
  wire pipe_rx1_valid;
  wire pipe_tx1_compliance;
  wire pipe_tx1_data_valid;
  wire pipe_tx1_elec_idle;
  wire pipe_tx1_eqdone;
  wire pipe_tx1_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx1_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx1_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx1_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx1_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx1_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpnewtxcoefforpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b1),
        .Q(PIPERX7EQLPNEWTXCOEFFORPRESET),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx1_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx1_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx1_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx1_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx1_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx1_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx1_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx1_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx1_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_0
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx2_valid,
    pipe_rx2_data_valid,
    pipe_rx2_phy_status,
    pipe_rx2_elec_idle,
    pipe_rx2_eqdone,
    pipe_rx2_eqlp_adaptdone,
    pipe_rx2_eqlp_lffs_sel,
    pipe_rx2_start_block,
    pipe_tx2_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx2_polarity,
    CLK,
    pipe_tx2_compliance,
    pipe_tx2_elec_idle,
    pipe_tx2_data_valid,
    pipe_tx2_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx2_valid;
  output pipe_rx2_data_valid;
  output pipe_rx2_phy_status;
  output pipe_rx2_elec_idle;
  output pipe_rx2_eqdone;
  output pipe_rx2_eqlp_adaptdone;
  output pipe_rx2_eqlp_lffs_sel;
  output pipe_rx2_start_block;
  output pipe_tx2_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx2_polarity;
  input CLK;
  input pipe_tx2_compliance;
  input pipe_tx2_elec_idle;
  input pipe_tx2_data_valid;
  input pipe_tx2_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx2_data_valid;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_eqdone;
  wire pipe_rx2_eqlp_adaptdone;
  wire pipe_rx2_eqlp_lffs_sel;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_start_block;
  wire pipe_rx2_valid;
  wire pipe_tx2_compliance;
  wire pipe_tx2_data_valid;
  wire pipe_tx2_elec_idle;
  wire pipe_tx2_eqdone;
  wire pipe_tx2_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx2_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx2_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx2_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx2_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx2_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx2_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx2_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx2_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx2_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx2_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx2_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx2_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx2_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx2_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_1
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx3_valid,
    pipe_rx3_data_valid,
    pipe_rx3_phy_status,
    pipe_rx3_elec_idle,
    pipe_rx3_eqdone,
    pipe_rx3_eqlp_adaptdone,
    pipe_rx3_eqlp_lffs_sel,
    pipe_rx3_start_block,
    pipe_tx3_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx3_polarity,
    CLK,
    pipe_tx3_compliance,
    pipe_tx3_elec_idle,
    pipe_tx3_data_valid,
    pipe_tx3_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx3_valid;
  output pipe_rx3_data_valid;
  output pipe_rx3_phy_status;
  output pipe_rx3_elec_idle;
  output pipe_rx3_eqdone;
  output pipe_rx3_eqlp_adaptdone;
  output pipe_rx3_eqlp_lffs_sel;
  output pipe_rx3_start_block;
  output pipe_tx3_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx3_polarity;
  input CLK;
  input pipe_tx3_compliance;
  input pipe_tx3_elec_idle;
  input pipe_tx3_data_valid;
  input pipe_tx3_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx3_data_valid;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_eqdone;
  wire pipe_rx3_eqlp_adaptdone;
  wire pipe_rx3_eqlp_lffs_sel;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_start_block;
  wire pipe_rx3_valid;
  wire pipe_tx3_compliance;
  wire pipe_tx3_data_valid;
  wire pipe_tx3_elec_idle;
  wire pipe_tx3_eqdone;
  wire pipe_tx3_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx3_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx3_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx3_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx3_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx3_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx3_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx3_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx3_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx3_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx3_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx3_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx3_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx3_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx3_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_2
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx4_valid,
    pipe_rx4_data_valid,
    pipe_rx4_phy_status,
    pipe_rx4_elec_idle,
    pipe_rx4_eqdone,
    pipe_rx4_eqlp_adaptdone,
    pipe_rx4_eqlp_lffs_sel,
    pipe_rx4_start_block,
    pipe_tx4_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx4_polarity,
    CLK,
    pipe_tx4_compliance,
    pipe_tx4_elec_idle,
    pipe_tx4_data_valid,
    pipe_tx4_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx4_valid;
  output pipe_rx4_data_valid;
  output pipe_rx4_phy_status;
  output pipe_rx4_elec_idle;
  output pipe_rx4_eqdone;
  output pipe_rx4_eqlp_adaptdone;
  output pipe_rx4_eqlp_lffs_sel;
  output pipe_rx4_start_block;
  output pipe_tx4_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx4_polarity;
  input CLK;
  input pipe_tx4_compliance;
  input pipe_tx4_elec_idle;
  input pipe_tx4_data_valid;
  input pipe_tx4_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx4_data_valid;
  wire pipe_rx4_elec_idle;
  wire pipe_rx4_eqdone;
  wire pipe_rx4_eqlp_adaptdone;
  wire pipe_rx4_eqlp_lffs_sel;
  wire pipe_rx4_phy_status;
  wire pipe_rx4_polarity;
  wire pipe_rx4_start_block;
  wire pipe_rx4_valid;
  wire pipe_tx4_compliance;
  wire pipe_tx4_data_valid;
  wire pipe_tx4_elec_idle;
  wire pipe_tx4_eqdone;
  wire pipe_tx4_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx4_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx4_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx4_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx4_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx4_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx4_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx4_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx4_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx4_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx4_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx4_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx4_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx4_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx4_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_3
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx5_valid,
    pipe_rx5_data_valid,
    pipe_rx5_phy_status,
    pipe_rx5_elec_idle,
    pipe_rx5_eqdone,
    pipe_rx5_eqlp_adaptdone,
    pipe_rx5_eqlp_lffs_sel,
    pipe_rx5_start_block,
    pipe_tx5_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx5_polarity,
    CLK,
    pipe_tx5_compliance,
    pipe_tx5_elec_idle,
    pipe_tx5_data_valid,
    pipe_tx5_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx5_valid;
  output pipe_rx5_data_valid;
  output pipe_rx5_phy_status;
  output pipe_rx5_elec_idle;
  output pipe_rx5_eqdone;
  output pipe_rx5_eqlp_adaptdone;
  output pipe_rx5_eqlp_lffs_sel;
  output pipe_rx5_start_block;
  output pipe_tx5_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx5_polarity;
  input CLK;
  input pipe_tx5_compliance;
  input pipe_tx5_elec_idle;
  input pipe_tx5_data_valid;
  input pipe_tx5_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx5_data_valid;
  wire pipe_rx5_elec_idle;
  wire pipe_rx5_eqdone;
  wire pipe_rx5_eqlp_adaptdone;
  wire pipe_rx5_eqlp_lffs_sel;
  wire pipe_rx5_phy_status;
  wire pipe_rx5_polarity;
  wire pipe_rx5_start_block;
  wire pipe_rx5_valid;
  wire pipe_tx5_compliance;
  wire pipe_tx5_data_valid;
  wire pipe_tx5_elec_idle;
  wire pipe_tx5_eqdone;
  wire pipe_tx5_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx5_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx5_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx5_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx5_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx5_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx5_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx5_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx5_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx5_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx5_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx5_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx5_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx5_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx5_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_4
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx6_valid,
    pipe_rx6_data_valid,
    pipe_rx6_phy_status,
    pipe_rx6_elec_idle,
    pipe_rx6_eqdone,
    pipe_rx6_eqlp_adaptdone,
    pipe_rx6_eqlp_lffs_sel,
    pipe_rx6_start_block,
    pipe_tx6_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx6_polarity,
    CLK,
    pipe_tx6_compliance,
    pipe_tx6_elec_idle,
    pipe_tx6_data_valid,
    pipe_tx6_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx6_valid;
  output pipe_rx6_data_valid;
  output pipe_rx6_phy_status;
  output pipe_rx6_elec_idle;
  output pipe_rx6_eqdone;
  output pipe_rx6_eqlp_adaptdone;
  output pipe_rx6_eqlp_lffs_sel;
  output pipe_rx6_start_block;
  output pipe_tx6_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx6_polarity;
  input CLK;
  input pipe_tx6_compliance;
  input pipe_tx6_elec_idle;
  input pipe_tx6_data_valid;
  input pipe_tx6_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx6_data_valid;
  wire pipe_rx6_elec_idle;
  wire pipe_rx6_eqdone;
  wire pipe_rx6_eqlp_adaptdone;
  wire pipe_rx6_eqlp_lffs_sel;
  wire pipe_rx6_phy_status;
  wire pipe_rx6_polarity;
  wire pipe_rx6_start_block;
  wire pipe_rx6_valid;
  wire pipe_tx6_compliance;
  wire pipe_tx6_data_valid;
  wire pipe_tx6_elec_idle;
  wire pipe_tx6_eqdone;
  wire pipe_tx6_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx6_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx6_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx6_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx6_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx6_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx6_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx6_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx6_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx6_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx6_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx6_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx6_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx6_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx6_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_5
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx7_valid,
    pipe_rx7_data_valid,
    pipe_rx7_phy_status,
    pipe_rx7_elec_idle,
    pipe_rx7_eqdone,
    pipe_rx7_eqlp_adaptdone,
    pipe_rx7_eqlp_lffs_sel,
    pipe_rx7_start_block,
    pipe_tx7_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    SR,
    pipe_rx7_polarity,
    CLK,
    pipe_tx7_compliance,
    pipe_tx7_elec_idle,
    pipe_tx7_data_valid,
    pipe_tx7_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] );
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx7_valid;
  output pipe_rx7_data_valid;
  output pipe_rx7_phy_status;
  output pipe_rx7_elec_idle;
  output pipe_rx7_eqdone;
  output pipe_rx7_eqlp_adaptdone;
  output pipe_rx7_eqlp_lffs_sel;
  output pipe_rx7_start_block;
  output pipe_tx7_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]\sync_reg[0] ;
  output [1:0]\sync_reg[0]_0 ;
  output [2:0]\sync_reg[0]_1 ;
  output [3:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  input [0:0]SR;
  input pipe_rx7_polarity;
  input CLK;
  input pipe_tx7_compliance;
  input pipe_tx7_elec_idle;
  input pipe_tx7_data_valid;
  input pipe_tx7_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;

  wire CLK;
  wire [0:0]SR;
  wire TXEQ_DONE_reg;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done_reg;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel_reg;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx7_data_valid;
  wire pipe_rx7_elec_idle;
  wire pipe_rx7_eqdone;
  wire pipe_rx7_eqlp_adaptdone;
  wire pipe_rx7_eqlp_lffs_sel;
  wire pipe_rx7_phy_status;
  wire pipe_rx7_polarity;
  wire pipe_rx7_start_block;
  wire pipe_rx7_valid;
  wire pipe_tx7_compliance;
  wire pipe_tx7_data_valid;
  wire pipe_tx7_elec_idle;
  wire pipe_tx7_eqdone;
  wire pipe_tx7_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [5:0]\sync_reg[0] ;
  wire [1:0]\sync_reg[0]_0 ;
  wire [2:0]\sync_reg[0]_1 ;
  wire [3:0]\sync_reg[0]_2 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx7_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx7_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx7_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done_reg),
        .Q(pipe_rx7_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[2]),
        .Q(\sync_reg[0]_3 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[3]),
        .Q(\sync_reg[0]_3 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[4]),
        .Q(\sync_reg[0]_3 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[5]),
        .Q(\sync_reg[0]_3 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel_reg),
        .Q(pipe_rx7_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx7_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx7_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx7_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx7_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx7_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx7_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx7_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[2]),
        .Q(\sync_reg[0] [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[3]),
        .Q(\sync_reg[0] [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[4]),
        .Q(\sync_reg[0] [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[5]),
        .Q(\sync_reg[0] [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE_reg),
        .Q(pipe_tx7_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx7_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_lane" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_6
   (rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx0_valid,
    pipe_rx0_data_valid,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_eqdone,
    pipe_rx0_eqlp_adaptdone,
    pipe_rx0_eqlp_lffs_sel,
    pipe_rx0_start_block,
    pipe_tx0_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    \sync_reg[0]_3 ,
    SR,
    pipe_rx0_polarity,
    CLK,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    pipe_tx0_data_valid,
    pipe_tx0_start_block,
    gt_rxvalid,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done,
    lffs_sel,
    TXEQ_DONE,
    D,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] ,
    reg_cfg_tph_stt_read_data_valid_o_reg_8);
  output [0:0]rxpolarity_in;
  output [0:0]txctrl1_in;
  output [0:0]gt_txelecidle;
  output [3:0]txctrl0_in;
  output pipe_rx0_valid;
  output pipe_rx0_data_valid;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_eqdone;
  output pipe_rx0_eqlp_adaptdone;
  output pipe_rx0_eqlp_lffs_sel;
  output pipe_rx0_start_block;
  output pipe_tx0_eqdone;
  output [1:0]phy_txeq_ctrl;
  output [3:0]phy_txeq_preset;
  output [5:0]Q;
  output [1:0]\sync_reg[0] ;
  output [2:0]\sync_reg[0]_0 ;
  output [3:0]\sync_reg[0]_1 ;
  output [5:0]\sync_reg[0]_2 ;
  output [1:0]txctrl2_in;
  output [31:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  output [1:0]\sync_reg[0]_3 ;
  input [0:0]SR;
  input pipe_rx0_polarity;
  input CLK;
  input pipe_tx0_compliance;
  input pipe_tx0_elec_idle;
  input pipe_tx0_data_valid;
  input pipe_tx0_start_block;
  input [0:0]gt_rxvalid;
  input [5:0]rxctrl0_out;
  input [0:0]gt_phystatus;
  input [0:0]rxelecidle_out;
  input done_reg;
  input adapt_done;
  input lffs_sel;
  input TXEQ_DONE;
  input [1:0]D;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [31:0]rxdata_out;
  input [2:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;

  wire CLK;
  wire [1:0]D;
  wire [5:0]Q;
  wire [0:0]SR;
  wire TXEQ_DONE;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire adapt_done;
  wire done_reg;
  wire [0:0]gt_phystatus;
  wire [2:0]gt_rxstatus;
  wire [0:0]gt_rxvalid;
  wire [0:0]gt_txelecidle;
  wire lffs_sel;
  wire [1:0]phy_txeq_ctrl;
  wire [3:0]phy_txeq_preset;
  wire pipe_rx0_data_valid;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_eqdone;
  wire pipe_rx0_eqlp_adaptdone;
  wire pipe_rx0_eqlp_lffs_sel;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_start_block;
  wire pipe_rx0_valid;
  wire pipe_tx0_compliance;
  wire pipe_tx0_data_valid;
  wire pipe_tx0_elec_idle;
  wire pipe_tx0_eqdone;
  wire pipe_tx0_start_block;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [5:0]rxctrl0_out;
  wire [31:0]rxdata_out;
  wire [0:0]rxelecidle_out;
  wire [0:0]rxpolarity_in;
  wire [1:0]\sync_reg[0] ;
  wire [2:0]\sync_reg[0]_0 ;
  wire [3:0]\sync_reg[0]_1 ;
  wire [5:0]\sync_reg[0]_2 ;
  wire [1:0]\sync_reg[0]_3 ;
  wire [3:0]txctrl0_in;
  wire [0:0]txctrl1_in;
  wire [1:0]txctrl2_in;
  wire [31:0]txdata_in;

  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[16]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[17]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[18]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[19]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[20]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[21]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[22]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[23]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[24]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[25]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[26]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[27]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[28]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[29]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[30]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[31]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxdata_out[9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_data_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[2]),
        .Q(pipe_rx0_data_valid),
        .R(SR));
  FDSE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx0_elec_idle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_1[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(done_reg),
        .Q(pipe_rx0_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlpadaptdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(adapt_done),
        .Q(pipe_rx0_eqlp_adaptdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[0]),
        .Q(\sync_reg[0]_2 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[1]),
        .Q(\sync_reg[0]_2 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[2]),
        .Q(\sync_reg[0]_2 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[3]),
        .Q(\sync_reg[0]_2 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[4]),
        .Q(\sync_reg[0]_2 [4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_4[5]),
        .Q(\sync_reg[0]_2 [5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlplffssel_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(lffs_sel),
        .Q(pipe_rx0_eqlp_lffs_sel),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[0]),
        .Q(\sync_reg[0]_1 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[1]),
        .Q(\sync_reg[0]_1 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[2]),
        .Q(\sync_reg[0]_1 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqlptxpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_3[3]),
        .Q(\sync_reg[0]_1 [3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_2[2]),
        .Q(\sync_reg[0]_0 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(pipe_rx0_phy_status),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx0_polarity),
        .Q(rxpolarity_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[3]),
        .Q(pipe_rx0_start_block),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxstatus[2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_1[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(rxctrl0_out[5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_2[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(pipe_rx0_valid),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[0]),
        .Q(txctrl2_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_5[1]),
        .Q(txctrl2_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_compliance),
        .Q(txctrl1_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[0]),
        .Q(txdata_in[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[10]),
        .Q(txdata_in[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[11]),
        .Q(txdata_in[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[12]),
        .Q(txdata_in[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[13]),
        .Q(txdata_in[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[14]),
        .Q(txdata_in[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[15]),
        .Q(txdata_in[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[16]),
        .Q(txdata_in[16]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[17] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[17]),
        .Q(txdata_in[17]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[18] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[18]),
        .Q(txdata_in[18]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[19] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[19]),
        .Q(txdata_in[19]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[1]),
        .Q(txdata_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[20] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[20]),
        .Q(txdata_in[20]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[21] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[21]),
        .Q(txdata_in[21]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[22] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[22]),
        .Q(txdata_in[22]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[23] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[23]),
        .Q(txdata_in[23]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[24] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[24]),
        .Q(txdata_in[24]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[25] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[25]),
        .Q(txdata_in[25]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[26] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[26]),
        .Q(txdata_in[26]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[27] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[27]),
        .Q(txdata_in[27]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[28] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[28]),
        .Q(txdata_in[28]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[29] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[29]),
        .Q(txdata_in[29]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[2]),
        .Q(txdata_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[30] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[30]),
        .Q(txdata_in[30]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[31] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[31]),
        .Q(txdata_in[31]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[3]),
        .Q(txdata_in[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[4]),
        .Q(txdata_in[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[5]),
        .Q(txdata_in[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[6]),
        .Q(txdata_in[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[7]),
        .Q(txdata_in[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[8]),
        .Q(txdata_in[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_6[9]),
        .Q(txdata_in[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_datavalid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_data_valid),
        .Q(txctrl0_in[0]),
        .R(SR));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_elec_idle),
        .Q(gt_txelecidle),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [0]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [9]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[9]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [10]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[10]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [11]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[11]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [12]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[12]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [13]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[13]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [14]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[14]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[16] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [15]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[15]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [1]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [2]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [3]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [4]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [5]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [6]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[6]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [7]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[7]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcoeff_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXEQ_NEW_COEFF_reg[16] [8]),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_3[8]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(phy_txeq_ctrl[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqcontrol_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(phy_txeq_ctrl[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdeemph_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqdone_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(TXEQ_DONE),
        .Q(pipe_tx0_eqdone),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(phy_txeq_preset[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(phy_txeq_preset[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[2]),
        .Q(phy_txeq_preset[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqpreset_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[3]),
        .Q(phy_txeq_preset[3]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[0]),
        .Q(\sync_reg[0]_3 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_8[1]),
        .Q(\sync_reg[0]_3 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_startblock_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_start_block),
        .Q(txctrl0_in[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[0]),
        .Q(txctrl0_in[2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_syncheader_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_7[1]),
        .Q(txctrl0_in[3]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_misc" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_misc
   (txdetectrx_in,
    txdeemph_in,
    txswing_in,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    SR,
    pipe_tx0_rcvr_det,
    CLK,
    pipe_tx0_deemph,
    pipe_tx0_swing,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0);
  output [0:0]txdetectrx_in;
  output [0:0]txdeemph_in;
  output [0:0]txswing_in;
  output [1:0]\sync_reg[0] ;
  output [2:0]\sync_reg[0]_0 ;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  input [0:0]SR;
  input pipe_tx0_rcvr_det;
  input CLK;
  input pipe_tx0_deemph;
  input pipe_tx0_swing;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;

  wire CLK;
  wire [0:0]SR;
  wire pipe_tx0_deemph;
  wire pipe_tx0_rcvr_det;
  wire pipe_tx0_swing;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [1:0]\sync_reg[0] ;
  wire [2:0]\sync_reg[0]_0 ;
  wire [0:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [0:0]txswing_in;

  FDSE \pipe_stages_1.pipe_tx_deemph_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_deemph),
        .Q(txdeemph_in),
        .S(SR));
  FDRE \pipe_stages_1.pipe_tx_eqfs_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b1),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqfs_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b1),
        .Q(reg_cfg_tph_stt_read_enable_i_reg[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqlf_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b1),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_eqlf_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b1),
        .Q(reg_cfg_tph_stt_read_enable_i_reg_0[1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[0]),
        .Q(\sync_reg[0]_0 [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[1]),
        .Q(\sync_reg[0]_0 [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg_0[2]),
        .Q(\sync_reg[0]_0 [2]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_rate_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[0]),
        .Q(\sync_reg[0] [0]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_rate_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg[1]),
        .Q(\sync_reg[0] [1]),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_rcvr_det_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_rcvr_det),
        .Q(txdetectrx_in),
        .R(SR));
  FDRE \pipe_stages_1.pipe_tx_swing_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_swing),
        .Q(txswing_in),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_pipe_pipeline" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_pipeline
   (pipe_rx1_valid,
    pipe_rx1_data_valid,
    pipe_rx1_phy_status,
    pipe_rx1_elec_idle,
    pipe_rx1_eqdone,
    pipe_rx1_eqlp_adaptdone,
    pipe_rx1_eqlp_lffs_sel,
    PIPERX7EQLPNEWTXCOEFFORPRESET,
    pipe_rx1_start_block,
    pipe_tx1_eqdone,
    rxpolarity_in,
    txctrl1_in,
    gt_txelecidle,
    txctrl0_in,
    pipe_rx2_valid,
    pipe_rx2_data_valid,
    pipe_rx2_phy_status,
    pipe_rx2_elec_idle,
    pipe_rx2_eqdone,
    pipe_rx2_eqlp_adaptdone,
    pipe_rx2_eqlp_lffs_sel,
    pipe_rx2_start_block,
    pipe_tx2_eqdone,
    pipe_rx3_valid,
    pipe_rx3_data_valid,
    pipe_rx3_phy_status,
    pipe_rx3_elec_idle,
    pipe_rx3_eqdone,
    pipe_rx3_eqlp_adaptdone,
    pipe_rx3_eqlp_lffs_sel,
    pipe_rx3_start_block,
    pipe_tx3_eqdone,
    pipe_rx4_valid,
    pipe_rx4_data_valid,
    pipe_rx4_phy_status,
    pipe_rx4_elec_idle,
    pipe_rx4_eqdone,
    pipe_rx4_eqlp_adaptdone,
    pipe_rx4_eqlp_lffs_sel,
    pipe_rx4_start_block,
    pipe_tx4_eqdone,
    pipe_rx5_valid,
    pipe_rx5_data_valid,
    pipe_rx5_phy_status,
    pipe_rx5_elec_idle,
    pipe_rx5_eqdone,
    pipe_rx5_eqlp_adaptdone,
    pipe_rx5_eqlp_lffs_sel,
    pipe_rx5_start_block,
    pipe_tx5_eqdone,
    pipe_rx6_valid,
    pipe_rx6_data_valid,
    pipe_rx6_phy_status,
    pipe_rx6_elec_idle,
    pipe_rx6_eqdone,
    pipe_rx6_eqlp_adaptdone,
    pipe_rx6_eqlp_lffs_sel,
    pipe_rx6_start_block,
    pipe_tx6_eqdone,
    pipe_rx7_valid,
    pipe_rx7_data_valid,
    pipe_rx7_phy_status,
    pipe_rx7_elec_idle,
    pipe_rx7_eqdone,
    pipe_rx7_eqlp_adaptdone,
    pipe_rx7_eqlp_lffs_sel,
    pipe_rx7_start_block,
    pipe_tx7_eqdone,
    txdetectrx_in,
    txdeemph_in,
    txswing_in,
    pipe_rx0_valid,
    pipe_rx0_data_valid,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_eqdone,
    pipe_rx0_eqlp_adaptdone,
    pipe_rx0_eqlp_lffs_sel,
    pipe_rx0_start_block,
    pipe_tx0_eqdone,
    phy_txeq_ctrl,
    phy_txeq_preset,
    Q,
    \sync_reg[0] ,
    \sync_reg[0]_0 ,
    \sync_reg[0]_1 ,
    \sync_reg[0]_2 ,
    \sync_reg[0]_3 ,
    \sync_reg[0]_4 ,
    \sync_reg[0]_5 ,
    \sync_reg[0]_6 ,
    \sync_reg[0]_7 ,
    \sync_reg[0]_8 ,
    \sync_reg[0]_9 ,
    \sync_reg[0]_10 ,
    \sync_reg[0]_11 ,
    \sync_reg[0]_12 ,
    \sync_reg[0]_13 ,
    \sync_reg[0]_14 ,
    \sync_reg[0]_15 ,
    \sync_reg[0]_16 ,
    \sync_reg[0]_17 ,
    \sync_reg[0]_18 ,
    \sync_reg[0]_19 ,
    \sync_reg[0]_20 ,
    \sync_reg[0]_21 ,
    \sync_reg[0]_22 ,
    \sync_reg[0]_23 ,
    \sync_reg[0]_24 ,
    \sync_reg[0]_25 ,
    \sync_reg[0]_26 ,
    \sync_reg[0]_27 ,
    \sync_reg[0]_28 ,
    \sync_reg[0]_29 ,
    \sync_reg[0]_30 ,
    \sync_reg[0]_31 ,
    \sync_reg[0]_32 ,
    \sync_reg[0]_33 ,
    \sync_reg[0]_34 ,
    \sync_reg[0]_35 ,
    \sync_reg[0]_36 ,
    \sync_reg[0]_37 ,
    reg_cfg_tph_stt_read_enable_i_reg,
    reg_cfg_tph_stt_read_enable_i_reg_0,
    reg_cfg_tph_stt_read_enable_i_reg_1,
    reg_cfg_tph_stt_read_enable_i_reg_2,
    reg_cfg_tph_stt_read_enable_i_reg_3,
    txctrl2_in,
    txdata_in,
    reg_cfg_tph_stt_read_enable_i_reg_4,
    reg_cfg_tph_stt_read_enable_i_reg_5,
    reg_cfg_tph_stt_read_enable_i_reg_6,
    reg_cfg_tph_stt_read_enable_i_reg_7,
    reg_cfg_tph_stt_read_enable_i_reg_8,
    reg_cfg_tph_stt_read_enable_i_reg_9,
    reg_cfg_tph_stt_read_enable_i_reg_10,
    reg_cfg_tph_stt_read_enable_i_reg_11,
    reg_cfg_tph_stt_read_enable_i_reg_12,
    reg_cfg_tph_stt_read_enable_i_reg_13,
    reg_cfg_tph_stt_read_enable_i_reg_14,
    reg_cfg_tph_stt_read_enable_i_reg_15,
    reg_cfg_tph_stt_read_enable_i_reg_16,
    reg_cfg_tph_stt_read_enable_i_reg_17,
    reg_cfg_tph_stt_read_enable_i_reg_18,
    reg_cfg_tph_stt_read_enable_i_reg_19,
    reg_cfg_tph_stt_read_enable_i_reg_20,
    reg_cfg_tph_stt_read_enable_i_reg_21,
    reg_cfg_tph_stt_read_enable_i_reg_22,
    reg_cfg_tph_stt_read_enable_i_reg_23,
    reg_cfg_tph_stt_read_enable_i_reg_24,
    reg_cfg_tph_stt_read_enable_i_reg_25,
    reg_cfg_tph_stt_read_enable_i_reg_26,
    reg_cfg_tph_stt_read_enable_i_reg_27,
    reg_cfg_tph_stt_read_enable_i_reg_28,
    reg_cfg_tph_stt_read_enable_i_reg_29,
    reg_cfg_tph_stt_read_enable_i_reg_30,
    reg_cfg_tph_stt_read_enable_i_reg_31,
    reg_cfg_tph_stt_read_enable_i_reg_32,
    reg_cfg_tph_stt_read_enable_i_reg_33,
    \sync_reg[0]_38 ,
    \sync_reg[0]_39 ,
    reg_cfg_tph_stt_read_enable_i_reg_34,
    reg_cfg_tph_stt_read_enable_i_reg_35,
    reg_cfg_tph_stt_read_enable_i_reg_36,
    reg_cfg_tph_stt_read_enable_i_reg_37,
    reg_cfg_tph_stt_read_enable_i_reg_38,
    reg_cfg_tph_stt_read_enable_i_reg_39,
    reg_cfg_tph_stt_read_enable_i_reg_40,
    \sync_reg[0]_40 ,
    SR,
    gt_rxvalid,
    CLK,
    rxctrl0_out,
    gt_phystatus,
    rxelecidle_out,
    done_reg,
    adapt_done_reg,
    lffs_sel_reg,
    TXEQ_DONE_reg,
    pipe_rx7_polarity,
    pipe_rx6_polarity,
    pipe_rx5_polarity,
    pipe_rx4_polarity,
    pipe_rx3_polarity,
    pipe_rx2_polarity,
    pipe_rx1_polarity,
    pipe_rx0_polarity,
    pipe_tx7_compliance,
    pipe_tx6_compliance,
    pipe_tx5_compliance,
    pipe_tx4_compliance,
    pipe_tx3_compliance,
    pipe_tx2_compliance,
    pipe_tx1_compliance,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    pipe_tx1_elec_idle,
    pipe_tx2_elec_idle,
    pipe_tx3_elec_idle,
    pipe_tx4_elec_idle,
    pipe_tx5_elec_idle,
    pipe_tx6_elec_idle,
    pipe_tx7_elec_idle,
    pipe_tx7_data_valid,
    pipe_tx7_start_block,
    pipe_tx6_data_valid,
    pipe_tx6_start_block,
    pipe_tx5_data_valid,
    pipe_tx5_start_block,
    pipe_tx4_data_valid,
    pipe_tx4_start_block,
    pipe_tx3_data_valid,
    pipe_tx3_start_block,
    pipe_tx2_data_valid,
    pipe_tx2_start_block,
    pipe_tx1_data_valid,
    pipe_tx1_start_block,
    pipe_tx0_data_valid,
    pipe_tx0_start_block,
    done_reg_0,
    adapt_done_reg_0,
    lffs_sel_reg_0,
    TXEQ_DONE_reg_0,
    done_reg_1,
    adapt_done_reg_1,
    lffs_sel_reg_1,
    TXEQ_DONE_reg_1,
    done_reg_2,
    adapt_done_reg_2,
    lffs_sel_reg_2,
    TXEQ_DONE_reg_2,
    done_reg_3,
    adapt_done_reg_3,
    lffs_sel_reg_3,
    TXEQ_DONE_reg_3,
    done_reg_4,
    adapt_done_reg_4,
    lffs_sel_reg_4,
    TXEQ_DONE_reg_4,
    done_reg_5,
    adapt_done_reg_5,
    lffs_sel_reg_5,
    TXEQ_DONE_reg_5,
    pipe_tx0_rcvr_det,
    pipe_tx0_deemph,
    pipe_tx0_swing,
    done_reg_6,
    adapt_done,
    lffs_sel,
    TXEQ_DONE,
    D,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    reg_cfg_tph_stt_read_data_valid_o_reg_0,
    reg_cfg_tph_stt_read_data_valid_o_reg_1,
    reg_cfg_tph_stt_read_data_valid_o_reg_2,
    reg_cfg_tph_stt_read_data_valid_o_reg_3,
    reg_cfg_tph_stt_read_data_valid_o_reg_4,
    reg_cfg_tph_stt_read_data_valid_o_reg_5,
    reg_cfg_tph_stt_read_data_valid_o_reg_6,
    reg_cfg_tph_stt_read_data_valid_o_reg_7,
    reg_cfg_tph_stt_read_data_valid_o_reg_8,
    reg_cfg_tph_stt_read_data_valid_o_reg_9,
    reg_cfg_tph_stt_read_data_valid_o_reg_10,
    reg_cfg_tph_stt_read_data_valid_o_reg_11,
    reg_cfg_tph_stt_read_data_valid_o_reg_12,
    reg_cfg_tph_stt_read_data_valid_o_reg_13,
    reg_cfg_tph_stt_read_data_valid_o_reg_14,
    reg_cfg_tph_stt_read_data_valid_o_reg_15,
    reg_cfg_tph_stt_read_data_valid_o_reg_16,
    reg_cfg_tph_stt_read_data_valid_o_reg_17,
    reg_cfg_tph_stt_read_data_valid_o_reg_18,
    reg_cfg_tph_stt_read_data_valid_o_reg_19,
    reg_cfg_tph_stt_read_data_valid_o_reg_20,
    reg_cfg_tph_stt_read_data_valid_o_reg_21,
    reg_cfg_tph_stt_read_data_valid_o_reg_22,
    reg_cfg_tph_stt_read_data_valid_o_reg_23,
    reg_cfg_tph_stt_read_data_valid_o_reg_24,
    reg_cfg_tph_stt_read_data_valid_o_reg_25,
    reg_cfg_tph_stt_read_data_valid_o_reg_26,
    reg_cfg_tph_stt_read_data_valid_o_reg_27,
    reg_cfg_tph_stt_read_data_valid_o_reg_28,
    reg_cfg_tph_stt_read_data_valid_o_reg_29,
    reg_cfg_tph_stt_read_data_valid_o_reg_30,
    reg_cfg_tph_stt_read_data_valid_o_reg_31,
    reg_cfg_tph_stt_read_data_valid_o_reg_32,
    reg_cfg_tph_stt_read_data_valid_o_reg_33,
    reg_cfg_tph_stt_read_data_valid_o_reg_34,
    reg_cfg_tph_stt_read_data_valid_o_reg_35,
    reg_cfg_tph_stt_read_data_valid_o_reg_36,
    reg_cfg_tph_stt_read_data_valid_o_reg_37,
    reg_cfg_tph_stt_read_data_valid_o_reg_38,
    reg_cfg_tph_stt_read_data_valid_o_reg_39,
    reg_cfg_tph_stt_read_data_valid_o_reg_40,
    reg_cfg_tph_stt_read_data_valid_o_reg_41,
    reg_cfg_tph_stt_read_data_valid_o_reg_42,
    reg_cfg_tph_stt_read_data_valid_o_reg_43,
    reg_cfg_tph_stt_read_data_valid_o_reg_44,
    reg_cfg_tph_stt_read_data_valid_o_reg_45,
    reg_cfg_tph_stt_read_data_valid_o_reg_46,
    reg_cfg_tph_stt_read_data_valid_o_reg_47,
    reg_cfg_tph_stt_read_data_valid_o_reg_48,
    reg_cfg_tph_stt_read_data_valid_o_reg_49,
    reg_cfg_tph_stt_read_data_valid_o_reg_50,
    reg_cfg_tph_stt_read_data_valid_o_reg_51,
    reg_cfg_tph_stt_read_data_valid_o_reg_52,
    reg_cfg_tph_stt_read_data_valid_o_reg_53,
    rxdata_out,
    gt_rxstatus,
    \TXEQ_NEW_COEFF_reg[16] ,
    reg_cfg_tph_stt_read_data_valid_o_reg_54,
    reg_cfg_tph_stt_read_data_valid_o_reg_55,
    reg_cfg_tph_stt_read_data_valid_o_reg_56,
    reg_cfg_tph_stt_read_data_valid_o_reg_57,
    reg_cfg_tph_stt_read_data_valid_o_reg_58,
    reg_cfg_tph_stt_read_data_valid_o_reg_59,
    reg_cfg_tph_stt_read_data_valid_o_reg_60,
    reg_cfg_tph_stt_read_data_valid_o_reg_61,
    reg_cfg_tph_stt_read_data_valid_o_reg_62,
    reg_cfg_tph_stt_read_data_valid_o_reg_63,
    reg_cfg_tph_stt_read_data_valid_o_reg_64,
    reg_cfg_tph_stt_read_data_valid_o_reg_65,
    reg_cfg_tph_stt_read_data_valid_o_reg_66,
    reg_cfg_tph_stt_read_data_valid_o_reg_67,
    reg_cfg_tph_stt_read_data_valid_o_reg_68,
    reg_cfg_tph_stt_read_data_valid_o_reg_69,
    reg_cfg_tph_stt_read_data_valid_o_reg_70,
    reg_cfg_tph_stt_read_data_valid_o_reg_71,
    reg_cfg_tph_stt_read_data_valid_o_reg_72,
    reg_cfg_tph_stt_read_data_valid_o_reg_73,
    reg_cfg_tph_stt_read_data_valid_o_reg_74,
    reg_cfg_tph_stt_read_data_valid_o_reg_75,
    reg_cfg_tph_stt_read_data_valid_o_reg_76,
    reg_cfg_tph_stt_read_data_valid_o_reg_77,
    \TXEQ_NEW_COEFF_reg[16]_0 ,
    \TXEQ_NEW_COEFF_reg[16]_1 ,
    \TXEQ_NEW_COEFF_reg[16]_2 ,
    \TXEQ_NEW_COEFF_reg[16]_3 ,
    \TXEQ_NEW_COEFF_reg[16]_4 ,
    \TXEQ_NEW_COEFF_reg[16]_5 ,
    reg_cfg_tph_stt_read_data_valid_o_reg_78,
    reg_cfg_tph_stt_read_data_valid_o_reg_79,
    \TXEQ_NEW_COEFF_reg[16]_6 ,
    reg_cfg_tph_stt_read_data_valid_o_reg_80);
  output pipe_rx1_valid;
  output pipe_rx1_data_valid;
  output pipe_rx1_phy_status;
  output pipe_rx1_elec_idle;
  output pipe_rx1_eqdone;
  output pipe_rx1_eqlp_adaptdone;
  output pipe_rx1_eqlp_lffs_sel;
  output [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  output pipe_rx1_start_block;
  output pipe_tx1_eqdone;
  output [7:0]rxpolarity_in;
  output [7:0]txctrl1_in;
  output [7:0]gt_txelecidle;
  output [31:0]txctrl0_in;
  output pipe_rx2_valid;
  output pipe_rx2_data_valid;
  output pipe_rx2_phy_status;
  output pipe_rx2_elec_idle;
  output pipe_rx2_eqdone;
  output pipe_rx2_eqlp_adaptdone;
  output pipe_rx2_eqlp_lffs_sel;
  output pipe_rx2_start_block;
  output pipe_tx2_eqdone;
  output pipe_rx3_valid;
  output pipe_rx3_data_valid;
  output pipe_rx3_phy_status;
  output pipe_rx3_elec_idle;
  output pipe_rx3_eqdone;
  output pipe_rx3_eqlp_adaptdone;
  output pipe_rx3_eqlp_lffs_sel;
  output pipe_rx3_start_block;
  output pipe_tx3_eqdone;
  output pipe_rx4_valid;
  output pipe_rx4_data_valid;
  output pipe_rx4_phy_status;
  output pipe_rx4_elec_idle;
  output pipe_rx4_eqdone;
  output pipe_rx4_eqlp_adaptdone;
  output pipe_rx4_eqlp_lffs_sel;
  output pipe_rx4_start_block;
  output pipe_tx4_eqdone;
  output pipe_rx5_valid;
  output pipe_rx5_data_valid;
  output pipe_rx5_phy_status;
  output pipe_rx5_elec_idle;
  output pipe_rx5_eqdone;
  output pipe_rx5_eqlp_adaptdone;
  output pipe_rx5_eqlp_lffs_sel;
  output pipe_rx5_start_block;
  output pipe_tx5_eqdone;
  output pipe_rx6_valid;
  output pipe_rx6_data_valid;
  output pipe_rx6_phy_status;
  output pipe_rx6_elec_idle;
  output pipe_rx6_eqdone;
  output pipe_rx6_eqlp_adaptdone;
  output pipe_rx6_eqlp_lffs_sel;
  output pipe_rx6_start_block;
  output pipe_tx6_eqdone;
  output pipe_rx7_valid;
  output pipe_rx7_data_valid;
  output pipe_rx7_phy_status;
  output pipe_rx7_elec_idle;
  output pipe_rx7_eqdone;
  output pipe_rx7_eqlp_adaptdone;
  output pipe_rx7_eqlp_lffs_sel;
  output pipe_rx7_start_block;
  output pipe_tx7_eqdone;
  output [0:0]txdetectrx_in;
  output [0:0]txdeemph_in;
  output [0:0]txswing_in;
  output pipe_rx0_valid;
  output pipe_rx0_data_valid;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_eqdone;
  output pipe_rx0_eqlp_adaptdone;
  output pipe_rx0_eqlp_lffs_sel;
  output pipe_rx0_start_block;
  output pipe_tx0_eqdone;
  output [15:0]phy_txeq_ctrl;
  output [31:0]phy_txeq_preset;
  output [5:0]Q;
  output [1:0]\sync_reg[0] ;
  output [2:0]\sync_reg[0]_0 ;
  output [3:0]\sync_reg[0]_1 ;
  output [5:0]\sync_reg[0]_2 ;
  output [5:0]\sync_reg[0]_3 ;
  output [1:0]\sync_reg[0]_4 ;
  output [2:0]\sync_reg[0]_5 ;
  output [3:0]\sync_reg[0]_6 ;
  output [5:0]\sync_reg[0]_7 ;
  output [5:0]\sync_reg[0]_8 ;
  output [1:0]\sync_reg[0]_9 ;
  output [2:0]\sync_reg[0]_10 ;
  output [3:0]\sync_reg[0]_11 ;
  output [5:0]\sync_reg[0]_12 ;
  output [5:0]\sync_reg[0]_13 ;
  output [1:0]\sync_reg[0]_14 ;
  output [2:0]\sync_reg[0]_15 ;
  output [3:0]\sync_reg[0]_16 ;
  output [5:0]\sync_reg[0]_17 ;
  output [5:0]\sync_reg[0]_18 ;
  output [1:0]\sync_reg[0]_19 ;
  output [2:0]\sync_reg[0]_20 ;
  output [3:0]\sync_reg[0]_21 ;
  output [5:0]\sync_reg[0]_22 ;
  output [5:0]\sync_reg[0]_23 ;
  output [1:0]\sync_reg[0]_24 ;
  output [2:0]\sync_reg[0]_25 ;
  output [3:0]\sync_reg[0]_26 ;
  output [5:0]\sync_reg[0]_27 ;
  output [5:0]\sync_reg[0]_28 ;
  output [1:0]\sync_reg[0]_29 ;
  output [2:0]\sync_reg[0]_30 ;
  output [3:0]\sync_reg[0]_31 ;
  output [5:0]\sync_reg[0]_32 ;
  output [5:0]\sync_reg[0]_33 ;
  output [1:0]\sync_reg[0]_34 ;
  output [2:0]\sync_reg[0]_35 ;
  output [3:0]\sync_reg[0]_36 ;
  output [5:0]\sync_reg[0]_37 ;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  output [15:0]txctrl2_in;
  output [255:0]txdata_in;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_4;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_5;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_6;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_7;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_8;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_9;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_10;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_11;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_12;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_13;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_14;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_15;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_16;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_17;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_18;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_19;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_20;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_21;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_22;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_23;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_24;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_25;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_26;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_27;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_28;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_29;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_30;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_31;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_32;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_33;
  output [1:0]\sync_reg[0]_38 ;
  output [2:0]\sync_reg[0]_39 ;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_34;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_35;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_36;
  output [31:0]reg_cfg_tph_stt_read_enable_i_reg_37;
  output [2:0]reg_cfg_tph_stt_read_enable_i_reg_38;
  output [1:0]reg_cfg_tph_stt_read_enable_i_reg_39;
  output [15:0]reg_cfg_tph_stt_read_enable_i_reg_40;
  output [1:0]\sync_reg[0]_40 ;
  input [0:0]SR;
  input [7:0]gt_rxvalid;
  input CLK;
  input [47:0]rxctrl0_out;
  input [7:0]gt_phystatus;
  input [7:0]rxelecidle_out;
  input done_reg;
  input adapt_done_reg;
  input lffs_sel_reg;
  input TXEQ_DONE_reg;
  input pipe_rx7_polarity;
  input pipe_rx6_polarity;
  input pipe_rx5_polarity;
  input pipe_rx4_polarity;
  input pipe_rx3_polarity;
  input pipe_rx2_polarity;
  input pipe_rx1_polarity;
  input pipe_rx0_polarity;
  input pipe_tx7_compliance;
  input pipe_tx6_compliance;
  input pipe_tx5_compliance;
  input pipe_tx4_compliance;
  input pipe_tx3_compliance;
  input pipe_tx2_compliance;
  input pipe_tx1_compliance;
  input pipe_tx0_compliance;
  input pipe_tx0_elec_idle;
  input pipe_tx1_elec_idle;
  input pipe_tx2_elec_idle;
  input pipe_tx3_elec_idle;
  input pipe_tx4_elec_idle;
  input pipe_tx5_elec_idle;
  input pipe_tx6_elec_idle;
  input pipe_tx7_elec_idle;
  input pipe_tx7_data_valid;
  input pipe_tx7_start_block;
  input pipe_tx6_data_valid;
  input pipe_tx6_start_block;
  input pipe_tx5_data_valid;
  input pipe_tx5_start_block;
  input pipe_tx4_data_valid;
  input pipe_tx4_start_block;
  input pipe_tx3_data_valid;
  input pipe_tx3_start_block;
  input pipe_tx2_data_valid;
  input pipe_tx2_start_block;
  input pipe_tx1_data_valid;
  input pipe_tx1_start_block;
  input pipe_tx0_data_valid;
  input pipe_tx0_start_block;
  input done_reg_0;
  input adapt_done_reg_0;
  input lffs_sel_reg_0;
  input TXEQ_DONE_reg_0;
  input done_reg_1;
  input adapt_done_reg_1;
  input lffs_sel_reg_1;
  input TXEQ_DONE_reg_1;
  input done_reg_2;
  input adapt_done_reg_2;
  input lffs_sel_reg_2;
  input TXEQ_DONE_reg_2;
  input done_reg_3;
  input adapt_done_reg_3;
  input lffs_sel_reg_3;
  input TXEQ_DONE_reg_3;
  input done_reg_4;
  input adapt_done_reg_4;
  input lffs_sel_reg_4;
  input TXEQ_DONE_reg_4;
  input done_reg_5;
  input adapt_done_reg_5;
  input lffs_sel_reg_5;
  input TXEQ_DONE_reg_5;
  input pipe_tx0_rcvr_det;
  input pipe_tx0_deemph;
  input pipe_tx0_swing;
  input done_reg_6;
  input adapt_done;
  input lffs_sel;
  input TXEQ_DONE;
  input [1:0]D;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_9;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_10;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_11;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_12;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_13;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_14;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_15;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_16;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_17;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_18;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_19;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_20;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_21;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_22;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_23;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_24;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_25;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_26;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_27;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_28;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_29;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_30;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_31;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_32;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_33;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_34;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_35;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_36;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_37;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_38;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_39;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_40;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_41;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_42;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_43;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_44;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_45;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_46;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_47;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_48;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_49;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_50;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_51;
  input [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_52;
  input [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_53;
  input [255:0]rxdata_out;
  input [23:0]gt_rxstatus;
  input [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_54;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_55;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_56;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_57;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_58;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_59;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_60;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_61;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_62;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_63;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_64;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_65;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_66;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_67;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_68;
  input [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_69;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_70;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_71;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_72;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_73;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_74;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_75;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_76;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_77;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_0 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_1 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_2 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_3 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_4 ;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_5 ;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_78;
  input [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_79;
  input [15:0]\TXEQ_NEW_COEFF_reg[16]_6 ;
  input [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_80;

  wire CLK;
  wire [1:0]D;
  wire [0:0]PIPERX7EQLPNEWTXCOEFFORPRESET;
  wire [5:0]Q;
  wire [0:0]SR;
  wire TXEQ_DONE;
  wire TXEQ_DONE_reg;
  wire TXEQ_DONE_reg_0;
  wire TXEQ_DONE_reg_1;
  wire TXEQ_DONE_reg_2;
  wire TXEQ_DONE_reg_3;
  wire TXEQ_DONE_reg_4;
  wire TXEQ_DONE_reg_5;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16] ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_0 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_1 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_2 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_3 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_4 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_5 ;
  wire [15:0]\TXEQ_NEW_COEFF_reg[16]_6 ;
  wire adapt_done;
  wire adapt_done_reg;
  wire adapt_done_reg_0;
  wire adapt_done_reg_1;
  wire adapt_done_reg_2;
  wire adapt_done_reg_3;
  wire adapt_done_reg_4;
  wire adapt_done_reg_5;
  wire done_reg;
  wire done_reg_0;
  wire done_reg_1;
  wire done_reg_2;
  wire done_reg_3;
  wire done_reg_4;
  wire done_reg_5;
  wire done_reg_6;
  wire [7:0]gt_phystatus;
  wire [23:0]gt_rxstatus;
  wire [7:0]gt_rxvalid;
  wire [7:0]gt_txelecidle;
  wire lffs_sel;
  wire lffs_sel_reg;
  wire lffs_sel_reg_0;
  wire lffs_sel_reg_1;
  wire lffs_sel_reg_2;
  wire lffs_sel_reg_3;
  wire lffs_sel_reg_4;
  wire lffs_sel_reg_5;
  wire [15:0]phy_txeq_ctrl;
  wire [31:0]phy_txeq_preset;
  wire pipe_rx0_data_valid;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_eqdone;
  wire pipe_rx0_eqlp_adaptdone;
  wire pipe_rx0_eqlp_lffs_sel;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_start_block;
  wire pipe_rx0_valid;
  wire pipe_rx1_data_valid;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_eqdone;
  wire pipe_rx1_eqlp_adaptdone;
  wire pipe_rx1_eqlp_lffs_sel;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_start_block;
  wire pipe_rx1_valid;
  wire pipe_rx2_data_valid;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_eqdone;
  wire pipe_rx2_eqlp_adaptdone;
  wire pipe_rx2_eqlp_lffs_sel;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_start_block;
  wire pipe_rx2_valid;
  wire pipe_rx3_data_valid;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_eqdone;
  wire pipe_rx3_eqlp_adaptdone;
  wire pipe_rx3_eqlp_lffs_sel;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_start_block;
  wire pipe_rx3_valid;
  wire pipe_rx4_data_valid;
  wire pipe_rx4_elec_idle;
  wire pipe_rx4_eqdone;
  wire pipe_rx4_eqlp_adaptdone;
  wire pipe_rx4_eqlp_lffs_sel;
  wire pipe_rx4_phy_status;
  wire pipe_rx4_polarity;
  wire pipe_rx4_start_block;
  wire pipe_rx4_valid;
  wire pipe_rx5_data_valid;
  wire pipe_rx5_elec_idle;
  wire pipe_rx5_eqdone;
  wire pipe_rx5_eqlp_adaptdone;
  wire pipe_rx5_eqlp_lffs_sel;
  wire pipe_rx5_phy_status;
  wire pipe_rx5_polarity;
  wire pipe_rx5_start_block;
  wire pipe_rx5_valid;
  wire pipe_rx6_data_valid;
  wire pipe_rx6_elec_idle;
  wire pipe_rx6_eqdone;
  wire pipe_rx6_eqlp_adaptdone;
  wire pipe_rx6_eqlp_lffs_sel;
  wire pipe_rx6_phy_status;
  wire pipe_rx6_polarity;
  wire pipe_rx6_start_block;
  wire pipe_rx6_valid;
  wire pipe_rx7_data_valid;
  wire pipe_rx7_elec_idle;
  wire pipe_rx7_eqdone;
  wire pipe_rx7_eqlp_adaptdone;
  wire pipe_rx7_eqlp_lffs_sel;
  wire pipe_rx7_phy_status;
  wire pipe_rx7_polarity;
  wire pipe_rx7_start_block;
  wire pipe_rx7_valid;
  wire pipe_tx0_compliance;
  wire pipe_tx0_data_valid;
  wire pipe_tx0_deemph;
  wire pipe_tx0_elec_idle;
  wire pipe_tx0_eqdone;
  wire pipe_tx0_rcvr_det;
  wire pipe_tx0_start_block;
  wire pipe_tx0_swing;
  wire pipe_tx1_compliance;
  wire pipe_tx1_data_valid;
  wire pipe_tx1_elec_idle;
  wire pipe_tx1_eqdone;
  wire pipe_tx1_start_block;
  wire pipe_tx2_compliance;
  wire pipe_tx2_data_valid;
  wire pipe_tx2_elec_idle;
  wire pipe_tx2_eqdone;
  wire pipe_tx2_start_block;
  wire pipe_tx3_compliance;
  wire pipe_tx3_data_valid;
  wire pipe_tx3_elec_idle;
  wire pipe_tx3_eqdone;
  wire pipe_tx3_start_block;
  wire pipe_tx4_compliance;
  wire pipe_tx4_data_valid;
  wire pipe_tx4_elec_idle;
  wire pipe_tx4_eqdone;
  wire pipe_tx4_start_block;
  wire pipe_tx5_compliance;
  wire pipe_tx5_data_valid;
  wire pipe_tx5_elec_idle;
  wire pipe_tx5_eqdone;
  wire pipe_tx5_start_block;
  wire pipe_tx6_compliance;
  wire pipe_tx6_data_valid;
  wire pipe_tx6_elec_idle;
  wire pipe_tx6_eqdone;
  wire pipe_tx6_start_block;
  wire pipe_tx7_compliance;
  wire pipe_tx7_data_valid;
  wire pipe_tx7_elec_idle;
  wire pipe_tx7_eqdone;
  wire pipe_tx7_start_block;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_0;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_1;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_10;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_11;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_12;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_13;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_14;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_15;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_16;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_17;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_18;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_19;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_2;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_20;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_21;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_22;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_23;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_24;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_25;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_26;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_27;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_28;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_29;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_3;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_30;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_31;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_32;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_33;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_34;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_35;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_36;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_37;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_38;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_39;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_4;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_40;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_41;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_42;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_43;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_44;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_45;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_46;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_47;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_48;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_49;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_5;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_50;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_51;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_52;
  wire [5:0]reg_cfg_tph_stt_read_data_valid_o_reg_53;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_54;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_55;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_56;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_57;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_58;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_59;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_6;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_60;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_61;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_62;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_63;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_64;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_65;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_66;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_67;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_68;
  wire [31:0]reg_cfg_tph_stt_read_data_valid_o_reg_69;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_7;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_70;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_71;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_72;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_73;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_74;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_75;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_76;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_77;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_78;
  wire [2:0]reg_cfg_tph_stt_read_data_valid_o_reg_79;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_data_valid_o_reg_80;
  wire [3:0]reg_cfg_tph_stt_read_data_valid_o_reg_9;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_0;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_1;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_10;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_11;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_12;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_13;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_14;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_15;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_16;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_17;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_18;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_19;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_2;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_20;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_21;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_22;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_23;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_24;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_25;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_26;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_27;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_28;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_29;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_3;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_30;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_31;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_32;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_33;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_34;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_35;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_36;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_37;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_38;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_39;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_4;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_40;
  wire [31:0]reg_cfg_tph_stt_read_enable_i_reg_5;
  wire [2:0]reg_cfg_tph_stt_read_enable_i_reg_6;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_7;
  wire [15:0]reg_cfg_tph_stt_read_enable_i_reg_8;
  wire [1:0]reg_cfg_tph_stt_read_enable_i_reg_9;
  wire [47:0]rxctrl0_out;
  wire [255:0]rxdata_out;
  wire [7:0]rxelecidle_out;
  wire [7:0]rxpolarity_in;
  wire [1:0]\sync_reg[0] ;
  wire [2:0]\sync_reg[0]_0 ;
  wire [3:0]\sync_reg[0]_1 ;
  wire [2:0]\sync_reg[0]_10 ;
  wire [3:0]\sync_reg[0]_11 ;
  wire [5:0]\sync_reg[0]_12 ;
  wire [5:0]\sync_reg[0]_13 ;
  wire [1:0]\sync_reg[0]_14 ;
  wire [2:0]\sync_reg[0]_15 ;
  wire [3:0]\sync_reg[0]_16 ;
  wire [5:0]\sync_reg[0]_17 ;
  wire [5:0]\sync_reg[0]_18 ;
  wire [1:0]\sync_reg[0]_19 ;
  wire [5:0]\sync_reg[0]_2 ;
  wire [2:0]\sync_reg[0]_20 ;
  wire [3:0]\sync_reg[0]_21 ;
  wire [5:0]\sync_reg[0]_22 ;
  wire [5:0]\sync_reg[0]_23 ;
  wire [1:0]\sync_reg[0]_24 ;
  wire [2:0]\sync_reg[0]_25 ;
  wire [3:0]\sync_reg[0]_26 ;
  wire [5:0]\sync_reg[0]_27 ;
  wire [5:0]\sync_reg[0]_28 ;
  wire [1:0]\sync_reg[0]_29 ;
  wire [5:0]\sync_reg[0]_3 ;
  wire [2:0]\sync_reg[0]_30 ;
  wire [3:0]\sync_reg[0]_31 ;
  wire [5:0]\sync_reg[0]_32 ;
  wire [5:0]\sync_reg[0]_33 ;
  wire [1:0]\sync_reg[0]_34 ;
  wire [2:0]\sync_reg[0]_35 ;
  wire [3:0]\sync_reg[0]_36 ;
  wire [5:0]\sync_reg[0]_37 ;
  wire [1:0]\sync_reg[0]_38 ;
  wire [2:0]\sync_reg[0]_39 ;
  wire [1:0]\sync_reg[0]_4 ;
  wire [1:0]\sync_reg[0]_40 ;
  wire [2:0]\sync_reg[0]_5 ;
  wire [3:0]\sync_reg[0]_6 ;
  wire [5:0]\sync_reg[0]_7 ;
  wire [5:0]\sync_reg[0]_8 ;
  wire [1:0]\sync_reg[0]_9 ;
  wire [31:0]txctrl0_in;
  wire [7:0]txctrl1_in;
  wire [15:0]txctrl2_in;
  wire [255:0]txdata_in;
  wire [0:0]txdeemph_in;
  wire [0:0]txdetectrx_in;
  wire [0:0]txswing_in;

  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane \pipe_2_lane.pipe_lane_1_inst 
       (.CLK(CLK),
        .PIPERX7EQLPNEWTXCOEFFORPRESET(PIPERX7EQLPNEWTXCOEFFORPRESET),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16] ),
        .adapt_done_reg(adapt_done_reg),
        .done_reg(done_reg),
        .gt_phystatus(gt_phystatus[1]),
        .gt_rxstatus(gt_rxstatus[5:3]),
        .gt_rxvalid(gt_rxvalid[1]),
        .gt_txelecidle(gt_txelecidle[1]),
        .lffs_sel_reg(lffs_sel_reg),
        .phy_txeq_ctrl(phy_txeq_ctrl[3:2]),
        .phy_txeq_preset(phy_txeq_preset[7:4]),
        .pipe_rx1_data_valid(pipe_rx1_data_valid),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle),
        .pipe_rx1_eqdone(pipe_rx1_eqdone),
        .pipe_rx1_eqlp_adaptdone(pipe_rx1_eqlp_adaptdone),
        .pipe_rx1_eqlp_lffs_sel(pipe_rx1_eqlp_lffs_sel),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rx1_start_block(pipe_rx1_start_block),
        .pipe_rx1_valid(pipe_rx1_valid),
        .pipe_tx1_compliance(pipe_tx1_compliance),
        .pipe_tx1_data_valid(pipe_tx1_data_valid),
        .pipe_tx1_elec_idle(pipe_tx1_elec_idle),
        .pipe_tx1_eqdone(pipe_tx1_eqdone),
        .pipe_tx1_start_block(pipe_tx1_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_7),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_19),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_20),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_21),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_22),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_23),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_60),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_68),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_76),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_0),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_1),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_2),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_3),
        .rxctrl0_out(rxctrl0_out[41:36]),
        .rxdata_out(rxdata_out[223:192]),
        .rxelecidle_out(rxelecidle_out[6]),
        .rxpolarity_in(rxpolarity_in[6]),
        .\sync_reg[0] (\sync_reg[0]_3 ),
        .\sync_reg[0]_0 (\sync_reg[0]_4 ),
        .\sync_reg[0]_1 (\sync_reg[0]_5 ),
        .\sync_reg[0]_2 (\sync_reg[0]_6 ),
        .\sync_reg[0]_3 (\sync_reg[0]_7 ),
        .txctrl0_in(txctrl0_in[27:24]),
        .txctrl1_in(txctrl1_in[6]),
        .txctrl2_in(txctrl2_in[13:12]),
        .txdata_in(txdata_in[223:192]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_0 \pipe_4_lane.pipe_lane_2_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_0),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_0 ),
        .adapt_done_reg(adapt_done_reg_0),
        .done_reg(done_reg_0),
        .gt_phystatus(gt_phystatus[2]),
        .gt_rxstatus(gt_rxstatus[8:6]),
        .gt_rxvalid(gt_rxvalid[2]),
        .gt_txelecidle(gt_txelecidle[2]),
        .lffs_sel_reg(lffs_sel_reg_0),
        .phy_txeq_ctrl(phy_txeq_ctrl[5:4]),
        .phy_txeq_preset(phy_txeq_preset[11:8]),
        .pipe_rx2_data_valid(pipe_rx2_data_valid),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle),
        .pipe_rx2_eqdone(pipe_rx2_eqdone),
        .pipe_rx2_eqlp_adaptdone(pipe_rx2_eqlp_adaptdone),
        .pipe_rx2_eqlp_lffs_sel(pipe_rx2_eqlp_lffs_sel),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rx2_start_block(pipe_rx2_start_block),
        .pipe_rx2_valid(pipe_rx2_valid),
        .pipe_tx2_compliance(pipe_tx2_compliance),
        .pipe_tx2_data_valid(pipe_tx2_data_valid),
        .pipe_tx2_elec_idle(pipe_tx2_elec_idle),
        .pipe_tx2_eqdone(pipe_tx2_eqdone),
        .pipe_tx2_start_block(pipe_tx2_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_0),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_8),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_24),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_25),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_26),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_27),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_28),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_59),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_67),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_75),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_4),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_5),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_6),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_7),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_8),
        .rxctrl0_out(rxctrl0_out[35:30]),
        .rxdata_out(rxdata_out[191:160]),
        .rxelecidle_out(rxelecidle_out[5]),
        .rxpolarity_in(rxpolarity_in[5]),
        .\sync_reg[0] (\sync_reg[0]_8 ),
        .\sync_reg[0]_0 (\sync_reg[0]_9 ),
        .\sync_reg[0]_1 (\sync_reg[0]_10 ),
        .\sync_reg[0]_2 (\sync_reg[0]_11 ),
        .\sync_reg[0]_3 (\sync_reg[0]_12 ),
        .txctrl0_in(txctrl0_in[23:20]),
        .txctrl1_in(txctrl1_in[5]),
        .txctrl2_in(txctrl2_in[11:10]),
        .txdata_in(txdata_in[191:160]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_1 \pipe_4_lane.pipe_lane_3_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_1),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_1 ),
        .adapt_done_reg(adapt_done_reg_1),
        .done_reg(done_reg_1),
        .gt_phystatus(gt_phystatus[3]),
        .gt_rxstatus(gt_rxstatus[11:9]),
        .gt_rxvalid(gt_rxvalid[3]),
        .gt_txelecidle(gt_txelecidle[3]),
        .lffs_sel_reg(lffs_sel_reg_1),
        .phy_txeq_ctrl(phy_txeq_ctrl[7:6]),
        .phy_txeq_preset(phy_txeq_preset[15:12]),
        .pipe_rx3_data_valid(pipe_rx3_data_valid),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle),
        .pipe_rx3_eqdone(pipe_rx3_eqdone),
        .pipe_rx3_eqlp_adaptdone(pipe_rx3_eqlp_adaptdone),
        .pipe_rx3_eqlp_lffs_sel(pipe_rx3_eqlp_lffs_sel),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rx3_start_block(pipe_rx3_start_block),
        .pipe_rx3_valid(pipe_rx3_valid),
        .pipe_tx3_compliance(pipe_tx3_compliance),
        .pipe_tx3_data_valid(pipe_tx3_data_valid),
        .pipe_tx3_elec_idle(pipe_tx3_elec_idle),
        .pipe_tx3_eqdone(pipe_tx3_eqdone),
        .pipe_tx3_start_block(pipe_tx3_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_1),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_9),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_29),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_30),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_31),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_32),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_33),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_58),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_66),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_74),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_9),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_10),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_11),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_12),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_13),
        .rxctrl0_out(rxctrl0_out[29:24]),
        .rxdata_out(rxdata_out[159:128]),
        .rxelecidle_out(rxelecidle_out[4]),
        .rxpolarity_in(rxpolarity_in[4]),
        .\sync_reg[0] (\sync_reg[0]_13 ),
        .\sync_reg[0]_0 (\sync_reg[0]_14 ),
        .\sync_reg[0]_1 (\sync_reg[0]_15 ),
        .\sync_reg[0]_2 (\sync_reg[0]_16 ),
        .\sync_reg[0]_3 (\sync_reg[0]_17 ),
        .txctrl0_in(txctrl0_in[19:16]),
        .txctrl1_in(txctrl1_in[4]),
        .txctrl2_in(txctrl2_in[9:8]),
        .txdata_in(txdata_in[159:128]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_2 \pipe_8_lane.pipe_lane_4_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_2),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_2 ),
        .adapt_done_reg(adapt_done_reg_2),
        .done_reg(done_reg_2),
        .gt_phystatus(gt_phystatus[4]),
        .gt_rxstatus(gt_rxstatus[14:12]),
        .gt_rxvalid(gt_rxvalid[4]),
        .gt_txelecidle(gt_txelecidle[4]),
        .lffs_sel_reg(lffs_sel_reg_2),
        .phy_txeq_ctrl(phy_txeq_ctrl[9:8]),
        .phy_txeq_preset(phy_txeq_preset[19:16]),
        .pipe_rx4_data_valid(pipe_rx4_data_valid),
        .pipe_rx4_elec_idle(pipe_rx4_elec_idle),
        .pipe_rx4_eqdone(pipe_rx4_eqdone),
        .pipe_rx4_eqlp_adaptdone(pipe_rx4_eqlp_adaptdone),
        .pipe_rx4_eqlp_lffs_sel(pipe_rx4_eqlp_lffs_sel),
        .pipe_rx4_phy_status(pipe_rx4_phy_status),
        .pipe_rx4_polarity(pipe_rx4_polarity),
        .pipe_rx4_start_block(pipe_rx4_start_block),
        .pipe_rx4_valid(pipe_rx4_valid),
        .pipe_tx4_compliance(pipe_tx4_compliance),
        .pipe_tx4_data_valid(pipe_tx4_data_valid),
        .pipe_tx4_elec_idle(pipe_tx4_elec_idle),
        .pipe_tx4_eqdone(pipe_tx4_eqdone),
        .pipe_tx4_start_block(pipe_tx4_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_2),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_10),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_34),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_35),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_36),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_37),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_38),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_57),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_65),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_73),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_14),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_15),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_16),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_17),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_18),
        .rxctrl0_out(rxctrl0_out[23:18]),
        .rxdata_out(rxdata_out[127:96]),
        .rxelecidle_out(rxelecidle_out[3]),
        .rxpolarity_in(rxpolarity_in[3]),
        .\sync_reg[0] (\sync_reg[0]_18 ),
        .\sync_reg[0]_0 (\sync_reg[0]_19 ),
        .\sync_reg[0]_1 (\sync_reg[0]_20 ),
        .\sync_reg[0]_2 (\sync_reg[0]_21 ),
        .\sync_reg[0]_3 (\sync_reg[0]_22 ),
        .txctrl0_in(txctrl0_in[15:12]),
        .txctrl1_in(txctrl1_in[3]),
        .txctrl2_in(txctrl2_in[7:6]),
        .txdata_in(txdata_in[127:96]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_3 \pipe_8_lane.pipe_lane_5_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_3),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_3 ),
        .adapt_done_reg(adapt_done_reg_3),
        .done_reg(done_reg_3),
        .gt_phystatus(gt_phystatus[5]),
        .gt_rxstatus(gt_rxstatus[17:15]),
        .gt_rxvalid(gt_rxvalid[5]),
        .gt_txelecidle(gt_txelecidle[5]),
        .lffs_sel_reg(lffs_sel_reg_3),
        .phy_txeq_ctrl(phy_txeq_ctrl[11:10]),
        .phy_txeq_preset(phy_txeq_preset[23:20]),
        .pipe_rx5_data_valid(pipe_rx5_data_valid),
        .pipe_rx5_elec_idle(pipe_rx5_elec_idle),
        .pipe_rx5_eqdone(pipe_rx5_eqdone),
        .pipe_rx5_eqlp_adaptdone(pipe_rx5_eqlp_adaptdone),
        .pipe_rx5_eqlp_lffs_sel(pipe_rx5_eqlp_lffs_sel),
        .pipe_rx5_phy_status(pipe_rx5_phy_status),
        .pipe_rx5_polarity(pipe_rx5_polarity),
        .pipe_rx5_start_block(pipe_rx5_start_block),
        .pipe_rx5_valid(pipe_rx5_valid),
        .pipe_tx5_compliance(pipe_tx5_compliance),
        .pipe_tx5_data_valid(pipe_tx5_data_valid),
        .pipe_tx5_elec_idle(pipe_tx5_elec_idle),
        .pipe_tx5_eqdone(pipe_tx5_eqdone),
        .pipe_tx5_start_block(pipe_tx5_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_3),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_11),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_39),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_40),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_41),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_42),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_43),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_56),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_64),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_72),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_19),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_20),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_21),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_22),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_23),
        .rxctrl0_out(rxctrl0_out[17:12]),
        .rxdata_out(rxdata_out[95:64]),
        .rxelecidle_out(rxelecidle_out[2]),
        .rxpolarity_in(rxpolarity_in[2]),
        .\sync_reg[0] (\sync_reg[0]_23 ),
        .\sync_reg[0]_0 (\sync_reg[0]_24 ),
        .\sync_reg[0]_1 (\sync_reg[0]_25 ),
        .\sync_reg[0]_2 (\sync_reg[0]_26 ),
        .\sync_reg[0]_3 (\sync_reg[0]_27 ),
        .txctrl0_in(txctrl0_in[11:8]),
        .txctrl1_in(txctrl1_in[2]),
        .txctrl2_in(txctrl2_in[5:4]),
        .txdata_in(txdata_in[95:64]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_4 \pipe_8_lane.pipe_lane_6_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_4),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_4 ),
        .adapt_done_reg(adapt_done_reg_4),
        .done_reg(done_reg_4),
        .gt_phystatus(gt_phystatus[6]),
        .gt_rxstatus(gt_rxstatus[20:18]),
        .gt_rxvalid(gt_rxvalid[6]),
        .gt_txelecidle(gt_txelecidle[6]),
        .lffs_sel_reg(lffs_sel_reg_4),
        .phy_txeq_ctrl(phy_txeq_ctrl[13:12]),
        .phy_txeq_preset(phy_txeq_preset[27:24]),
        .pipe_rx6_data_valid(pipe_rx6_data_valid),
        .pipe_rx6_elec_idle(pipe_rx6_elec_idle),
        .pipe_rx6_eqdone(pipe_rx6_eqdone),
        .pipe_rx6_eqlp_adaptdone(pipe_rx6_eqlp_adaptdone),
        .pipe_rx6_eqlp_lffs_sel(pipe_rx6_eqlp_lffs_sel),
        .pipe_rx6_phy_status(pipe_rx6_phy_status),
        .pipe_rx6_polarity(pipe_rx6_polarity),
        .pipe_rx6_start_block(pipe_rx6_start_block),
        .pipe_rx6_valid(pipe_rx6_valid),
        .pipe_tx6_compliance(pipe_tx6_compliance),
        .pipe_tx6_data_valid(pipe_tx6_data_valid),
        .pipe_tx6_elec_idle(pipe_tx6_elec_idle),
        .pipe_tx6_eqdone(pipe_tx6_eqdone),
        .pipe_tx6_start_block(pipe_tx6_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_4),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_12),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_44),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_45),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_46),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_47),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_48),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_55),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_63),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_71),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_24),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_25),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_26),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_27),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_28),
        .rxctrl0_out(rxctrl0_out[11:6]),
        .rxdata_out(rxdata_out[63:32]),
        .rxelecidle_out(rxelecidle_out[1]),
        .rxpolarity_in(rxpolarity_in[1]),
        .\sync_reg[0] (\sync_reg[0]_28 ),
        .\sync_reg[0]_0 (\sync_reg[0]_29 ),
        .\sync_reg[0]_1 (\sync_reg[0]_30 ),
        .\sync_reg[0]_2 (\sync_reg[0]_31 ),
        .\sync_reg[0]_3 (\sync_reg[0]_32 ),
        .txctrl0_in(txctrl0_in[7:4]),
        .txctrl1_in(txctrl1_in[1]),
        .txctrl2_in(txctrl2_in[3:2]),
        .txdata_in(txdata_in[63:32]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_5 \pipe_8_lane.pipe_lane_7_inst 
       (.CLK(CLK),
        .SR(SR),
        .TXEQ_DONE_reg(TXEQ_DONE_reg_5),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_5 ),
        .adapt_done_reg(adapt_done_reg_5),
        .done_reg(done_reg_5),
        .gt_phystatus(gt_phystatus[7]),
        .gt_rxstatus(gt_rxstatus[23:21]),
        .gt_rxvalid(gt_rxvalid[7]),
        .gt_txelecidle(gt_txelecidle[7]),
        .lffs_sel_reg(lffs_sel_reg_5),
        .phy_txeq_ctrl(phy_txeq_ctrl[15:14]),
        .phy_txeq_preset(phy_txeq_preset[31:28]),
        .pipe_rx7_data_valid(pipe_rx7_data_valid),
        .pipe_rx7_elec_idle(pipe_rx7_elec_idle),
        .pipe_rx7_eqdone(pipe_rx7_eqdone),
        .pipe_rx7_eqlp_adaptdone(pipe_rx7_eqlp_adaptdone),
        .pipe_rx7_eqlp_lffs_sel(pipe_rx7_eqlp_lffs_sel),
        .pipe_rx7_phy_status(pipe_rx7_phy_status),
        .pipe_rx7_polarity(pipe_rx7_polarity),
        .pipe_rx7_start_block(pipe_rx7_start_block),
        .pipe_rx7_valid(pipe_rx7_valid),
        .pipe_tx7_compliance(pipe_tx7_compliance),
        .pipe_tx7_data_valid(pipe_tx7_data_valid),
        .pipe_tx7_elec_idle(pipe_tx7_elec_idle),
        .pipe_tx7_eqdone(pipe_tx7_eqdone),
        .pipe_tx7_start_block(pipe_tx7_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_5),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_13),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_49),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_50),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_51),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_52),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_53),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_54),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_62),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_70),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_29),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_30),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_31),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_32),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_33),
        .rxctrl0_out(rxctrl0_out[5:0]),
        .rxdata_out(rxdata_out[31:0]),
        .rxelecidle_out(rxelecidle_out[0]),
        .rxpolarity_in(rxpolarity_in[0]),
        .\sync_reg[0] (\sync_reg[0]_33 ),
        .\sync_reg[0]_0 (\sync_reg[0]_34 ),
        .\sync_reg[0]_1 (\sync_reg[0]_35 ),
        .\sync_reg[0]_2 (\sync_reg[0]_36 ),
        .\sync_reg[0]_3 (\sync_reg[0]_37 ),
        .txctrl0_in(txctrl0_in[3:0]),
        .txctrl1_in(txctrl1_in[0]),
        .txctrl2_in(txctrl2_in[1:0]),
        .txdata_in(txdata_in[31:0]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_lane_6 pipe_lane_0_inst
       (.CLK(CLK),
        .D(D),
        .Q(Q),
        .SR(SR),
        .TXEQ_DONE(TXEQ_DONE),
        .\TXEQ_NEW_COEFF_reg[16] (\TXEQ_NEW_COEFF_reg[16]_6 ),
        .adapt_done(adapt_done),
        .done_reg(done_reg_6),
        .gt_phystatus(gt_phystatus[0]),
        .gt_rxstatus(gt_rxstatus[2:0]),
        .gt_rxvalid(gt_rxvalid[0]),
        .gt_txelecidle(gt_txelecidle[0]),
        .lffs_sel(lffs_sel),
        .phy_txeq_ctrl(phy_txeq_ctrl[1:0]),
        .phy_txeq_preset(phy_txeq_preset[3:0]),
        .pipe_rx0_data_valid(pipe_rx0_data_valid),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_eqdone(pipe_rx0_eqdone),
        .pipe_rx0_eqlp_adaptdone(pipe_rx0_eqlp_adaptdone),
        .pipe_rx0_eqlp_lffs_sel(pipe_rx0_eqlp_lffs_sel),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_start_block(pipe_rx0_start_block),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_data_valid(pipe_tx0_data_valid),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_eqdone(pipe_tx0_eqdone),
        .pipe_tx0_start_block(pipe_tx0_start_block),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_6),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_14),
        .reg_cfg_tph_stt_read_data_valid_o_reg_1(reg_cfg_tph_stt_read_data_valid_o_reg_15),
        .reg_cfg_tph_stt_read_data_valid_o_reg_2(reg_cfg_tph_stt_read_data_valid_o_reg_16),
        .reg_cfg_tph_stt_read_data_valid_o_reg_3(reg_cfg_tph_stt_read_data_valid_o_reg_17),
        .reg_cfg_tph_stt_read_data_valid_o_reg_4(reg_cfg_tph_stt_read_data_valid_o_reg_18),
        .reg_cfg_tph_stt_read_data_valid_o_reg_5(reg_cfg_tph_stt_read_data_valid_o_reg_61),
        .reg_cfg_tph_stt_read_data_valid_o_reg_6(reg_cfg_tph_stt_read_data_valid_o_reg_69),
        .reg_cfg_tph_stt_read_data_valid_o_reg_7(reg_cfg_tph_stt_read_data_valid_o_reg_77),
        .reg_cfg_tph_stt_read_data_valid_o_reg_8(reg_cfg_tph_stt_read_data_valid_o_reg_80),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_36),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_37),
        .reg_cfg_tph_stt_read_enable_i_reg_1(reg_cfg_tph_stt_read_enable_i_reg_38),
        .reg_cfg_tph_stt_read_enable_i_reg_2(reg_cfg_tph_stt_read_enable_i_reg_39),
        .reg_cfg_tph_stt_read_enable_i_reg_3(reg_cfg_tph_stt_read_enable_i_reg_40),
        .rxctrl0_out(rxctrl0_out[47:42]),
        .rxdata_out(rxdata_out[255:224]),
        .rxelecidle_out(rxelecidle_out[7]),
        .rxpolarity_in(rxpolarity_in[7]),
        .\sync_reg[0] (\sync_reg[0] ),
        .\sync_reg[0]_0 (\sync_reg[0]_0 ),
        .\sync_reg[0]_1 (\sync_reg[0]_1 ),
        .\sync_reg[0]_2 (\sync_reg[0]_2 ),
        .\sync_reg[0]_3 (\sync_reg[0]_40 ),
        .txctrl0_in(txctrl0_in[31:28]),
        .txctrl1_in(txctrl1_in[7]),
        .txctrl2_in(txctrl2_in[15:14]),
        .txdata_in(txdata_in[255:224]));
  pcie3_ultrascale_0_pcie3_ultrascale_0_pipe_misc pipe_misc_inst
       (.CLK(CLK),
        .SR(SR),
        .pipe_tx0_deemph(pipe_tx0_deemph),
        .pipe_tx0_rcvr_det(pipe_tx0_rcvr_det),
        .pipe_tx0_swing(pipe_tx0_swing),
        .reg_cfg_tph_stt_read_data_valid_o_reg(reg_cfg_tph_stt_read_data_valid_o_reg_78),
        .reg_cfg_tph_stt_read_data_valid_o_reg_0(reg_cfg_tph_stt_read_data_valid_o_reg_79),
        .reg_cfg_tph_stt_read_enable_i_reg(reg_cfg_tph_stt_read_enable_i_reg_34),
        .reg_cfg_tph_stt_read_enable_i_reg_0(reg_cfg_tph_stt_read_enable_i_reg_35),
        .\sync_reg[0] (\sync_reg[0]_38 ),
        .\sync_reg[0]_0 (\sync_reg[0]_39 ),
        .txdeemph_in(txdeemph_in),
        .txdetectrx_in(txdetectrx_in),
        .txswing_in(txswing_in));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_rxcdrhold" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_rxcdrhold
   (rxcdrhold_in,
    reg_cfg_tph_stt_read_data_valid_o_reg,
    idle_reg,
    rxelecidle_out,
    pipe_clk);
  output [0:0]rxcdrhold_in;
  input reg_cfg_tph_stt_read_data_valid_o_reg;
  input idle_reg;
  input [0:0]rxelecidle_out;
  input pipe_clk;

  wire idle_reg;
  wire phy_rxcdrhold_i_1_n_0;
  wire pipe_clk;
  wire pipe_rx0_elec_idle_reg0;
  wire pipe_rx0_elec_idle_reg1;
  wire pipe_rxcdrhold_req;
  wire reg_cfg_tph_stt_read_data_valid_o_reg;
  wire [0:0]rxcdrhold_in;
  wire rxcdrhold_req;
  wire [0:0]rxelecidle_out;

  LUT4 #(
    .INIT(16'hF4C4)) 
    phy_rxcdrhold_i_1
       (.I0(pipe_rx0_elec_idle_reg1),
        .I1(rxcdrhold_in),
        .I2(rxelecidle_out),
        .I3(pipe_rxcdrhold_req),
        .O(phy_rxcdrhold_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phy_rxcdrhold_reg
       (.C(pipe_clk),
        .CE(1'b1),
        .D(phy_rxcdrhold_i_1_n_0),
        .Q(rxcdrhold_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pipe_rx0_elec_idle_reg0_reg
       (.C(pipe_clk),
        .CE(1'b1),
        .D(rxelecidle_out),
        .Q(pipe_rx0_elec_idle_reg0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pipe_rx0_elec_idle_reg1_reg
       (.C(pipe_clk),
        .CE(1'b1),
        .D(pipe_rx0_elec_idle_reg0),
        .Q(pipe_rx0_elec_idle_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxcdrhold_req_reg
       (.C(idle_reg),
        .CE(1'b1),
        .D(reg_cfg_tph_stt_read_data_valid_o_reg),
        .Q(rxcdrhold_req),
        .R(1'b0));
  pcie3_ultrascale_0_pcie3_ultrascale_0_phy_sync__parameterized16 sync_rxcdrhold_req
       (.D(rxcdrhold_req),
        .out(pipe_rxcdrhold_req),
        .pipe_clk(pipe_clk));
endmodule

(* ORIG_REF_NAME = "pcie3_ultrascale_0_tph_tbl" *) 
module pcie3_ultrascale_0_pcie3_ultrascale_0_tph_tbl
   (CFGTPHSTTREADDATA,
    user_tph_stt_read_data,
    cfg_tph_stt_read_data_valid,
    user_tph_stt_read_data_valid,
    idle_reg,
    ADDRARDADDR,
    CFGTPHSTTWRITEDATA,
    user_tph_stt_read_enable,
    SR,
    D,
    user_tph_function_num,
    user_tph_stt_address,
    cfg_tph_stt_write_enable,
    CFGTPHSTTWRITEBYTEVALID,
    Q);
  output [31:0]CFGTPHSTTREADDATA;
  output [31:0]user_tph_stt_read_data;
  output cfg_tph_stt_read_data_valid;
  output user_tph_stt_read_data_valid;
  input idle_reg;
  input [8:0]ADDRARDADDR;
  input [31:0]CFGTPHSTTWRITEDATA;
  input user_tph_stt_read_enable;
  input [0:0]SR;
  input D;
  input [3:0]user_tph_function_num;
  input [4:0]user_tph_stt_address;
  input cfg_tph_stt_write_enable;
  input [3:0]CFGTPHSTTWRITEBYTEVALID;
  input [1:0]Q;

  wire [8:0]ADDRARDADDR;
  wire [31:0]CFGTPHSTTREADDATA;
  wire [3:0]CFGTPHSTTWRITEBYTEVALID;
  wire [31:0]CFGTPHSTTWRITEDATA;
  wire D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire cfg_tph_stt_read_data_valid;
  wire cfg_tph_stt_write_enable;
  wire clear;
  wire idle_reg;
  wire [8:0]p_0_in;
  wire [13:5]p_1_out;
  wire ramb36e2_inst_i_15_n_0;
  wire reg_cfg_tph_stt_read_data_valid_o0;
  wire reg_cfg_tph_stt_read_enable_i;
  wire [8:0]reg_count_reg__0;
  wire reg_next_state;
  wire reg_state_reg_n_0;
  wire reg_user_tph_stt_read_data_valid_o0;
  wire reg_user_tph_stt_read_data_valid_o_i_2_n_0;
  wire reg_user_tph_stt_read_enable_i;
  wire [3:0]user_tph_function_num;
  wire [4:0]user_tph_stt_address;
  wire [31:0]user_tph_stt_read_data;
  wire user_tph_stt_read_data_valid;
  wire user_tph_stt_read_enable;
  wire [3:0]wea;
  wire NLW_ramb36e2_inst_CASOUTDBITERR_UNCONNECTED;
  wire NLW_ramb36e2_inst_CASOUTSBITERR_UNCONNECTED;
  wire NLW_ramb36e2_inst_DBITERR_UNCONNECTED;
  wire NLW_ramb36e2_inst_SBITERR_UNCONNECTED;
  wire [31:0]NLW_ramb36e2_inst_CASDOUTA_UNCONNECTED;
  wire [31:0]NLW_ramb36e2_inst_CASDOUTB_UNCONNECTED;
  wire [3:0]NLW_ramb36e2_inst_CASDOUTPA_UNCONNECTED;
  wire [3:0]NLW_ramb36e2_inst_CASDOUTPB_UNCONNECTED;
  wire [3:0]NLW_ramb36e2_inst_DOUTPADOUTP_UNCONNECTED;
  wire [3:0]NLW_ramb36e2_inst_DOUTPBDOUTP_UNCONNECTED;
  wire [7:0]NLW_ramb36e2_inst_ECCPARITY_UNCONNECTED;
  wire [8:0]NLW_ramb36e2_inst_RDADDRECC_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(1),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("GENERATE_X_ONLY"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    ramb36e2_inst
       (.ADDRARDADDR({1'b0,ADDRARDADDR,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({1'b0,p_1_out,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b0),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(NLW_ramb36e2_inst_CASDOUTA_UNCONNECTED[31:0]),
        .CASDOUTB(NLW_ramb36e2_inst_CASDOUTB_UNCONNECTED[31:0]),
        .CASDOUTPA(NLW_ramb36e2_inst_CASDOUTPA_UNCONNECTED[3:0]),
        .CASDOUTPB(NLW_ramb36e2_inst_CASDOUTPB_UNCONNECTED[3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b0),
        .CASOREGIMUXEN_B(1'b0),
        .CASOUTDBITERR(NLW_ramb36e2_inst_CASOUTDBITERR_UNCONNECTED),
        .CASOUTSBITERR(NLW_ramb36e2_inst_CASOUTSBITERR_UNCONNECTED),
        .CLKARDCLK(idle_reg),
        .CLKBWRCLK(idle_reg),
        .DBITERR(NLW_ramb36e2_inst_DBITERR_UNCONNECTED),
        .DINADIN(CFGTPHSTTWRITEDATA),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT(CFGTPHSTTREADDATA),
        .DOUTBDOUT(user_tph_stt_read_data),
        .DOUTPADOUTP(NLW_ramb36e2_inst_DOUTPADOUTP_UNCONNECTED[3:0]),
        .DOUTPBDOUTP(NLW_ramb36e2_inst_DOUTPBDOUTP_UNCONNECTED[3:0]),
        .ECCPARITY(NLW_ramb36e2_inst_ECCPARITY_UNCONNECTED[7:0]),
        .ECCPIPECE(1'b0),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(NLW_ramb36e2_inst_RDADDRECC_UNCONNECTED[8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(NLW_ramb36e2_inst_SBITERR_UNCONNECTED),
        .SLEEP(1'b0),
        .WEA(wea),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,reg_next_state,reg_next_state,reg_next_state,reg_next_state}));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_1
       (.I0(reg_count_reg__0[8]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_function_num[3]),
        .O(p_1_out[13]));
  LUT2 #(
    .INIT(4'h8)) 
    ramb36e2_inst_i_10
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[3]),
        .O(wea[3]));
  LUT2 #(
    .INIT(4'h8)) 
    ramb36e2_inst_i_11
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[2]),
        .O(wea[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ramb36e2_inst_i_12
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[1]),
        .O(wea[1]));
  LUT2 #(
    .INIT(4'h8)) 
    ramb36e2_inst_i_13
       (.I0(cfg_tph_stt_write_enable),
        .I1(CFGTPHSTTWRITEBYTEVALID[0]),
        .O(wea[0]));
  LUT6 #(
    .INIT(64'hFAFA3AFAFAFAFAFA)) 
    ramb36e2_inst_i_14
       (.I0(SR),
        .I1(reg_count_reg__0[8]),
        .I2(reg_state_reg_n_0),
        .I3(reg_count_reg__0[6]),
        .I4(ramb36e2_inst_i_15_n_0),
        .I5(reg_count_reg__0[7]),
        .O(reg_next_state));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    ramb36e2_inst_i_15
       (.I0(reg_count_reg__0[4]),
        .I1(reg_count_reg__0[2]),
        .I2(reg_count_reg__0[0]),
        .I3(reg_count_reg__0[1]),
        .I4(reg_count_reg__0[3]),
        .I5(reg_count_reg__0[5]),
        .O(ramb36e2_inst_i_15_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_2
       (.I0(reg_count_reg__0[7]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_function_num[2]),
        .O(p_1_out[12]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_3
       (.I0(reg_count_reg__0[6]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_function_num[1]),
        .O(p_1_out[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_4
       (.I0(reg_count_reg__0[5]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_function_num[0]),
        .O(p_1_out[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_5
       (.I0(reg_count_reg__0[4]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_stt_address[4]),
        .O(p_1_out[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_6
       (.I0(reg_count_reg__0[3]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_stt_address[3]),
        .O(p_1_out[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_7
       (.I0(reg_count_reg__0[2]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_stt_address[2]),
        .O(p_1_out[7]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_8
       (.I0(reg_count_reg__0[1]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_stt_address[1]),
        .O(p_1_out[6]));
  LUT3 #(
    .INIT(8'hB8)) 
    ramb36e2_inst_i_9
       (.I0(reg_count_reg__0[0]),
        .I1(reg_state_reg_n_0),
        .I2(user_tph_stt_address[0]),
        .O(p_1_out[5]));
  LUT4 #(
    .INIT(16'h0400)) 
    reg_cfg_tph_stt_read_data_valid_o_i_1
       (.I0(cfg_tph_stt_read_data_valid),
        .I1(reg_cfg_tph_stt_read_enable_i),
        .I2(reg_state_reg_n_0),
        .I3(D),
        .O(reg_cfg_tph_stt_read_data_valid_o0));
  FDCE reg_cfg_tph_stt_read_data_valid_o_reg
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(reg_user_tph_stt_read_data_valid_o_i_2_n_0),
        .D(reg_cfg_tph_stt_read_data_valid_o0),
        .Q(cfg_tph_stt_read_data_valid));
  FDCE reg_cfg_tph_stt_read_enable_i_reg
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(reg_user_tph_stt_read_data_valid_o_i_2_n_0),
        .D(D),
        .Q(reg_cfg_tph_stt_read_enable_i));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_count[0]_i_1 
       (.I0(reg_count_reg__0[0]),
        .O(p_0_in[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \reg_count[1]_i_1 
       (.I0(reg_count_reg__0[0]),
        .I1(reg_count_reg__0[1]),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \reg_count[2]_i_1 
       (.I0(reg_count_reg__0[1]),
        .I1(reg_count_reg__0[0]),
        .I2(reg_count_reg__0[2]),
        .O(p_0_in[2]));
  LUT4 #(
    .INIT(16'h7F80)) 
    \reg_count[3]_i_1 
       (.I0(reg_count_reg__0[2]),
        .I1(reg_count_reg__0[0]),
        .I2(reg_count_reg__0[1]),
        .I3(reg_count_reg__0[3]),
        .O(p_0_in[3]));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \reg_count[4]_i_1 
       (.I0(reg_count_reg__0[3]),
        .I1(reg_count_reg__0[1]),
        .I2(reg_count_reg__0[0]),
        .I3(reg_count_reg__0[2]),
        .I4(reg_count_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \reg_count[5]_i_1 
       (.I0(reg_count_reg__0[4]),
        .I1(reg_count_reg__0[2]),
        .I2(reg_count_reg__0[0]),
        .I3(reg_count_reg__0[1]),
        .I4(reg_count_reg__0[3]),
        .I5(reg_count_reg__0[5]),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h9)) 
    \reg_count[6]_i_1 
       (.I0(ramb36e2_inst_i_15_n_0),
        .I1(reg_count_reg__0[6]),
        .O(p_0_in[6]));
  LUT3 #(
    .INIT(8'hD2)) 
    \reg_count[7]_i_1 
       (.I0(reg_count_reg__0[6]),
        .I1(ramb36e2_inst_i_15_n_0),
        .I2(reg_count_reg__0[7]),
        .O(p_0_in[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \reg_count[8]_i_1 
       (.I0(reg_state_reg_n_0),
        .O(clear));
  LUT4 #(
    .INIT(16'hDF20)) 
    \reg_count[8]_i_2 
       (.I0(reg_count_reg__0[7]),
        .I1(ramb36e2_inst_i_15_n_0),
        .I2(reg_count_reg__0[6]),
        .I3(reg_count_reg__0[8]),
        .O(p_0_in[8]));
  FDRE \reg_count_reg[0] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(reg_count_reg__0[0]),
        .R(clear));
  FDRE \reg_count_reg[1] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(reg_count_reg__0[1]),
        .R(clear));
  FDRE \reg_count_reg[2] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(reg_count_reg__0[2]),
        .R(clear));
  FDRE \reg_count_reg[3] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(reg_count_reg__0[3]),
        .R(clear));
  FDRE \reg_count_reg[4] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(reg_count_reg__0[4]),
        .R(clear));
  FDRE \reg_count_reg[5] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(reg_count_reg__0[5]),
        .R(clear));
  FDRE \reg_count_reg[6] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(reg_count_reg__0[6]),
        .R(clear));
  FDRE \reg_count_reg[7] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(reg_count_reg__0[7]),
        .R(clear));
  FDRE \reg_count_reg[8] 
       (.C(idle_reg),
        .CE(1'b1),
        .D(p_0_in[8]),
        .Q(reg_count_reg__0[8]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    reg_state_reg
       (.C(idle_reg),
        .CE(1'b1),
        .D(reg_next_state),
        .Q(reg_state_reg_n_0),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0400)) 
    reg_user_tph_stt_read_data_valid_o_i_1
       (.I0(user_tph_stt_read_data_valid),
        .I1(reg_user_tph_stt_read_enable_i),
        .I2(reg_state_reg_n_0),
        .I3(user_tph_stt_read_enable),
        .O(reg_user_tph_stt_read_data_valid_o0));
  LUT2 #(
    .INIT(4'h7)) 
    reg_user_tph_stt_read_data_valid_o_i_2
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(reg_user_tph_stt_read_data_valid_o_i_2_n_0));
  FDCE reg_user_tph_stt_read_data_valid_o_reg
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(reg_user_tph_stt_read_data_valid_o_i_2_n_0),
        .D(reg_user_tph_stt_read_data_valid_o0),
        .Q(user_tph_stt_read_data_valid));
  FDCE reg_user_tph_stt_read_enable_i_reg
       (.C(idle_reg),
        .CE(1'b1),
        .CLR(reg_user_tph_stt_read_data_valid_o_i_2_n_0),
        .D(user_tph_stt_read_enable),
        .Q(reg_user_tph_stt_read_enable_i));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
